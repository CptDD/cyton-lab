/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x10000048 generated on 2016-03-16 14:20:58.448895
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x10000048);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)2e-6)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.000005)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67;
x0=IKcos(j[2]);
x1=IKsin(j[0]);
x2=IKsin(j[1]);
x3=IKcos(j[0]);
x4=IKsin(j[2]);
x5=IKsin(j[3]);
x6=IKcos(j[1]);
x7=IKcos(j[3]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[6]);
x11=IKcos(j[6]);
x12=IKcos(j[5]);
x13=IKsin(j[5]);
x14=((1.0)*x9);
x15=((0.0009)*x3);
x16=((0.0718)*x7);
x17=((1.0)*x4);
x18=((0.0718)*x1);
x19=((0.0001)*x6);
x20=((1.0)*x7);
x21=((0.09746)*x3);
x22=((1.0)*x0);
x23=((0.1158)*x4);
x24=((1.0)*x8);
x25=((0.09746)*x1);
x26=((1.0)*x3);
x27=(x2*x4);
x28=((-1.0)*x9);
x29=(x1*x2);
x30=(x2*x7);
x31=(x2*x5);
x32=(x5*x6);
x33=((-0.05142)*x9);
x34=(x6*x8);
x35=((-1.0)*x3);
x36=(x0*x1);
x37=((-1.0)*x8);
x38=((-1.0)*x7);
x39=((-1.0)*x5);
x40=(x1*x6);
x41=(x0*x3);
x42=(x0*x6);
x43=(x4*x6);
x44=((1.0)*x31);
x45=(x42*x7);
x46=(x3*x6*x7);
x47=(x20*x40);
x48=(x26*x32);
x49=(((x1*x27))+x41);
x50=((((-1.0)*x17*x2*x3))+x36);
x51=((((-1.0)*x44))+x45);
x52=(((x22*x29))+(((-1.0)*x17*x3)));
x53=((((-1.0)*x20*x42))+x44);
x54=((((-1.0)*x2*x22*x3))+(((-1.0)*x1*x17)));
x55=(x49*x8);
x56=(x51*x8);
x57=(x5*x52);
x58=(x54*x7);
x59=(x5*x54);
x60=(((x52*x7))+((x1*x32)));
x61=(x58+((x32*x35)));
x62=((((-1.0)*x17*x34))+(((-1.0)*x14*x53)));
x63=((((-1.0)*x1*x32))+((x38*x52)));
x64=(((x38*x54))+x48);
x65=(((x13*x62))+((x12*((x30+((x0*x32)))))));
x66=(((x12*(((((-1.0)*x47))+x57))))+((x13*((((x37*x49))+((x28*x63)))))));
x67=(((x13*((((x37*x50))+((x28*x64))))))+((x12*((x46+x59)))));
eerot[0]=(((x10*x66))+((x11*((((x60*x8))+((x49*x9)))))));
eerot[1]=(((x10*((((x28*x49))+((x37*x60))))))+((x11*x66)));
eerot[2]=(((x13*((((x39*x52))+x47))))+(((-1.0)*x12*((((x24*x49))+((x14*(((((-1.0)*x1*x32))+(((-1.0)*x20*x52)))))))))));
eetrans[0]=(((x12*(((((-0.05142)*x55))+((x33*x63))))))+((x0*x15))+((x7*(((((-1.0)*x21*x4))+((x0*x2*x25))))))+(((0.1158)*x0*x29))+(((-1.0)*x1*x19))+(((0.0009)*x1*x27))+((x8*(((((-1.0)*x18*x27))+(((-0.0718)*x41))))))+((x9*((((x18*x32))+((x16*x52))))))+((x25*x32))+(((-0.001)*x3))+(((-1.0)*x23*x3))+((x13*(((((-0.05142)*x57))+(((0.05142)*x40*x7))))))+(((0.1255)*x29)));
eerot[3]=(((x10*x67))+((x11*((((x50*x9))+((x61*x8)))))));
eerot[4]=(((x10*((((x37*x61))+((x28*x50))))))+((x11*x67)));
eerot[5]=(((x13*((((x39*x54))+((x35*x6*x7))))))+(((-1.0)*x12*((((x24*x50))+((x14*(((((-1.0)*x20*x54))+x48)))))))));
IkReal x68=((1.0)*x21);
IkReal x69=((0.0718)*x3);
eetrans[1]=((((-1.0)*x15*x27))+(((0.0009)*x36))+((x19*x3))+((x8*((((x27*x69))+(((-1.0)*x0*x18))))))+(((-1.0)*x1*x23))+(((-1.0)*x32*x68))+((x7*(((((-1.0)*x25*x4))+(((-1.0)*x0*x2*x68))))))+((x13*(((((-0.05142)*x46))+(((-0.05142)*x59))))))+(((-0.1158)*x2*x41))+((x9*((((x16*x54))+(((-1.0)*x32*x69))))))+(((-0.001)*x1))+(((-0.1255)*x2*x3))+((x12*(((((-0.05142)*x50*x8))+((x33*x64)))))));
eerot[6]=(((x10*x65))+((x11*((x56+((x43*x9)))))));
eerot[7]=(((x11*x65))+((x10*(((((-1.0)*x14*x43))+(((-1.0)*x24*x51)))))));
eerot[8]=(((x12*x62))+((x13*(((((-1.0)*x2*x20))+(((-1.0)*x22*x32)))))));
IkReal x70=(x34*x4);
eetrans[2]=((0.1775)+(((0.0001)*x2))+(((-0.0718)*x70))+(((0.0009)*x43))+((x12*(((((-0.05142)*x70))+(((-0.05142)*x53*x9))))))+(((0.1158)*x42))+(((-0.09746)*x31))+(((0.1255)*x6))+((x9*((((x16*x42))+(((-0.0718)*x31))))))+((x13*(((((-0.05142)*x30))+(((-0.05142)*x0*x32))))))+(((0.09746)*x45)));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {2}; return freeparams; }
IKFAST_API int GetNumJoints() { return 7; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,j6,cj6,sj6,htj6,j6mul,j2,cj2,sj2,htj2,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij2[2], _nj2;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1;  _ij2[0] = -1; _ij2[1] = -1; _nj2 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j2=pfree[0]; cj2=cos(pfree[0]); sj2=sin(pfree[0]), htj2=tan(pfree[0]*0.5);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=r01;
new_r02=r02;
new_px=((((-0.05142)*r02))+px);
new_r10=r10;
new_r11=r11;
new_r12=r12;
new_py=((((-0.05142)*r12))+py);
new_r20=r20;
new_r21=r21;
new_r22=r22;
new_pz=((-0.1775)+pz+(((-0.05142)*r22)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x71=((1.0)*px);
IkReal x72=((1.0)*pz);
IkReal x73=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x73))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x72)));
rxp0_2=((((-1.0)*r10*x71))+((py*r00)));
rxp1_0=((((-1.0)*r21*x73))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x72)));
rxp1_2=(((py*r01))+(((-1.0)*r11*x71)));
rxp2_0=((((-1.0)*r22*x73))+((pz*r12)));
rxp2_1=(((px*r22))+(((-1.0)*r02*x72)));
rxp2_2=(((py*r02))+(((-1.0)*r12*x71)));
IkReal IKFAST_ALIGNED16(matrixinvcoeffs[256]);
IkReal x74=sj2*sj2;
IkReal x75=((0.02626)*cj2);
IkReal x76=((0.1255)*sj2);
IkReal x77=(cj2*sj2);
IkReal x78=((-0.0718)*cj2);
IkReal x79=((3590.0)*x74);
IkReal x80=((-1.0)*sj2);
IkReal x81=((0.0001)*x74);
IkReal x82=((-0.09746)*sj2);
IkReal x83=((-1.0)*cj2);
IkReal x84=((-0.02626)*sj2);
IkReal x85=((0.0001)*x77);
IkReal x86=((-0.0718)*sj2);
IkReal x87=((-3590.0)*sj2);
IkReal x88=((-1313.0)*sj2);
IkReal x89=((0.0009)+x76+(((-0.0215)*cj2)));
IkReal x90=((-1313.0)*x74);
IkReal x91=((-0.09746)*x74);
IkReal x92=((-4873.0)*x77);
IkReal x93=((-1313.0)*x77);
IkReal x94=((-3590.0)*x77);
IkReal x95=((0.1158)+(((0.1255)*cj2))+(((0.0215)*sj2)));
IkReal x96=((((0.0009)*x74))+x76+(((0.1158)*x77)));
matrixinvcoeffs[0]=0;
matrixinvcoeffs[1]=0;
matrixinvcoeffs[2]=cj2;
matrixinvcoeffs[3]=0;
matrixinvcoeffs[4]=0;
matrixinvcoeffs[5]=0;
matrixinvcoeffs[6]=0;
matrixinvcoeffs[7]=0;
matrixinvcoeffs[8]=x78;
matrixinvcoeffs[9]=0.09746;
matrixinvcoeffs[10]=0;
matrixinvcoeffs[11]=0;
matrixinvcoeffs[12]=0;
matrixinvcoeffs[13]=0;
matrixinvcoeffs[14]=x79;
matrixinvcoeffs[15]=0;
matrixinvcoeffs[16]=0;
matrixinvcoeffs[17]=0;
matrixinvcoeffs[18]=0;
matrixinvcoeffs[19]=0;
matrixinvcoeffs[20]=cj2;
matrixinvcoeffs[21]=0;
matrixinvcoeffs[22]=0;
matrixinvcoeffs[23]=0;
matrixinvcoeffs[24]=0;
matrixinvcoeffs[25]=0;
matrixinvcoeffs[26]=x78;
matrixinvcoeffs[27]=0.09746;
matrixinvcoeffs[28]=0;
matrixinvcoeffs[29]=0;
matrixinvcoeffs[30]=0;
matrixinvcoeffs[31]=x79;
matrixinvcoeffs[32]=0;
matrixinvcoeffs[33]=0;
matrixinvcoeffs[34]=0;
matrixinvcoeffs[35]=cj2;
matrixinvcoeffs[36]=0;
matrixinvcoeffs[37]=0;
matrixinvcoeffs[38]=x80;
matrixinvcoeffs[39]=0;
matrixinvcoeffs[40]=x75;
matrixinvcoeffs[41]=x89;
matrixinvcoeffs[42]=0;
matrixinvcoeffs[43]=0;
matrixinvcoeffs[44]=x81;
matrixinvcoeffs[45]=0;
matrixinvcoeffs[46]=x90;
matrixinvcoeffs[47]=0;
matrixinvcoeffs[48]=0;
matrixinvcoeffs[49]=0;
matrixinvcoeffs[50]=0;
matrixinvcoeffs[51]=0;
matrixinvcoeffs[52]=0;
matrixinvcoeffs[53]=cj2;
matrixinvcoeffs[54]=0;
matrixinvcoeffs[55]=x80;
matrixinvcoeffs[56]=0;
matrixinvcoeffs[57]=0;
matrixinvcoeffs[58]=x75;
matrixinvcoeffs[59]=x89;
matrixinvcoeffs[60]=0;
matrixinvcoeffs[61]=x81;
matrixinvcoeffs[62]=0;
matrixinvcoeffs[63]=x90;
matrixinvcoeffs[64]=x80;
matrixinvcoeffs[65]=0;
matrixinvcoeffs[66]=0;
matrixinvcoeffs[67]=0;
matrixinvcoeffs[68]=0;
matrixinvcoeffs[69]=0;
matrixinvcoeffs[70]=0;
matrixinvcoeffs[71]=0;
matrixinvcoeffs[72]=0;
matrixinvcoeffs[73]=0;
matrixinvcoeffs[74]=0;
matrixinvcoeffs[75]=0;
matrixinvcoeffs[76]=0;
matrixinvcoeffs[77]=0;
matrixinvcoeffs[78]=0;
matrixinvcoeffs[79]=0;
matrixinvcoeffs[80]=0;
matrixinvcoeffs[81]=x80;
matrixinvcoeffs[82]=0;
matrixinvcoeffs[83]=0;
matrixinvcoeffs[84]=0;
matrixinvcoeffs[85]=0;
matrixinvcoeffs[86]=0;
matrixinvcoeffs[87]=0;
matrixinvcoeffs[88]=0;
matrixinvcoeffs[89]=0;
matrixinvcoeffs[90]=0;
matrixinvcoeffs[91]=0;
matrixinvcoeffs[92]=0;
matrixinvcoeffs[93]=0;
matrixinvcoeffs[94]=0;
matrixinvcoeffs[95]=0;
matrixinvcoeffs[96]=0;
matrixinvcoeffs[97]=0;
matrixinvcoeffs[98]=0;
matrixinvcoeffs[99]=0;
matrixinvcoeffs[100]=0;
matrixinvcoeffs[101]=0;
matrixinvcoeffs[102]=0;
matrixinvcoeffs[103]=-1.0;
matrixinvcoeffs[104]=0;
matrixinvcoeffs[105]=-0.0001;
matrixinvcoeffs[106]=0;
matrixinvcoeffs[107]=0;
matrixinvcoeffs[108]=x96;
matrixinvcoeffs[109]=0;
matrixinvcoeffs[110]=0;
matrixinvcoeffs[111]=x88;
matrixinvcoeffs[112]=0;
matrixinvcoeffs[113]=0;
matrixinvcoeffs[114]=0;
matrixinvcoeffs[115]=0;
matrixinvcoeffs[116]=0;
matrixinvcoeffs[117]=0;
matrixinvcoeffs[118]=1.0;
matrixinvcoeffs[119]=0;
matrixinvcoeffs[120]=0;
matrixinvcoeffs[121]=0;
matrixinvcoeffs[122]=0;
matrixinvcoeffs[123]=-0.0001;
matrixinvcoeffs[124]=0;
matrixinvcoeffs[125]=x96;
matrixinvcoeffs[126]=((1313.0)*sj2);
matrixinvcoeffs[127]=0;
matrixinvcoeffs[128]=0;
matrixinvcoeffs[129]=0;
matrixinvcoeffs[130]=0;
matrixinvcoeffs[131]=0;
matrixinvcoeffs[132]=0;
matrixinvcoeffs[133]=0;
matrixinvcoeffs[134]=0;
matrixinvcoeffs[135]=0;
matrixinvcoeffs[136]=0;
matrixinvcoeffs[137]=0;
matrixinvcoeffs[138]=0;
matrixinvcoeffs[139]=0;
matrixinvcoeffs[140]=x91;
matrixinvcoeffs[141]=0;
matrixinvcoeffs[142]=0;
matrixinvcoeffs[143]=x87;
matrixinvcoeffs[144]=0;
matrixinvcoeffs[145]=0;
matrixinvcoeffs[146]=0;
matrixinvcoeffs[147]=0;
matrixinvcoeffs[148]=0;
matrixinvcoeffs[149]=0;
matrixinvcoeffs[150]=0;
matrixinvcoeffs[151]=0;
matrixinvcoeffs[152]=0;
matrixinvcoeffs[153]=0;
matrixinvcoeffs[154]=0;
matrixinvcoeffs[155]=0;
matrixinvcoeffs[156]=0;
matrixinvcoeffs[157]=x91;
matrixinvcoeffs[158]=((3590.0)*sj2);
matrixinvcoeffs[159]=0;
matrixinvcoeffs[160]=0;
matrixinvcoeffs[161]=0;
matrixinvcoeffs[162]=0;
matrixinvcoeffs[163]=0;
matrixinvcoeffs[164]=0;
matrixinvcoeffs[165]=0;
matrixinvcoeffs[166]=0;
matrixinvcoeffs[167]=0;
matrixinvcoeffs[168]=x82;
matrixinvcoeffs[169]=0;
matrixinvcoeffs[170]=0;
matrixinvcoeffs[171]=0;
matrixinvcoeffs[172]=0;
matrixinvcoeffs[173]=0;
matrixinvcoeffs[174]=x92;
matrixinvcoeffs[175]=0;
matrixinvcoeffs[176]=0;
matrixinvcoeffs[177]=0;
matrixinvcoeffs[178]=0;
matrixinvcoeffs[179]=0;
matrixinvcoeffs[180]=0;
matrixinvcoeffs[181]=0;
matrixinvcoeffs[182]=0;
matrixinvcoeffs[183]=0;
matrixinvcoeffs[184]=0;
matrixinvcoeffs[185]=0;
matrixinvcoeffs[186]=x82;
matrixinvcoeffs[187]=0;
matrixinvcoeffs[188]=0;
matrixinvcoeffs[189]=0;
matrixinvcoeffs[190]=0;
matrixinvcoeffs[191]=x92;
matrixinvcoeffs[192]=0;
matrixinvcoeffs[193]=0;
matrixinvcoeffs[194]=0;
matrixinvcoeffs[195]=x80;
matrixinvcoeffs[196]=0;
matrixinvcoeffs[197]=0;
matrixinvcoeffs[198]=x83;
matrixinvcoeffs[199]=0;
matrixinvcoeffs[200]=x84;
matrixinvcoeffs[201]=x95;
matrixinvcoeffs[202]=0;
matrixinvcoeffs[203]=0;
matrixinvcoeffs[204]=x85;
matrixinvcoeffs[205]=0;
matrixinvcoeffs[206]=x93;
matrixinvcoeffs[207]=0;
matrixinvcoeffs[208]=0;
matrixinvcoeffs[209]=0;
matrixinvcoeffs[210]=0;
matrixinvcoeffs[211]=0;
matrixinvcoeffs[212]=0;
matrixinvcoeffs[213]=x80;
matrixinvcoeffs[214]=0;
matrixinvcoeffs[215]=x83;
matrixinvcoeffs[216]=0;
matrixinvcoeffs[217]=0;
matrixinvcoeffs[218]=x84;
matrixinvcoeffs[219]=x95;
matrixinvcoeffs[220]=0;
matrixinvcoeffs[221]=x85;
matrixinvcoeffs[222]=0;
matrixinvcoeffs[223]=x93;
matrixinvcoeffs[224]=0;
matrixinvcoeffs[225]=0;
matrixinvcoeffs[226]=sj2;
matrixinvcoeffs[227]=0;
matrixinvcoeffs[228]=0;
matrixinvcoeffs[229]=0;
matrixinvcoeffs[230]=0;
matrixinvcoeffs[231]=0;
matrixinvcoeffs[232]=x86;
matrixinvcoeffs[233]=0;
matrixinvcoeffs[234]=0;
matrixinvcoeffs[235]=0;
matrixinvcoeffs[236]=0;
matrixinvcoeffs[237]=0;
matrixinvcoeffs[238]=x94;
matrixinvcoeffs[239]=0;
matrixinvcoeffs[240]=0;
matrixinvcoeffs[241]=0;
matrixinvcoeffs[242]=0;
matrixinvcoeffs[243]=0;
matrixinvcoeffs[244]=sj2;
matrixinvcoeffs[245]=0;
matrixinvcoeffs[246]=0;
matrixinvcoeffs[247]=0;
matrixinvcoeffs[248]=0;
matrixinvcoeffs[249]=0;
matrixinvcoeffs[250]=x86;
matrixinvcoeffs[251]=0;
matrixinvcoeffs[252]=0;
matrixinvcoeffs[253]=0;
matrixinvcoeffs[254]=0;
matrixinvcoeffs[255]=x94;
if( !matrixinverse<16>(matrixinvcoeffs) ) {
continue;
}
IkReal op[72], zeror[48];
int numroots;;
IkReal x97=((10964100.4)*sj2);
IkReal x98=((205.0)*sj2);
IkReal x99=((10000.0)*sj2);
IkReal x100=((102.5)*sj2);
IkReal x101=((9746.0)*cj5);
IkReal x102=((718.0)*cj2);
IkReal x103=(r12*sj5);
IkReal x104=((5000.0)*sj2);
IkReal x105=(r02*sj5);
IkReal x106=(cj5*r10);
IkReal x107=((359.0)*cj2);
IkReal x108=(r01*sj2);
IkReal x109=(cj5*r01);
IkReal x110=(r10*x100);
IkReal x111=(rxp0_2*x104);
IkReal x112=(rxp0_1*x104);
IkReal x113=(r20*x100);
IkReal x114=(rxp1_2*x99);
IkReal x115=(r11*x98);
IkReal x116=((13130000.0)*npx*sj2);
IkReal x117=((10250000.0)*px*sj2);
IkReal x118=((1301325.0)*(sj2*sj2));
IkReal x119=((7256775.0)*cj2*sj2);
IkReal x120=((4873.0)*x105);
IkReal x121=((250000000.0)*pp*sj2);
IkReal x122=((269165.0)*r00*sj2);
IkReal x123=((4873.0)*x109);
IkReal x124=(r00*x98);
IkReal x125=(rxp0_0*x99);
IkReal x126=((410.0)*x108);
IkReal x127=((20500000.0)*py*sj2);
IkReal x128=((538330.0)*r10*sj2);
IkReal x129=(r11*x101);
IkReal x130=((9746.0)*x103);
IkReal x131=(r21*x98);
IkReal x132=(rxp1_1*x99);
IkReal x133=((538330.0)*x108);
IkReal x134=((26260000.0)*npy*sj2);
IkReal x135=(r00*x101);
IkReal x136=(x107*x109);
IkReal x137=(x105*x107);
IkReal x138=(cj5*r00*x102);
IkReal x139=(cj5*r11*x102);
IkReal x140=(x102*x103);
IkReal x141=((-20000.0)*rxp1_0*sj2);
IkReal x142=((1436.0)*cj2*x106);
IkReal x143=((-10000.0)*rxp0_0*sj2);
IkReal x144=((((-1.0)*x112))+x113);
IkReal x145=(x132+(((-1.0)*x131)));
IkReal x146=((((-1.0)*x113))+x112);
IkReal x147=((((-1076660.0)*r11*sj2))+(((19492.0)*x106)));
IkReal x148=(x113+x112);
IkReal x149=((((-1.0)*x132))+(((-1.0)*x131)));
IkReal x150=((-1.0)*x148);
IkReal x151=(x115+x114);
IkReal x152=(x121+x117);
IkReal x153=(x128+x129);
IkReal x154=(x111+x110);
IkReal x155=(x122+x123);
IkReal x156=(x120+x121);
IkReal x157=(x140+x124);
IkReal x158=(x136+x110);
IkReal x159=(x136+x111);
IkReal x160=(x137+x111);
IkReal x161=(x135+x134+(((-1.0)*x133)));
IkReal x162=(x134+x133+(((-1.0)*x135)));
IkReal x163=(x119+x118+x97);
IkReal x164=(x153+x127+(((-1.0)*x130)));
IkReal x165=((((-1.0)*x153))+x127+(((-1.0)*x130)));
IkReal x166=((((-1.0)*x156))+(((-1.0)*x116))+x163+x155+x117);
IkReal x167=((((-1.0)*x155))+(((-1.0)*x156))+x163+x117+x116);
IkReal x168=((((-1.0)*x152))+(((-1.0)*x155))+(((-1.0)*x116))+x163+x120);
IkReal x169=((((-1.0)*x152))+x163+x155+x120+x116);
op[0]=(x154+x137+(((-1.0)*x136)));
op[1]=x144;
op[2]=((((-1.0)*x151))+(((-1.0)*x138)));
op[3]=x145;
op[4]=((((-1.0)*x154))+x137+x136);
op[5]=x146;
op[6]=x144;
op[7]=((((-1.0)*x154))+x137+(((-1.0)*x136)));
op[8]=x145;
op[9]=(x151+(((-1.0)*x138)));
op[10]=x146;
op[11]=(x154+x137+x136);
op[12]=x166;
op[13]=0;
op[14]=x161;
op[15]=0;
op[16]=x167;
op[17]=0;
op[18]=0;
op[19]=x166;
op[20]=0;
op[21]=x161;
op[22]=0;
op[23]=x167;
op[24]=((((-1.0)*x124))+x140+(((-1.0)*x139)));
op[25]=x125;
op[26]=((((-1.0)*x142))+x126);
op[27]=x141;
op[28]=(x157+x139);
op[29]=x143;
op[30]=x125;
op[31]=(x157+(((-1.0)*x139)));
op[32]=x141;
op[33]=((((-1.0)*x142))+(((-1.0)*x126)));
op[34]=x143;
op[35]=((((-1.0)*x124))+x140+x139);
op[36]=x164;
op[37]=0;
op[38]=x147;
op[39]=0;
op[40]=x165;
op[41]=0;
op[42]=0;
op[43]=x164;
op[44]=0;
op[45]=x147;
op[46]=0;
op[47]=x165;
op[48]=((((-1.0)*x110))+x159+(((-1.0)*x137)));
op[49]=x148;
op[50]=((((-1.0)*x114))+x138+x115);
op[51]=x149;
op[52]=((((-1.0)*x159))+x110+(((-1.0)*x137)));
op[53]=x150;
op[54]=x148;
op[55]=((((-1.0)*x160))+x158);
op[56]=x149;
op[57]=((((-1.0)*x115))+x138+x114);
op[58]=x150;
op[59]=((((-1.0)*x158))+x111+(((-1.0)*x137)));
op[60]=x168;
op[61]=0;
op[62]=x162;
op[63]=0;
op[64]=x169;
op[65]=0;
op[66]=0;
op[67]=x168;
op[68]=0;
op[69]=x162;
op[70]=0;
op[71]=x169;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j0array[16], cj0array[16], sj0array[16], j6array[16], cj6array[16], sj6array[16], j1array[16], cj1array[16], sj1array[16];
int numsolutions = 0;
for(int ij0 = 0; ij0 < numroots; ij0 += 3)
{
IkReal htj0 = zeror[ij0+0], htj6 = zeror[ij0+1], htj1 = zeror[ij0+2];
if(isnan(htj0)||isnan(htj6)||isnan(htj1)){
continue;
}
j0array[numsolutions]=((2.0)*(atan(htj0)));
j6array[numsolutions]=((2.0)*(atan(htj6)));
j1array[numsolutions]=((2.0)*(atan(htj1)));
if(isinf(htj0)){
cj0array[numsolutions] = IKcos(j0array[numsolutions]);
sj0array[numsolutions] = IKsin(j0array[numsolutions]);
}
else{
IkReal x170=htj0*htj0;
CheckValue<IkReal> x171=IKPowWithIntegerCheck(((1.0)+x170),-1);
if(!x171.valid){
continue;
}
cj0array[numsolutions]=((x171.value)*(((1.0)+(((-1.0)*x170)))));
CheckValue<IkReal> x172=IKPowWithIntegerCheck(((1.0)+(htj0*htj0)),-1);
if(!x172.valid){
continue;
}
sj0array[numsolutions]=((2.0)*htj0*(x172.value));
}
if(isinf(htj6)){
cj6array[numsolutions] = IKcos(j6array[numsolutions]);
sj6array[numsolutions] = IKsin(j6array[numsolutions]);
}
else{
IkReal x173=htj6*htj6;
CheckValue<IkReal> x174=IKPowWithIntegerCheck(((1.0)+x173),-1);
if(!x174.valid){
continue;
}
cj6array[numsolutions]=((x174.value)*(((1.0)+(((-1.0)*x173)))));
CheckValue<IkReal> x175=IKPowWithIntegerCheck(((1.0)+(htj6*htj6)),-1);
if(!x175.valid){
continue;
}
sj6array[numsolutions]=((2.0)*htj6*(x175.value));
}
if(isinf(htj1)){
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
}
else{
IkReal x176=htj1*htj1;
CheckValue<IkReal> x177=IKPowWithIntegerCheck(((1.0)+x176),-1);
if(!x177.valid){
continue;
}
cj1array[numsolutions]=((x177.value)*(((1.0)+(((-1.0)*x176)))));
CheckValue<IkReal> x178=IKPowWithIntegerCheck(((1.0)+(htj1*htj1)),-1);
if(!x178.valid){
continue;
}
sj1array[numsolutions]=((2.0)*htj1*(x178.value));
}
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j0valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj0 = 16;
_nj6 = 1;
_nj1 = 1;
for(int ij0 = 0; ij0 < numsolutions; ++ij0)
    {
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
_ij1[0] = 0; _ij1[1] = -1;
for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
{
if( !j0valid[iij0] ) { continue; }
if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij0]-cj6array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij0]-sj6array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj1array[ij0]-cj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij0]-sj1array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j0valid[iij0]=false; _ij0[1] = iij0; _ij6[1] = 0; _ij1[1] = 0;  break; 
}
}
    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

    j6 = j6array[ij0]; cj6 = cj6array[ij0]; sj6 = sj6array[ij0];

    j1 = j1array[ij0]; cj1 = cj1array[ij0]; sj1 = sj1array[ij0];

innerfn(solutions);
    }
}
return solutions.GetNumSolutions()>0;
}
static inline void polyroots3(IkReal rawcoeffs[3+1], IkReal rawroots[3], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots2(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[3];
    const int maxsteps = 110;
    for(int i = 0; i < 3; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[3];
    IkReal err[3];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 3; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 3; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 3; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 3; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[3] = {false};
    for(int i = 0; i < 3; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 3; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int& numroots) {
    IkReal det = rawcoeffs[1]*rawcoeffs[1]-4*rawcoeffs[0]*rawcoeffs[2];
    if( det < 0 ) {
        numroots=0;
    }
    else if( det == 0 ) {
        rawroots[0] = -0.5*rawcoeffs[1]/rawcoeffs[0];
        numroots = 1;
    }
    else {
        det = IKsqrt(det);
        rawroots[0] = (-rawcoeffs[1]+det)/(2*rawcoeffs[0]);
        rawroots[1] = (-rawcoeffs[1]-det)/(2*rawcoeffs[0]);//rawcoeffs[2]/(rawcoeffs[0]*rawroots[0]);
        numroots = 2;
    }
}
static inline void polyroots5(IkReal rawcoeffs[5+1], IkReal rawroots[5], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots4(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[5];
    const int maxsteps = 110;
    for(int i = 0; i < 5; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[5];
    IkReal err[5];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 5; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 5; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 5; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 5; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[5] = {false};
    for(int i = 0; i < 5; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 5; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots3(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[4];
    const int maxsteps = 110;
    for(int i = 0; i < 4; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[4];
    IkReal err[4];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 4; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 4; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 4; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 4; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[4] = {false};
    for(int i = 0; i < 4; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 4; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots5(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[6];
    const int maxsteps = 110;
    for(int i = 0; i < 6; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[6];
    IkReal err[6];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 6; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 6; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 6; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 6; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[6] = {false};
    for(int i = 0; i < 6; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 6; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
{
IkReal j5eval[1];
IkReal x179=sj1*sj1;
IkReal x180=cj1*cj1;
IkReal x181=((4.0)*cj2);
IkReal x182=(r00*sj6);
IkReal x183=((16.0)*r02);
IkReal x184=((8.0)*r12);
IkReal x185=(cj6*r01);
IkReal x186=(cj1*sj2);
IkReal x187=((8.0)*r02);
IkReal x188=((16.0)*r12);
IkReal x189=((4.0)*cj6);
IkReal x190=(r10*sj6);
IkReal x191=(cj0*x180);
IkReal x192=(cj6*r11*sj0);
IkReal x193=(sj0*sj1*sj2);
IkReal x194=(cj0*sj1*sj2);
IkReal x195=(cj0*x179);
IkReal x196=(sj0*x180);
IkReal x197=(cj2*sj0*x179);
IkReal x198=(((r11*x189*x194))+(((4.0)*x190*x194)));
IkReal x199=((((4.0)*x185*x193))+((sj0*x179*x181*x190))+((x180*x181*x192))+((x181*x185*x195))+((x181*x185*x191))+((x181*x182*x191))+((x181*x182*x195))+((x181*x190*x196))+((x179*x181*x192))+(((4.0)*x182*x193))+(((4.0)*r20*sj6*x186))+((r21*x186*x189)));
j5eval[0]=((IKabs(((((-1.0)*x199))+x198)))+(IKabs(((((-1.0)*cj2*x187*x195))+(((-1.0)*cj2*x187*x191))+((x184*x194))+(((-1.0)*x187*x193))+(((-8.0)*r22*x186))+(((-1.0)*x184*x197))+(((-1.0)*cj2*x184*x196)))))+(((0.5)*(IKabs(((((-1.0)*cj2*x188*x196))+(((-1.0)*x188*x197))+(((-1.0)*cj2*x183*x191))+(((-1.0)*cj2*x183*x195))+((x188*x194))+(((-16.0)*r22*x186))+(((-1.0)*x183*x193)))))))+(((0.5)*(IKabs(((((-1.0)*x198))+x199))))));
if( IKabs(j5eval[0]) < 0.0000000010000000  )
{
continue; // no branches [j3, j4, j5]

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal x200=cj1*cj1;
IkReal x201=sj1*sj1;
IkReal x202=((4.0)*cj2);
IkReal x203=(r00*sj6);
IkReal x204=((16.0)*r02);
IkReal x205=(r10*sj6);
IkReal x206=(cj6*r01);
IkReal x207=(r12*sj0);
IkReal x208=((16.0)*sj2);
IkReal x209=(cj1*r22);
IkReal x210=((8.0)*r02);
IkReal x211=(cj0*sj1);
IkReal x212=((4.0)*sj2);
IkReal x213=((16.0)*cj2);
IkReal x214=((8.0)*r12);
IkReal x215=(cj0*x200);
IkReal x216=(cj6*r11*sj0);
IkReal x217=(sj0*sj1*sj2);
IkReal x218=(sj0*x200);
IkReal x219=(cj0*x201);
IkReal x220=((8.0)*cj2*x201);
IkReal x221=(((x205*x211*x212))+((cj6*r11*x211*x212)));
IkReal x222=((((-8.0)*sj2*x209))+(((-1.0)*x207*x220))+(((-1.0)*cj2*x210*x215))+(((-1.0)*cj2*x210*x219))+((sj2*x211*x214))+(((-8.0)*cj2*x200*x207))+(((-1.0)*x210*x217)));
IkReal x223=(((x201*x202*x216))+((sj0*sj1*x206*x212))+((x200*x202*x216))+((x202*x206*x219))+((x202*x206*x215))+((sj0*x201*x202*x205))+((x202*x205*x218))+((x202*x203*x215))+((x202*x203*x219))+((cj1*cj6*r21*x212))+((sj0*sj1*x203*x212))+((cj1*r20*sj6*x212)));
IkReal x224=(x221+(((-1.0)*x223)));
IkReal x225=(x223+(((-1.0)*x221)));
op[0]=x224;
op[1]=x222;
op[2]=x224;
op[3]=((((-1.0)*x200*x207*x213))+(((-1.0)*x204*x217))+(((-1.0)*x201*x207*x213))+(((-1.0)*x208*x209))+(((-1.0)*cj2*x204*x219))+(((-1.0)*cj2*x204*x215))+((r12*x208*x211)));
op[4]=x225;
op[5]=x222;
op[6]=x225;
polyroots6(op,zeror,numroots);
IkReal j5array[6], cj5array[6], sj5array[6], tempj5array[1];
int numsolutions = 0;
for(int ij5 = 0; ij5 < numroots; ++ij5)
{
IkReal htj5 = zeror[ij5];
tempj5array[0]=((2.0)*(atan(htj5)));
for(int kj5 = 0; kj5 < 1; ++kj5)
{
j5array[numsolutions] = tempj5array[kj5];
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
numsolutions++;
}
}
bool j5valid[6]={true,true,true,true,true,true};
_nj5 = 6;
for(int ij5 = 0; ij5 < numsolutions; ++ij5)
    {
if( !j5valid[ij5] )
{
    continue;
}
    j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
htj5 = IKtan(j5/2);

_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < numsolutions; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
{
IkReal j3eval[1];
j3eval[0]=cj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
j3eval[0]=sj2;
j3eval[1]=sj1;
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
j3eval[0]=sj2;
j3eval[1]=cj1;
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
bool bgotonextstatement = true;
do
{
IkReal x226=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj0*r00*sj6*x226))+(((-1.0)*r10*sj0*sj6*x226))+((r12*sj0*sj5))+(((-1.0)*cj0*cj6*r01*x226))+((cj0*r02*sj5))+(((-1.0)*cj6*r11*sj0*x226)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x227=((1.0)*sj6);
if( IKabs(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x227))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x227)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x227))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x227))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))), (((cj6*r10*sj0))+(((-1.0)*cj0*r01*x227))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x227))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x228=IKcos(j4);
IkReal x229=IKsin(j4);
IkReal x230=((0.02626)*cj0);
IkReal x231=(r01*sj6);
IkReal x232=(r11*sj0);
IkReal x233=(cj6*sj5);
IkReal x234=((1.0)*cj0);
IkReal x235=(sj5*sj6);
IkReal x236=(cj6*r00);
IkReal x237=(cj6*r10*sj0);
evalcond[0]=(x228+(((-1.0)*x234*x236))+((cj0*x231))+(((-1.0)*x237))+((sj6*x232)));
evalcond[1]=(((cj5*r12*sj0))+((cj0*r01*x233))+((cj0*cj5*r02))+((cj0*r00*x235))+((x232*x233))+x229+((r10*sj0*x235)));
evalcond[2]=((-0.0001)+(((-1.0)*px*x234))+(((-1.0)*x230*x236))+(((0.02626)*sj6*x232))+((x230*x231))+(((0.02626)*x228))+(((-1.0)*py*sj0))+(((-0.0718)*x229))+(((-0.02626)*x237)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj2=0;
cj2=1.0;
j2=0;
IkReal x238=(cj1*cj6);
IkReal x239=((1.0)*cj1);
IkReal x240=(r21*sj6);
IkReal x241=(cj6*sj1);
IkReal x242=(cj5*r21*sj4);
IkReal x243=(r22*sj4*sj5);
IkReal x244=(cj5*r20*sj4*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((x241*x242))+(((-1.0)*sj1*x243))+((r20*x238))+(((-1.0)*x239*x240))+((sj1*x244)))))+(IKabs(((((-1.0)*r20*x241))+((x238*x242))+((cj1*x244))+(((-1.0)*x239*x243))+((sj1*x240))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=cj4;
j3eval[1]=IKsign(cj4);
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x245=(r11*sj0);
IkReal x246=(cj6*sj5);
IkReal x247=(r10*sj0);
IkReal x248=(sj5*sj6);
IkReal x249=((1.0)*cj5);
IkReal x250=(cj5*r12);
IkReal x251=(cj0*sj6);
IkReal x252=(cj0*r02);
IkReal x253=((1.0)*sj0);
IkReal x254=((1.0)*cj6);
IkReal x255=(cj0*r00);
IkReal x256=((0.02626)*cj6);
IkReal x257=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=(((r01*x251))+(((-1.0)*x254*x255))+(((-1.0)*x247*x254))+((sj6*x245)));
evalcond[2]=((((-1.0)*r20*x248))+(((-1.0)*r21*x246))+(((-1.0)*r22*x249)));
evalcond[3]=((((-1.0)*r00*x249*x251))+(((-1.0)*cj6*x245*x249))+((r12*sj0*sj5))+(((-1.0)*sj6*x247*x249))+(((-1.0)*cj6*x249*x257))+((sj5*x252)));
evalcond[4]=((1.0)+((x246*x257))+((x248*x255))+((sj0*x250))+((cj5*x252))+((x245*x246))+((x247*x248)));
evalcond[5]=((((-1.0)*r01*x246*x253))+(((-1.0)*r00*x248*x253))+((cj0*r10*x248))+((cj0*x250))+(((-1.0)*r02*sj0*x249))+((cj0*r11*x246)));
evalcond[6]=((-0.0719)+(((0.02626)*r01*x251))+(((0.02626)*sj6*x245))+(((-1.0)*x255*x256))+(((-1.0)*x247*x256))+(((-1.0)*py*x253))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x258=(cj1*r20);
IkReal x259=(cj5*sj6);
IkReal x260=((1.0)*cj1);
IkReal x261=(r22*sj5);
IkReal x262=(r21*sj6);
IkReal x263=(r20*sj1);
IkReal x264=(cj5*cj6*r21);
if( IKabs(((((-1.0)*cj6*x263))+((cj1*x264))+((sj1*x262))+(((-1.0)*x260*x261))+((x258*x259)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x259*x263))+((cj6*x258))+(((-1.0)*sj1*x261))+((sj1*x264))+(((-1.0)*x260*x262)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*x263))+((cj1*x264))+((sj1*x262))+(((-1.0)*x260*x261))+((x258*x259))))+IKsqr((((x259*x263))+((cj6*x258))+(((-1.0)*sj1*x261))+((sj1*x264))+(((-1.0)*x260*x262))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*x263))+((cj1*x264))+((sj1*x262))+(((-1.0)*x260*x261))+((x258*x259))), (((x259*x263))+((cj6*x258))+(((-1.0)*sj1*x261))+((sj1*x264))+(((-1.0)*x260*x262))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x265=IKsin(j3);
IkReal x266=IKcos(j3);
IkReal x267=(cj5*cj6);
IkReal x268=(r01*sj0);
IkReal x269=(cj0*r10);
IkReal x270=((1.0)*sj6);
IkReal x271=((0.02626)*sj6);
IkReal x272=((0.02626)*cj6);
IkReal x273=((1.0)*sj5);
IkReal x274=(cj5*sj6);
IkReal x275=(cj0*r11);
IkReal x276=(r00*sj0);
IkReal x277=((0.12372)*x265);
IkReal x278=(cj1*x266);
IkReal x279=(sj1*x266);
IkReal x280=((1.0)*x265);
IkReal x281=(cj1*x280);
IkReal x282=((1.0)*x279);
IkReal x283=(x282+x281);
evalcond[0]=((((-1.0)*x278))+((cj6*r20))+((sj1*x265))+(((-1.0)*r21*x270)));
evalcond[1]=(((r21*x267))+(((-1.0)*r22*x273))+(((-1.0)*x283))+((r20*x274)));
evalcond[2]=((((-0.0001)*sj1))+(((-0.2413)*cj1))+pz+(((-0.12372)*x278))+(((-1.0)*r21*x271))+((sj1*x277))+((r20*x272)));
evalcond[3]=((((-1.0)*cj6*x269))+((sj6*x275))+(((-1.0)*x268*x270))+(((-1.0)*x283))+((cj6*x276)));
evalcond[4]=(((x267*x268))+(((-1.0)*sj1*x280))+(((-1.0)*cj5*x269*x270))+((x274*x276))+((cj0*r12*sj5))+x278+(((-1.0)*r02*sj0*x273))+(((-1.0)*x267*x275)));
evalcond[5]=(((x272*x276))+((x271*x275))+(((-1.0)*cj1*x277))+(((-1.0)*x269*x272))+(((-1.0)*x268*x271))+(((0.0001)*cj1))+((px*sj0))+(((-0.12372)*x279))+(((-0.2413)*sj1))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x284=(r11*sj0);
IkReal x285=(cj6*sj5);
IkReal x286=(r10*sj0);
IkReal x287=(sj5*sj6);
IkReal x288=((1.0)*cj5);
IkReal x289=(cj5*r12);
IkReal x290=(cj0*sj6);
IkReal x291=(cj0*r02);
IkReal x292=((1.0)*sj0);
IkReal x293=((1.0)*cj6);
IkReal x294=(cj0*r00);
IkReal x295=((0.02626)*cj6);
IkReal x296=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=(((sj6*x284))+(((-1.0)*x286*x293))+(((-1.0)*x293*x294))+((r01*x290)));
evalcond[2]=((((-1.0)*r22*x288))+(((-1.0)*r21*x285))+(((-1.0)*r20*x287)));
evalcond[3]=(((sj5*x291))+(((-1.0)*cj6*x284*x288))+((r12*sj0*sj5))+(((-1.0)*cj6*x288*x296))+(((-1.0)*sj6*x286*x288))+(((-1.0)*r00*x288*x290)));
evalcond[4]=((-1.0)+((x284*x285))+((x286*x287))+((cj5*x291))+((x287*x294))+((x285*x296))+((sj0*x289)));
evalcond[5]=(((cj0*r10*x287))+((cj0*x289))+(((-1.0)*r01*x285*x292))+((cj0*r11*x285))+(((-1.0)*r02*sj0*x288))+(((-1.0)*r00*x287*x292)));
evalcond[6]=((0.0717)+(((-1.0)*py*x292))+(((0.02626)*r01*x290))+(((-1.0)*x286*x295))+(((0.02626)*sj6*x284))+(((-1.0)*x294*x295))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x297=(cj1*r20);
IkReal x298=(cj5*sj6);
IkReal x299=(cj6*sj1);
IkReal x300=(cj5*r21);
IkReal x301=(r21*sj6);
IkReal x302=((1.0)*r22*sj5);
if( IKabs(((((-1.0)*sj1*x301))+((r20*x299))+((x297*x298))+(((-1.0)*cj1*x302))+((cj1*cj6*x300)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*sj1*x298))+(((-1.0)*cj6*x297))+(((-1.0)*sj1*x302))+((cj1*x301))+((x299*x300)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x301))+((r20*x299))+((x297*x298))+(((-1.0)*cj1*x302))+((cj1*cj6*x300))))+IKsqr((((r20*sj1*x298))+(((-1.0)*cj6*x297))+(((-1.0)*sj1*x302))+((cj1*x301))+((x299*x300))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*sj1*x301))+((r20*x299))+((x297*x298))+(((-1.0)*cj1*x302))+((cj1*cj6*x300))), (((r20*sj1*x298))+(((-1.0)*cj6*x297))+(((-1.0)*sj1*x302))+((cj1*x301))+((x299*x300))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x303=IKsin(j3);
IkReal x304=IKcos(j3);
IkReal x305=(cj5*cj6);
IkReal x306=(r01*sj0);
IkReal x307=((0.0712)*sj1);
IkReal x308=(cj0*r10);
IkReal x309=((1.0)*sj6);
IkReal x310=((0.02626)*sj6);
IkReal x311=((0.02626)*cj6);
IkReal x312=((1.0)*sj5);
IkReal x313=(cj5*sj6);
IkReal x314=(cj0*r11);
IkReal x315=(r00*sj0);
IkReal x316=(cj1*x304);
IkReal x317=(cj1*x303);
IkReal x318=(sj1*x304);
IkReal x319=((1.0)*sj1*x303);
evalcond[0]=((((-1.0)*r21*x309))+x316+(((-1.0)*x319))+((cj6*r20)));
evalcond[1]=(((r21*x305))+((r20*x313))+(((-1.0)*x317))+(((-1.0)*x318))+(((-1.0)*r22*x312)));
evalcond[2]=((((-1.0)*r21*x310))+(((-0.0001)*sj1))+((r20*x311))+((x303*x307))+(((-0.2413)*cj1))+pz+(((-0.0712)*x316)));
evalcond[3]=((((-1.0)*cj6*x308))+((sj6*x314))+x318+x317+(((-1.0)*x306*x309))+((cj6*x315)));
evalcond[4]=((((-1.0)*r02*sj0*x312))+x316+((cj0*r12*sj5))+(((-1.0)*x319))+((x305*x306))+(((-1.0)*cj5*x308*x309))+(((-1.0)*x305*x314))+((x313*x315)));
evalcond[5]=(((x310*x314))+(((-1.0)*x308*x311))+(((-1.0)*x306*x310))+((x311*x315))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x304*x307))+(((-0.0712)*x317))+(((-0.2413)*sj1))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x320=(cj6*sj0);
IkReal x321=(sj0*sj6);
IkReal x322=((1.0)*cj5);
IkReal x323=(cj0*sj6);
IkReal x324=(cj0*r02);
IkReal x325=((1.0)*r10);
IkReal x326=(r12*sj0);
IkReal x327=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((1.0)+((r11*x321))+((r01*x323))+(((-1.0)*x320*x325))+(((-1.0)*r00*x327)));
evalcond[3]=((((-1.0)*r01*x321))+((r00*x320))+((r11*x323))+(((-1.0)*x325*x327)));
evalcond[4]=((((-1.0)*r00*x322*x323))+((sj5*x324))+((sj5*x326))+(((-1.0)*r10*x321*x322))+(((-1.0)*r01*x322*x327))+(((-1.0)*r11*x320*x322)));
evalcond[5]=(((r11*sj5*x320))+((r00*sj5*x323))+((cj5*x324))+((cj5*x326))+((r01*sj5*x327))+((r10*sj5*x321)));
evalcond[6]=((0.02616)+(((-0.02626)*r00*x327))+(((0.02626)*r01*x323))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x320))+(((0.02626)*r11*x321))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x328=cj1*cj1;
IkReal x329=(cj1*sj1);
IkReal x330=((5.90807042419946)*pz);
IkReal x331=(cj5*r20*sj6);
IkReal x332=((1.0)*r22*sj5);
IkReal x333=(cj5*cj6*r21);
if( IKabs(((0.000590807042419946)+(((1.42561739335933)*x329))+((cj1*x333))+((cj1*x331))+(((-0.000590807042419946)*x328))+(((-1.0)*cj1*x332))+(((-1.0)*sj1*x330)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x330))+(((-0.000590807042419946)*x329))+(((-1.42561739335933)*x328))+((sj1*x331))+((sj1*x333))+(((-1.0)*sj1*x332)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((1.42561739335933)*x329))+((cj1*x333))+((cj1*x331))+(((-0.000590807042419946)*x328))+(((-1.0)*cj1*x332))+(((-1.0)*sj1*x330))))+IKsqr((((cj1*x330))+(((-0.000590807042419946)*x329))+(((-1.42561739335933)*x328))+((sj1*x331))+((sj1*x333))+(((-1.0)*sj1*x332))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((1.42561739335933)*x329))+((cj1*x333))+((cj1*x331))+(((-0.000590807042419946)*x328))+(((-1.0)*cj1*x332))+(((-1.0)*sj1*x330))), (((cj1*x330))+(((-0.000590807042419946)*x329))+(((-1.42561739335933)*x328))+((sj1*x331))+((sj1*x333))+(((-1.0)*sj1*x332))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x334=IKsin(j3);
IkReal x335=IKcos(j3);
IkReal x336=(cj5*cj6);
IkReal x337=(r01*sj0);
IkReal x338=((0.02626)*sj6);
IkReal x339=(cj0*cj5);
IkReal x340=((1.0)*sj6);
IkReal x341=((0.02626)*cj6);
IkReal x342=(cj0*r10);
IkReal x343=((1.0)*cj5);
IkReal x344=(r02*sj0);
IkReal x345=((1.0)*sj5);
IkReal x346=(cj0*r11);
IkReal x347=(cj5*sj6);
IkReal x348=(r00*sj0);
IkReal x349=(cj1*x335);
IkReal x350=(cj1*x334);
IkReal x351=(sj1*x335);
IkReal x352=(sj1*x334);
IkReal x353=((1.0)*x352);
evalcond[0]=((((0.16926)*x352))+(((-0.0001)*sj1))+(((-0.16926)*x349))+(((-0.2413)*cj1))+pz);
evalcond[1]=((((-1.0)*r22*x345))+((r21*x336))+(((-1.0)*x351))+(((-1.0)*x350))+((r20*x347)));
evalcond[2]=((((-1.0)*r22*x343))+(((-1.0)*x353))+(((-1.0)*r20*sj5*x340))+x349+(((-1.0)*cj6*r21*x345)));
evalcond[3]=(((r12*x339))+((cj6*sj5*x346))+(((-1.0)*sj5*x340*x348))+((sj5*sj6*x342))+x351+x350+(((-1.0)*cj6*x337*x345))+(((-1.0)*x343*x344)));
evalcond[4]=(((x336*x337))+(((-1.0)*x353))+(((-1.0)*r10*x339*x340))+(((-1.0)*x336*x346))+x349+((cj0*r12*sj5))+(((-1.0)*x344*x345))+((x347*x348)));
evalcond[5]=((((-1.0)*x337*x338))+(((-0.16926)*x350))+(((-0.16926)*x351))+((x341*x348))+(((-1.0)*x341*x342))+(((0.0001)*cj1))+((px*sj0))+((x338*x346))+(((-0.2413)*sj1))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x354=(cj6*sj0);
IkReal x355=(sj0*sj6);
IkReal x356=((1.0)*cj5);
IkReal x357=(cj0*sj6);
IkReal x358=(cj0*r02);
IkReal x359=((1.0)*r10);
IkReal x360=(r12*sj0);
IkReal x361=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((-1.0)+(((-1.0)*r00*x361))+((r01*x357))+((r11*x355))+(((-1.0)*x354*x359)));
evalcond[3]=((((-1.0)*r01*x355))+((r11*x357))+((r00*x354))+(((-1.0)*x359*x361)));
evalcond[4]=((((-1.0)*r10*x355*x356))+(((-1.0)*r01*x356*x361))+(((-1.0)*r00*x356*x357))+(((-1.0)*r11*x354*x356))+((sj5*x358))+((sj5*x360)));
evalcond[5]=(((r00*sj5*x357))+((r01*sj5*x361))+((r11*sj5*x354))+((cj5*x360))+((cj5*x358))+((r10*sj5*x355)));
evalcond[6]=((-0.02636)+(((-0.02626)*r00*x361))+(((0.02626)*r01*x357))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x354))+(((-1.0)*cj0*px))+(((0.02626)*r11*x355)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x362=cj1*cj1;
IkReal x363=(cj1*sj1);
IkReal x364=((38.9711613406079)*pz);
IkReal x365=(cj5*r20*sj6);
IkReal x366=((1.0)*r22*sj5);
IkReal x367=(cj5*cj6*r21);
if( IKabs(((0.00389711613406079)+(((-0.00389711613406079)*x362))+(((-1.0)*sj1*x364))+(((9.4037412314887)*x363))+(((-1.0)*cj1*x366))+((cj1*x365))+((cj1*x367)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.00389711613406079)*x363))+((sj1*x367))+((sj1*x365))+(((-1.0)*sj1*x366))+(((-9.4037412314887)*x362))+((cj1*x364)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((-0.00389711613406079)*x362))+(((-1.0)*sj1*x364))+(((9.4037412314887)*x363))+(((-1.0)*cj1*x366))+((cj1*x365))+((cj1*x367))))+IKsqr(((((-0.00389711613406079)*x363))+((sj1*x367))+((sj1*x365))+(((-1.0)*sj1*x366))+(((-9.4037412314887)*x362))+((cj1*x364))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((-0.00389711613406079)*x362))+(((-1.0)*sj1*x364))+(((9.4037412314887)*x363))+(((-1.0)*cj1*x366))+((cj1*x365))+((cj1*x367))), ((((-0.00389711613406079)*x363))+((sj1*x367))+((sj1*x365))+(((-1.0)*sj1*x366))+(((-9.4037412314887)*x362))+((cj1*x364))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x368=IKsin(j3);
IkReal x369=IKcos(j3);
IkReal x370=(cj5*cj6);
IkReal x371=(r01*sj0);
IkReal x372=(cj0*r10);
IkReal x373=((1.0)*cj5);
IkReal x374=((0.02626)*sj6);
IkReal x375=((0.02626)*cj6);
IkReal x376=(r02*sj0);
IkReal x377=((1.0)*sj5);
IkReal x378=(cj0*r11);
IkReal x379=(r20*sj6);
IkReal x380=(cj0*r12);
IkReal x381=(r00*sj0);
IkReal x382=(cj1*x369);
IkReal x383=((1.0)*x368);
IkReal x384=(sj1*x369);
IkReal x385=(sj1*x368);
IkReal x386=(cj1*x383);
IkReal x387=((1.0)*x384);
IkReal x388=(x386+x387);
evalcond[0]=((((-0.0001)*sj1))+(((-0.02566)*x382))+(((-0.2413)*cj1))+pz+(((0.02566)*x385)));
evalcond[1]=(((cj5*x379))+(((-1.0)*x388))+((r21*x370))+(((-1.0)*r22*x377)));
evalcond[2]=((((-1.0)*x377*x379))+x385+(((-1.0)*x382))+(((-1.0)*cj6*r21*x377))+(((-1.0)*r22*x373)));
evalcond[3]=(((x370*x371))+((sj5*x380))+(((-1.0)*sj6*x372*x373))+x382+(((-1.0)*x376*x377))+((cj5*sj6*x381))+(((-1.0)*x370*x378))+(((-1.0)*sj1*x383)));
evalcond[4]=((((-1.0)*sj6*x377*x381))+(((-1.0)*cj6*x371*x377))+(((-1.0)*x373*x376))+(((-1.0)*x388))+((cj5*x380))+((sj5*sj6*x372))+((cj6*sj5*x378)));
evalcond[5]=((((-1.0)*x372*x375))+(((-0.02566)*x384))+(((-0.02566)*cj1*x368))+(((-1.0)*x371*x374))+(((0.0001)*cj1))+((px*sj0))+(((-0.2413)*sj1))+((x374*x378))+((x375*x381))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x389=(cj6*r21);
IkReal x390=(cj4*r22);
IkReal x391=(cj1*sj5);
IkReal x392=(r20*sj6);
IkReal x393=(cj5*sj1);
IkReal x394=(cj1*cj5);
IkReal x395=((1.0)*sj1*sj5);
CheckValue<IkReal> x396 = IKatan2WithCheck(IkReal(((((-1.0)*x389*x395))+(((-1.0)*r22*x393))+((cj4*x392*x394))+(((-1.0)*x390*x391))+((cj4*x389*x394))+(((-1.0)*x392*x395)))),(((x391*x392))+((r22*x394))+((cj4*x392*x393))+(((-1.0)*x390*x395))+((x389*x391))+((cj4*x389*x393))),IKFAST_ATAN2_MAGTHRESH);
if(!x396.valid){
continue;
}
CheckValue<IkReal> x397=IKPowWithIntegerCheck(IKsign(cj4),-1);
if(!x397.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x396.value)+(((1.5707963267949)*(x397.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x398=IKsin(j3);
IkReal x399=IKcos(j3);
IkReal x400=(cj5*cj6);
IkReal x401=(cj0*sj6);
IkReal x402=(r01*sj0);
IkReal x403=((0.02626)*sj6);
IkReal x404=((1.0)*cj5);
IkReal x405=((0.0718)*cj4);
IkReal x406=(r02*sj0);
IkReal x407=((1.0)*sj5);
IkReal x408=((1.0)*sj6);
IkReal x409=((0.02626)*sj4);
IkReal x410=(r20*sj6);
IkReal x411=((1.0)*cj0);
IkReal x412=(cj0*r12);
IkReal x413=(cj6*r20);
IkReal x414=(sj1*x398);
IkReal x415=(cj1*x399);
IkReal x416=(cj0*cj6*r10);
IkReal x417=(sj1*x399);
IkReal x418=(cj6*r00*sj0);
IkReal x419=(cj1*x398);
IkReal x420=(r00*sj0*sj6);
IkReal x421=(sj4*x415);
IkReal x422=((1.0)*x419);
evalcond[0]=((((-1.0)*x421))+(((-1.0)*r21*x408))+x413+((sj4*x414)));
evalcond[1]=((((-1.0)*x422))+((cj5*x410))+((r21*x400))+(((-1.0)*r22*x407))+(((-1.0)*x417)));
evalcond[2]=((((-1.0)*cj6*r21*x407))+((cj4*x415))+(((-1.0)*x407*x410))+(((-1.0)*cj4*x414))+(((-1.0)*r22*x404)));
evalcond[3]=(((r11*x401))+(((-1.0)*sj4*x417))+(((-1.0)*x402*x408))+x418+(((-1.0)*cj6*r10*x411))+(((-1.0)*sj4*x422)));
evalcond[4]=((((-1.0)*r11*x400*x411))+(((-1.0)*x406*x407))+((cj5*x420))+((sj5*x412))+x415+((x400*x402))+(((-1.0)*r10*x401*x404))+(((-1.0)*x414)));
evalcond[5]=(((r10*sj5*x401))+((cj4*x419))+((cj4*x417))+(((-1.0)*cj6*x402*x407))+((cj5*x412))+((cj0*cj6*r11*sj5))+(((-1.0)*x404*x406))+(((-1.0)*x407*x420)));
evalcond[6]=((((0.09746)*x414))+((x405*x414))+(((-0.0001)*sj1))+((x409*x414))+(((-1.0)*r21*x403))+(((-0.2413)*cj1))+pz+(((0.02626)*x413))+(((-1.0)*x405*x415))+(((-0.09746)*x415))+(((-1.0)*x409*x415)));
evalcond[7]=((((-0.02626)*x416))+(((-1.0)*x402*x403))+(((0.02626)*r11*x401))+(((0.02626)*x418))+(((0.0001)*cj1))+(((-1.0)*x405*x419))+(((-1.0)*x405*x417))+((px*sj0))+(((-1.0)*py*x411))+(((-0.2413)*sj1))+(((-0.09746)*x417))+(((-0.09746)*x419))+(((-1.0)*x409*x419))+(((-1.0)*x409*x417)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x423=(cj1*cj6);
IkReal x424=(cj6*sj1);
IkReal x425=((1.0)*sj6);
IkReal x426=(r01*sj0);
IkReal x427=(r00*sj0);
IkReal x428=((1.0)*cj0*r10);
IkReal x429=(cj0*r11*sj6);
CheckValue<IkReal> x430 = IKatan2WithCheck(IkReal(((((-1.0)*r20*x424))+(((-1.0)*cj1*x425*x426))+((r21*sj1*sj6))+((x423*x427))+(((-1.0)*x423*x428))+((cj1*x429)))),((((-1.0)*cj1*r21*x425))+((r20*x423))+((x424*x427))+(((-1.0)*sj1*x425*x426))+(((-1.0)*x424*x428))+((sj1*x429))),IKFAST_ATAN2_MAGTHRESH);
if(!x430.valid){
continue;
}
CheckValue<IkReal> x431=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x431.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x430.value)+(((1.5707963267949)*(x431.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x432=IKsin(j3);
IkReal x433=IKcos(j3);
IkReal x434=(cj5*cj6);
IkReal x435=(cj0*sj6);
IkReal x436=(r01*sj0);
IkReal x437=((0.02626)*sj6);
IkReal x438=((1.0)*cj5);
IkReal x439=((0.0718)*cj4);
IkReal x440=(r02*sj0);
IkReal x441=((1.0)*sj5);
IkReal x442=((1.0)*sj6);
IkReal x443=((0.02626)*sj4);
IkReal x444=(r20*sj6);
IkReal x445=((1.0)*cj0);
IkReal x446=(cj0*r12);
IkReal x447=(cj6*r20);
IkReal x448=(sj1*x432);
IkReal x449=(cj1*x433);
IkReal x450=(cj0*cj6*r10);
IkReal x451=(sj1*x433);
IkReal x452=(cj6*r00*sj0);
IkReal x453=(cj1*x432);
IkReal x454=(r00*sj0*sj6);
IkReal x455=(sj4*x449);
IkReal x456=((1.0)*x453);
evalcond[0]=(((sj4*x448))+(((-1.0)*x455))+x447+(((-1.0)*r21*x442)));
evalcond[1]=((((-1.0)*x451))+((r21*x434))+((cj5*x444))+(((-1.0)*x456))+(((-1.0)*r22*x441)));
evalcond[2]=((((-1.0)*cj6*r21*x441))+((cj4*x449))+(((-1.0)*cj4*x448))+(((-1.0)*r22*x438))+(((-1.0)*x441*x444)));
evalcond[3]=((((-1.0)*sj4*x456))+(((-1.0)*cj6*r10*x445))+(((-1.0)*x436*x442))+x452+((r11*x435))+(((-1.0)*sj4*x451)));
evalcond[4]=(((cj5*x454))+((x434*x436))+(((-1.0)*x448))+(((-1.0)*r10*x435*x438))+x449+(((-1.0)*r11*x434*x445))+((sj5*x446))+(((-1.0)*x440*x441)));
evalcond[5]=(((r10*sj5*x435))+(((-1.0)*x438*x440))+((cj4*x451))+((cj4*x453))+((cj5*x446))+((cj0*cj6*r11*sj5))+(((-1.0)*cj6*x436*x441))+(((-1.0)*x441*x454)));
evalcond[6]=(((x439*x448))+(((-0.09746)*x449))+(((-0.0001)*sj1))+(((-1.0)*x439*x449))+(((0.09746)*x448))+(((-1.0)*x443*x449))+(((-0.2413)*cj1))+pz+(((-1.0)*r21*x437))+(((0.02626)*x447))+((x443*x448)));
evalcond[7]=((((-1.0)*x443*x453))+(((-1.0)*x443*x451))+(((-1.0)*x439*x451))+(((-1.0)*x439*x453))+(((-0.09746)*x453))+(((-0.09746)*x451))+(((0.02626)*x452))+(((-1.0)*x436*x437))+(((-0.02626)*x450))+(((-1.0)*py*x445))+(((0.0001)*cj1))+((px*sj0))+(((0.02626)*r11*x435))+(((-0.2413)*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x457=(cj1*cj6);
IkReal x458=((1.0)*cj1);
IkReal x459=(r21*sj6);
IkReal x460=(cj6*sj1);
IkReal x461=(cj5*r21*sj4);
IkReal x462=(r22*sj4*sj5);
IkReal x463=(cj5*r20*sj4*sj6);
CheckValue<IkReal> x464 = IKatan2WithCheck(IkReal(((((-1.0)*r20*x460))+((cj1*x463))+((sj1*x459))+(((-1.0)*x458*x462))+((x457*x461)))),(((r20*x457))+((sj1*x463))+((x460*x461))+(((-1.0)*x458*x459))+(((-1.0)*sj1*x462))),IKFAST_ATAN2_MAGTHRESH);
if(!x464.valid){
continue;
}
CheckValue<IkReal> x465=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x465.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x464.value)+(((1.5707963267949)*(x465.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x466=IKsin(j3);
IkReal x467=IKcos(j3);
IkReal x468=(cj5*cj6);
IkReal x469=(cj0*sj6);
IkReal x470=(r01*sj0);
IkReal x471=((0.02626)*sj6);
IkReal x472=((1.0)*cj5);
IkReal x473=((0.0718)*cj4);
IkReal x474=(r02*sj0);
IkReal x475=((1.0)*sj5);
IkReal x476=((1.0)*sj6);
IkReal x477=((0.02626)*sj4);
IkReal x478=(r20*sj6);
IkReal x479=((1.0)*cj0);
IkReal x480=(cj0*r12);
IkReal x481=(cj6*r20);
IkReal x482=(sj1*x466);
IkReal x483=(cj1*x467);
IkReal x484=(cj0*cj6*r10);
IkReal x485=(sj1*x467);
IkReal x486=(cj6*r00*sj0);
IkReal x487=(cj1*x466);
IkReal x488=(r00*sj0*sj6);
IkReal x489=(sj4*x483);
IkReal x490=((1.0)*x487);
evalcond[0]=((((-1.0)*r21*x476))+((sj4*x482))+(((-1.0)*x489))+x481);
evalcond[1]=(((cj5*x478))+(((-1.0)*x490))+(((-1.0)*x485))+(((-1.0)*r22*x475))+((r21*x468)));
evalcond[2]=((((-1.0)*cj4*x482))+(((-1.0)*x475*x478))+((cj4*x483))+(((-1.0)*r22*x472))+(((-1.0)*cj6*r21*x475)));
evalcond[3]=((((-1.0)*cj6*r10*x479))+x486+(((-1.0)*sj4*x490))+((r11*x469))+(((-1.0)*x470*x476))+(((-1.0)*sj4*x485)));
evalcond[4]=((((-1.0)*r11*x468*x479))+(((-1.0)*x482))+((cj5*x488))+x483+(((-1.0)*r10*x469*x472))+((sj5*x480))+(((-1.0)*x474*x475))+((x468*x470)));
evalcond[5]=((((-1.0)*x475*x488))+(((-1.0)*x472*x474))+((cj4*x487))+((cj4*x485))+((cj5*x480))+((cj0*cj6*r11*sj5))+(((-1.0)*cj6*x470*x475))+((r10*sj5*x469)));
evalcond[6]=((((0.09746)*x482))+(((-1.0)*r21*x471))+(((-0.0001)*sj1))+(((-0.2413)*cj1))+pz+(((-1.0)*x477*x483))+(((0.02626)*x481))+(((-0.09746)*x483))+((x473*x482))+(((-1.0)*x473*x483))+((x477*x482)));
evalcond[7]=((((0.02626)*r11*x469))+(((-1.0)*py*x479))+(((-1.0)*x477*x485))+(((-1.0)*x477*x487))+(((0.0001)*cj1))+((px*sj0))+(((-0.02626)*x484))+(((-1.0)*x470*x471))+(((-0.2413)*sj1))+(((0.02626)*x486))+(((-0.09746)*x487))+(((-0.09746)*x485))+(((-1.0)*x473*x487))+(((-1.0)*x473*x485)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x491=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj0*cj6*r01*x491))+((r12*sj0*sj5))+(((-1.0)*cj6*r11*sj0*x491))+(((-1.0)*r10*sj0*sj6*x491))+(((-1.0)*cj0*r00*sj6*x491))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x492=((1.0)*cj6);
if( IKabs(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x492))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x492)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x492))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x492))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))), (((r11*sj0*sj6))+(((-1.0)*r10*sj0*x492))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x492))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x493=IKsin(j4);
IkReal x494=IKcos(j4);
IkReal x495=((0.02626)*cj0);
IkReal x496=(r01*sj6);
IkReal x497=(r11*sj0);
IkReal x498=(cj6*sj5);
IkReal x499=((1.0)*cj0);
IkReal x500=(sj5*sj6);
IkReal x501=(cj6*r00);
IkReal x502=(cj6*r10*sj0);
evalcond[0]=((((-1.0)*x499*x501))+((cj0*x496))+(((-1.0)*x494))+(((-1.0)*x502))+((sj6*x497)));
evalcond[1]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x497*x498))+((cj0*r00*x500))+(((-1.0)*x493))+((r10*sj0*x500))+((cj0*r01*x498)));
evalcond[2]=((-0.0019)+(((-0.02626)*x494))+((x495*x496))+(((-0.02626)*x502))+(((0.02626)*sj6*x497))+(((-1.0)*x495*x501))+(((-1.0)*px*x499))+(((-1.0)*py*sj0))+(((0.0718)*x493)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x503=(cj6*r21);
IkReal x504=(r20*sj6);
IkReal x505=(sj1*sj4);
IkReal x506=(r22*sj5);
IkReal x507=(r21*sj6);
IkReal x508=((1.0)*cj6*r20);
IkReal x509=((1.0)*cj1*cj5*sj4);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*sj1*x508))+((sj1*x507))+((cj1*sj4*x506))+(((-1.0)*x503*x509))+(((-1.0)*x504*x509)))))+(IKabs((((cj1*x507))+((cj5*x503*x505))+(((-1.0)*cj1*x508))+(((-1.0)*x505*x506))+((cj5*x504*x505))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=cj4;
j3eval[1]=IKsign(cj4);
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x510=(r11*sj0);
IkReal x511=(cj6*sj5);
IkReal x512=(r10*sj0);
IkReal x513=(sj5*sj6);
IkReal x514=((1.0)*cj5);
IkReal x515=(cj5*r12);
IkReal x516=(cj0*sj6);
IkReal x517=(cj0*r02);
IkReal x518=((1.0)*sj0);
IkReal x519=((1.0)*cj6);
IkReal x520=(cj0*r00);
IkReal x521=((0.02626)*cj6);
IkReal x522=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=(((r01*x516))+(((-1.0)*x512*x519))+((sj6*x510))+(((-1.0)*x519*x520)));
evalcond[2]=((((-1.0)*r22*x514))+(((-1.0)*r20*x513))+(((-1.0)*r21*x511)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r00*x514*x516))+(((-1.0)*sj6*x512*x514))+((sj5*x517))+(((-1.0)*cj6*x514*x522))+(((-1.0)*cj6*x510*x514)));
evalcond[4]=((-1.0)+((cj5*x517))+((x510*x511))+((x512*x513))+((x513*x520))+((x511*x522))+((sj0*x515)));
evalcond[5]=((((-1.0)*r01*x511*x518))+((cj0*r11*x511))+((cj0*x515))+(((-1.0)*r00*x513*x518))+((cj0*r10*x513))+(((-1.0)*r02*sj0*x514)));
evalcond[6]=((0.0699)+(((-1.0)*x520*x521))+(((0.02626)*r01*x516))+(((0.02626)*sj6*x510))+(((-1.0)*x512*x521))+(((-1.0)*py*x518))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x523=(r20*sj6);
IkReal x524=(cj6*r21);
IkReal x525=(cj5*sj1);
IkReal x526=(r21*sj6);
IkReal x527=(r22*sj5);
IkReal x528=((1.0)*cj1*cj5);
IkReal x529=((1.0)*cj6*r20);
if( IKabs(((((-1.0)*x524*x528))+(((-1.0)*sj1*x529))+((sj1*x526))+(((-1.0)*x523*x528))+((cj1*x527)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x529))+(((-1.0)*sj1*x527))+((cj1*x526))+((x524*x525))+((x523*x525)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x524*x528))+(((-1.0)*sj1*x529))+((sj1*x526))+(((-1.0)*x523*x528))+((cj1*x527))))+IKsqr(((((-1.0)*cj1*x529))+(((-1.0)*sj1*x527))+((cj1*x526))+((x524*x525))+((x523*x525))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*x524*x528))+(((-1.0)*sj1*x529))+((sj1*x526))+(((-1.0)*x523*x528))+((cj1*x527))), ((((-1.0)*cj1*x529))+(((-1.0)*sj1*x527))+((cj1*x526))+((x524*x525))+((x523*x525))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x530=IKsin(j3);
IkReal x531=IKcos(j3);
IkReal x532=(cj5*cj6);
IkReal x533=(r01*sj0);
IkReal x534=(cj0*r10);
IkReal x535=((1.0)*sj6);
IkReal x536=((0.12372)*sj1);
IkReal x537=((0.02626)*sj6);
IkReal x538=((0.02626)*cj6);
IkReal x539=((1.0)*sj5);
IkReal x540=(cj5*sj6);
IkReal x541=(cj0*r11);
IkReal x542=(r00*sj0);
IkReal x543=(cj1*x531);
IkReal x544=(sj1*x530);
IkReal x545=(cj1*x530);
IkReal x546=(sj1*x531);
IkReal x547=(x544+x543);
evalcond[0]=((((-1.0)*r21*x535))+x547+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x539))+(((-1.0)*x546))+((r20*x540))+x545+((r21*x532)));
evalcond[2]=(((r20*x538))+(((-0.0001)*sj1))+(((-1.0)*r21*x537))+(((-0.0097)*cj1))+pz+(((0.12372)*x543))+((x530*x536)));
evalcond[3]=((((-1.0)*x545))+(((-1.0)*x533*x535))+(((-1.0)*cj6*x534))+x546+((sj6*x541))+((cj6*x542)));
evalcond[4]=((((-1.0)*x532*x541))+((x540*x542))+(((-1.0)*cj5*x534*x535))+(((-1.0)*r02*sj0*x539))+((cj0*r12*sj5))+x547+((x532*x533)));
evalcond[5]=((((-1.0)*x534*x538))+(((-1.0)*x533*x537))+((x531*x536))+(((-0.0097)*sj1))+(((-0.12372)*x545))+((x537*x541))+(((0.0001)*cj1))+((px*sj0))+((x538*x542))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x548=(r11*sj0);
IkReal x549=(cj6*sj5);
IkReal x550=(r10*sj0);
IkReal x551=(sj5*sj6);
IkReal x552=((1.0)*cj5);
IkReal x553=(cj5*r12);
IkReal x554=(cj0*sj6);
IkReal x555=(cj0*r02);
IkReal x556=((1.0)*sj0);
IkReal x557=((1.0)*cj6);
IkReal x558=(cj0*r00);
IkReal x559=((0.02626)*cj6);
IkReal x560=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*x550*x557))+((sj6*x548))+((r01*x554))+(((-1.0)*x557*x558)));
evalcond[2]=((((-1.0)*r22*x552))+(((-1.0)*r20*x551))+(((-1.0)*r21*x549)));
evalcond[3]=((((-1.0)*sj6*x550*x552))+(((-1.0)*r00*x552*x554))+((sj5*x555))+((r12*sj0*sj5))+(((-1.0)*cj6*x548*x552))+(((-1.0)*cj6*x552*x560)));
evalcond[4]=((1.0)+((x549*x560))+((cj5*x555))+((x550*x551))+((x551*x558))+((x548*x549))+((sj0*x553)));
evalcond[5]=(((cj0*x553))+((cj0*r11*x549))+(((-1.0)*r01*x549*x556))+(((-1.0)*r00*x551*x556))+(((-1.0)*r02*sj0*x552))+((cj0*r10*x551)));
evalcond[6]=((-0.0737)+(((-1.0)*x550*x559))+(((0.02626)*sj6*x548))+(((-1.0)*x558*x559))+(((-1.0)*py*x556))+(((-1.0)*cj0*px))+(((0.02626)*r01*x554)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x561=(r20*sj6);
IkReal x562=(cj6*r21);
IkReal x563=(cj6*r20);
IkReal x564=(cj5*sj1);
IkReal x565=(r22*sj5);
IkReal x566=((1.0)*cj1*cj5);
IkReal x567=((1.0)*r21*sj6);
if( IKabs((((cj1*x565))+(((-1.0)*x562*x566))+((sj1*x563))+(((-1.0)*sj1*x567))+(((-1.0)*x561*x566)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x563))+(((-1.0)*sj1*x565))+((x562*x564))+((x561*x564))+(((-1.0)*cj1*x567)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x565))+(((-1.0)*x562*x566))+((sj1*x563))+(((-1.0)*sj1*x567))+(((-1.0)*x561*x566))))+IKsqr((((cj1*x563))+(((-1.0)*sj1*x565))+((x562*x564))+((x561*x564))+(((-1.0)*cj1*x567))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj1*x565))+(((-1.0)*x562*x566))+((sj1*x563))+(((-1.0)*sj1*x567))+(((-1.0)*x561*x566))), (((cj1*x563))+(((-1.0)*sj1*x565))+((x562*x564))+((x561*x564))+(((-1.0)*cj1*x567))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x568=IKsin(j3);
IkReal x569=IKcos(j3);
IkReal x570=(cj5*cj6);
IkReal x571=(r01*sj0);
IkReal x572=((0.0712)*sj1);
IkReal x573=((1.0)*sj6);
IkReal x574=(cj0*r10);
IkReal x575=((0.02626)*sj6);
IkReal x576=((0.02626)*cj6);
IkReal x577=((1.0)*sj5);
IkReal x578=(cj5*sj6);
IkReal x579=(cj0*r11);
IkReal x580=(r00*sj0);
IkReal x581=(cj1*x568);
IkReal x582=(cj1*x569);
IkReal x583=(sj1*x568);
IkReal x584=((1.0)*sj1*x569);
evalcond[0]=((((-1.0)*x582))+(((-1.0)*x583))+((cj6*r20))+(((-1.0)*r21*x573)));
evalcond[1]=(((r20*x578))+x581+((r21*x570))+(((-1.0)*r22*x577))+(((-1.0)*x584)));
evalcond[2]=((((0.0712)*x582))+(((-0.0001)*sj1))+((r20*x576))+(((-0.0097)*cj1))+pz+(((-1.0)*r21*x575))+((x568*x572)));
evalcond[3]=(((cj6*x580))+(((-1.0)*x571*x573))+((sj6*x579))+(((-1.0)*cj6*x574))+x581+(((-1.0)*x584)));
evalcond[4]=((((-1.0)*cj5*x573*x574))+((x578*x580))+(((-1.0)*r02*sj0*x577))+((cj0*r12*sj5))+x582+x583+(((-1.0)*x570*x579))+((x570*x571)));
evalcond[5]=((((-1.0)*x571*x575))+((x575*x579))+(((-0.0097)*sj1))+(((-1.0)*x574*x576))+((x569*x572))+(((0.0001)*cj1))+((px*sj0))+((x576*x580))+(((-0.0712)*x581))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x585=(cj6*sj0);
IkReal x586=(sj0*sj6);
IkReal x587=((1.0)*cj5);
IkReal x588=(cj0*sj6);
IkReal x589=(cj0*r02);
IkReal x590=((1.0)*r10);
IkReal x591=(r12*sj0);
IkReal x592=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((-1.0)+((r11*x586))+(((-1.0)*x585*x590))+(((-1.0)*r00*x592))+((r01*x588)));
evalcond[3]=(((r11*x588))+(((-1.0)*x590*x592))+((r00*x585))+(((-1.0)*r01*x586)));
evalcond[4]=((((-1.0)*r00*x587*x588))+(((-1.0)*r10*x586*x587))+(((-1.0)*r11*x585*x587))+((sj5*x589))+(((-1.0)*r01*x587*x592))+((sj5*x591)));
evalcond[5]=(((r01*sj5*x592))+((r00*sj5*x588))+((r10*sj5*x586))+((cj5*x589))+((r11*sj5*x585))+((cj5*x591)));
evalcond[6]=((-0.02816)+(((0.02626)*r11*x586))+(((-0.02626)*r00*x592))+(((0.02626)*r01*x588))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x585))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x593=cj1*cj1;
IkReal x594=((5.90807042419946)*pz);
IkReal x595=(r20*sj6);
IkReal x596=(cj6*r21);
IkReal x597=(cj1*sj1);
IkReal x598=(cj5*sj1);
IkReal x599=(r22*sj5);
IkReal x600=((1.0)*cj1*cj5);
if( IKabs(((0.000590807042419946)+(((-1.0)*x596*x600))+((cj1*x599))+(((-1.0)*sj1*x594))+(((0.0573082831147347)*x597))+(((-0.000590807042419946)*x593))+(((-1.0)*x595*x600)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x595*x598))+(((0.000590807042419946)*x597))+(((-1.0)*cj1*x594))+(((-1.0)*sj1*x599))+(((0.0573082831147347)*x593))+((x596*x598)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((-1.0)*x596*x600))+((cj1*x599))+(((-1.0)*sj1*x594))+(((0.0573082831147347)*x597))+(((-0.000590807042419946)*x593))+(((-1.0)*x595*x600))))+IKsqr((((x595*x598))+(((0.000590807042419946)*x597))+(((-1.0)*cj1*x594))+(((-1.0)*sj1*x599))+(((0.0573082831147347)*x593))+((x596*x598))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((-1.0)*x596*x600))+((cj1*x599))+(((-1.0)*sj1*x594))+(((0.0573082831147347)*x597))+(((-0.000590807042419946)*x593))+(((-1.0)*x595*x600))), (((x595*x598))+(((0.000590807042419946)*x597))+(((-1.0)*cj1*x594))+(((-1.0)*sj1*x599))+(((0.0573082831147347)*x593))+((x596*x598))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x601=IKsin(j3);
IkReal x602=IKcos(j3);
IkReal x603=(cj5*cj6);
IkReal x604=(r01*sj0);
IkReal x605=(cj0*r10);
IkReal x606=((1.0)*cj5);
IkReal x607=((0.02626)*sj6);
IkReal x608=((0.02626)*cj6);
IkReal x609=(r02*sj0);
IkReal x610=((1.0)*sj5);
IkReal x611=(cj0*r11);
IkReal x612=(r20*sj6);
IkReal x613=(cj0*r12);
IkReal x614=(r00*sj0);
IkReal x615=(cj1*x601);
IkReal x616=(cj1*x602);
IkReal x617=(sj1*x601);
IkReal x618=(sj1*x602);
IkReal x619=((1.0)*x618);
evalcond[0]=((((-0.0001)*sj1))+(((-0.0097)*cj1))+(((0.16926)*x616))+(((0.16926)*x617))+pz);
evalcond[1]=((((-1.0)*r22*x610))+((r21*x603))+(((-1.0)*x619))+x615+((cj5*x612)));
evalcond[2]=((((-1.0)*x610*x612))+(((-1.0)*r22*x606))+(((-1.0)*x616))+(((-1.0)*x617))+(((-1.0)*cj6*r21*x610)));
evalcond[3]=((((-1.0)*x603*x611))+(((-1.0)*x609*x610))+(((-1.0)*sj6*x605*x606))+((cj5*sj6*x614))+((x603*x604))+x616+x617+((sj5*x613)));
evalcond[4]=((((-1.0)*sj6*x610*x614))+(((-1.0)*cj6*x604*x610))+((cj6*sj5*x611))+((sj5*sj6*x605))+(((-1.0)*x619))+x615+(((-1.0)*x606*x609))+((cj5*x613)));
evalcond[5]=(((x608*x614))+(((-1.0)*x604*x607))+(((-1.0)*x605*x608))+(((-0.0097)*sj1))+(((-0.16926)*x615))+(((0.16926)*x618))+((x607*x611))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x620=(cj6*sj0);
IkReal x621=(sj0*sj6);
IkReal x622=((1.0)*cj5);
IkReal x623=(cj0*sj6);
IkReal x624=(cj0*r02);
IkReal x625=((1.0)*r10);
IkReal x626=(r12*sj0);
IkReal x627=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((1.0)+(((-1.0)*x620*x625))+(((-1.0)*r00*x627))+((r01*x623))+((r11*x621)));
evalcond[3]=(((r00*x620))+(((-1.0)*x625*x627))+(((-1.0)*r01*x621))+((r11*x623)));
evalcond[4]=(((sj5*x624))+((sj5*x626))+(((-1.0)*r11*x620*x622))+(((-1.0)*r00*x622*x623))+(((-1.0)*r01*x622*x627))+(((-1.0)*r10*x621*x622)));
evalcond[5]=(((r10*sj5*x621))+((cj5*x624))+((cj5*x626))+((r01*sj5*x627))+((r11*sj5*x620))+((r00*sj5*x623)));
evalcond[6]=((0.02436)+(((-0.02626)*r10*x620))+(((0.02626)*r01*x623))+(((-1.0)*py*sj0))+(((-0.02626)*r00*x627))+(((0.02626)*r11*x621))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x628=cj1*cj1;
IkReal x629=(r20*sj6);
IkReal x630=(cj6*r21);
IkReal x631=((38.9711613406079)*pz);
IkReal x632=(cj5*sj1);
IkReal x633=(cj1*sj1);
IkReal x634=(r22*sj5);
IkReal x635=((1.0)*cj1*cj5);
if( IKabs(((0.00389711613406079)+(((-1.0)*x629*x635))+(((-1.0)*x630*x635))+(((-1.0)*sj1*x631))+(((0.378020265003897)*x633))+(((-0.00389711613406079)*x628))+((cj1*x634)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x631))+(((-1.0)*sj1*x634))+((x629*x632))+((x630*x632))+(((0.378020265003897)*x628))+(((0.00389711613406079)*x633)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((-1.0)*x629*x635))+(((-1.0)*x630*x635))+(((-1.0)*sj1*x631))+(((0.378020265003897)*x633))+(((-0.00389711613406079)*x628))+((cj1*x634))))+IKsqr(((((-1.0)*cj1*x631))+(((-1.0)*sj1*x634))+((x629*x632))+((x630*x632))+(((0.378020265003897)*x628))+(((0.00389711613406079)*x633))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((-1.0)*x629*x635))+(((-1.0)*x630*x635))+(((-1.0)*sj1*x631))+(((0.378020265003897)*x633))+(((-0.00389711613406079)*x628))+((cj1*x634))), ((((-1.0)*cj1*x631))+(((-1.0)*sj1*x634))+((x629*x632))+((x630*x632))+(((0.378020265003897)*x628))+(((0.00389711613406079)*x633))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x636=IKsin(j3);
IkReal x637=IKcos(j3);
IkReal x638=(cj5*cj6);
IkReal x639=(r01*sj0);
IkReal x640=((0.02626)*sj6);
IkReal x641=(cj0*r10);
IkReal x642=((1.0)*cj5);
IkReal x643=((0.02626)*cj6);
IkReal x644=(r02*sj0);
IkReal x645=((1.0)*sj5);
IkReal x646=(cj0*r11);
IkReal x647=(r20*sj6);
IkReal x648=(cj0*r12);
IkReal x649=(r00*sj0);
IkReal x650=(cj1*x637);
IkReal x651=(sj1*x636);
IkReal x652=(cj1*x636);
IkReal x653=(sj1*x637);
IkReal x654=(x650+x651);
evalcond[0]=((((-0.0001)*sj1))+(((-0.0097)*cj1))+(((0.02566)*x651))+(((0.02566)*x650))+pz);
evalcond[1]=(((r21*x638))+((cj5*x647))+(((-1.0)*x653))+(((-1.0)*r22*x645))+x652);
evalcond[2]=((((-1.0)*cj6*r21*x645))+(((-1.0)*r22*x642))+x654+(((-1.0)*x645*x647)));
evalcond[3]=((((-1.0)*sj6*x641*x642))+((x638*x639))+((sj5*x648))+(((-1.0)*x644*x645))+x654+(((-1.0)*x638*x646))+((cj5*sj6*x649)));
evalcond[4]=((((-1.0)*x642*x644))+((cj5*x648))+((sj5*sj6*x641))+(((-1.0)*x652))+((cj6*sj5*x646))+(((-1.0)*cj6*x639*x645))+x653+(((-1.0)*sj6*x645*x649)));
evalcond[5]=((((-0.02566)*x652))+((x643*x649))+(((-1.0)*x641*x643))+(((-1.0)*x639*x640))+(((-0.0097)*sj1))+((x640*x646))+(((0.02566)*x653))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x655=(cj6*r21);
IkReal x656=(cj4*r22);
IkReal x657=(r20*sj6);
IkReal x658=(cj5*sj1);
IkReal x659=((1.0)*r22);
IkReal x660=(cj1*cj5);
IkReal x661=((1.0)*cj4);
IkReal x662=((1.0)*sj1*sj5);
IkReal x663=((1.0)*cj1*sj5);
CheckValue<IkReal> x664 = IKatan2WithCheck(IkReal(((((-1.0)*x657*x660*x661))+((cj1*sj5*x656))+(((-1.0)*x655*x660*x661))+(((-1.0)*x657*x662))+(((-1.0)*x655*x662))+(((-1.0)*x658*x659)))),((((-1.0)*x659*x660))+(((-1.0)*x657*x663))+(((-1.0)*x656*x662))+(((-1.0)*x655*x663))+((cj4*x655*x658))+((cj4*x657*x658))),IKFAST_ATAN2_MAGTHRESH);
if(!x664.valid){
continue;
}
CheckValue<IkReal> x665=IKPowWithIntegerCheck(IKsign(cj4),-1);
if(!x665.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x664.value)+(((1.5707963267949)*(x665.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x666=IKsin(j3);
IkReal x667=IKcos(j3);
IkReal x668=(cj5*cj6);
IkReal x669=(r01*sj0);
IkReal x670=((0.02626)*sj6);
IkReal x671=(cj0*sj6);
IkReal x672=((1.0)*cj5);
IkReal x673=((0.02626)*cj6);
IkReal x674=(cj0*r10);
IkReal x675=((0.0718)*cj4);
IkReal x676=(r02*sj0);
IkReal x677=((1.0)*sj5);
IkReal x678=((0.02626)*sj4);
IkReal x679=((1.0)*sj6);
IkReal x680=(r20*sj6);
IkReal x681=(r00*sj0);
IkReal x682=((1.0)*cj0);
IkReal x683=(cj0*r12);
IkReal x684=(cj0*r11);
IkReal x685=((1.0)*cj4*sj1);
IkReal x686=(cj1*x666);
IkReal x687=(cj1*x667);
IkReal x688=(sj1*x666);
IkReal x689=(sj1*x667);
evalcond[0]=((((-1.0)*r21*x679))+((cj6*r20))+((sj4*x688))+((sj4*x687)));
evalcond[1]=((((-1.0)*r22*x677))+((cj5*x680))+((r21*x668))+x686+(((-1.0)*x689)));
evalcond[2]=((((-1.0)*r22*x672))+(((-1.0)*x666*x685))+(((-1.0)*cj6*r21*x677))+(((-1.0)*x677*x680))+(((-1.0)*cj4*x687)));
evalcond[3]=((((-1.0)*cj6*x674))+((cj6*x681))+(((-1.0)*sj4*x686))+((r11*x671))+(((-1.0)*x669*x679))+((sj4*x689)));
evalcond[4]=(((cj5*sj6*x681))+((x668*x669))+(((-1.0)*r11*x668*x682))+((sj5*x683))+(((-1.0)*x676*x677))+x688+x687+(((-1.0)*r10*x671*x672)));
evalcond[5]=((((-1.0)*x667*x685))+((cj4*x686))+((cj5*x683))+((r10*sj5*x671))+(((-1.0)*x672*x676))+(((-1.0)*sj6*x677*x681))+(((-1.0)*cj6*x669*x677))+((cj6*sj5*x684)));
evalcond[6]=(((x678*x688))+((x678*x687))+(((-1.0)*r21*x670))+(((-0.0001)*sj1))+((r20*x673))+(((-0.0097)*cj1))+pz+((x675*x687))+((x675*x688))+(((0.09746)*x687))+(((0.09746)*x688)));
evalcond[7]=(((x678*x689))+(((-0.09746)*x686))+(((-1.0)*x675*x686))+(((-0.0097)*sj1))+(((-1.0)*x678*x686))+((x673*x681))+(((-1.0)*x669*x670))+(((0.0001)*cj1))+((px*sj0))+((x670*x684))+((x675*x689))+(((-1.0)*py*x682))+(((-1.0)*x673*x674))+(((0.09746)*x689)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x690=((1.0)*cj0);
IkReal x691=(cj1*cj6);
IkReal x692=(sj1*sj6);
IkReal x693=(r01*sj0);
IkReal x694=(r00*sj0);
IkReal x695=(cj6*sj1);
IkReal x696=((1.0)*r20);
IkReal x697=(cj1*sj6);
CheckValue<IkReal> x698=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x698.valid){
continue;
}
CheckValue<IkReal> x699 = IKatan2WithCheck(IkReal(((((-1.0)*x693*x697))+((cj0*r11*x697))+(((-1.0)*r10*x690*x691))+((x691*x694))+(((-1.0)*x695*x696))+((r21*x692)))),((((-1.0)*x694*x695))+((x692*x693))+(((-1.0)*r11*x690*x692))+(((-1.0)*x691*x696))+((r21*x697))+((cj0*r10*x695))),IKFAST_ATAN2_MAGTHRESH);
if(!x699.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x698.value)))+(x699.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x700=IKsin(j3);
IkReal x701=IKcos(j3);
IkReal x702=(cj5*cj6);
IkReal x703=(r01*sj0);
IkReal x704=((0.02626)*sj6);
IkReal x705=(cj0*sj6);
IkReal x706=((1.0)*cj5);
IkReal x707=((0.02626)*cj6);
IkReal x708=(cj0*r10);
IkReal x709=((0.0718)*cj4);
IkReal x710=(r02*sj0);
IkReal x711=((1.0)*sj5);
IkReal x712=((0.02626)*sj4);
IkReal x713=((1.0)*sj6);
IkReal x714=(r20*sj6);
IkReal x715=(r00*sj0);
IkReal x716=((1.0)*cj0);
IkReal x717=(cj0*r12);
IkReal x718=(cj0*r11);
IkReal x719=((1.0)*cj4*sj1);
IkReal x720=(cj1*x700);
IkReal x721=(cj1*x701);
IkReal x722=(sj1*x700);
IkReal x723=(sj1*x701);
evalcond[0]=((((-1.0)*r21*x713))+((cj6*r20))+((sj4*x722))+((sj4*x721)));
evalcond[1]=((((-1.0)*r22*x711))+((cj5*x714))+(((-1.0)*x723))+((r21*x702))+x720);
evalcond[2]=((((-1.0)*x711*x714))+(((-1.0)*cj6*r21*x711))+(((-1.0)*cj4*x721))+(((-1.0)*x700*x719))+(((-1.0)*r22*x706)));
evalcond[3]=((((-1.0)*x703*x713))+(((-1.0)*cj6*x708))+(((-1.0)*sj4*x720))+((cj6*x715))+((sj4*x723))+((r11*x705)));
evalcond[4]=((((-1.0)*r11*x702*x716))+((x702*x703))+(((-1.0)*x710*x711))+((sj5*x717))+(((-1.0)*r10*x705*x706))+x721+x722+((cj5*sj6*x715)));
evalcond[5]=(((cj4*x720))+(((-1.0)*sj6*x711*x715))+(((-1.0)*x706*x710))+((r10*sj5*x705))+((cj5*x717))+((cj6*sj5*x718))+(((-1.0)*cj6*x703*x711))+(((-1.0)*x701*x719)));
evalcond[6]=(((x712*x721))+((x712*x722))+(((-0.0001)*sj1))+((x709*x721))+((x709*x722))+((r20*x707))+(((-0.0097)*cj1))+(((-1.0)*r21*x704))+pz+(((0.09746)*x721))+(((0.09746)*x722)));
evalcond[7]=(((x712*x723))+(((-1.0)*x707*x708))+(((-1.0)*x709*x720))+((x707*x715))+((x709*x723))+(((-1.0)*x703*x704))+(((-0.0097)*sj1))+(((-0.09746)*x720))+(((0.0001)*cj1))+((px*sj0))+((x704*x718))+(((0.09746)*x723))+(((-1.0)*x712*x720))+(((-1.0)*py*x716)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x724=(cj6*r21);
IkReal x725=(r20*sj6);
IkReal x726=(sj1*sj4);
IkReal x727=(r22*sj5);
IkReal x728=(r21*sj6);
IkReal x729=((1.0)*cj6*r20);
IkReal x730=((1.0)*cj1*cj5*sj4);
CheckValue<IkReal> x731=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x731.valid){
continue;
}
CheckValue<IkReal> x732 = IKatan2WithCheck(IkReal((((cj1*sj4*x727))+(((-1.0)*x724*x730))+(((-1.0)*x725*x730))+(((-1.0)*sj1*x729))+((sj1*x728)))),(((cj1*x728))+((cj5*x725*x726))+(((-1.0)*cj1*x729))+((cj5*x724*x726))+(((-1.0)*x726*x727))),IKFAST_ATAN2_MAGTHRESH);
if(!x732.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x731.value)))+(x732.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x733=IKsin(j3);
IkReal x734=IKcos(j3);
IkReal x735=(cj5*cj6);
IkReal x736=(r01*sj0);
IkReal x737=((0.02626)*sj6);
IkReal x738=(cj0*sj6);
IkReal x739=((1.0)*cj5);
IkReal x740=((0.02626)*cj6);
IkReal x741=(cj0*r10);
IkReal x742=((0.0718)*cj4);
IkReal x743=(r02*sj0);
IkReal x744=((1.0)*sj5);
IkReal x745=((0.02626)*sj4);
IkReal x746=((1.0)*sj6);
IkReal x747=(r20*sj6);
IkReal x748=(r00*sj0);
IkReal x749=((1.0)*cj0);
IkReal x750=(cj0*r12);
IkReal x751=(cj0*r11);
IkReal x752=((1.0)*cj4*sj1);
IkReal x753=(cj1*x733);
IkReal x754=(cj1*x734);
IkReal x755=(sj1*x733);
IkReal x756=(sj1*x734);
evalcond[0]=((((-1.0)*r21*x746))+((sj4*x754))+((sj4*x755))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x744))+(((-1.0)*x756))+x753+((cj5*x747))+((r21*x735)));
evalcond[2]=((((-1.0)*x744*x747))+(((-1.0)*x733*x752))+(((-1.0)*cj4*x754))+(((-1.0)*r22*x739))+(((-1.0)*cj6*r21*x744)));
evalcond[3]=((((-1.0)*cj6*x741))+((sj4*x756))+((cj6*x748))+(((-1.0)*sj4*x753))+((r11*x738))+(((-1.0)*x736*x746)));
evalcond[4]=(((x735*x736))+(((-1.0)*r11*x735*x749))+(((-1.0)*r10*x738*x739))+((cj5*sj6*x748))+((sj5*x750))+x755+x754+(((-1.0)*x743*x744)));
evalcond[5]=(((cj6*sj5*x751))+((cj5*x750))+((r10*sj5*x738))+(((-1.0)*x734*x752))+(((-1.0)*x739*x743))+(((-1.0)*cj6*x736*x744))+((cj4*x753))+(((-1.0)*sj6*x744*x748)));
evalcond[6]=(((x745*x754))+((x745*x755))+(((-0.0001)*sj1))+(((-0.0097)*cj1))+pz+((r20*x740))+(((-1.0)*r21*x737))+((x742*x754))+((x742*x755))+(((0.09746)*x755))+(((0.09746)*x754)));
evalcond[7]=(((x745*x756))+(((-1.0)*x742*x753))+(((-1.0)*x745*x753))+(((-1.0)*x736*x737))+(((-0.0097)*sj1))+((x737*x751))+((x740*x748))+(((-0.09746)*x753))+(((-1.0)*py*x749))+(((-1.0)*x740*x741))+(((0.0001)*cj1))+((px*sj0))+((x742*x756))+(((0.09746)*x756)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j1)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
j3eval[0]=cj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
j3eval[0]=sj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
bool bgotonextstatement = true;
do
{
IkReal x757=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj0*cj6*r01*x757))+(((-1.0)*cj6*r11*sj0*x757))+((r12*sj0*sj5))+(((-1.0)*r10*sj0*sj6*x757))+(((-1.0)*cj0*r00*sj6*x757))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x758=((1.0)*sj6);
if( IKabs(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x758))+(((-1.0)*cj0*r01*x758))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x758))+(((-1.0)*cj0*r01*x758))+((cj0*cj6*r00))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))), (((cj6*r10*sj0))+(((-1.0)*r11*sj0*x758))+(((-1.0)*cj0*r01*x758))+((cj0*cj6*r00))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x759=IKcos(j4);
IkReal x760=IKsin(j4);
IkReal x761=((0.02626)*cj0);
IkReal x762=(r01*sj6);
IkReal x763=(r11*sj0);
IkReal x764=(cj6*sj5);
IkReal x765=((1.0)*cj0);
IkReal x766=(sj5*sj6);
IkReal x767=(cj6*r00);
IkReal x768=(cj6*r10*sj0);
evalcond[0]=((((-1.0)*x765*x767))+((sj6*x763))+(((-1.0)*x768))+((cj0*x762))+x759);
evalcond[1]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x763*x764))+((cj0*r01*x764))+((cj0*r00*x766))+x760+((r10*sj0*x766)));
evalcond[2]=((-0.0001)+(((0.02626)*sj6*x763))+(((0.02626)*x759))+(((-0.02626)*x768))+(((-1.0)*px*x765))+((x761*x762))+(((-1.0)*py*sj0))+(((-0.0718)*x760))+(((-1.0)*x761*x767)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x769=((1.0)*cj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x769)))))+(IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x769))+(((-1.0)*r01*sj0*sj6))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x770=(r11*sj0);
IkReal x771=(cj6*sj5);
IkReal x772=(r10*sj0);
IkReal x773=(sj5*sj6);
IkReal x774=((1.0)*cj5);
IkReal x775=(cj5*r12);
IkReal x776=(cj0*sj6);
IkReal x777=(cj0*r02);
IkReal x778=((1.0)*sj0);
IkReal x779=((1.0)*cj6);
IkReal x780=(cj0*r00);
IkReal x781=((0.02626)*cj6);
IkReal x782=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=(((sj6*x770))+((r01*x776))+(((-1.0)*x772*x779))+(((-1.0)*x779*x780)));
evalcond[2]=((((-1.0)*r20*x773))+(((-1.0)*r21*x771))+(((-1.0)*r22*x774)));
evalcond[3]=((((-1.0)*r00*x774*x776))+((r12*sj0*sj5))+(((-1.0)*cj6*x770*x774))+(((-1.0)*cj6*x774*x782))+(((-1.0)*sj6*x772*x774))+((sj5*x777)));
evalcond[4]=((1.0)+((x773*x780))+((x770*x771))+((x772*x773))+((sj0*x775))+((x771*x782))+((cj5*x777)));
evalcond[5]=((((-1.0)*r02*sj0*x774))+((cj0*r10*x773))+((cj0*x775))+(((-1.0)*r00*x773*x778))+(((-1.0)*r01*x771*x778))+((cj0*r11*x771)));
evalcond[6]=((-0.0719)+(((-1.0)*x772*x781))+(((-1.0)*py*x778))+(((0.02626)*r01*x776))+(((0.02626)*sj6*x770))+(((-1.0)*x780*x781))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x783=IKsin(j3);
IkReal x784=IKcos(j3);
IkReal x785=(cj5*cj6);
IkReal x786=(r01*sj0);
IkReal x787=(cj0*sj6);
IkReal x788=((1.0)*r10);
IkReal x789=((0.02626)*sj6);
IkReal x790=((0.02626)*cj6);
IkReal x791=((1.0)*sj5);
IkReal x792=((1.0)*sj6);
IkReal x793=(cj5*sj6);
IkReal x794=(r00*sj0);
IkReal x795=((1.0)*cj0);
IkReal x796=((1.0)*x784);
evalcond[0]=((((-1.0)*r21*x792))+((cj6*r20))+x783);
evalcond[1]=((-0.0001)+((r20*x790))+(((-1.0)*r21*x789))+pz+(((0.12372)*x783)));
evalcond[2]=(((r20*x793))+(((-1.0)*x796))+((r21*x785))+(((-1.0)*r22*x791)));
evalcond[3]=(((cj6*x794))+(((-1.0)*x796))+((r11*x787))+(((-1.0)*x786*x792))+(((-1.0)*cj0*cj6*x788)));
evalcond[4]=((-0.2413)+((x790*x794))+(((-1.0)*cj0*r10*x790))+(((0.02626)*r11*x787))+(((-1.0)*x786*x789))+((px*sj0))+(((-1.0)*py*x795))+(((-0.12372)*x784)));
evalcond[5]=(((x785*x786))+(((-1.0)*cj5*x787*x788))+((x793*x794))+(((-1.0)*r11*x785*x795))+(((-1.0)*r02*sj0*x791))+((cj0*r12*sj5))+(((-1.0)*x783)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x797=(r11*sj0);
IkReal x798=(cj6*sj5);
IkReal x799=(r10*sj0);
IkReal x800=(sj5*sj6);
IkReal x801=((1.0)*cj5);
IkReal x802=(cj5*r12);
IkReal x803=(cj0*sj6);
IkReal x804=(cj0*r02);
IkReal x805=((1.0)*sj0);
IkReal x806=((1.0)*cj6);
IkReal x807=(cj0*r00);
IkReal x808=((0.02626)*cj6);
IkReal x809=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=(((sj6*x797))+(((-1.0)*x799*x806))+(((-1.0)*x806*x807))+((r01*x803)));
evalcond[2]=((((-1.0)*r21*x798))+(((-1.0)*r22*x801))+(((-1.0)*r20*x800)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*cj6*x801*x809))+(((-1.0)*cj6*x797*x801))+(((-1.0)*sj6*x799*x801))+(((-1.0)*r00*x801*x803))+((sj5*x804)));
evalcond[4]=((-1.0)+((cj5*x804))+((x800*x807))+((x798*x809))+((x799*x800))+((sj0*x802))+((x797*x798)));
evalcond[5]=((((-1.0)*r01*x798*x805))+((cj0*r11*x798))+(((-1.0)*r02*sj0*x801))+((cj0*r10*x800))+(((-1.0)*r00*x800*x805))+((cj0*x802)));
evalcond[6]=((0.0717)+(((0.02626)*sj6*x797))+(((-1.0)*x807*x808))+(((-1.0)*x799*x808))+(((0.02626)*r01*x803))+(((-1.0)*py*x805))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x810=IKsin(j3);
IkReal x811=IKcos(j3);
IkReal x812=(cj5*cj6);
IkReal x813=(r01*sj0);
IkReal x814=(cj0*sj6);
IkReal x815=((1.0)*r10);
IkReal x816=((0.02626)*sj6);
IkReal x817=((0.02626)*cj6);
IkReal x818=((1.0)*sj5);
IkReal x819=((1.0)*sj6);
IkReal x820=(cj5*sj6);
IkReal x821=(r00*sj0);
IkReal x822=((1.0)*cj0);
IkReal x823=((1.0)*x810);
evalcond[0]=((((-1.0)*x823))+((cj6*r20))+(((-1.0)*r21*x819)));
evalcond[1]=((-0.0001)+((r20*x817))+(((0.0712)*x810))+pz+(((-1.0)*r21*x816)));
evalcond[2]=(((r20*x820))+(((-1.0)*x811))+(((-1.0)*r22*x818))+((r21*x812)));
evalcond[3]=(((cj6*x821))+((r11*x814))+(((-1.0)*cj0*cj6*x815))+(((-1.0)*x813*x819))+x811);
evalcond[4]=((-0.2413)+(((0.02626)*r11*x814))+(((-1.0)*py*x822))+((x817*x821))+(((-1.0)*cj0*r10*x817))+(((-1.0)*x813*x816))+((px*sj0))+(((-0.0712)*x811)));
evalcond[5]=(((x820*x821))+(((-1.0)*r11*x812*x822))+((x812*x813))+(((-1.0)*x823))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*x818))+(((-1.0)*cj5*x814*x815)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x824=(cj6*sj0);
IkReal x825=(sj0*sj6);
IkReal x826=((1.0)*cj5);
IkReal x827=(cj0*sj6);
IkReal x828=(cj0*r02);
IkReal x829=((1.0)*r10);
IkReal x830=(r12*sj0);
IkReal x831=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((1.0)+(((-1.0)*r00*x831))+(((-1.0)*x824*x829))+((r01*x827))+((r11*x825)));
evalcond[3]=((((-1.0)*r01*x825))+((r00*x824))+((r11*x827))+(((-1.0)*x829*x831)));
evalcond[4]=((((-1.0)*r10*x825*x826))+(((-1.0)*r11*x824*x826))+(((-1.0)*r01*x826*x831))+(((-1.0)*r00*x826*x827))+((sj5*x828))+((sj5*x830)));
evalcond[5]=(((r10*sj5*x825))+((cj5*x830))+((cj5*x828))+((r01*sj5*x831))+((r00*sj5*x827))+((r11*sj5*x824)));
evalcond[6]=((0.02616)+(((-0.02626)*r00*x831))+(((0.02626)*r01*x827))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x824))+(((0.02626)*r11*x825))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.000590807042419946)+(((-5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((-5.90807042419946)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((-5.90807042419946)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x832=IKsin(j3);
IkReal x833=IKcos(j3);
IkReal x834=(cj5*cj6);
IkReal x835=(r01*sj0);
IkReal x836=(cj0*cj5);
IkReal x837=(r10*sj6);
IkReal x838=((0.02626)*sj6);
IkReal x839=((0.02626)*cj6);
IkReal x840=((1.0)*cj5);
IkReal x841=(r02*sj0);
IkReal x842=((1.0)*sj5);
IkReal x843=(cj0*r11);
IkReal x844=(cj0*sj5);
IkReal x845=(r20*sj6);
IkReal x846=(r00*sj0);
IkReal x847=((1.0)*x832);
evalcond[0]=((-0.0001)+pz+(((0.16926)*x832)));
evalcond[1]=(((cj5*x845))+((r21*x834))+(((-1.0)*x833))+(((-1.0)*r22*x842)));
evalcond[2]=((((-1.0)*x842*x845))+(((-1.0)*cj6*r21*x842))+(((-1.0)*x847))+(((-1.0)*r22*x840)));
evalcond[3]=((-0.2413)+((x838*x843))+(((-0.16926)*x833))+(((-1.0)*x835*x838))+((x839*x846))+(((-1.0)*cj0*r10*x839))+((px*sj0))+(((-1.0)*cj0*py)));
evalcond[4]=(((cj6*sj5*x843))+(((-1.0)*sj6*x842*x846))+(((-1.0)*x840*x841))+((x837*x844))+(((-1.0)*cj6*x835*x842))+((r12*x836))+x833);
evalcond[5]=((((-1.0)*x841*x842))+(((-1.0)*x847))+((r12*x844))+((x834*x835))+((cj5*sj6*x846))+(((-1.0)*x836*x837))+(((-1.0)*x834*x843)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x848=(cj6*sj0);
IkReal x849=(sj0*sj6);
IkReal x850=((1.0)*cj5);
IkReal x851=(cj0*sj6);
IkReal x852=(cj0*r02);
IkReal x853=((1.0)*r10);
IkReal x854=(r12*sj0);
IkReal x855=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((-1.0)+(((-1.0)*r00*x855))+(((-1.0)*x848*x853))+((r11*x849))+((r01*x851)));
evalcond[3]=((((-1.0)*x853*x855))+((r11*x851))+((r00*x848))+(((-1.0)*r01*x849)));
evalcond[4]=(((sj5*x852))+((sj5*x854))+(((-1.0)*r01*x850*x855))+(((-1.0)*r11*x848*x850))+(((-1.0)*r00*x850*x851))+(((-1.0)*r10*x849*x850)));
evalcond[5]=(((r01*sj5*x855))+((r11*sj5*x848))+((r00*sj5*x851))+((cj5*x854))+((cj5*x852))+((r10*sj5*x849)));
evalcond[6]=((-0.02636)+(((-0.02626)*r00*x855))+(((-0.02626)*r10*x848))+(((0.02626)*r11*x849))+(((-1.0)*py*sj0))+(((0.02626)*r01*x851))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.00389711613406079)+(((-38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((-38.9711613406079)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((-38.9711613406079)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x856=IKsin(j3);
IkReal x857=IKcos(j3);
IkReal x858=(cj5*cj6);
IkReal x859=(r01*sj0);
IkReal x860=(cj0*cj5);
IkReal x861=(r10*sj6);
IkReal x862=((0.02626)*sj6);
IkReal x863=((0.02626)*cj6);
IkReal x864=((1.0)*cj5);
IkReal x865=(r02*sj0);
IkReal x866=((1.0)*sj5);
IkReal x867=(cj0*r11);
IkReal x868=(cj0*sj5);
IkReal x869=(r20*sj6);
IkReal x870=(r00*sj0);
IkReal x871=((1.0)*x857);
evalcond[0]=((-0.0001)+(((0.02566)*x856))+pz);
evalcond[1]=(((r21*x858))+((cj5*x869))+(((-1.0)*r22*x866))+(((-1.0)*x871)));
evalcond[2]=((((-1.0)*cj6*r21*x866))+(((-1.0)*x866*x869))+x856+(((-1.0)*r22*x864)));
evalcond[3]=((-0.2413)+((x863*x870))+(((-1.0)*cj0*r10*x863))+((x862*x867))+(((-0.02566)*x857))+((px*sj0))+(((-1.0)*x859*x862))+(((-1.0)*cj0*py)));
evalcond[4]=((((-1.0)*x865*x866))+((cj5*sj6*x870))+(((-1.0)*x856))+((r12*x868))+(((-1.0)*x858*x867))+((x858*x859))+(((-1.0)*x860*x861)));
evalcond[5]=((((-1.0)*sj6*x866*x870))+((r12*x860))+(((-1.0)*x864*x865))+((cj6*sj5*x867))+((x861*x868))+(((-1.0)*cj6*x859*x866))+(((-1.0)*x871)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x872=(cj6*r21);
IkReal x873=((1.0)*sj5);
IkReal x874=(r20*sj6);
CheckValue<IkReal> x875=IKPowWithIntegerCheck(cj4,-1);
if(!x875.valid){
continue;
}
if( IKabs(((x875.value)*(((((-1.0)*x872*x873))+(((-1.0)*x873*x874))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*x872))+((cj5*x874))+(((-1.0)*r22*x873)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x875.value)*(((((-1.0)*x872*x873))+(((-1.0)*x873*x874))+(((-1.0)*cj5*r22))))))+IKsqr((((cj5*x872))+((cj5*x874))+(((-1.0)*r22*x873))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x875.value)*(((((-1.0)*x872*x873))+(((-1.0)*x873*x874))+(((-1.0)*cj5*r22))))), (((cj5*x872))+((cj5*x874))+(((-1.0)*r22*x873))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x876=IKsin(j3);
IkReal x877=IKcos(j3);
IkReal x878=(cj5*cj6);
IkReal x879=(cj0*cj5);
IkReal x880=(r01*sj0);
IkReal x881=(r10*sj6);
IkReal x882=((0.02626)*sj6);
IkReal x883=(cj0*r11);
IkReal x884=((0.02626)*cj6);
IkReal x885=(cj0*r10);
IkReal x886=((1.0)*cj5);
IkReal x887=(r02*sj0);
IkReal x888=((1.0)*sj5);
IkReal x889=(cj0*sj5);
IkReal x890=((1.0)*sj6);
IkReal x891=(r20*sj6);
IkReal x892=(r00*sj0);
IkReal x893=(sj4*x876);
IkReal x894=(cj4*x876);
IkReal x895=(sj4*x877);
IkReal x896=(cj4*x877);
evalcond[0]=(((cj6*r20))+x893+(((-1.0)*r21*x890)));
evalcond[1]=(((r21*x878))+(((-1.0)*x877))+((cj5*x891))+(((-1.0)*r22*x888)));
evalcond[2]=((((-1.0)*x894))+(((-1.0)*x888*x891))+(((-1.0)*cj6*r21*x888))+(((-1.0)*r22*x886)));
evalcond[3]=((((-1.0)*x895))+((sj6*x883))+(((-1.0)*cj6*x885))+(((-1.0)*x880*x890))+((cj6*x892)));
evalcond[4]=((-0.0001)+((r20*x884))+(((0.02626)*x893))+pz+(((0.09746)*x876))+(((0.0718)*x894))+(((-1.0)*r21*x882)));
evalcond[5]=((((-1.0)*x878*x883))+(((-1.0)*x887*x888))+(((-1.0)*x879*x881))+(((-1.0)*x876))+((x878*x880))+((cj5*sj6*x892))+((r12*x889)));
evalcond[6]=((((-1.0)*x886*x887))+(((-1.0)*cj6*x880*x888))+((x881*x889))+((cj6*sj5*x883))+((r12*x879))+(((-1.0)*sj6*x888*x892))+x896);
evalcond[7]=((-0.2413)+(((-0.02626)*x895))+((x884*x892))+(((-0.0718)*x896))+(((-0.09746)*x877))+((x882*x883))+((px*sj0))+(((-1.0)*cj0*py))+(((-1.0)*x884*x885))+(((-1.0)*x880*x882)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x897=IKPowWithIntegerCheck(sj4,-1);
if(!x897.valid){
continue;
}
if( IKabs(((x897.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x897.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x897.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x898=IKsin(j3);
IkReal x899=IKcos(j3);
IkReal x900=(cj5*cj6);
IkReal x901=(cj0*cj5);
IkReal x902=(r01*sj0);
IkReal x903=(r10*sj6);
IkReal x904=((0.02626)*sj6);
IkReal x905=(cj0*r11);
IkReal x906=((0.02626)*cj6);
IkReal x907=(cj0*r10);
IkReal x908=((1.0)*cj5);
IkReal x909=(r02*sj0);
IkReal x910=((1.0)*sj5);
IkReal x911=(cj0*sj5);
IkReal x912=((1.0)*sj6);
IkReal x913=(r20*sj6);
IkReal x914=(r00*sj0);
IkReal x915=(sj4*x898);
IkReal x916=(cj4*x898);
IkReal x917=(sj4*x899);
IkReal x918=(cj4*x899);
evalcond[0]=((((-1.0)*r21*x912))+((cj6*r20))+x915);
evalcond[1]=(((r21*x900))+(((-1.0)*r22*x910))+(((-1.0)*x899))+((cj5*x913)));
evalcond[2]=((((-1.0)*r22*x908))+(((-1.0)*x910*x913))+(((-1.0)*x916))+(((-1.0)*cj6*r21*x910)));
evalcond[3]=((((-1.0)*cj6*x907))+((cj6*x914))+(((-1.0)*x902*x912))+((sj6*x905))+(((-1.0)*x917)));
evalcond[4]=((-0.0001)+((r20*x906))+(((-1.0)*r21*x904))+(((0.02626)*x915))+pz+(((0.09746)*x898))+(((0.0718)*x916)));
evalcond[5]=((((-1.0)*x901*x903))+(((-1.0)*x900*x905))+((r12*x911))+((x900*x902))+(((-1.0)*x898))+((cj5*sj6*x914))+(((-1.0)*x909*x910)));
evalcond[6]=((((-1.0)*x908*x909))+(((-1.0)*sj6*x910*x914))+((x903*x911))+(((-1.0)*cj6*x902*x910))+((r12*x901))+((cj6*sj5*x905))+x918);
evalcond[7]=((-0.2413)+(((-0.02626)*x917))+(((-1.0)*x902*x904))+(((-0.0718)*x918))+(((-0.09746)*x899))+((x906*x914))+((px*sj0))+(((-1.0)*cj0*py))+((x904*x905))+(((-1.0)*x906*x907)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x919=((1.0)*cj6);
CheckValue<IkReal> x920=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x920.valid){
continue;
}
CheckValue<IkReal> x921 = IKatan2WithCheck(IkReal((((r21*sj6))+(((-1.0)*r20*x919)))),(((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x919))+(((-1.0)*r01*sj0*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x921.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x920.value)))+(x921.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x922=IKsin(j3);
IkReal x923=IKcos(j3);
IkReal x924=(cj5*cj6);
IkReal x925=(cj0*cj5);
IkReal x926=(r01*sj0);
IkReal x927=(r10*sj6);
IkReal x928=((0.02626)*sj6);
IkReal x929=(cj0*r11);
IkReal x930=((0.02626)*cj6);
IkReal x931=(cj0*r10);
IkReal x932=((1.0)*cj5);
IkReal x933=(r02*sj0);
IkReal x934=((1.0)*sj5);
IkReal x935=(cj0*sj5);
IkReal x936=((1.0)*sj6);
IkReal x937=(r20*sj6);
IkReal x938=(r00*sj0);
IkReal x939=(sj4*x922);
IkReal x940=(cj4*x922);
IkReal x941=(sj4*x923);
IkReal x942=(cj4*x923);
evalcond[0]=((((-1.0)*r21*x936))+((cj6*r20))+x939);
evalcond[1]=((((-1.0)*r22*x934))+((r21*x924))+(((-1.0)*x923))+((cj5*x937)));
evalcond[2]=((((-1.0)*cj6*r21*x934))+(((-1.0)*r22*x932))+(((-1.0)*x940))+(((-1.0)*x934*x937)));
evalcond[3]=((((-1.0)*x941))+(((-1.0)*x926*x936))+((cj6*x938))+((sj6*x929))+(((-1.0)*cj6*x931)));
evalcond[4]=((-0.0001)+(((0.02626)*x939))+(((0.0718)*x940))+(((-1.0)*r21*x928))+pz+(((0.09746)*x922))+((r20*x930)));
evalcond[5]=((((-1.0)*x925*x927))+((x924*x926))+(((-1.0)*x922))+((r12*x935))+(((-1.0)*x933*x934))+((cj5*sj6*x938))+(((-1.0)*x924*x929)));
evalcond[6]=(((x927*x935))+(((-1.0)*cj6*x926*x934))+((r12*x925))+(((-1.0)*x932*x933))+(((-1.0)*sj6*x934*x938))+((cj6*sj5*x929))+x942);
evalcond[7]=((-0.2413)+(((-1.0)*x930*x931))+((x928*x929))+((x930*x938))+(((-1.0)*x926*x928))+((px*sj0))+(((-0.09746)*x923))+(((-0.0718)*x942))+(((-0.02626)*x941))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x943=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj0*r00*sj6*x943))+((r12*sj0*sj5))+(((-1.0)*cj0*cj6*r01*x943))+(((-1.0)*r10*sj0*sj6*x943))+((cj0*r02*sj5))+(((-1.0)*cj6*r11*sj0*x943)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x944=((1.0)*cj6);
if( IKabs(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x944))+(((-1.0)*cj0*r00*x944)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))))+IKsqr((((r11*sj0*sj6))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x944))+(((-1.0)*cj0*r00*x944))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))), (((r11*sj0*sj6))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x944))+(((-1.0)*cj0*r00*x944))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x945=IKsin(j4);
IkReal x946=IKcos(j4);
IkReal x947=((0.02626)*cj0);
IkReal x948=(r01*sj6);
IkReal x949=(r11*sj0);
IkReal x950=(cj6*sj5);
IkReal x951=((1.0)*cj0);
IkReal x952=(sj5*sj6);
IkReal x953=(cj6*r00);
IkReal x954=(cj6*r10*sj0);
evalcond[0]=(((cj0*x948))+((sj6*x949))+(((-1.0)*x954))+(((-1.0)*x946))+(((-1.0)*x951*x953)));
evalcond[1]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x949*x950))+(((-1.0)*x945))+((r10*sj0*x952))+((cj0*r00*x952))+((cj0*r01*x950)));
evalcond[2]=((-0.0019)+(((0.0718)*x945))+((x947*x948))+(((0.02626)*sj6*x949))+(((-1.0)*x947*x953))+(((-0.02626)*x954))+(((-1.0)*py*sj0))+(((-0.02626)*x946))+(((-1.0)*px*x951)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x955=((1.0)*cj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*r00*sj0*x955))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))))+(IKabs(((((-1.0)*r20*x955))+((r21*sj6))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x956=(r11*sj0);
IkReal x957=(cj6*sj5);
IkReal x958=(r10*sj0);
IkReal x959=(sj5*sj6);
IkReal x960=((1.0)*cj5);
IkReal x961=(cj5*r12);
IkReal x962=(cj0*sj6);
IkReal x963=(cj0*r02);
IkReal x964=((1.0)*sj0);
IkReal x965=((1.0)*cj6);
IkReal x966=(cj0*r00);
IkReal x967=((0.02626)*cj6);
IkReal x968=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*x965*x966))+((sj6*x956))+((r01*x962))+(((-1.0)*x958*x965)));
evalcond[2]=((((-1.0)*r20*x959))+(((-1.0)*r21*x957))+(((-1.0)*r22*x960)));
evalcond[3]=((((-1.0)*r00*x960*x962))+(((-1.0)*sj6*x958*x960))+((r12*sj0*sj5))+(((-1.0)*cj6*x956*x960))+(((-1.0)*cj6*x960*x968))+((sj5*x963)));
evalcond[4]=((-1.0)+((x956*x957))+((x957*x968))+((sj0*x961))+((x959*x966))+((x958*x959))+((cj5*x963)));
evalcond[5]=(((cj0*x961))+(((-1.0)*r01*x957*x964))+(((-1.0)*r00*x959*x964))+((cj0*r10*x959))+(((-1.0)*r02*sj0*x960))+((cj0*r11*x957)));
evalcond[6]=((0.0699)+(((-1.0)*py*x964))+(((0.02626)*sj6*x956))+(((0.02626)*r01*x962))+(((-1.0)*x966*x967))+(((-1.0)*x958*x967))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x969=IKsin(j3);
IkReal x970=IKcos(j3);
IkReal x971=(cj5*cj6);
IkReal x972=(r01*sj0);
IkReal x973=(cj0*sj6);
IkReal x974=((1.0)*r10);
IkReal x975=((0.02626)*sj6);
IkReal x976=((0.02626)*cj6);
IkReal x977=((1.0)*sj5);
IkReal x978=((1.0)*sj6);
IkReal x979=(cj5*sj6);
IkReal x980=(r00*sj0);
IkReal x981=((1.0)*cj0);
evalcond[0]=(((cj6*r20))+x969+(((-1.0)*r21*x978)));
evalcond[1]=((-0.0001)+(((0.12372)*x969))+pz+((r20*x976))+(((-1.0)*r21*x975)));
evalcond[2]=((((-1.0)*x970))+((r21*x971))+((r20*x979))+(((-1.0)*r22*x977)));
evalcond[3]=((((-1.0)*cj0*cj6*x974))+((cj6*x980))+(((-1.0)*x972*x978))+((r11*x973))+x970);
evalcond[4]=((-0.0097)+(((0.12372)*x970))+(((-1.0)*py*x981))+((x976*x980))+(((0.02626)*r11*x973))+(((-1.0)*cj0*r10*x976))+(((-1.0)*x972*x975))+((px*sj0)));
evalcond[5]=((((-1.0)*cj5*x973*x974))+(((-1.0)*r11*x971*x981))+((x979*x980))+((cj0*r12*sj5))+((x971*x972))+(((-1.0)*r02*sj0*x977))+x969);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x982=(r11*sj0);
IkReal x983=(cj6*sj5);
IkReal x984=(r10*sj0);
IkReal x985=(sj5*sj6);
IkReal x986=((1.0)*cj5);
IkReal x987=(cj5*r12);
IkReal x988=(cj0*sj6);
IkReal x989=(cj0*r02);
IkReal x990=((1.0)*sj0);
IkReal x991=((1.0)*cj6);
IkReal x992=(cj0*r00);
IkReal x993=((0.02626)*cj6);
IkReal x994=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*x991*x992))+((r01*x988))+((sj6*x982))+(((-1.0)*x984*x991)));
evalcond[2]=((((-1.0)*r20*x985))+(((-1.0)*r21*x983))+(((-1.0)*r22*x986)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r00*x986*x988))+(((-1.0)*cj6*x986*x994))+((sj5*x989))+(((-1.0)*cj6*x982*x986))+(((-1.0)*sj6*x984*x986)));
evalcond[4]=((1.0)+((cj5*x989))+((x983*x994))+((sj0*x987))+((x982*x983))+((x984*x985))+((x985*x992)));
evalcond[5]=(((cj0*r11*x983))+(((-1.0)*r00*x985*x990))+((cj0*r10*x985))+(((-1.0)*r01*x983*x990))+(((-1.0)*r02*sj0*x986))+((cj0*x987)));
evalcond[6]=((-0.0737)+(((-1.0)*x992*x993))+(((0.02626)*r01*x988))+(((-1.0)*py*x990))+(((0.02626)*sj6*x982))+(((-1.0)*x984*x993))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x995=IKsin(j3);
IkReal x996=IKcos(j3);
IkReal x997=(cj5*cj6);
IkReal x998=(r01*sj0);
IkReal x999=(cj0*sj6);
IkReal x1000=((1.0)*r10);
IkReal x1001=((0.02626)*sj6);
IkReal x1002=((0.02626)*cj6);
IkReal x1003=((1.0)*sj5);
IkReal x1004=((1.0)*sj6);
IkReal x1005=(cj5*sj6);
IkReal x1006=(r00*sj0);
IkReal x1007=((1.0)*cj0);
IkReal x1008=((1.0)*x996);
evalcond[0]=((((-1.0)*x995))+(((-1.0)*r21*x1004))+((cj6*r20)));
evalcond[1]=((-0.0001)+(((0.0712)*x995))+(((-1.0)*r21*x1001))+pz+((r20*x1002)));
evalcond[2]=((((-1.0)*x1008))+((r20*x1005))+((r21*x997))+(((-1.0)*r22*x1003)));
evalcond[3]=((((-1.0)*x1008))+((cj6*x1006))+(((-1.0)*cj0*cj6*x1000))+(((-1.0)*x1004*x998))+((r11*x999)));
evalcond[4]=((-0.0097)+(((0.02626)*r11*x999))+(((-1.0)*cj0*r10*x1002))+(((-1.0)*py*x1007))+(((0.0712)*x996))+(((-1.0)*x1001*x998))+((px*sj0))+((x1002*x1006)));
evalcond[5]=((((-1.0)*r11*x1007*x997))+((x997*x998))+(((-1.0)*cj5*x1000*x999))+((cj0*r12*sj5))+((x1005*x1006))+x995+(((-1.0)*r02*sj0*x1003)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1009=(cj6*sj0);
IkReal x1010=(sj0*sj6);
IkReal x1011=((1.0)*cj5);
IkReal x1012=(cj0*sj6);
IkReal x1013=(cj0*r02);
IkReal x1014=((1.0)*r10);
IkReal x1015=(r12*sj0);
IkReal x1016=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((-1.0)+(((-1.0)*x1009*x1014))+(((-1.0)*r00*x1016))+((r01*x1012))+((r11*x1010)));
evalcond[3]=((((-1.0)*x1014*x1016))+(((-1.0)*r01*x1010))+((r11*x1012))+((r00*x1009)));
evalcond[4]=((((-1.0)*r11*x1009*x1011))+(((-1.0)*r00*x1011*x1012))+(((-1.0)*r10*x1010*x1011))+((sj5*x1013))+((sj5*x1015))+(((-1.0)*r01*x1011*x1016)));
evalcond[5]=(((r01*sj5*x1016))+((r00*sj5*x1012))+((r10*sj5*x1010))+((cj5*x1013))+((cj5*x1015))+((r11*sj5*x1009)));
evalcond[6]=((-0.02816)+(((0.02626)*r01*x1012))+(((0.02626)*r11*x1010))+(((-0.02626)*r10*x1009))+(((-0.02626)*r00*x1016))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.000590807042419946)+(((-5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((-5.90807042419946)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((-5.90807042419946)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1017=IKsin(j3);
IkReal x1018=IKcos(j3);
IkReal x1019=(cj5*cj6);
IkReal x1020=(r01*sj0);
IkReal x1021=(cj0*cj5);
IkReal x1022=(r10*sj6);
IkReal x1023=((0.02626)*sj6);
IkReal x1024=((0.02626)*cj6);
IkReal x1025=((1.0)*cj5);
IkReal x1026=(r02*sj0);
IkReal x1027=((1.0)*sj5);
IkReal x1028=(cj0*r11);
IkReal x1029=(cj0*sj5);
IkReal x1030=(r20*sj6);
IkReal x1031=(r00*sj0);
IkReal x1032=((1.0)*x1018);
evalcond[0]=((-0.0001)+(((0.16926)*x1017))+pz);
evalcond[1]=((((-1.0)*r22*x1027))+(((-1.0)*x1032))+((r21*x1019))+((cj5*x1030)));
evalcond[2]=((((-1.0)*x1027*x1030))+(((-1.0)*r22*x1025))+(((-1.0)*cj6*r21*x1027))+(((-1.0)*x1017)));
evalcond[3]=((-0.0097)+(((0.16926)*x1018))+(((-1.0)*cj0*r10*x1024))+(((-1.0)*x1020*x1023))+((x1023*x1028))+((x1024*x1031))+((px*sj0))+(((-1.0)*cj0*py)));
evalcond[4]=(x1017+(((-1.0)*x1026*x1027))+(((-1.0)*x1019*x1028))+((r12*x1029))+(((-1.0)*x1021*x1022))+((cj5*sj6*x1031))+((x1019*x1020)));
evalcond[5]=((((-1.0)*x1032))+((cj6*sj5*x1028))+((r12*x1021))+(((-1.0)*cj6*x1020*x1027))+((x1022*x1029))+(((-1.0)*x1025*x1026))+(((-1.0)*sj6*x1027*x1031)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1033=(cj6*sj0);
IkReal x1034=(sj0*sj6);
IkReal x1035=((1.0)*cj5);
IkReal x1036=(cj0*sj6);
IkReal x1037=(cj0*r02);
IkReal x1038=((1.0)*r10);
IkReal x1039=(r12*sj0);
IkReal x1040=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((1.0)+(((-1.0)*x1033*x1038))+((r11*x1034))+(((-1.0)*r00*x1040))+((r01*x1036)));
evalcond[3]=(((r00*x1033))+(((-1.0)*x1038*x1040))+(((-1.0)*r01*x1034))+((r11*x1036)));
evalcond[4]=(((sj5*x1039))+((sj5*x1037))+(((-1.0)*r01*x1035*x1040))+(((-1.0)*r11*x1033*x1035))+(((-1.0)*r10*x1034*x1035))+(((-1.0)*r00*x1035*x1036)));
evalcond[5]=(((r00*sj5*x1036))+((r10*sj5*x1034))+((r01*sj5*x1040))+((cj5*x1037))+((cj5*x1039))+((r11*sj5*x1033)));
evalcond[6]=((0.02436)+(((0.02626)*r11*x1034))+(((-0.02626)*r10*x1033))+(((0.02626)*r01*x1036))+(((-0.02626)*r00*x1040))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.00389711613406079)+(((-38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((-38.9711613406079)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((-38.9711613406079)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1041=IKsin(j3);
IkReal x1042=IKcos(j3);
IkReal x1043=(cj5*cj6);
IkReal x1044=(r01*sj0);
IkReal x1045=(cj0*cj5);
IkReal x1046=(r10*sj6);
IkReal x1047=((0.02626)*sj6);
IkReal x1048=((0.02626)*cj6);
IkReal x1049=((1.0)*cj5);
IkReal x1050=(r02*sj0);
IkReal x1051=((1.0)*sj5);
IkReal x1052=(cj0*r11);
IkReal x1053=(cj0*sj5);
IkReal x1054=(r20*sj6);
IkReal x1055=(r00*sj0);
evalcond[0]=((-0.0001)+(((0.02566)*x1041))+pz);
evalcond[1]=((((-1.0)*r22*x1051))+((r21*x1043))+(((-1.0)*x1042))+((cj5*x1054)));
evalcond[2]=(x1041+(((-1.0)*r22*x1049))+(((-1.0)*cj6*r21*x1051))+(((-1.0)*x1051*x1054)));
evalcond[3]=((-0.0097)+(((-1.0)*x1044*x1047))+((x1048*x1055))+(((0.02566)*x1042))+(((-1.0)*cj0*r10*x1048))+((px*sj0))+((x1047*x1052))+(((-1.0)*cj0*py)));
evalcond[4]=(((cj5*sj6*x1055))+((r12*x1053))+x1041+((x1043*x1044))+(((-1.0)*x1043*x1052))+(((-1.0)*x1045*x1046))+(((-1.0)*x1050*x1051)));
evalcond[5]=(x1042+(((-1.0)*sj6*x1051*x1055))+((cj6*sj5*x1052))+(((-1.0)*cj6*x1044*x1051))+((x1046*x1053))+(((-1.0)*x1049*x1050))+((r12*x1045)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1056=(cj6*r21);
IkReal x1057=((1.0)*sj5);
IkReal x1058=(r20*sj6);
CheckValue<IkReal> x1059=IKPowWithIntegerCheck(cj4,-1);
if(!x1059.valid){
continue;
}
if( IKabs(((x1059.value)*(((((-1.0)*x1056*x1057))+(((-1.0)*cj5*r22))+(((-1.0)*x1057*x1058)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r22*x1057))+((cj5*x1056))+((cj5*x1058)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1059.value)*(((((-1.0)*x1056*x1057))+(((-1.0)*cj5*r22))+(((-1.0)*x1057*x1058))))))+IKsqr(((((-1.0)*r22*x1057))+((cj5*x1056))+((cj5*x1058))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1059.value)*(((((-1.0)*x1056*x1057))+(((-1.0)*cj5*r22))+(((-1.0)*x1057*x1058))))), ((((-1.0)*r22*x1057))+((cj5*x1056))+((cj5*x1058))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1060=IKsin(j3);
IkReal x1061=IKcos(j3);
IkReal x1062=((1.0)*sj6);
IkReal x1063=(r00*sj0);
IkReal x1064=(cj5*cj6);
IkReal x1065=(cj0*cj5);
IkReal x1066=(r01*sj0);
IkReal x1067=((0.02626)*sj6);
IkReal x1068=(cj0*sj6);
IkReal x1069=((0.02626)*cj6);
IkReal x1070=(cj0*r10);
IkReal x1071=((1.0)*cj5);
IkReal x1072=(r02*sj0);
IkReal x1073=((1.0)*sj5);
IkReal x1074=((1.0)*cj0);
IkReal x1075=(cj5*sj6);
IkReal x1076=(cj0*sj5);
IkReal x1077=(sj4*x1060);
IkReal x1078=(cj4*x1060);
IkReal x1079=(sj4*x1061);
IkReal x1080=((1.0)*x1061);
evalcond[0]=((((-1.0)*r21*x1062))+x1077+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x1073))+((r20*x1075))+((r21*x1064))+(((-1.0)*x1080)));
evalcond[2]=((((-1.0)*r22*x1071))+(((-1.0)*r20*sj5*x1062))+(((-1.0)*x1078))+(((-1.0)*cj6*r21*x1073)));
evalcond[3]=((((-1.0)*cj6*x1070))+x1079+(((-1.0)*x1062*x1066))+((cj6*x1063))+((r11*x1068)));
evalcond[4]=((-0.0001)+(((-1.0)*r21*x1067))+((r20*x1069))+(((0.0718)*x1078))+(((0.02626)*x1077))+pz+(((0.09746)*x1060)));
evalcond[5]=((((-1.0)*r10*x1062*x1065))+x1060+((r12*x1076))+((x1063*x1075))+(((-1.0)*r11*x1064*x1074))+(((-1.0)*x1072*x1073))+((x1064*x1066)));
evalcond[6]=(((r12*x1065))+((cj6*r11*x1076))+(((-1.0)*sj5*x1062*x1063))+(((-1.0)*x1071*x1072))+(((-1.0)*cj6*x1066*x1073))+(((-1.0)*cj4*x1080))+((r10*sj5*x1068)));
evalcond[7]=((-0.0097)+(((0.0718)*cj4*x1061))+(((0.02626)*x1079))+(((-1.0)*py*x1074))+((cj0*r11*x1067))+(((-1.0)*x1066*x1067))+((x1063*x1069))+((px*sj0))+(((0.09746)*x1061))+(((-1.0)*x1069*x1070)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x1081=IKPowWithIntegerCheck(sj4,-1);
if(!x1081.valid){
continue;
}
if( IKabs(((x1081.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1081.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1081.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1082=IKsin(j3);
IkReal x1083=IKcos(j3);
IkReal x1084=((1.0)*sj6);
IkReal x1085=(r00*sj0);
IkReal x1086=(cj5*cj6);
IkReal x1087=(cj0*cj5);
IkReal x1088=(r01*sj0);
IkReal x1089=((0.02626)*sj6);
IkReal x1090=(cj0*sj6);
IkReal x1091=((0.02626)*cj6);
IkReal x1092=(cj0*r10);
IkReal x1093=((1.0)*cj5);
IkReal x1094=(r02*sj0);
IkReal x1095=((1.0)*sj5);
IkReal x1096=((1.0)*cj0);
IkReal x1097=(cj5*sj6);
IkReal x1098=(cj0*sj5);
IkReal x1099=(sj4*x1082);
IkReal x1100=(cj4*x1082);
IkReal x1101=(sj4*x1083);
IkReal x1102=((1.0)*x1083);
evalcond[0]=((((-1.0)*r21*x1084))+x1099+((cj6*r20)));
evalcond[1]=((((-1.0)*x1102))+((r20*x1097))+((r21*x1086))+(((-1.0)*r22*x1095)));
evalcond[2]=((((-1.0)*x1100))+(((-1.0)*cj6*r21*x1095))+(((-1.0)*r20*sj5*x1084))+(((-1.0)*r22*x1093)));
evalcond[3]=(x1101+((r11*x1090))+((cj6*x1085))+(((-1.0)*cj6*x1092))+(((-1.0)*x1084*x1088)));
evalcond[4]=((-0.0001)+(((-1.0)*r21*x1089))+(((0.0718)*x1100))+(((0.09746)*x1082))+pz+(((0.02626)*x1099))+((r20*x1091)));
evalcond[5]=(x1082+((x1085*x1097))+(((-1.0)*r10*x1084*x1087))+(((-1.0)*r11*x1086*x1096))+(((-1.0)*x1094*x1095))+((r12*x1098))+((x1086*x1088)));
evalcond[6]=((((-1.0)*cj6*x1088*x1095))+(((-1.0)*cj4*x1102))+((r12*x1087))+((cj6*r11*x1098))+(((-1.0)*sj5*x1084*x1085))+(((-1.0)*x1093*x1094))+((r10*sj5*x1090)));
evalcond[7]=((-0.0097)+(((-1.0)*x1091*x1092))+(((-1.0)*py*x1096))+((x1085*x1091))+((cj0*r11*x1089))+(((0.09746)*x1083))+(((0.0718)*cj4*x1083))+(((-1.0)*x1088*x1089))+(((0.02626)*x1101))+((px*sj0)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1103=((1.0)*cj6);
CheckValue<IkReal> x1104=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x1104.valid){
continue;
}
CheckValue<IkReal> x1105 = IKatan2WithCheck(IkReal((((r21*sj6))+(((-1.0)*r20*x1103)))),(((r01*sj0*sj6))+(((-1.0)*r00*sj0*x1103))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x1105.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1104.value)))+(x1105.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1106=IKsin(j3);
IkReal x1107=IKcos(j3);
IkReal x1108=((1.0)*sj6);
IkReal x1109=(r00*sj0);
IkReal x1110=(cj5*cj6);
IkReal x1111=(cj0*cj5);
IkReal x1112=(r01*sj0);
IkReal x1113=((0.02626)*sj6);
IkReal x1114=(cj0*sj6);
IkReal x1115=((0.02626)*cj6);
IkReal x1116=(cj0*r10);
IkReal x1117=((1.0)*cj5);
IkReal x1118=(r02*sj0);
IkReal x1119=((1.0)*sj5);
IkReal x1120=((1.0)*cj0);
IkReal x1121=(cj5*sj6);
IkReal x1122=(cj0*sj5);
IkReal x1123=(sj4*x1106);
IkReal x1124=(cj4*x1106);
IkReal x1125=(sj4*x1107);
IkReal x1126=((1.0)*x1107);
evalcond[0]=(x1123+(((-1.0)*r21*x1108))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x1119))+(((-1.0)*x1126))+((r21*x1110))+((r20*x1121)));
evalcond[2]=((((-1.0)*r22*x1117))+(((-1.0)*r20*sj5*x1108))+(((-1.0)*x1124))+(((-1.0)*cj6*r21*x1119)));
evalcond[3]=(x1125+(((-1.0)*cj6*x1116))+(((-1.0)*x1108*x1112))+((cj6*x1109))+((r11*x1114)));
evalcond[4]=((-0.0001)+((r20*x1115))+(((0.0718)*x1124))+(((-1.0)*r21*x1113))+pz+(((0.02626)*x1123))+(((0.09746)*x1106)));
evalcond[5]=(x1106+((x1110*x1112))+((x1109*x1121))+(((-1.0)*r11*x1110*x1120))+(((-1.0)*r10*x1108*x1111))+(((-1.0)*x1118*x1119))+((r12*x1122)));
evalcond[6]=(((cj6*r11*x1122))+(((-1.0)*cj4*x1126))+((r10*sj5*x1114))+((r12*x1111))+(((-1.0)*sj5*x1108*x1109))+(((-1.0)*cj6*x1112*x1119))+(((-1.0)*x1117*x1118)));
evalcond[7]=((-0.0097)+((x1109*x1115))+(((0.0718)*cj4*x1107))+(((-1.0)*x1112*x1113))+(((-1.0)*py*x1120))+((px*sj0))+(((0.02626)*x1125))+((cj0*r11*x1113))+(((0.09746)*x1107))+(((-1.0)*x1115*x1116)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1127=(cj5*cj6);
IkReal x1128=((1.0)*cj0);
IkReal x1129=(cj5*sj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r01*sj0*x1127))+((r00*sj0*x1129))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))+(((-1.0)*r11*x1127*x1128))+(((-1.0)*r10*x1128*x1129)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*cj0*py))+(((-13.9275766016713)*px*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*cj0*py))+(((-13.9275766016713)*px*sj0))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*cj0*py))+(((-13.9275766016713)*px*sj0))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1130=IKsin(j4);
IkReal x1131=IKcos(j4);
IkReal x1132=(cj0*r10);
IkReal x1133=((1.0)*cj6);
IkReal x1134=(sj5*sj6);
IkReal x1135=((0.02626)*sj6);
IkReal x1136=(cj0*r11);
IkReal x1137=(r01*sj0);
IkReal x1138=((0.02626)*cj6);
IkReal x1139=(r00*sj0);
evalcond[0]=((((-1.0)*sj6*x1137))+(((-1.0)*x1132*x1133))+(((-1.0)*x1131))+((sj6*x1136))+((cj6*x1139)));
evalcond[1]=((((-1.0)*cj5*r02*sj0))+((cj6*sj5*x1136))+((cj0*cj5*r12))+(((-1.0)*x1134*x1139))+(((-1.0)*sj5*x1133*x1137))+(((-1.0)*x1130))+((x1132*x1134)));
evalcond[2]=((-0.1264)+(((0.0718)*x1130))+((x1135*x1136))+(((-0.02626)*x1131))+(((-1.0)*x1132*x1138))+((x1138*x1139))+((px*sj0))+(((-1.0)*x1135*x1137))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x1140=((1.0)*cj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((r11*sj0*sj6))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x1140))+(((-1.0)*r10*sj0*x1140)))))+(IKabs((((r21*sj6))+(((-1.0)*r20*x1140))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x1141=(cj0*r11);
IkReal x1142=(sj0*sj5);
IkReal x1143=((1.0)*cj5);
IkReal x1144=(r10*sj6);
IkReal x1145=((0.02626)*sj6);
IkReal x1146=(r01*sj0);
IkReal x1147=(cj5*r12);
IkReal x1148=((1.0)*sj5);
IkReal x1149=((1.0)*sj6);
IkReal x1150=(cj0*sj5);
IkReal x1151=(r00*sj6);
IkReal x1152=(cj6*r01);
IkReal x1153=(cj0*cj6*r10);
IkReal x1154=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj6*r21*x1148))+(((-1.0)*r20*sj6*x1148))+(((-1.0)*r22*x1143)));
evalcond[2]=(((sj6*x1141))+x1154+(((-1.0)*x1146*x1149))+(((-1.0)*x1153)));
evalcond[3]=(((cj0*cj5*r02))+((x1142*x1144))+((cj6*r11*x1142))+((sj0*x1147))+((x1150*x1151))+((x1150*x1152)));
evalcond[4]=((((-1.0)*cj0*x1143*x1144))+((cj5*cj6*x1146))+((r12*x1150))+((cj5*sj0*x1151))+(((-1.0)*cj6*x1141*x1143))+(((-1.0)*r02*x1142)));
evalcond[5]=((-1.0)+(((-1.0)*r02*sj0*x1143))+((cj6*sj5*x1141))+(((-1.0)*r00*x1142*x1149))+(((-1.0)*x1142*x1152))+((cj0*x1147))+((x1144*x1150)));
evalcond[6]=((-0.0546)+(((-1.0)*x1145*x1146))+((x1141*x1145))+(((0.02626)*x1154))+(((-0.02626)*x1153))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1155=IKsin(j3);
IkReal x1156=IKcos(j3);
IkReal x1157=(cj5*cj6);
IkReal x1158=(r11*sj0);
IkReal x1159=(cj0*sj6);
IkReal x1160=((1.0)*cj5);
IkReal x1161=((0.02626)*sj6);
IkReal x1162=((0.02626)*cj6);
IkReal x1163=((1.0)*sj0);
IkReal x1164=(r10*sj0);
IkReal x1165=((1.0)*cj0);
IkReal x1166=((1.0)*x1156);
evalcond[0]=(x1155+((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[1]=((-0.0001)+(((-1.0)*r21*x1161))+((r20*x1162))+(((0.12372)*x1155))+pz);
evalcond[2]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+(((-1.0)*x1166))+((r21*x1157)));
evalcond[3]=((((-1.0)*cj6*r00*x1165))+(((-1.0)*cj6*r10*x1163))+(((-1.0)*x1166))+((sj6*x1158))+((r01*x1159)));
evalcond[4]=((-0.1168)+(((-1.0)*cj0*r00*x1162))+(((0.02626)*r01*x1159))+(((-1.0)*x1162*x1164))+(((-1.0)*py*x1163))+(((-1.0)*px*x1165))+((x1158*x1161))+(((-0.12372)*x1156)));
evalcond[5]=((((-1.0)*x1157*x1158))+(((-1.0)*r01*x1157*x1165))+(((-1.0)*sj6*x1160*x1164))+((r12*sj0*sj5))+(((-1.0)*x1155))+(((-1.0)*r00*x1159*x1160))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1167=(cj0*r11);
IkReal x1168=(sj0*sj5);
IkReal x1169=((1.0)*cj5);
IkReal x1170=(r10*sj6);
IkReal x1171=((0.02626)*sj6);
IkReal x1172=(r01*sj0);
IkReal x1173=(cj5*r12);
IkReal x1174=((1.0)*sj5);
IkReal x1175=((1.0)*sj6);
IkReal x1176=(cj0*sj5);
IkReal x1177=(r00*sj6);
IkReal x1178=(cj6*r01);
IkReal x1179=(cj0*cj6*r10);
IkReal x1180=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r20*sj6*x1174))+(((-1.0)*r22*x1169))+(((-1.0)*cj6*r21*x1174)));
evalcond[2]=(x1180+(((-1.0)*x1172*x1175))+((sj6*x1167))+(((-1.0)*x1179)));
evalcond[3]=(((sj0*x1173))+((cj0*cj5*r02))+((x1168*x1170))+((x1176*x1178))+((x1176*x1177))+((cj6*r11*x1168)));
evalcond[4]=((((-1.0)*cj0*x1169*x1170))+(((-1.0)*cj6*x1167*x1169))+(((-1.0)*r02*x1168))+((r12*x1176))+((cj5*cj6*x1172))+((cj5*sj0*x1177)));
evalcond[5]=((1.0)+((cj6*sj5*x1167))+((cj0*x1173))+(((-1.0)*x1168*x1178))+(((-1.0)*r02*sj0*x1169))+((x1170*x1176))+(((-1.0)*r00*x1168*x1175)));
evalcond[6]=((-0.1982)+(((-1.0)*x1171*x1172))+((x1167*x1171))+(((0.02626)*x1180))+((px*sj0))+(((-0.02626)*x1179))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1181=IKsin(j3);
IkReal x1182=IKcos(j3);
IkReal x1183=(cj5*cj6);
IkReal x1184=(r11*sj0);
IkReal x1185=(cj0*sj6);
IkReal x1186=((1.0)*cj5);
IkReal x1187=((0.02626)*sj6);
IkReal x1188=((0.02626)*cj6);
IkReal x1189=((1.0)*sj0);
IkReal x1190=(r10*sj0);
IkReal x1191=((1.0)*cj0);
IkReal x1192=((1.0)*x1181);
evalcond[0]=((((-1.0)*x1192))+((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[1]=((-0.0001)+(((0.0712)*x1181))+pz+((r20*x1188))+(((-1.0)*r21*x1187)));
evalcond[2]=(((cj5*r20*sj6))+((r21*x1183))+(((-1.0)*r22*sj5))+(((-1.0)*x1182)));
evalcond[3]=(x1182+(((-1.0)*cj6*r00*x1191))+((r01*x1185))+(((-1.0)*cj6*r10*x1189))+((sj6*x1184)));
evalcond[4]=((-0.1168)+((x1184*x1187))+(((-1.0)*x1188*x1190))+(((0.02626)*r01*x1185))+(((-1.0)*py*x1189))+(((-0.0712)*x1182))+(((-1.0)*px*x1191))+(((-1.0)*cj0*r00*x1188)));
evalcond[5]=((((-1.0)*sj6*x1186*x1190))+(((-1.0)*x1183*x1184))+(((-1.0)*r00*x1185*x1186))+((r12*sj0*sj5))+(((-1.0)*x1192))+(((-1.0)*r01*x1183*x1191))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1193=(r11*sj6);
IkReal x1194=(r01*sj0);
IkReal x1195=(cj5*cj6);
IkReal x1196=(cj0*cj5);
IkReal x1197=((1.0)*r10);
IkReal x1198=((0.02626)*cj0);
IkReal x1199=(cj6*sj0);
IkReal x1200=((1.0)*sj6);
IkReal x1201=(cj0*cj6);
IkReal x1202=((1.0)*cj0);
IkReal x1203=(cj0*sj5);
IkReal x1204=(r00*sj0);
IkReal x1205=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*x1200)));
evalcond[2]=((((-1.0)*r00*x1201))+(((-1.0)*x1197*x1199))+((sj0*x1193))+((cj0*r01*sj6)));
evalcond[3]=((-1.0)+((r00*x1199))+((cj0*x1193))+(((-1.0)*x1194*x1200))+(((-1.0)*x1197*x1201)));
evalcond[4]=(((x1194*x1195))+(((-1.0)*r11*x1195*x1202))+(((-1.0)*sj6*x1196*x1197))+((r12*x1203))+(((-1.0)*sj5*x1205))+((cj5*sj6*x1204)));
evalcond[5]=(((r11*sj5*x1201))+(((-1.0)*cj6*sj5*x1194))+(((-1.0)*sj5*x1200*x1204))+((r12*x1196))+((r10*sj6*x1203))+(((-1.0)*cj5*x1205)));
evalcond[6]=((-0.15266)+(((-0.02626)*sj6*x1194))+(((0.02626)*r00*x1199))+(((-1.0)*cj6*r10*x1198))+((x1193*x1198))+((px*sj0))+(((-1.0)*py*x1202)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.000590807042419946)+(((-5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((-5.90807042419946)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((-5.90807042419946)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1206=IKsin(j3);
IkReal x1207=IKcos(j3);
IkReal x1208=(cj6*sj0);
IkReal x1209=(cj6*r21);
IkReal x1210=((1.0)*cj5);
IkReal x1211=(cj0*sj6);
IkReal x1212=(cj0*r02);
IkReal x1213=((1.0)*sj5);
IkReal x1214=(r20*sj6);
IkReal x1215=(r12*sj0);
IkReal x1216=(cj0*cj6);
IkReal x1217=((1.0)*x1206);
IkReal x1218=(r10*sj0*sj6);
evalcond[0]=((-0.0001)+pz+(((0.16926)*x1206)));
evalcond[1]=(((cj5*x1209))+((cj5*x1214))+(((-1.0)*r22*x1213))+(((-1.0)*x1207)));
evalcond[2]=((((-1.0)*x1209*x1213))+(((-1.0)*r22*x1210))+(((-1.0)*x1213*x1214))+(((-1.0)*x1217)));
evalcond[3]=(((r00*sj5*x1211))+x1207+((cj5*x1212))+((cj5*x1215))+((r11*sj5*x1208))+((sj5*x1218))+((r01*sj5*x1216)));
evalcond[4]=((-0.1168)+(((-0.16926)*x1207))+(((-0.02626)*r00*x1216))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x1208))+(((0.02626)*r11*sj0*sj6))+(((0.02626)*r01*x1211))+(((-1.0)*cj0*px)));
evalcond[5]=((((-1.0)*r01*x1210*x1216))+(((-1.0)*r00*x1210*x1211))+(((-1.0)*r11*x1208*x1210))+((sj5*x1212))+((sj5*x1215))+(((-1.0)*x1210*x1218))+(((-1.0)*x1217)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1219=(r11*sj6);
IkReal x1220=(r01*sj0);
IkReal x1221=(cj5*cj6);
IkReal x1222=(cj0*cj5);
IkReal x1223=((1.0)*r10);
IkReal x1224=((0.02626)*cj0);
IkReal x1225=(cj6*sj0);
IkReal x1226=((1.0)*sj6);
IkReal x1227=(cj0*cj6);
IkReal x1228=((1.0)*cj0);
IkReal x1229=(cj0*sj5);
IkReal x1230=(r00*sj0);
IkReal x1231=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r21*x1226))+((cj6*r20)));
evalcond[2]=((((-1.0)*r00*x1227))+((cj0*r01*sj6))+((sj0*x1219))+(((-1.0)*x1223*x1225)));
evalcond[3]=((1.0)+((r00*x1225))+(((-1.0)*x1220*x1226))+((cj0*x1219))+(((-1.0)*x1223*x1227)));
evalcond[4]=((((-1.0)*r11*x1221*x1228))+((x1220*x1221))+(((-1.0)*sj6*x1222*x1223))+(((-1.0)*sj5*x1231))+((r12*x1229))+((cj5*sj6*x1230)));
evalcond[5]=(((r10*sj6*x1229))+(((-1.0)*cj5*x1231))+(((-1.0)*sj5*x1226*x1230))+(((-1.0)*cj6*sj5*x1220))+((r11*sj5*x1227))+((r12*x1222)));
evalcond[6]=((-0.10014)+(((0.02626)*r00*x1225))+((x1219*x1224))+(((-1.0)*py*x1228))+((px*sj0))+(((-0.02626)*sj6*x1220))+(((-1.0)*cj6*r10*x1224)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.00389711613406079)+(((-38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((-38.9711613406079)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((-38.9711613406079)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1232=IKsin(j3);
IkReal x1233=IKcos(j3);
IkReal x1234=(cj5*cj6);
IkReal x1235=(sj0*sj5);
IkReal x1236=(r10*sj6);
IkReal x1237=((1.0)*sj0);
IkReal x1238=((1.0)*cj5);
IkReal x1239=(cj0*sj6);
IkReal x1240=(cj0*r02);
IkReal x1241=((1.0)*sj5);
IkReal x1242=(r20*sj6);
IkReal x1243=((0.02626)*cj6);
IkReal x1244=((1.0)*cj0);
IkReal x1245=((1.0)*x1233);
evalcond[0]=((-0.0001)+pz+(((0.02566)*x1232)));
evalcond[1]=(((cj5*x1242))+(((-1.0)*x1245))+(((-1.0)*r22*x1241))+((r21*x1234)));
evalcond[2]=(x1232+(((-1.0)*cj6*r21*x1241))+(((-1.0)*x1241*x1242))+(((-1.0)*r22*x1238)));
evalcond[3]=(((cj5*r12*sj0))+((x1235*x1236))+((cj5*x1240))+((r00*sj5*x1239))+(((-1.0)*x1245))+((cj0*cj6*r01*sj5))+((cj6*r11*x1235)));
evalcond[4]=((-0.1168)+(((-1.0)*px*x1244))+(((0.02626)*r01*x1239))+(((-1.0)*py*x1237))+(((-0.02566)*x1233))+(((0.02626)*r11*sj0*sj6))+(((-1.0)*r10*sj0*x1243))+(((-1.0)*cj0*r00*x1243)));
evalcond[5]=((((-1.0)*r01*x1234*x1244))+(((-1.0)*x1232))+(((-1.0)*cj5*x1236*x1237))+(((-1.0)*r11*x1234*x1237))+((sj5*x1240))+(((-1.0)*r00*x1238*x1239))+((r12*x1235)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1246=(cj6*r21);
IkReal x1247=((1.0)*sj5);
IkReal x1248=(r20*sj6);
CheckValue<IkReal> x1249=IKPowWithIntegerCheck(cj4,-1);
if(!x1249.valid){
continue;
}
if( IKabs(((x1249.value)*(((((-1.0)*cj5*r22))+(((-1.0)*x1246*x1247))+(((-1.0)*x1247*x1248)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*x1246))+((cj5*x1248))+(((-1.0)*r22*x1247)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1249.value)*(((((-1.0)*cj5*r22))+(((-1.0)*x1246*x1247))+(((-1.0)*x1247*x1248))))))+IKsqr((((cj5*x1246))+((cj5*x1248))+(((-1.0)*r22*x1247))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1249.value)*(((((-1.0)*cj5*r22))+(((-1.0)*x1246*x1247))+(((-1.0)*x1247*x1248))))), (((cj5*x1246))+((cj5*x1248))+(((-1.0)*r22*x1247))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1250=IKsin(j3);
IkReal x1251=IKcos(j3);
IkReal x1252=(cj5*cj6);
IkReal x1253=(r11*sj0);
IkReal x1254=(cj6*sj5);
IkReal x1255=(r10*sj0);
IkReal x1256=(sj5*sj6);
IkReal x1257=((1.0)*cj5);
IkReal x1258=(cj0*sj6);
IkReal x1259=(cj0*r02);
IkReal x1260=((0.02626)*cj6);
IkReal x1261=((1.0)*cj6);
IkReal x1262=((0.02626)*sj6);
IkReal x1263=(cj0*r00);
IkReal x1264=(cj0*r01);
IkReal x1265=(r12*sj0);
IkReal x1266=((1.0)*r21);
IkReal x1267=(sj4*x1250);
IkReal x1268=(cj4*x1250);
IkReal x1269=(sj4*x1251);
IkReal x1270=(cj4*x1251);
evalcond[0]=(x1267+(((-1.0)*sj6*x1266))+((cj6*r20)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x1252))+(((-1.0)*r22*sj5))+(((-1.0)*x1251)));
evalcond[2]=((((-1.0)*r22*x1257))+(((-1.0)*x1254*x1266))+(((-1.0)*r20*x1256))+(((-1.0)*x1268)));
evalcond[3]=((((-1.0)*x1261*x1263))+((sj6*x1253))+(((-1.0)*x1255*x1261))+(((-1.0)*x1269))+((r01*x1258)));
evalcond[4]=((-0.0001)+(((-1.0)*r21*x1262))+(((0.02626)*x1267))+(((0.09746)*x1250))+(((0.0718)*x1268))+pz+((r20*x1260)));
evalcond[5]=(x1270+((x1256*x1263))+((x1253*x1254))+((x1254*x1264))+((x1255*x1256))+((cj5*x1265))+((cj5*x1259)));
evalcond[6]=((((-1.0)*x1252*x1253))+((sj5*x1259))+((sj5*x1265))+(((-1.0)*x1252*x1264))+(((-1.0)*r00*x1257*x1258))+(((-1.0)*x1250))+(((-1.0)*sj6*x1255*x1257)));
evalcond[7]=((-0.1168)+(((-1.0)*x1260*x1263))+(((-0.09746)*x1251))+(((-0.0718)*x1270))+(((-1.0)*x1255*x1260))+((x1253*x1262))+(((-1.0)*py*sj0))+(((-0.02626)*x1269))+(((0.02626)*r01*x1258))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x1271=IKPowWithIntegerCheck(sj4,-1);
if(!x1271.valid){
continue;
}
if( IKabs(((x1271.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1271.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1271.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1272=IKsin(j3);
IkReal x1273=IKcos(j3);
IkReal x1274=(cj5*cj6);
IkReal x1275=(r11*sj0);
IkReal x1276=(cj6*sj5);
IkReal x1277=(r10*sj0);
IkReal x1278=(sj5*sj6);
IkReal x1279=((1.0)*cj5);
IkReal x1280=(cj0*sj6);
IkReal x1281=(cj0*r02);
IkReal x1282=((0.02626)*cj6);
IkReal x1283=((1.0)*cj6);
IkReal x1284=((0.02626)*sj6);
IkReal x1285=(cj0*r00);
IkReal x1286=(cj0*r01);
IkReal x1287=(r12*sj0);
IkReal x1288=((1.0)*r21);
IkReal x1289=(sj4*x1272);
IkReal x1290=(cj4*x1272);
IkReal x1291=(sj4*x1273);
IkReal x1292=(cj4*x1273);
evalcond[0]=(x1289+(((-1.0)*sj6*x1288))+((cj6*r20)));
evalcond[1]=(((r21*x1274))+((cj5*r20*sj6))+(((-1.0)*x1273))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x1276*x1288))+(((-1.0)*r22*x1279))+(((-1.0)*x1290))+(((-1.0)*r20*x1278)));
evalcond[3]=(((r01*x1280))+(((-1.0)*x1277*x1283))+((sj6*x1275))+(((-1.0)*x1291))+(((-1.0)*x1283*x1285)));
evalcond[4]=((-0.0001)+(((0.09746)*x1272))+pz+((r20*x1282))+(((0.02626)*x1289))+(((-1.0)*r21*x1284))+(((0.0718)*x1290)));
evalcond[5]=(x1292+((x1275*x1276))+((x1277*x1278))+((x1278*x1285))+((cj5*x1287))+((cj5*x1281))+((x1276*x1286)));
evalcond[6]=((((-1.0)*r00*x1279*x1280))+(((-1.0)*x1274*x1275))+((sj5*x1287))+((sj5*x1281))+(((-1.0)*sj6*x1277*x1279))+(((-1.0)*x1274*x1286))+(((-1.0)*x1272)));
evalcond[7]=((-0.1168)+(((-0.09746)*x1273))+((x1275*x1284))+(((-1.0)*x1277*x1282))+(((-0.02626)*x1291))+(((-0.0718)*x1292))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px))+(((0.02626)*r01*x1280))+(((-1.0)*x1282*x1285)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1293=((1.0)*cj6);
CheckValue<IkReal> x1294=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x1294.valid){
continue;
}
CheckValue<IkReal> x1295 = IKatan2WithCheck(IkReal((((r21*sj6))+(((-1.0)*r20*x1293)))),(((r11*sj0*sj6))+(((-1.0)*r10*sj0*x1293))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x1293))),IKFAST_ATAN2_MAGTHRESH);
if(!x1295.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1294.value)))+(x1295.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1296=IKsin(j3);
IkReal x1297=IKcos(j3);
IkReal x1298=(cj5*cj6);
IkReal x1299=(r11*sj0);
IkReal x1300=(cj6*sj5);
IkReal x1301=(r10*sj0);
IkReal x1302=(sj5*sj6);
IkReal x1303=((1.0)*cj5);
IkReal x1304=(cj0*sj6);
IkReal x1305=(cj0*r02);
IkReal x1306=((0.02626)*cj6);
IkReal x1307=((1.0)*cj6);
IkReal x1308=((0.02626)*sj6);
IkReal x1309=(cj0*r00);
IkReal x1310=(cj0*r01);
IkReal x1311=(r12*sj0);
IkReal x1312=((1.0)*r21);
IkReal x1313=(sj4*x1296);
IkReal x1314=(cj4*x1296);
IkReal x1315=(sj4*x1297);
IkReal x1316=(cj4*x1297);
evalcond[0]=(x1313+((cj6*r20))+(((-1.0)*sj6*x1312)));
evalcond[1]=(((r21*x1298))+((cj5*r20*sj6))+(((-1.0)*x1297))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x1300*x1312))+(((-1.0)*r20*x1302))+(((-1.0)*r22*x1303))+(((-1.0)*x1314)));
evalcond[3]=((((-1.0)*x1307*x1309))+((sj6*x1299))+(((-1.0)*x1315))+(((-1.0)*x1301*x1307))+((r01*x1304)));
evalcond[4]=((-0.0001)+(((0.02626)*x1313))+(((-1.0)*r21*x1308))+(((0.0718)*x1314))+pz+((r20*x1306))+(((0.09746)*x1296)));
evalcond[5]=(x1316+((x1299*x1300))+((cj5*x1311))+((x1300*x1310))+((cj5*x1305))+((x1302*x1309))+((x1301*x1302)));
evalcond[6]=(((sj5*x1305))+((sj5*x1311))+(((-1.0)*x1298*x1310))+(((-1.0)*r00*x1303*x1304))+(((-1.0)*x1296))+(((-1.0)*sj6*x1301*x1303))+(((-1.0)*x1298*x1299)));
evalcond[7]=((-0.1168)+((x1299*x1308))+(((-0.02626)*x1315))+(((-1.0)*x1306*x1309))+(((-0.09746)*x1297))+(((-0.0718)*x1316))+(((-1.0)*py*sj0))+(((-1.0)*x1301*x1306))+(((0.02626)*r01*x1304))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1317=(cj5*cj6);
IkReal x1318=((1.0)*cj0);
IkReal x1319=(cj5*sj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r10*x1318*x1319))+(((-1.0)*r11*x1317*x1318))+((r01*sj0*x1317))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))+((r00*sj0*x1319)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*cj0*py))+(((13.9275766016713)*px*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*cj0*py))+(((13.9275766016713)*px*sj0))))+IKsqr((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*cj0*py))+(((13.9275766016713)*px*sj0))), (((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1320=IKcos(j4);
IkReal x1321=IKsin(j4);
IkReal x1322=((1.0)*cj0);
IkReal x1323=(cj6*r10);
IkReal x1324=(cj0*sj6);
IkReal x1325=(cj6*sj5);
IkReal x1326=((0.02626)*sj0);
IkReal x1327=(cj6*r00);
IkReal x1328=((1.0)*sj0);
IkReal x1329=(r01*x1328);
evalcond[0]=(x1320+(((-1.0)*x1322*x1323))+((r11*x1324))+(((-1.0)*sj6*x1329))+((sj0*x1327)));
evalcond[1]=(x1321+((cj0*cj5*r12))+(((-1.0)*x1325*x1329))+(((-1.0)*r00*sj5*sj6*x1328))+((r10*sj5*x1324))+((cj0*r11*x1325))+(((-1.0)*cj5*r02*x1328)));
evalcond[2]=((-0.1246)+(((0.02626)*x1320))+(((-1.0)*r01*sj6*x1326))+((x1326*x1327))+(((-0.02626)*cj0*x1323))+(((0.02626)*r11*x1324))+(((-1.0)*py*x1322))+(((-0.0718)*x1321))+((px*sj0)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x1330=((1.0)*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x1330))+(((-1.0)*cj0*r01*x1330))+((cj0*cj6*r00))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x1331=(cj0*r11);
IkReal x1332=(sj0*sj5);
IkReal x1333=((1.0)*cj5);
IkReal x1334=(r10*sj6);
IkReal x1335=((0.02626)*sj6);
IkReal x1336=(r01*sj0);
IkReal x1337=(cj5*r12);
IkReal x1338=((1.0)*sj5);
IkReal x1339=((1.0)*sj6);
IkReal x1340=(cj0*sj5);
IkReal x1341=(r00*sj6);
IkReal x1342=(cj6*r01);
IkReal x1343=(cj0*cj6*r10);
IkReal x1344=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x1333))+(((-1.0)*cj6*r21*x1338))+(((-1.0)*r20*sj6*x1338)));
evalcond[2]=(x1344+((sj6*x1331))+(((-1.0)*x1336*x1339))+(((-1.0)*x1343)));
evalcond[3]=(((cj0*cj5*r02))+((x1340*x1342))+((x1340*x1341))+((sj0*x1337))+((cj6*r11*x1332))+((x1332*x1334)));
evalcond[4]=((((-1.0)*cj0*x1333*x1334))+((r12*x1340))+(((-1.0)*cj6*x1331*x1333))+((cj5*sj0*x1341))+((cj5*cj6*x1336))+(((-1.0)*r02*x1332)));
evalcond[5]=((1.0)+((cj6*sj5*x1331))+((cj0*x1337))+(((-1.0)*r00*x1332*x1339))+(((-1.0)*r02*sj0*x1333))+(((-1.0)*x1332*x1342))+((x1334*x1340)));
evalcond[6]=((-0.1964)+(((-1.0)*x1335*x1336))+((x1331*x1335))+(((0.02626)*x1344))+(((-0.02626)*x1343))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1345=IKsin(j3);
IkReal x1346=IKcos(j3);
IkReal x1347=(cj5*cj6);
IkReal x1348=(r11*sj0);
IkReal x1349=(cj0*sj6);
IkReal x1350=((1.0)*cj5);
IkReal x1351=((0.02626)*sj6);
IkReal x1352=((0.02626)*cj6);
IkReal x1353=((1.0)*sj0);
IkReal x1354=(r10*sj0);
IkReal x1355=((1.0)*cj0);
evalcond[0]=(x1345+((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[1]=((-0.0001)+(((0.12372)*x1345))+(((-1.0)*r21*x1351))+((r20*x1352))+pz);
evalcond[2]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x1347))+(((-1.0)*x1346)));
evalcond[3]=(x1346+((sj6*x1348))+(((-1.0)*cj6*r10*x1353))+((r01*x1349))+(((-1.0)*cj6*r00*x1355)));
evalcond[4]=((0.1148)+(((-1.0)*x1352*x1354))+(((0.12372)*x1346))+(((-1.0)*px*x1355))+((x1348*x1351))+(((0.02626)*r01*x1349))+(((-1.0)*cj0*r00*x1352))+(((-1.0)*py*x1353)));
evalcond[5]=(x1345+(((-1.0)*sj6*x1350*x1354))+(((-1.0)*x1347*x1348))+((r12*sj0*sj5))+(((-1.0)*r01*x1347*x1355))+((cj0*r02*sj5))+(((-1.0)*r00*x1349*x1350)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1356=(cj0*r11);
IkReal x1357=(sj0*sj5);
IkReal x1358=((1.0)*cj5);
IkReal x1359=(r10*sj6);
IkReal x1360=((0.02626)*sj6);
IkReal x1361=(r01*sj0);
IkReal x1362=(cj5*r12);
IkReal x1363=((1.0)*sj5);
IkReal x1364=((1.0)*sj6);
IkReal x1365=(cj0*sj5);
IkReal x1366=(r00*sj6);
IkReal x1367=(cj6*r01);
IkReal x1368=(cj0*cj6*r10);
IkReal x1369=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj6*r21*x1363))+(((-1.0)*r20*sj6*x1363))+(((-1.0)*r22*x1358)));
evalcond[2]=(x1369+(((-1.0)*x1368))+(((-1.0)*x1361*x1364))+((sj6*x1356)));
evalcond[3]=(((x1357*x1359))+((cj0*cj5*r02))+((sj0*x1362))+((cj6*r11*x1357))+((x1365*x1366))+((x1365*x1367)));
evalcond[4]=(((cj5*sj0*x1366))+((cj5*cj6*x1361))+(((-1.0)*cj6*x1356*x1358))+(((-1.0)*r02*x1357))+((r12*x1365))+(((-1.0)*cj0*x1358*x1359)));
evalcond[5]=((-1.0)+((x1359*x1365))+(((-1.0)*x1357*x1367))+((cj6*sj5*x1356))+((cj0*x1362))+(((-1.0)*r00*x1357*x1364))+(((-1.0)*r02*sj0*x1358)));
evalcond[6]=((-0.0528)+(((0.02626)*x1369))+((x1356*x1360))+((px*sj0))+(((-0.02626)*x1368))+(((-1.0)*x1360*x1361))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1370=IKsin(j3);
IkReal x1371=IKcos(j3);
IkReal x1372=(cj5*cj6);
IkReal x1373=(r11*sj0);
IkReal x1374=(cj0*sj6);
IkReal x1375=((1.0)*cj5);
IkReal x1376=((0.02626)*sj6);
IkReal x1377=((0.02626)*cj6);
IkReal x1378=((1.0)*sj0);
IkReal x1379=(r10*sj0);
IkReal x1380=((1.0)*cj0);
IkReal x1381=((1.0)*x1371);
evalcond[0]=((((-1.0)*x1370))+((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[1]=((-0.0001)+(((-1.0)*r21*x1376))+pz+(((0.0712)*x1370))+((r20*x1377)));
evalcond[2]=((((-1.0)*x1381))+((cj5*r20*sj6))+((r21*x1372))+(((-1.0)*r22*sj5)));
evalcond[3]=((((-1.0)*x1381))+(((-1.0)*cj6*r10*x1378))+((sj6*x1373))+((r01*x1374))+(((-1.0)*cj6*r00*x1380)));
evalcond[4]=((0.1148)+(((-1.0)*x1377*x1379))+(((-1.0)*cj0*r00*x1377))+(((-1.0)*px*x1380))+(((0.02626)*r01*x1374))+(((-1.0)*py*x1378))+(((0.0712)*x1371))+((x1373*x1376)));
evalcond[5]=(x1370+(((-1.0)*r01*x1372*x1380))+(((-1.0)*x1372*x1373))+(((-1.0)*r00*x1374*x1375))+((r12*sj0*sj5))+(((-1.0)*sj6*x1375*x1379))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1382=(r11*sj6);
IkReal x1383=(r01*sj0);
IkReal x1384=(cj5*cj6);
IkReal x1385=(cj0*cj5);
IkReal x1386=((1.0)*r10);
IkReal x1387=((0.02626)*cj0);
IkReal x1388=(cj6*sj0);
IkReal x1389=((1.0)*sj6);
IkReal x1390=(cj0*cj6);
IkReal x1391=((1.0)*cj0);
IkReal x1392=(cj0*sj5);
IkReal x1393=(r00*sj0);
IkReal x1394=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r21*x1389))+((cj6*r20)));
evalcond[2]=((((-1.0)*r00*x1390))+((cj0*r01*sj6))+((sj0*x1382))+(((-1.0)*x1386*x1388)));
evalcond[3]=((1.0)+(((-1.0)*x1383*x1389))+((cj0*x1382))+((r00*x1388))+(((-1.0)*x1386*x1390)));
evalcond[4]=((((-1.0)*r11*x1384*x1391))+(((-1.0)*sj5*x1394))+(((-1.0)*sj6*x1385*x1386))+((cj5*sj6*x1393))+((r12*x1392))+((x1383*x1384)));
evalcond[5]=((((-1.0)*cj5*x1394))+(((-1.0)*sj5*x1389*x1393))+(((-1.0)*cj6*sj5*x1383))+((r10*sj6*x1392))+((r12*x1385))+((r11*sj5*x1390)));
evalcond[6]=((-0.09834)+(((-1.0)*cj6*r10*x1387))+(((0.02626)*r00*x1388))+(((-0.02626)*sj6*x1383))+((px*sj0))+(((-1.0)*py*x1391))+((x1382*x1387)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.000590807042419946)+(((-5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((-5.90807042419946)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((-5.90807042419946)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1395=IKsin(j3);
IkReal x1396=IKcos(j3);
IkReal x1397=(cj6*sj0);
IkReal x1398=(cj6*r21);
IkReal x1399=((1.0)*cj5);
IkReal x1400=(cj0*sj6);
IkReal x1401=(cj0*r02);
IkReal x1402=((1.0)*sj5);
IkReal x1403=(r20*sj6);
IkReal x1404=(r12*sj0);
IkReal x1405=(cj0*cj6);
IkReal x1406=((1.0)*x1396);
IkReal x1407=(r10*sj0*sj6);
evalcond[0]=((-0.0001)+pz+(((0.16926)*x1395)));
evalcond[1]=(((cj5*x1403))+(((-1.0)*r22*x1402))+(((-1.0)*x1406))+((cj5*x1398)));
evalcond[2]=((((-1.0)*x1398*x1402))+(((-1.0)*x1402*x1403))+(((-1.0)*r22*x1399))+(((-1.0)*x1395)));
evalcond[3]=(((cj5*x1401))+((cj5*x1404))+((sj5*x1407))+((r00*sj5*x1400))+(((-1.0)*x1406))+((r01*sj5*x1405))+((r11*sj5*x1397)));
evalcond[4]=((0.1148)+(((-0.02626)*r10*x1397))+(((0.16926)*x1396))+(((-1.0)*py*sj0))+(((0.02626)*r01*x1400))+(((0.02626)*r11*sj0*sj6))+(((-1.0)*cj0*px))+(((-0.02626)*r00*x1405)));
evalcond[5]=(x1395+(((-1.0)*r01*x1399*x1405))+(((-1.0)*x1399*x1407))+((sj5*x1401))+((sj5*x1404))+(((-1.0)*r11*x1397*x1399))+(((-1.0)*r00*x1399*x1400)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1408=(r11*sj6);
IkReal x1409=(r01*sj0);
IkReal x1410=(cj5*cj6);
IkReal x1411=(cj0*cj5);
IkReal x1412=((1.0)*r10);
IkReal x1413=((0.02626)*cj0);
IkReal x1414=(cj6*sj0);
IkReal x1415=((1.0)*sj6);
IkReal x1416=(cj0*cj6);
IkReal x1417=((1.0)*cj0);
IkReal x1418=(cj0*sj5);
IkReal x1419=(r00*sj0);
IkReal x1420=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*x1415)));
evalcond[2]=((((-1.0)*x1412*x1414))+((cj0*r01*sj6))+((sj0*x1408))+(((-1.0)*r00*x1416)));
evalcond[3]=((-1.0)+(((-1.0)*x1412*x1416))+((cj0*x1408))+((r00*x1414))+(((-1.0)*x1409*x1415)));
evalcond[4]=((((-1.0)*r11*x1410*x1417))+(((-1.0)*sj6*x1411*x1412))+(((-1.0)*sj5*x1420))+((cj5*sj6*x1419))+((r12*x1418))+((x1409*x1410)));
evalcond[5]=(((r11*sj5*x1416))+((r10*sj6*x1418))+(((-1.0)*cj5*x1420))+(((-1.0)*cj6*sj5*x1409))+((r12*x1411))+(((-1.0)*sj5*x1415*x1419)));
evalcond[6]=((-0.15086)+(((-1.0)*cj6*r10*x1413))+((px*sj0))+(((0.02626)*r00*x1414))+((x1408*x1413))+(((-1.0)*py*x1417))+(((-0.02626)*sj6*x1409)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((0.00389711613406079)+(((-38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((-38.9711613406079)*pz))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((-38.9711613406079)*pz))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1421=IKsin(j3);
IkReal x1422=IKcos(j3);
IkReal x1423=(cj5*cj6);
IkReal x1424=(sj0*sj5);
IkReal x1425=(r10*sj6);
IkReal x1426=((1.0)*sj0);
IkReal x1427=((1.0)*cj5);
IkReal x1428=(cj0*sj6);
IkReal x1429=(cj0*r02);
IkReal x1430=((1.0)*sj5);
IkReal x1431=(r20*sj6);
IkReal x1432=((0.02626)*cj6);
IkReal x1433=((1.0)*cj0);
evalcond[0]=((-0.0001)+pz+(((0.02566)*x1421)));
evalcond[1]=(((r21*x1423))+(((-1.0)*r22*x1430))+((cj5*x1431))+(((-1.0)*x1422)));
evalcond[2]=(x1421+(((-1.0)*cj6*r21*x1430))+(((-1.0)*r22*x1427))+(((-1.0)*x1430*x1431)));
evalcond[3]=(((cj5*r12*sj0))+((x1424*x1425))+((cj6*r11*x1424))+((cj0*cj6*r01*sj5))+x1422+((r00*sj5*x1428))+((cj5*x1429)));
evalcond[4]=((0.1148)+(((0.02626)*r01*x1428))+(((-1.0)*py*x1426))+(((-1.0)*cj0*r00*x1432))+(((-1.0)*px*x1433))+(((-1.0)*r10*sj0*x1432))+(((0.02626)*r11*sj0*sj6))+(((0.02566)*x1422)));
evalcond[5]=((((-1.0)*r00*x1427*x1428))+(((-1.0)*cj5*x1425*x1426))+(((-1.0)*r11*x1423*x1426))+(((-1.0)*r01*x1423*x1433))+x1421+((sj5*x1429))+((r12*x1424)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1434=(cj6*r21);
IkReal x1435=((1.0)*sj5);
IkReal x1436=(r20*sj6);
CheckValue<IkReal> x1437=IKPowWithIntegerCheck(cj4,-1);
if(!x1437.valid){
continue;
}
if( IKabs(((x1437.value)*(((((-1.0)*x1435*x1436))+(((-1.0)*x1434*x1435))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r22*x1435))+((cj5*x1436))+((cj5*x1434)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1437.value)*(((((-1.0)*x1435*x1436))+(((-1.0)*x1434*x1435))+(((-1.0)*cj5*r22))))))+IKsqr(((((-1.0)*r22*x1435))+((cj5*x1436))+((cj5*x1434))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1437.value)*(((((-1.0)*x1435*x1436))+(((-1.0)*x1434*x1435))+(((-1.0)*cj5*r22))))), ((((-1.0)*r22*x1435))+((cj5*x1436))+((cj5*x1434))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1438=IKsin(j3);
IkReal x1439=IKcos(j3);
IkReal x1440=(cj5*cj6);
IkReal x1441=(r11*sj0);
IkReal x1442=(cj6*sj5);
IkReal x1443=(r10*sj0);
IkReal x1444=(sj5*sj6);
IkReal x1445=(cj0*sj6);
IkReal x1446=((1.0)*cj5);
IkReal x1447=(cj0*r02);
IkReal x1448=((0.02626)*cj6);
IkReal x1449=((1.0)*cj6);
IkReal x1450=(cj0*r00);
IkReal x1451=(cj0*r01);
IkReal x1452=(r12*sj0);
IkReal x1453=((1.0)*r21);
IkReal x1454=((0.02626)*sj6);
IkReal x1455=(sj4*x1438);
IkReal x1456=(cj4*x1438);
IkReal x1457=(sj4*x1439);
IkReal x1458=((1.0)*x1439);
evalcond[0]=(x1455+((cj6*r20))+(((-1.0)*sj6*x1453)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*x1458))+((r21*x1440))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*r22*x1446))+(((-1.0)*r20*x1444))+(((-1.0)*x1456))+(((-1.0)*x1442*x1453)));
evalcond[3]=(((sj6*x1441))+x1457+(((-1.0)*x1449*x1450))+(((-1.0)*x1443*x1449))+((r01*x1445)));
evalcond[4]=((-0.0001)+(((0.09746)*x1438))+pz+(((0.0718)*x1456))+((r20*x1448))+(((0.02626)*x1455))+(((-1.0)*r21*x1454)));
evalcond[5]=(((x1443*x1444))+((cj5*x1452))+((x1441*x1442))+(((-1.0)*cj4*x1458))+((x1442*x1451))+((cj5*x1447))+((x1444*x1450)));
evalcond[6]=((((-1.0)*x1440*x1451))+((sj5*x1452))+(((-1.0)*sj6*x1443*x1446))+(((-1.0)*x1440*x1441))+((sj5*x1447))+x1438+(((-1.0)*r00*x1445*x1446)));
evalcond[7]=((0.1148)+(((0.02626)*r01*x1445))+(((-1.0)*x1448*x1450))+(((0.09746)*x1439))+(((-1.0)*py*sj0))+(((0.02626)*x1457))+((x1441*x1454))+(((-1.0)*x1443*x1448))+(((-1.0)*cj0*px))+(((0.0718)*cj4*x1439)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x1459=IKPowWithIntegerCheck(sj4,-1);
if(!x1459.valid){
continue;
}
if( IKabs(((x1459.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1459.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1459.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))), (((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1460=IKsin(j3);
IkReal x1461=IKcos(j3);
IkReal x1462=(cj5*cj6);
IkReal x1463=(r11*sj0);
IkReal x1464=(cj6*sj5);
IkReal x1465=(r10*sj0);
IkReal x1466=(sj5*sj6);
IkReal x1467=(cj0*sj6);
IkReal x1468=((1.0)*cj5);
IkReal x1469=(cj0*r02);
IkReal x1470=((0.02626)*cj6);
IkReal x1471=((1.0)*cj6);
IkReal x1472=(cj0*r00);
IkReal x1473=(cj0*r01);
IkReal x1474=(r12*sj0);
IkReal x1475=((1.0)*r21);
IkReal x1476=((0.02626)*sj6);
IkReal x1477=(sj4*x1460);
IkReal x1478=(cj4*x1460);
IkReal x1479=(sj4*x1461);
IkReal x1480=((1.0)*x1461);
evalcond[0]=((((-1.0)*sj6*x1475))+x1477+((cj6*r20)));
evalcond[1]=((((-1.0)*x1480))+((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x1462)));
evalcond[2]=((((-1.0)*r22*x1468))+(((-1.0)*x1478))+(((-1.0)*r20*x1466))+(((-1.0)*x1464*x1475)));
evalcond[3]=((((-1.0)*x1471*x1472))+((r01*x1467))+(((-1.0)*x1465*x1471))+((sj6*x1463))+x1479);
evalcond[4]=((-0.0001)+(((-1.0)*r21*x1476))+(((0.02626)*x1477))+(((0.09746)*x1460))+pz+(((0.0718)*x1478))+((r20*x1470)));
evalcond[5]=(((cj5*x1474))+((x1466*x1472))+((x1463*x1464))+((x1465*x1466))+((cj5*x1469))+(((-1.0)*cj4*x1480))+((x1464*x1473)));
evalcond[6]=((((-1.0)*sj6*x1465*x1468))+(((-1.0)*x1462*x1463))+((sj5*x1474))+x1460+(((-1.0)*r00*x1467*x1468))+(((-1.0)*x1462*x1473))+((sj5*x1469)));
evalcond[7]=((0.1148)+(((-1.0)*x1470*x1472))+(((0.0718)*cj4*x1461))+(((0.02626)*x1479))+(((0.09746)*x1461))+(((-1.0)*x1465*x1470))+((x1463*x1476))+(((0.02626)*r01*x1467))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1481=((1.0)*sj6);
CheckValue<IkReal> x1482=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x1482.valid){
continue;
}
CheckValue<IkReal> x1483 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),(((cj6*r10*sj0))+(((-1.0)*r11*sj0*x1481))+(((-1.0)*cj0*r01*x1481))+((cj0*cj6*r00))),IKFAST_ATAN2_MAGTHRESH);
if(!x1483.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1482.value)))+(x1483.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1484=IKsin(j3);
IkReal x1485=IKcos(j3);
IkReal x1486=(cj5*cj6);
IkReal x1487=(r11*sj0);
IkReal x1488=(cj6*sj5);
IkReal x1489=(r10*sj0);
IkReal x1490=(sj5*sj6);
IkReal x1491=(cj0*sj6);
IkReal x1492=((1.0)*cj5);
IkReal x1493=(cj0*r02);
IkReal x1494=((0.02626)*cj6);
IkReal x1495=((1.0)*cj6);
IkReal x1496=(cj0*r00);
IkReal x1497=(cj0*r01);
IkReal x1498=(r12*sj0);
IkReal x1499=((1.0)*r21);
IkReal x1500=((0.02626)*sj6);
IkReal x1501=(sj4*x1484);
IkReal x1502=(cj4*x1484);
IkReal x1503=(sj4*x1485);
IkReal x1504=((1.0)*x1485);
evalcond[0]=((((-1.0)*sj6*x1499))+x1501+((cj6*r20)));
evalcond[1]=((((-1.0)*x1504))+((cj5*r20*sj6))+((r21*x1486))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x1502))+(((-1.0)*r20*x1490))+(((-1.0)*r22*x1492))+(((-1.0)*x1488*x1499)));
evalcond[3]=(((r01*x1491))+(((-1.0)*x1495*x1496))+x1503+((sj6*x1487))+(((-1.0)*x1489*x1495)));
evalcond[4]=((-0.0001)+(((0.02626)*x1501))+((r20*x1494))+(((0.0718)*x1502))+(((0.09746)*x1484))+pz+(((-1.0)*r21*x1500)));
evalcond[5]=(((x1489*x1490))+(((-1.0)*cj4*x1504))+((x1487*x1488))+((cj5*x1498))+((cj5*x1493))+((x1490*x1496))+((x1488*x1497)));
evalcond[6]=(((sj5*x1493))+((sj5*x1498))+(((-1.0)*r00*x1491*x1492))+(((-1.0)*x1486*x1497))+(((-1.0)*x1486*x1487))+(((-1.0)*sj6*x1489*x1492))+x1484);
evalcond[7]=((0.1148)+(((-1.0)*x1494*x1496))+(((0.02626)*x1503))+(((0.0718)*cj4*x1485))+((x1487*x1500))+(((0.02626)*r01*x1491))+(((0.09746)*x1485))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px))+(((-1.0)*x1489*x1494)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3, j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1505=(cj5*cj6);
IkReal x1506=((1.0)*cj0);
IkReal x1507=((1.0)*sj0);
IkReal x1508=(cj5*sj6);
CheckValue<IkReal> x1509=IKPowWithIntegerCheck(sj2,-1);
if(!x1509.valid){
continue;
}
if( IKabs(((x1509.value)*(((((-1.0)*r10*x1507*x1508))+((r12*sj0*sj5))+(((-1.0)*r01*x1505*x1506))+(((-1.0)*r11*x1505*x1507))+(((-1.0)*r00*x1506*x1508))+((cj0*r02*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x1508))+((r21*x1505))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1509.value)*(((((-1.0)*r10*x1507*x1508))+((r12*sj0*sj5))+(((-1.0)*r01*x1505*x1506))+(((-1.0)*r11*x1505*x1507))+(((-1.0)*r00*x1506*x1508))+((cj0*r02*sj5))))))+IKsqr((((r20*x1508))+((r21*x1505))+(((-1.0)*r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1509.value)*(((((-1.0)*r10*x1507*x1508))+((r12*sj0*sj5))+(((-1.0)*r01*x1505*x1506))+(((-1.0)*r11*x1505*x1507))+(((-1.0)*r00*x1506*x1508))+((cj0*r02*sj5))))), (((r20*x1508))+((r21*x1505))+(((-1.0)*r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1510=IKsin(j3);
IkReal x1511=(cj5*cj6);
IkReal x1512=((1.0)*cj0);
IkReal x1513=((1.0)*sj5);
IkReal x1514=((1.0)*sj0);
IkReal x1515=(cj0*sj5);
IkReal x1516=(cj5*sj6);
IkReal x1517=((1.0)*x1510);
IkReal x1518=(r10*x1516);
evalcond[0]=((((-1.0)*r22*x1513))+((r20*x1516))+(((-1.0)*(IKcos(j3))))+((r21*x1511)));
evalcond[1]=(((r01*sj0*x1511))+(((-1.0)*r02*sj0*x1513))+((r12*x1515))+((r00*sj0*x1516))+(((-1.0)*cj2*x1517))+(((-1.0)*r11*x1511*x1512))+(((-1.0)*x1512*x1518)));
evalcond[2]=((((-1.0)*r00*x1512*x1516))+((r12*sj0*sj5))+(((-1.0)*x1514*x1518))+((r02*x1515))+(((-1.0)*r01*x1511*x1512))+(((-1.0)*r11*x1511*x1514))+(((-1.0)*sj2*x1517)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
IkReal x1519=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*r20*sj6*x1519))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x1519))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
j4eval[0]=sj3;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x1520=(cj5*cj6);
IkReal x1521=((1.0)*sj0);
IkReal x1522=(r21*sj6);
IkReal x1523=(cj0*sj5);
IkReal x1524=((1.0)*r22);
IkReal x1525=(cj6*r20);
IkReal x1526=(cj5*sj6);
IkReal x1527=((1.0)*cj0);
IkReal x1528=((1.0)*sj5);
IkReal x1529=(x1526*x1527);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x1524))+((r20*x1526))+((r21*x1520)));
evalcond[2]=(x1525+(((-1.0)*x1522)));
evalcond[3]=((((-1.0)*r20*sj6*x1528))+(((-1.0)*cj5*x1524))+(((-1.0)*cj6*r21*x1528)));
evalcond[4]=((((-1.0)*r00*x1529))+(((-1.0)*r01*x1520*x1527))+(((-1.0)*r11*x1520*x1521))+((r12*sj0*sj5))+(((-1.0)*r10*x1521*x1526))+((r02*x1523)));
evalcond[5]=(((r12*x1523))+(((-1.0)*r11*x1520*x1527))+((r00*sj0*x1526))+(((-1.0)*r02*sj5*x1521))+((r01*sj0*x1520))+(((-1.0)*r10*x1529)));
evalcond[6]=((-0.0001)+(((-0.02626)*x1522))+(((0.02626)*x1525))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1530=((1.0)*r10);
IkReal x1531=((1.0)*cj2);
IkReal x1532=(r11*sj6);
IkReal x1533=(sj0*sj2);
IkReal x1534=(cj0*cj2);
IkReal x1535=(r01*sj6);
IkReal x1536=(cj0*x1535);
IkReal x1537=(cj6*x1533);
IkReal x1538=(cj0*cj6*sj2);
IkReal x1539=(cj2*cj6*sj0);
if( IKabs(((((-1.0)*sj0*x1531*x1535))+((sj2*x1536))+(((-1.0)*x1530*x1537))+((r00*x1539))+(((-1.0)*r00*x1538))+((x1532*x1534))+((x1532*x1533))+(((-1.0)*cj6*x1530*x1534)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1533*x1535))+(((-1.0)*sj0*x1531*x1532))+((cj0*sj2*x1532))+((cj6*r00*x1534))+(((-1.0)*x1530*x1538))+((r10*x1539))+(((-1.0)*x1531*x1536))+((r00*x1537)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj0*x1531*x1535))+((sj2*x1536))+(((-1.0)*x1530*x1537))+((r00*x1539))+(((-1.0)*r00*x1538))+((x1532*x1534))+((x1532*x1533))+(((-1.0)*cj6*x1530*x1534))))+IKsqr(((((-1.0)*x1533*x1535))+(((-1.0)*sj0*x1531*x1532))+((cj0*sj2*x1532))+((cj6*r00*x1534))+(((-1.0)*x1530*x1538))+((r10*x1539))+(((-1.0)*x1531*x1536))+((r00*x1537))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj0*x1531*x1535))+((sj2*x1536))+(((-1.0)*x1530*x1537))+((r00*x1539))+(((-1.0)*r00*x1538))+((x1532*x1534))+((x1532*x1533))+(((-1.0)*cj6*x1530*x1534))), ((((-1.0)*x1533*x1535))+(((-1.0)*sj0*x1531*x1532))+((cj0*sj2*x1532))+((cj6*r00*x1534))+(((-1.0)*x1530*x1538))+((r10*x1539))+(((-1.0)*x1531*x1536))+((r00*x1537))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1540=IKsin(j4);
IkReal x1541=IKcos(j4);
IkReal x1542=(sj0*sj6);
IkReal x1543=((0.02626)*r01);
IkReal x1544=(cj0*sj6);
IkReal x1545=(cj6*sj0);
IkReal x1546=(r11*sj5);
IkReal x1547=(r10*sj5);
IkReal x1548=(cj0*cj5);
IkReal x1549=((1.0)*sj0);
IkReal x1550=((0.02626)*r11);
IkReal x1551=((1.0)*r01);
IkReal x1552=(r00*sj5);
IkReal x1553=((1.0)*cj0);
IkReal x1554=((0.02626)*r00);
IkReal x1555=(cj0*cj6);
IkReal x1556=(cj2*x1541);
IkReal x1557=(r10*x1555);
IkReal x1558=((0.02626)*x1540);
IkReal x1559=(cj2*x1540);
IkReal x1560=((0.0718)*x1541);
IkReal x1561=(sj2*x1541);
IkReal x1562=(sj2*x1540);
IkReal x1563=((1.0)*x1562);
evalcond[0]=(((r11*x1542))+x1556+(((-1.0)*r10*x1545))+(((-1.0)*cj6*r00*x1553))+((r01*x1544))+(((-1.0)*x1563)));
evalcond[1]=((((-1.0)*x1559))+((r11*x1544))+(((-1.0)*x1542*x1551))+(((-1.0)*cj6*r10*x1553))+(((-1.0)*x1561))+((r00*x1545)));
evalcond[2]=(((cj5*r12*sj0))+((x1544*x1552))+x1561+x1559+((r02*x1548))+((r01*sj5*x1555))+((x1542*x1547))+((x1545*x1546)));
evalcond[3]=(((x1544*x1547))+((r12*x1548))+x1556+(((-1.0)*cj5*r02*x1549))+((x1546*x1555))+(((-1.0)*x1563))+(((-1.0)*sj5*x1545*x1551))+(((-1.0)*x1542*x1552)));
evalcond[4]=((-0.1255)+(((-0.02626)*x1561))+((x1544*x1550))+(((-0.02626)*x1557))+(((-1.0)*py*x1553))+(((-0.21326)*cj2))+(((-0.0009)*sj2))+(((-0.0718)*x1556))+(((-1.0)*x1542*x1543))+((px*sj0))+(((-1.0)*cj2*x1558))+(((0.0718)*x1562))+((x1545*x1554)));
evalcond[5]=((-0.001)+(((-1.0)*sj2*x1560))+(((-1.0)*py*x1549))+(((-1.0)*px*x1553))+(((0.0009)*cj2))+(((-0.0718)*x1559))+(((-0.21326)*sj2))+((x1543*x1544))+(((-1.0)*sj2*x1558))+(((0.02626)*x1556))+(((-0.02626)*r10*x1545))+(((-1.0)*x1554*x1555))+((x1542*x1550)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1564=(cj5*cj6);
IkReal x1565=((1.0)*sj0);
IkReal x1566=(r21*sj6);
IkReal x1567=(cj0*sj5);
IkReal x1568=((1.0)*r22);
IkReal x1569=(cj6*r20);
IkReal x1570=(cj5*sj6);
IkReal x1571=((1.0)*cj0);
IkReal x1572=((1.0)*sj5);
IkReal x1573=(x1570*x1571);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x1570))+((r21*x1564))+(((-1.0)*sj5*x1568)));
evalcond[2]=(x1569+(((-1.0)*x1566)));
evalcond[3]=((((-1.0)*cj6*r21*x1572))+(((-1.0)*cj5*x1568))+(((-1.0)*r20*sj6*x1572)));
evalcond[4]=((((-1.0)*r11*x1564*x1565))+(((-1.0)*r01*x1564*x1571))+((r12*sj0*sj5))+(((-1.0)*r00*x1573))+((r02*x1567))+(((-1.0)*r10*x1565*x1570)));
evalcond[5]=((((-1.0)*r02*sj5*x1565))+((r00*sj0*x1570))+(((-1.0)*r11*x1564*x1571))+((r12*x1567))+(((-1.0)*r10*x1573))+((r01*sj0*x1564)));
evalcond[6]=((-0.0001)+(((0.02626)*x1569))+(((-0.02626)*x1566))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1574=(sj0*sj2);
IkReal x1575=(cj0*cj2);
IkReal x1576=(r01*sj6);
IkReal x1577=(cj6*r10);
IkReal x1578=(cj2*sj0);
IkReal x1579=(cj0*sj2);
IkReal x1580=(cj6*r00);
IkReal x1581=((1.0)*r11*sj6);
IkReal x1582=((1.0)*x1579);
if( IKabs((((x1576*x1578))+((x1575*x1577))+(((-1.0)*x1578*x1580))+(((-1.0)*x1574*x1581))+((x1579*x1580))+(((-1.0)*x1576*x1582))+((x1574*x1577))+(((-1.0)*x1575*x1581)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj6*x1579))+(((-1.0)*x1578*x1581))+(((-1.0)*x1574*x1576))+(((-1.0)*x1577*x1582))+((x1575*x1580))+((x1577*x1578))+(((-1.0)*x1575*x1576))+((x1574*x1580)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1576*x1578))+((x1575*x1577))+(((-1.0)*x1578*x1580))+(((-1.0)*x1574*x1581))+((x1579*x1580))+(((-1.0)*x1576*x1582))+((x1574*x1577))+(((-1.0)*x1575*x1581))))+IKsqr((((r11*sj6*x1579))+(((-1.0)*x1578*x1581))+(((-1.0)*x1574*x1576))+(((-1.0)*x1577*x1582))+((x1575*x1580))+((x1577*x1578))+(((-1.0)*x1575*x1576))+((x1574*x1580))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x1576*x1578))+((x1575*x1577))+(((-1.0)*x1578*x1580))+(((-1.0)*x1574*x1581))+((x1579*x1580))+(((-1.0)*x1576*x1582))+((x1574*x1577))+(((-1.0)*x1575*x1581))), (((r11*sj6*x1579))+(((-1.0)*x1578*x1581))+(((-1.0)*x1574*x1576))+(((-1.0)*x1577*x1582))+((x1575*x1580))+((x1577*x1578))+(((-1.0)*x1575*x1576))+((x1574*x1580))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1583=IKsin(j4);
IkReal x1584=IKcos(j4);
IkReal x1585=(sj0*sj6);
IkReal x1586=((0.02626)*r01);
IkReal x1587=(cj6*sj0);
IkReal x1588=(r11*sj5);
IkReal x1589=(r10*sj5);
IkReal x1590=(cj5*r12);
IkReal x1591=((1.0)*sj0);
IkReal x1592=(cj5*r02);
IkReal x1593=((1.0)*r01);
IkReal x1594=(cj0*sj6);
IkReal x1595=(r00*sj5);
IkReal x1596=((1.0)*cj0);
IkReal x1597=((0.02626)*r00);
IkReal x1598=(cj0*cj6);
IkReal x1599=(cj2*x1583);
IkReal x1600=(sj2*x1583);
IkReal x1601=(r11*x1594);
IkReal x1602=(r10*x1598);
IkReal x1603=((0.0718)*x1584);
IkReal x1604=(cj2*x1584);
IkReal x1605=(sj2*x1584);
IkReal x1606=((1.0)*x1605);
evalcond[0]=(((r01*x1594))+x1600+x1604+(((-1.0)*r10*x1587))+((r11*x1585))+(((-1.0)*cj6*r00*x1596)));
evalcond[1]=((((-1.0)*x1585*x1593))+(((-1.0)*cj6*r10*x1596))+(((-1.0)*x1606))+x1601+x1599+((r00*x1587)));
evalcond[2]=(((x1587*x1588))+(((-1.0)*x1606))+((x1594*x1595))+((r01*sj5*x1598))+x1599+((sj0*x1590))+((cj0*x1592))+((x1585*x1589)));
evalcond[3]=((((-1.0)*sj5*x1587*x1593))+(((-1.0)*x1604))+(((-1.0)*x1600))+((x1588*x1598))+((x1589*x1594))+(((-1.0)*x1585*x1595))+(((-1.0)*x1591*x1592))+((cj0*x1590)));
evalcond[4]=((-0.1255)+(((0.02626)*x1599))+(((-1.0)*x1585*x1586))+((x1587*x1597))+(((-0.02626)*x1602))+(((-0.02626)*x1605))+(((-1.0)*py*x1596))+(((0.0718)*x1600))+(((-0.0009)*sj2))+((cj2*x1603))+((px*sj0))+(((-0.01834)*cj2))+(((0.02626)*x1601)));
evalcond[5]=((-0.001)+((x1586*x1594))+((sj2*x1603))+(((-0.01834)*sj2))+(((-1.0)*py*x1591))+(((0.0009)*cj2))+(((-0.0718)*x1599))+(((0.02626)*r11*x1585))+(((-1.0)*px*x1596))+(((-0.02626)*r10*x1587))+(((0.02626)*x1600))+(((0.02626)*x1604))+(((-1.0)*x1597*x1598)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1607=(cj0*sj5);
IkReal x1608=(cj5*cj6);
IkReal x1609=((1.0)*sj5);
IkReal x1610=((1.0)*cj0);
IkReal x1611=((1.0)*sj0);
IkReal x1612=(cj5*sj6);
IkReal x1613=(r10*x1612);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r20*x1612))+((r21*x1608))+(((-1.0)*r22*x1609))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*sj3))+(((-1.0)*x1611*x1613))+(((-1.0)*r00*x1610*x1612))+((r12*sj0*sj5))+(((-1.0)*r11*x1608*x1611))+(((-1.0)*r01*x1608*x1610))+((r02*x1607)));
evalcond[3]=(((r00*sj0*x1612))+(((-1.0)*x1610*x1613))+(((-1.0)*r02*sj0*x1609))+(((-1.0)*r11*x1608*x1610))+((r12*x1607))+((r01*sj0*x1608)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x1614=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*cj6*r21*x1614))+(((-1.0)*r20*sj6*x1614))+(((-1.0)*cj5*r22))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x1615=(cj5*cj6);
IkReal x1616=((1.0)*sj0);
IkReal x1617=(r21*sj6);
IkReal x1618=(cj0*sj5);
IkReal x1619=((1.0)*r22);
IkReal x1620=(cj6*r20);
IkReal x1621=(cj5*sj6);
IkReal x1622=((1.0)*cj0);
IkReal x1623=((1.0)*sj5);
IkReal x1624=(x1621*x1622);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x1621))+((r21*x1615))+(((-1.0)*sj5*x1619)));
evalcond[2]=((((-1.0)*x1617))+x1620);
evalcond[3]=((((-1.0)*cj6*r21*x1623))+(((-1.0)*cj5*x1619))+(((-1.0)*r20*sj6*x1623)));
evalcond[4]=((((-1.0)*r00*x1624))+((r12*sj0*sj5))+(((-1.0)*r01*x1615*x1622))+(((-1.0)*r11*x1615*x1616))+(((-1.0)*r10*x1616*x1621))+((r02*x1618)));
evalcond[5]=(((r00*sj0*x1621))+((r12*x1618))+(((-1.0)*r02*sj5*x1616))+(((-1.0)*r10*x1624))+((r01*sj0*x1615))+(((-1.0)*r11*x1615*x1622)));
evalcond[6]=((-0.0001)+(((-0.02626)*x1617))+pz+(((0.02626)*x1620)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1625=(sj0*sj6);
IkReal x1626=(cj0*sj6);
IkReal x1627=(cj6*r00);
IkReal x1628=((1.0)*cj6*r10);
if( IKabs(((((-1.0)*sj0*x1628))+((r01*x1626))+((r11*x1625))+(((-1.0)*cj0*x1627)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x1625))+((sj0*x1627))+(((-1.0)*cj0*x1628))+((r11*x1626)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj0*x1628))+((r01*x1626))+((r11*x1625))+(((-1.0)*cj0*x1627))))+IKsqr(((((-1.0)*r01*x1625))+((sj0*x1627))+(((-1.0)*cj0*x1628))+((r11*x1626))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj0*x1628))+((r01*x1626))+((r11*x1625))+(((-1.0)*cj0*x1627))), ((((-1.0)*r01*x1625))+((sj0*x1627))+(((-1.0)*cj0*x1628))+((r11*x1626))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1629=IKcos(j4);
IkReal x1630=IKsin(j4);
IkReal x1631=(cj6*sj0);
IkReal x1632=((0.02626)*r10);
IkReal x1633=(r11*sj6);
IkReal x1634=(r11*sj5);
IkReal x1635=(sj0*sj6);
IkReal x1636=(r10*sj5);
IkReal x1637=((0.02626)*r01);
IkReal x1638=(cj5*r12);
IkReal x1639=(cj0*cj6);
IkReal x1640=((1.0)*sj0);
IkReal x1641=(cj5*r02);
IkReal x1642=(cj0*sj6);
IkReal x1643=((1.0)*r10);
IkReal x1644=((1.0)*r01);
IkReal x1645=(r00*sj5);
IkReal x1646=((1.0)*cj0);
IkReal x1647=((0.02626)*r00);
IkReal x1648=((1.0)*x1630);
evalcond[0]=(((sj0*x1633))+(((-1.0)*r00*x1639))+(((-1.0)*x1648))+((r01*x1642))+(((-1.0)*x1631*x1643)));
evalcond[1]=((((-1.0)*x1629))+(((-1.0)*x1635*x1644))+(((-1.0)*x1639*x1643))+((r00*x1631))+((cj0*x1633)));
evalcond[2]=(((sj0*x1638))+x1629+((x1635*x1636))+((x1642*x1645))+((cj0*x1641))+((x1631*x1634))+((r01*sj5*x1639)));
evalcond[3]=(((x1636*x1642))+(((-1.0)*x1635*x1645))+(((-1.0)*x1640*x1641))+(((-1.0)*x1648))+((cj0*x1638))+((x1634*x1639))+(((-1.0)*sj5*x1631*x1644)));
evalcond[4]=((-0.1264)+(((-1.0)*py*x1646))+(((0.0718)*x1630))+(((-1.0)*x1635*x1637))+(((-0.02626)*x1629))+(((0.02626)*cj0*x1633))+((px*sj0))+(((-1.0)*x1632*x1639))+((x1631*x1647)));
evalcond[5]=((-0.21426)+(((-1.0)*py*x1640))+((x1637*x1642))+(((-1.0)*px*x1646))+(((-0.02626)*x1630))+(((-1.0)*x1639*x1647))+(((-0.0718)*x1629))+(((0.02626)*sj0*x1633))+(((-1.0)*x1631*x1632)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1649=(cj5*cj6);
IkReal x1650=((1.0)*sj0);
IkReal x1651=(r21*sj6);
IkReal x1652=(cj0*sj5);
IkReal x1653=((1.0)*r22);
IkReal x1654=(cj6*r20);
IkReal x1655=(cj5*sj6);
IkReal x1656=((1.0)*cj0);
IkReal x1657=((1.0)*sj5);
IkReal x1658=(x1655*x1656);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x1653))+((r21*x1649))+((r20*x1655)));
evalcond[2]=(x1654+(((-1.0)*x1651)));
evalcond[3]=((((-1.0)*cj5*x1653))+(((-1.0)*cj6*r21*x1657))+(((-1.0)*r20*sj6*x1657)));
evalcond[4]=((((-1.0)*r00*x1658))+((r02*x1652))+((r12*sj0*sj5))+(((-1.0)*r10*x1650*x1655))+(((-1.0)*r01*x1649*x1656))+(((-1.0)*r11*x1649*x1650)));
evalcond[5]=(((r12*x1652))+((r01*sj0*x1649))+(((-1.0)*r10*x1658))+(((-1.0)*r02*sj5*x1650))+((r00*sj0*x1655))+(((-1.0)*r11*x1649*x1656)));
evalcond[6]=((-0.0001)+(((0.02626)*x1654))+(((-0.02626)*x1651))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1659=(cj0*cj6);
IkReal x1660=(cj6*sj0);
IkReal x1661=(cj0*sj6);
IkReal x1662=((1.0)*sj0*sj6);
if( IKabs((((r10*x1660))+(((-1.0)*r01*x1661))+(((-1.0)*r11*x1662))+((r00*x1659)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x1662))+((r11*x1661))+((r00*x1660))+(((-1.0)*r10*x1659)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x1660))+(((-1.0)*r01*x1661))+(((-1.0)*r11*x1662))+((r00*x1659))))+IKsqr(((((-1.0)*r01*x1662))+((r11*x1661))+((r00*x1660))+(((-1.0)*r10*x1659))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x1660))+(((-1.0)*r01*x1661))+(((-1.0)*r11*x1662))+((r00*x1659))), ((((-1.0)*r01*x1662))+((r11*x1661))+((r00*x1660))+(((-1.0)*r10*x1659))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1663=IKsin(j4);
IkReal x1664=IKcos(j4);
IkReal x1665=(cj6*sj0);
IkReal x1666=((0.02626)*r10);
IkReal x1667=(r11*sj6);
IkReal x1668=(r11*sj5);
IkReal x1669=(sj0*sj6);
IkReal x1670=(r10*sj5);
IkReal x1671=((0.02626)*r01);
IkReal x1672=(cj5*r12);
IkReal x1673=(cj0*cj6);
IkReal x1674=((1.0)*sj0);
IkReal x1675=(cj5*r02);
IkReal x1676=(cj0*sj6);
IkReal x1677=((1.0)*r10);
IkReal x1678=((1.0)*r01);
IkReal x1679=(r00*sj5);
IkReal x1680=((1.0)*cj0);
IkReal x1681=((0.02626)*r00);
IkReal x1682=((1.0)*x1664);
evalcond[0]=(((sj0*x1667))+x1663+(((-1.0)*x1665*x1677))+((r01*x1676))+(((-1.0)*r00*x1673)));
evalcond[1]=((((-1.0)*x1673*x1677))+(((-1.0)*x1682))+(((-1.0)*x1669*x1678))+((r00*x1665))+((cj0*x1667)));
evalcond[2]=(((sj0*x1672))+((x1676*x1679))+((cj0*x1675))+(((-1.0)*x1682))+((x1669*x1670))+((r01*sj5*x1673))+((x1665*x1668)));
evalcond[3]=(((cj0*x1672))+(((-1.0)*x1663))+((x1668*x1673))+(((-1.0)*sj5*x1665*x1678))+(((-1.0)*x1669*x1679))+(((-1.0)*x1674*x1675))+((x1670*x1676)));
evalcond[4]=((-0.1264)+(((-1.0)*py*x1680))+(((-1.0)*x1669*x1671))+(((0.0718)*x1663))+(((0.02626)*cj0*x1667))+(((-0.02626)*x1664))+((px*sj0))+(((-1.0)*x1666*x1673))+((x1665*x1681)));
evalcond[5]=((-0.01934)+(((0.02626)*x1663))+(((0.0718)*x1664))+(((-1.0)*x1673*x1681))+(((-1.0)*py*x1674))+(((0.02626)*sj0*x1667))+((x1671*x1676))+(((-1.0)*px*x1680))+(((-1.0)*x1665*x1666)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1683=((1.0)*cj6);
CheckValue<IkReal> x1684=IKPowWithIntegerCheck(sj3,-1);
if(!x1684.valid){
continue;
}
if( IKabs(((x1684.value)*((((r21*sj6))+(((-1.0)*r20*x1683)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x1683))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1684.value)*((((r21*sj6))+(((-1.0)*r20*x1683))))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x1683))+(((-1.0)*r01*sj0*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x1684.value)*((((r21*sj6))+(((-1.0)*r20*x1683))))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x1683))+(((-1.0)*r01*sj0*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x1685=IKcos(j4);
IkReal x1686=IKsin(j4);
IkReal x1687=(cj6*sj0);
IkReal x1688=((0.02626)*r10);
IkReal x1689=(sj0*sj6);
IkReal x1690=(r11*sj5);
IkReal x1691=(r10*sj5);
IkReal x1692=((0.02626)*r01);
IkReal x1693=(cj0*sj6);
IkReal x1694=(cj0*cj6);
IkReal x1695=(r21*sj6);
IkReal x1696=((1.0)*cj5);
IkReal x1697=(cj6*r20);
IkReal x1698=((1.0)*r10);
IkReal x1699=((1.0)*r01);
IkReal x1700=(r00*sj5);
IkReal x1701=((1.0)*py);
IkReal x1702=(cj5*r12);
IkReal x1703=((1.0)*sj5);
IkReal x1704=((0.02626)*r00);
IkReal x1705=((0.02626)*r11);
IkReal x1706=(cj3*x1686);
IkReal x1707=(sj3*x1686);
IkReal x1708=(cj3*x1685);
IkReal x1709=((1.0)*x1685);
evalcond[0]=(x1707+x1697+(((-1.0)*x1695)));
evalcond[1]=((((-1.0)*sj3*x1709))+(((-1.0)*r22*x1696))+(((-1.0)*cj6*r21*x1703))+(((-1.0)*r20*sj6*x1703)));
evalcond[2]=(((r00*x1687))+((r11*x1693))+(((-1.0)*x1694*x1698))+(((-1.0)*x1709))+(((-1.0)*x1689*x1699)));
evalcond[3]=(((r01*x1693))+((r11*x1689))+(((-1.0)*x1687*x1698))+(((-1.0)*x1706))+(((-1.0)*r00*x1694)));
evalcond[4]=((-0.0001)+(((-0.02626)*x1695))+(((0.02626)*x1697))+(((0.0718)*sj3*x1685))+pz+(((0.09746)*sj3))+(((0.02626)*x1707)));
evalcond[5]=(((x1693*x1700))+((cj0*cj5*r02))+x1708+((x1689*x1691))+((r01*sj5*x1694))+((sj0*x1702))+((x1687*x1690)));
evalcond[6]=((((-1.0)*sj5*x1687*x1699))+((x1690*x1694))+(((-1.0)*x1686))+((cj0*x1702))+((x1691*x1693))+(((-1.0)*x1689*x1700))+(((-1.0)*r02*sj0*x1696)));
evalcond[7]=((-0.1264)+(((-1.0)*x1688*x1694))+((x1693*x1705))+(((0.0718)*x1686))+((x1687*x1704))+(((-0.02626)*x1685))+(((-1.0)*cj0*x1701))+((px*sj0))+(((-1.0)*x1689*x1692)));
evalcond[8]=((-0.1168)+(((-1.0)*x1687*x1688))+(((-0.0718)*x1708))+((x1692*x1693))+(((-1.0)*sj0*x1701))+(((-0.09746)*cj3))+((x1689*x1705))+(((-1.0)*x1694*x1704))+(((-1.0)*cj0*px))+(((-0.02626)*x1706)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1710=((1.0)*sj5);
CheckValue<IkReal> x1711=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x1711.valid){
continue;
}
CheckValue<IkReal> x1712 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*r20*sj6*x1710))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x1710))),IKFAST_ATAN2_MAGTHRESH);
if(!x1712.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1711.value)))+(x1712.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x1713=IKcos(j4);
IkReal x1714=IKsin(j4);
IkReal x1715=(cj6*sj0);
IkReal x1716=((0.02626)*r10);
IkReal x1717=(sj0*sj6);
IkReal x1718=(r11*sj5);
IkReal x1719=(r10*sj5);
IkReal x1720=((0.02626)*r01);
IkReal x1721=(cj0*sj6);
IkReal x1722=(cj0*cj6);
IkReal x1723=(r21*sj6);
IkReal x1724=((1.0)*cj5);
IkReal x1725=(cj6*r20);
IkReal x1726=((1.0)*r10);
IkReal x1727=((1.0)*r01);
IkReal x1728=(r00*sj5);
IkReal x1729=((1.0)*py);
IkReal x1730=(cj5*r12);
IkReal x1731=((1.0)*sj5);
IkReal x1732=((0.02626)*r00);
IkReal x1733=((0.02626)*r11);
IkReal x1734=(cj3*x1714);
IkReal x1735=(sj3*x1714);
IkReal x1736=(cj3*x1713);
IkReal x1737=((1.0)*x1713);
evalcond[0]=(x1725+x1735+(((-1.0)*x1723)));
evalcond[1]=((((-1.0)*r22*x1724))+(((-1.0)*r20*sj6*x1731))+(((-1.0)*cj6*r21*x1731))+(((-1.0)*sj3*x1737)));
evalcond[2]=((((-1.0)*x1722*x1726))+((r00*x1715))+(((-1.0)*x1717*x1727))+((r11*x1721))+(((-1.0)*x1737)));
evalcond[3]=(((r01*x1721))+(((-1.0)*x1715*x1726))+((r11*x1717))+(((-1.0)*r00*x1722))+(((-1.0)*x1734)));
evalcond[4]=((-0.0001)+(((0.02626)*x1735))+(((0.02626)*x1725))+(((-0.02626)*x1723))+pz+(((0.09746)*sj3))+(((0.0718)*sj3*x1713)));
evalcond[5]=(((cj0*cj5*r02))+x1736+((x1721*x1728))+((sj0*x1730))+((x1715*x1718))+((r01*sj5*x1722))+((x1717*x1719)));
evalcond[6]=(((cj0*x1730))+(((-1.0)*x1717*x1728))+(((-1.0)*x1714))+((x1718*x1722))+(((-1.0)*sj5*x1715*x1727))+((x1719*x1721))+(((-1.0)*r02*sj0*x1724)));
evalcond[7]=((-0.1264)+(((-0.02626)*x1713))+((x1715*x1732))+(((-1.0)*cj0*x1729))+(((0.0718)*x1714))+((x1721*x1733))+(((-1.0)*x1717*x1720))+((px*sj0))+(((-1.0)*x1716*x1722)));
evalcond[8]=((-0.1168)+(((-1.0)*sj0*x1729))+(((-1.0)*x1722*x1732))+((x1717*x1733))+((x1720*x1721))+(((-0.02626)*x1734))+(((-0.09746)*cj3))+(((-1.0)*x1715*x1716))+(((-0.0718)*x1736))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1738=(cj0*sj5);
IkReal x1739=(cj5*cj6);
IkReal x1740=((1.0)*sj5);
IkReal x1741=((1.0)*cj0);
IkReal x1742=((1.0)*sj0);
IkReal x1743=(cj5*sj6);
IkReal x1744=(r10*x1743);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x1739))+(((-1.0)*r22*x1740))+((r20*x1743))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*r11*x1739*x1742))+sj3+(((-1.0)*r00*x1741*x1743))+((r12*sj0*sj5))+((r02*x1738))+(((-1.0)*x1742*x1744))+(((-1.0)*r01*x1739*x1741)));
evalcond[3]=((((-1.0)*x1741*x1744))+(((-1.0)*r11*x1739*x1741))+((r01*sj0*x1739))+(((-1.0)*r02*sj0*x1740))+((r12*x1738))+((r00*sj0*x1743)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x1745=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r21*x1745))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x1745)))))+(IKabs(((((-1.0)*cj6*r20))+((r21*sj6))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x1746=(cj5*cj6);
IkReal x1747=(r11*sj0);
IkReal x1748=(cj6*sj5);
IkReal x1749=((1.0)*cj0);
IkReal x1750=(r10*sj6);
IkReal x1751=(sj0*sj5);
IkReal x1752=(r00*sj6);
IkReal x1753=(cj0*sj5);
IkReal x1754=((0.02626)*cj0);
IkReal x1755=(r01*sj6);
IkReal x1756=((1.0)*sj0);
IkReal x1757=(cj6*r10);
IkReal x1758=(cj5*sj0);
IkReal x1759=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x1746))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x1756*x1757))+(((-1.0)*x1749*x1759))+((sj6*x1747))+((cj0*x1755)));
evalcond[3]=((1.0)+(((-1.0)*x1746*x1747))+((r02*x1753))+(((-1.0)*cj5*x1749*x1752))+(((-1.0)*r01*x1746*x1749))+(((-1.0)*cj5*x1750*x1756))+((r12*x1751)));
evalcond[4]=(((x1752*x1753))+((cj0*cj5*r02))+((x1747*x1748))+((x1750*x1751))+((cj0*r01*x1748))+((r12*x1758)));
evalcond[5]=(((x1752*x1758))+(((-1.0)*r02*x1751))+((r01*sj0*x1746))+(((-1.0)*cj5*x1749*x1750))+(((-1.0)*r11*x1746*x1749))+((r12*x1753)));
evalcond[6]=((0.1148)+((x1754*x1755))+(((0.02626)*sj6*x1747))+(((-1.0)*py*x1756))+(((-1.0)*x1754*x1759))+(((-0.02626)*sj0*x1757))+(((-1.0)*px*x1749)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1760=IKcos(j4);
IkReal x1761=IKsin(j4);
IkReal x1762=(cj0*sj6);
IkReal x1763=((0.02626)*cj6);
IkReal x1764=(cj0*r10);
IkReal x1765=((0.02626)*sj6);
IkReal x1766=(r01*sj0);
IkReal x1767=((1.0)*cj5);
IkReal x1768=((1.0)*cj6);
IkReal x1769=((1.0)*sj6);
IkReal x1770=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x1769))+x1761+((cj6*r20)));
evalcond[1]=((((-1.0)*x1760))+(((-1.0)*r20*sj5*x1769))+(((-1.0)*r21*sj5*x1768))+(((-1.0)*r22*x1767)));
evalcond[2]=((0.09736)+((r20*x1763))+(((-1.0)*r21*x1765))+(((0.02626)*x1761))+pz+(((0.0718)*x1760)));
evalcond[3]=(x1760+(((-1.0)*x1766*x1769))+((r11*x1762))+((cj6*x1770))+(((-1.0)*x1764*x1768)));
evalcond[4]=(x1761+(((-1.0)*r02*sj0*x1767))+((cj0*cj5*r12))+((cj0*cj6*r11*sj5))+((r10*sj5*x1762))+(((-1.0)*sj5*x1769*x1770))+(((-1.0)*sj5*x1766*x1768)));
evalcond[5]=((-0.1246)+((x1763*x1770))+(((-1.0)*x1763*x1764))+(((0.02626)*r11*x1762))+(((-0.0718)*x1761))+(((-1.0)*x1765*x1766))+(((0.02626)*x1760))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1771=(cj5*cj6);
IkReal x1772=(r11*sj0);
IkReal x1773=(cj6*sj5);
IkReal x1774=((1.0)*cj0);
IkReal x1775=(r10*sj6);
IkReal x1776=(sj0*sj5);
IkReal x1777=(r00*sj6);
IkReal x1778=(cj0*sj5);
IkReal x1779=((0.02626)*cj0);
IkReal x1780=(r01*sj6);
IkReal x1781=((1.0)*sj0);
IkReal x1782=(cj6*r10);
IkReal x1783=(cj5*sj0);
IkReal x1784=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x1771))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x1774*x1784))+(((-1.0)*x1781*x1782))+((sj6*x1772))+((cj0*x1780)));
evalcond[3]=((-1.0)+((r12*x1776))+((r02*x1778))+(((-1.0)*cj5*x1774*x1777))+(((-1.0)*r01*x1771*x1774))+(((-1.0)*x1771*x1772))+(((-1.0)*cj5*x1775*x1781)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x1773))+((r12*x1783))+((x1775*x1776))+((x1772*x1773))+((x1777*x1778)));
evalcond[5]=(((r01*sj0*x1771))+((r12*x1778))+(((-1.0)*r11*x1771*x1774))+((x1777*x1783))+(((-1.0)*cj5*x1774*x1775))+(((-1.0)*r02*x1776)));
evalcond[6]=((0.1148)+(((-0.02626)*sj0*x1782))+(((-1.0)*px*x1774))+((x1779*x1780))+(((-1.0)*py*x1781))+(((-1.0)*x1779*x1784))+(((0.02626)*sj6*x1772)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1785=IKcos(j4);
IkReal x1786=IKsin(j4);
IkReal x1787=(cj0*sj6);
IkReal x1788=((0.02626)*cj6);
IkReal x1789=(cj0*r10);
IkReal x1790=((0.02626)*sj6);
IkReal x1791=(r01*sj0);
IkReal x1792=((1.0)*cj5);
IkReal x1793=((1.0)*cj6);
IkReal x1794=((1.0)*sj6);
IkReal x1795=(r00*sj0);
evalcond[0]=((((-1.0)*x1786))+((cj6*r20))+(((-1.0)*r21*x1794)));
evalcond[1]=((((-1.0)*r22*x1792))+(((-1.0)*r21*sj5*x1793))+x1785+(((-1.0)*r20*sj5*x1794)));
evalcond[2]=((-0.09756)+((r20*x1788))+(((-0.02626)*x1786))+pz+(((-1.0)*r21*x1790))+(((-0.0718)*x1785)));
evalcond[3]=(x1785+((cj6*x1795))+(((-1.0)*x1789*x1793))+((r11*x1787))+(((-1.0)*x1791*x1794)));
evalcond[4]=((((-1.0)*r02*sj0*x1792))+((r10*sj5*x1787))+x1786+((cj0*cj5*r12))+(((-1.0)*sj5*x1791*x1793))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x1794*x1795)));
evalcond[5]=((-0.1246)+(((-1.0)*x1790*x1791))+(((0.02626)*r11*x1787))+(((0.02626)*x1785))+(((-1.0)*x1788*x1789))+((px*sj0))+(((-0.0718)*x1786))+((x1788*x1795))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1796=(cj5*cj6);
IkReal x1797=((1.0)*sj0);
IkReal x1798=(r21*sj6);
IkReal x1799=(cj0*sj5);
IkReal x1800=((1.0)*r22);
IkReal x1801=(cj6*r20);
IkReal x1802=(cj5*sj6);
IkReal x1803=((1.0)*cj0);
IkReal x1804=((1.0)*sj5);
IkReal x1805=(x1802*x1803);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x1796))+(((-1.0)*sj5*x1800))+((r20*x1802)));
evalcond[2]=(x1801+(((-1.0)*x1798)));
evalcond[3]=((((-1.0)*r20*sj6*x1804))+(((-1.0)*cj5*x1800))+(((-1.0)*cj6*r21*x1804)));
evalcond[4]=((((-1.0)*r00*x1805))+(((-1.0)*r01*x1796*x1803))+(((-1.0)*r10*x1797*x1802))+((r12*sj0*sj5))+((r02*x1799))+(((-1.0)*r11*x1796*x1797)));
evalcond[5]=((((-1.0)*r10*x1805))+(((-1.0)*r02*sj5*x1797))+(((-1.0)*r11*x1796*x1803))+((r00*sj0*x1802))+((r01*sj0*x1796))+((r12*x1799)));
evalcond[6]=((-0.0001)+(((-0.02626)*x1798))+pz+(((0.02626)*x1801)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1806=(cj0*cj6);
IkReal x1807=(sj0*sj6);
IkReal x1808=((1.0)*r11);
IkReal x1809=(cj6*sj0);
IkReal x1810=(cj0*sj6);
if( IKabs(((((-1.0)*r01*x1810))+((r00*x1806))+((r10*x1809))+(((-1.0)*x1807*x1808)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*x1809))+(((-1.0)*x1808*x1810))+((r01*x1807))+((r10*x1806)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x1810))+((r00*x1806))+((r10*x1809))+(((-1.0)*x1807*x1808))))+IKsqr(((((-1.0)*r00*x1809))+(((-1.0)*x1808*x1810))+((r01*x1807))+((r10*x1806))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*x1810))+((r00*x1806))+((r10*x1809))+(((-1.0)*x1807*x1808))), ((((-1.0)*r00*x1809))+(((-1.0)*x1808*x1810))+((r01*x1807))+((r10*x1806))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1811=IKcos(j4);
IkReal x1812=IKsin(j4);
IkReal x1813=(cj6*sj0);
IkReal x1814=((0.02626)*r10);
IkReal x1815=(r11*sj6);
IkReal x1816=(r11*sj5);
IkReal x1817=(sj0*sj6);
IkReal x1818=(r10*sj5);
IkReal x1819=((0.02626)*r01);
IkReal x1820=(cj5*r12);
IkReal x1821=(cj0*cj6);
IkReal x1822=((1.0)*sj0);
IkReal x1823=(cj5*r02);
IkReal x1824=(cj0*sj6);
IkReal x1825=((1.0)*r10);
IkReal x1826=((1.0)*r01);
IkReal x1827=(r00*sj5);
IkReal x1828=((1.0)*cj0);
IkReal x1829=((0.02626)*r00);
evalcond[0]=((((-1.0)*x1813*x1825))+((r01*x1824))+((sj0*x1815))+x1812+(((-1.0)*r00*x1821)));
evalcond[1]=((((-1.0)*x1821*x1825))+((cj0*x1815))+(((-1.0)*x1817*x1826))+x1811+((r00*x1813)));
evalcond[2]=(((cj0*x1823))+((r01*sj5*x1821))+((x1813*x1816))+((x1824*x1827))+((x1817*x1818))+((sj0*x1820))+(((-1.0)*x1811)));
evalcond[3]=(((cj0*x1820))+((x1818*x1824))+(((-1.0)*sj5*x1813*x1826))+(((-1.0)*x1817*x1827))+x1812+(((-1.0)*x1822*x1823))+((x1816*x1821)));
evalcond[4]=((-0.1246)+(((-1.0)*py*x1828))+(((0.02626)*x1811))+(((-0.0718)*x1812))+(((0.02626)*cj0*x1815))+((px*sj0))+(((-1.0)*x1814*x1821))+(((-1.0)*x1817*x1819))+((x1813*x1829)));
evalcond[5]=((0.21226)+(((-1.0)*x1821*x1829))+((x1819*x1824))+(((-1.0)*x1813*x1814))+(((0.02626)*sj0*x1815))+(((-1.0)*py*x1822))+(((0.02626)*x1812))+(((0.0718)*x1811))+(((-1.0)*px*x1828)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1830=(cj5*cj6);
IkReal x1831=((1.0)*sj0);
IkReal x1832=(r21*sj6);
IkReal x1833=(cj0*sj5);
IkReal x1834=((1.0)*r22);
IkReal x1835=(cj6*r20);
IkReal x1836=(cj5*sj6);
IkReal x1837=((1.0)*cj0);
IkReal x1838=((1.0)*sj5);
IkReal x1839=(x1836*x1837);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x1830))+(((-1.0)*sj5*x1834))+((r20*x1836)));
evalcond[2]=((((-1.0)*x1832))+x1835);
evalcond[3]=((((-1.0)*cj5*x1834))+(((-1.0)*cj6*r21*x1838))+(((-1.0)*r20*sj6*x1838)));
evalcond[4]=((((-1.0)*r10*x1831*x1836))+(((-1.0)*r01*x1830*x1837))+(((-1.0)*r00*x1839))+((r12*sj0*sj5))+((r02*x1833))+(((-1.0)*r11*x1830*x1831)));
evalcond[5]=(((r01*sj0*x1830))+(((-1.0)*r10*x1839))+(((-1.0)*r02*sj5*x1831))+((r00*sj0*x1836))+((r12*x1833))+(((-1.0)*r11*x1830*x1837)));
evalcond[6]=((-0.0001)+(((-0.02626)*x1832))+pz+(((0.02626)*x1835)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1840=(sj0*sj6);
IkReal x1841=(cj6*r10);
IkReal x1842=((1.0)*sj0);
IkReal x1843=(cj6*r00);
IkReal x1844=(cj0*sj6);
if( IKabs(((((-1.0)*x1841*x1842))+(((-1.0)*cj0*x1843))+((r01*x1844))+((r11*x1840)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj0*x1841))+(((-1.0)*x1842*x1843))+((r01*x1840))+(((-1.0)*r11*x1844)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1841*x1842))+(((-1.0)*cj0*x1843))+((r01*x1844))+((r11*x1840))))+IKsqr((((cj0*x1841))+(((-1.0)*x1842*x1843))+((r01*x1840))+(((-1.0)*r11*x1844))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x1841*x1842))+(((-1.0)*cj0*x1843))+((r01*x1844))+((r11*x1840))), (((cj0*x1841))+(((-1.0)*x1842*x1843))+((r01*x1840))+(((-1.0)*r11*x1844))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1845=IKcos(j4);
IkReal x1846=IKsin(j4);
IkReal x1847=(cj6*sj0);
IkReal x1848=((0.02626)*r10);
IkReal x1849=(r11*sj6);
IkReal x1850=(r11*sj5);
IkReal x1851=(sj0*sj6);
IkReal x1852=(r10*sj5);
IkReal x1853=((0.02626)*r01);
IkReal x1854=(cj5*r12);
IkReal x1855=(cj0*cj6);
IkReal x1856=((1.0)*sj0);
IkReal x1857=(cj5*r02);
IkReal x1858=(cj0*sj6);
IkReal x1859=((1.0)*r10);
IkReal x1860=((1.0)*r01);
IkReal x1861=(r00*sj5);
IkReal x1862=((1.0)*cj0);
IkReal x1863=((0.02626)*r00);
evalcond[0]=(((cj0*x1849))+(((-1.0)*x1851*x1860))+((r00*x1847))+x1845+(((-1.0)*x1855*x1859)));
evalcond[1]=(((r01*x1858))+((sj0*x1849))+(((-1.0)*r00*x1855))+(((-1.0)*x1846))+(((-1.0)*x1847*x1859)));
evalcond[2]=(((r01*sj5*x1855))+((x1851*x1852))+((x1847*x1850))+((x1858*x1861))+((sj0*x1854))+x1845+((cj0*x1857)));
evalcond[3]=((((-1.0)*sj5*x1847*x1860))+((x1852*x1858))+((x1850*x1855))+(((-1.0)*x1851*x1861))+(((-1.0)*x1856*x1857))+x1846+((cj0*x1854)));
evalcond[4]=((-0.1246)+(((-1.0)*x1848*x1855))+(((-1.0)*x1851*x1853))+(((-0.0718)*x1846))+((x1847*x1863))+(((0.02626)*cj0*x1849))+(((0.02626)*x1845))+(((-1.0)*py*x1862))+((px*sj0)));
evalcond[5]=((0.01734)+(((-0.02626)*x1846))+(((-1.0)*x1855*x1863))+(((0.02626)*sj0*x1849))+(((-1.0)*px*x1862))+(((-1.0)*py*x1856))+(((-0.0718)*x1845))+((x1853*x1858))+(((-1.0)*x1847*x1848)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1864=((1.0)*sj5);
IkReal x1865=((1.0)*sj6);
CheckValue<IkReal> x1866=IKPowWithIntegerCheck(cj3,-1);
if(!x1866.valid){
continue;
}
CheckValue<IkReal> x1867=IKPowWithIntegerCheck(sj3,-1);
if(!x1867.valid){
continue;
}
if( IKabs(((x1866.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x1865))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x1865)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1867.value)*(((((-1.0)*cj6*r21*x1864))+(((-1.0)*r20*sj6*x1864))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1866.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x1865))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x1865))))))+IKsqr(((x1867.value)*(((((-1.0)*cj6*r21*x1864))+(((-1.0)*r20*sj6*x1864))+(((-1.0)*cj5*r22))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x1866.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x1865))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x1865))))), ((x1867.value)*(((((-1.0)*cj6*r21*x1864))+(((-1.0)*r20*sj6*x1864))+(((-1.0)*cj5*r22))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x1868=IKcos(j4);
IkReal x1869=IKsin(j4);
IkReal x1870=(cj6*sj0);
IkReal x1871=((0.02626)*r10);
IkReal x1872=(sj0*sj6);
IkReal x1873=(cj5*r12);
IkReal x1874=(r11*sj5);
IkReal x1875=(r10*sj5);
IkReal x1876=((0.02626)*r01);
IkReal x1877=(cj0*sj6);
IkReal x1878=(cj0*cj6);
IkReal x1879=(r21*sj6);
IkReal x1880=((1.0)*cj5);
IkReal x1881=(cj6*r20);
IkReal x1882=((1.0)*r10);
IkReal x1883=((1.0)*r01);
IkReal x1884=(r00*sj5);
IkReal x1885=((1.0)*py);
IkReal x1886=((1.0)*sj5);
IkReal x1887=((0.02626)*r00);
IkReal x1888=((0.02626)*r11);
IkReal x1889=((0.02626)*x1869);
IkReal x1890=(cj3*x1868);
IkReal x1891=(sj3*x1868);
evalcond[0]=(x1881+((sj3*x1869))+(((-1.0)*x1879)));
evalcond[1]=((((-1.0)*cj6*r21*x1886))+(((-1.0)*r22*x1880))+(((-1.0)*x1891))+(((-1.0)*r20*sj6*x1886)));
evalcond[2]=((((-1.0)*x1872*x1883))+(((-1.0)*x1878*x1882))+((r00*x1870))+x1868+((r11*x1877)));
evalcond[3]=(((cj3*x1869))+(((-1.0)*x1870*x1882))+((r01*x1877))+(((-1.0)*r00*x1878))+((r11*x1872)));
evalcond[4]=((-0.0001)+(((0.02626)*x1881))+pz+(((0.0718)*x1891))+(((0.09746)*sj3))+((sj3*x1889))+(((-0.02626)*x1879)));
evalcond[5]=(((x1877*x1884))+((cj0*cj5*r02))+((sj0*x1873))+(((-1.0)*x1890))+((x1872*x1875))+((x1870*x1874))+((r01*sj5*x1878)));
evalcond[6]=((((-1.0)*r02*sj0*x1880))+((x1874*x1878))+(((-1.0)*sj5*x1870*x1883))+x1869+((x1875*x1877))+(((-1.0)*x1872*x1884))+((cj0*x1873)));
evalcond[7]=((-0.1246)+(((-1.0)*cj0*x1885))+((x1877*x1888))+(((0.02626)*x1868))+(((-1.0)*x1872*x1876))+((x1870*x1887))+(((-1.0)*x1871*x1878))+((px*sj0))+(((-0.0718)*x1869)));
evalcond[8]=((0.1148)+((x1876*x1877))+(((-1.0)*x1870*x1871))+(((-1.0)*x1878*x1887))+((x1872*x1888))+((cj3*x1889))+(((0.0718)*x1890))+(((0.09746)*cj3))+(((-1.0)*sj0*x1885))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1892=((1.0)*cj6);
CheckValue<IkReal> x1893=IKPowWithIntegerCheck(sj3,-1);
if(!x1893.valid){
continue;
}
if( IKabs(((x1893.value)*((((r21*sj6))+(((-1.0)*r20*x1892)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*sj0*x1892))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1893.value)*((((r21*sj6))+(((-1.0)*r20*x1892))))))+IKsqr(((((-1.0)*r00*sj0*x1892))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x1893.value)*((((r21*sj6))+(((-1.0)*r20*x1892))))), ((((-1.0)*r00*sj0*x1892))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x1894=IKcos(j4);
IkReal x1895=IKsin(j4);
IkReal x1896=(cj6*sj0);
IkReal x1897=((0.02626)*r10);
IkReal x1898=(sj0*sj6);
IkReal x1899=(cj5*r12);
IkReal x1900=(r11*sj5);
IkReal x1901=(r10*sj5);
IkReal x1902=((0.02626)*r01);
IkReal x1903=(cj0*sj6);
IkReal x1904=(cj0*cj6);
IkReal x1905=(r21*sj6);
IkReal x1906=((1.0)*cj5);
IkReal x1907=(cj6*r20);
IkReal x1908=((1.0)*r10);
IkReal x1909=((1.0)*r01);
IkReal x1910=(r00*sj5);
IkReal x1911=((1.0)*py);
IkReal x1912=((1.0)*sj5);
IkReal x1913=((0.02626)*r00);
IkReal x1914=((0.02626)*r11);
IkReal x1915=((0.02626)*x1895);
IkReal x1916=(cj3*x1894);
IkReal x1917=(sj3*x1894);
evalcond[0]=(((sj3*x1895))+(((-1.0)*x1905))+x1907);
evalcond[1]=((((-1.0)*r20*sj6*x1912))+(((-1.0)*r22*x1906))+(((-1.0)*cj6*r21*x1912))+(((-1.0)*x1917)));
evalcond[2]=(((r00*x1896))+(((-1.0)*x1898*x1909))+(((-1.0)*x1904*x1908))+x1894+((r11*x1903)));
evalcond[3]=(((r01*x1903))+((r11*x1898))+((cj3*x1895))+(((-1.0)*x1896*x1908))+(((-1.0)*r00*x1904)));
evalcond[4]=((-0.0001)+(((0.02626)*x1907))+(((-0.02626)*x1905))+pz+(((0.09746)*sj3))+((sj3*x1915))+(((0.0718)*x1917)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x1904))+((x1898*x1901))+((x1903*x1910))+(((-1.0)*x1916))+((sj0*x1899))+((x1896*x1900)));
evalcond[6]=(((x1901*x1903))+(((-1.0)*r02*sj0*x1906))+((x1900*x1904))+x1895+(((-1.0)*x1898*x1910))+((cj0*x1899))+(((-1.0)*sj5*x1896*x1909)));
evalcond[7]=((-0.1246)+(((-1.0)*cj0*x1911))+(((0.02626)*x1894))+(((-1.0)*x1898*x1902))+((x1903*x1914))+((px*sj0))+(((-0.0718)*x1895))+((x1896*x1913))+(((-1.0)*x1897*x1904)));
evalcond[8]=((0.1148)+(((-1.0)*x1904*x1913))+((cj3*x1915))+((x1898*x1914))+(((-1.0)*x1896*x1897))+(((0.09746)*cj3))+((x1902*x1903))+(((0.0718)*x1916))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x1911)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1918=((1.0)*sj5);
CheckValue<IkReal> x1919=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x1919.valid){
continue;
}
CheckValue<IkReal> x1920 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*r20*sj6*x1918))+(((-1.0)*cj6*r21*x1918))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x1920.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1919.value)))+(x1920.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x1921=IKcos(j4);
IkReal x1922=IKsin(j4);
IkReal x1923=(cj6*sj0);
IkReal x1924=((0.02626)*r10);
IkReal x1925=(sj0*sj6);
IkReal x1926=(cj5*r12);
IkReal x1927=(r11*sj5);
IkReal x1928=(r10*sj5);
IkReal x1929=((0.02626)*r01);
IkReal x1930=(cj0*sj6);
IkReal x1931=(cj0*cj6);
IkReal x1932=(r21*sj6);
IkReal x1933=((1.0)*cj5);
IkReal x1934=(cj6*r20);
IkReal x1935=((1.0)*r10);
IkReal x1936=((1.0)*r01);
IkReal x1937=(r00*sj5);
IkReal x1938=((1.0)*py);
IkReal x1939=((1.0)*sj5);
IkReal x1940=((0.02626)*r00);
IkReal x1941=((0.02626)*r11);
IkReal x1942=((0.02626)*x1922);
IkReal x1943=(cj3*x1921);
IkReal x1944=(sj3*x1921);
evalcond[0]=((((-1.0)*x1932))+x1934+((sj3*x1922)));
evalcond[1]=((((-1.0)*cj6*r21*x1939))+(((-1.0)*r22*x1933))+(((-1.0)*r20*sj6*x1939))+(((-1.0)*x1944)));
evalcond[2]=(((r00*x1923))+(((-1.0)*x1925*x1936))+x1921+(((-1.0)*x1931*x1935))+((r11*x1930)));
evalcond[3]=((((-1.0)*r00*x1931))+((r01*x1930))+(((-1.0)*x1923*x1935))+((cj3*x1922))+((r11*x1925)));
evalcond[4]=((-0.0001)+((sj3*x1942))+(((-0.02626)*x1932))+(((0.02626)*x1934))+(((0.0718)*x1944))+pz+(((0.09746)*sj3)));
evalcond[5]=(((r01*sj5*x1931))+((cj0*cj5*r02))+((x1930*x1937))+(((-1.0)*x1943))+((x1923*x1927))+((x1925*x1928))+((sj0*x1926)));
evalcond[6]=(((cj0*x1926))+(((-1.0)*x1925*x1937))+(((-1.0)*r02*sj0*x1933))+x1922+(((-1.0)*sj5*x1923*x1936))+((x1927*x1931))+((x1928*x1930)));
evalcond[7]=((-0.1246)+((x1923*x1940))+(((-1.0)*x1924*x1931))+(((-0.0718)*x1922))+(((-1.0)*x1925*x1929))+(((0.02626)*x1921))+((px*sj0))+((x1930*x1941))+(((-1.0)*cj0*x1938)));
evalcond[8]=((0.1148)+((cj3*x1942))+((x1925*x1941))+(((0.0718)*x1943))+((x1929*x1930))+(((-1.0)*x1931*x1940))+(((0.09746)*cj3))+(((-1.0)*sj0*x1938))+(((-1.0)*x1923*x1924))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x1951=IKPowWithIntegerCheck(sj3,-1);
if(!x1951.valid){
continue;
}
IkReal x1945=x1951.value;
IkReal x1946=(r21*sj6);
IkReal x1947=(cj6*sj3);
IkReal x1948=(cj3*sj2);
IkReal x1949=((1.0)*sj3*sj6);
IkReal x1950=((1.0)*cj6*r20);
CheckValue<IkReal> x1952=IKPowWithIntegerCheck(cj2,-1);
if(!x1952.valid){
continue;
}
if( IKabs((x1945*(((((-1.0)*x1950))+x1946)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x1945*(x1952.value)*((((r10*sj0*x1947))+(((-1.0)*x1948*x1950))+(((-1.0)*r11*sj0*x1949))+((cj0*r00*x1947))+(((-1.0)*cj0*r01*x1949))+((x1946*x1948)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x1945*(((((-1.0)*x1950))+x1946))))+IKsqr((x1945*(x1952.value)*((((r10*sj0*x1947))+(((-1.0)*x1948*x1950))+(((-1.0)*r11*sj0*x1949))+((cj0*r00*x1947))+(((-1.0)*cj0*r01*x1949))+((x1946*x1948))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x1945*(((((-1.0)*x1950))+x1946))), (x1945*(x1952.value)*((((r10*sj0*x1947))+(((-1.0)*x1948*x1950))+(((-1.0)*r11*sj0*x1949))+((cj0*r00*x1947))+(((-1.0)*cj0*r01*x1949))+((x1946*x1948))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x1953=IKsin(j4);
IkReal x1954=IKcos(j4);
IkReal x1955=(sj0*sj6);
IkReal x1956=((0.02626)*r01);
IkReal x1957=(cj6*sj0);
IkReal x1958=((0.02626)*r10);
IkReal x1959=(cj5*r12);
IkReal x1960=(r11*sj5);
IkReal x1961=(r10*sj5);
IkReal x1962=(cj0*sj6);
IkReal x1963=(cj0*cj6);
IkReal x1964=(r21*sj6);
IkReal x1965=((1.0)*cj5);
IkReal x1966=(cj2*cj3);
IkReal x1967=(cj6*r20);
IkReal x1968=((1.0)*r10);
IkReal x1969=((1.0)*r01);
IkReal x1970=(r00*sj5);
IkReal x1971=(cj3*sj2);
IkReal x1972=((1.0)*py);
IkReal x1973=((1.0)*sj5);
IkReal x1974=((0.02626)*r00);
IkReal x1975=((0.02626)*r11);
IkReal x1976=((0.02626)*x1953);
IkReal x1977=(cj2*x1953);
IkReal x1978=(cj2*x1954);
IkReal x1979=((0.0718)*x1954);
IkReal x1980=((1.0)*x1954);
IkReal x1981=((1.0)*sj2*x1953);
evalcond[0]=(((sj3*x1953))+(((-1.0)*x1964))+x1967);
evalcond[1]=((((-1.0)*r20*sj6*x1973))+(((-1.0)*r22*x1965))+(((-1.0)*sj3*x1980))+(((-1.0)*cj6*r21*x1973)));
evalcond[2]=((-0.0001)+(((-0.02626)*x1964))+((sj3*x1979))+((sj3*x1976))+(((0.02626)*x1967))+pz+(((0.09746)*sj3)));
evalcond[3]=((((-1.0)*x1957*x1968))+((r11*x1955))+(((-1.0)*r00*x1963))+x1978+((r01*x1962))+(((-1.0)*x1953*x1971)));
evalcond[4]=(((r11*x1962))+(((-1.0)*sj2*x1980))+((r00*x1957))+(((-1.0)*x1963*x1968))+(((-1.0)*x1955*x1969))+(((-1.0)*x1953*x1966)));
evalcond[5]=(((cj0*cj5*r02))+((x1954*x1971))+((sj0*x1959))+((x1957*x1960))+((x1955*x1961))+x1977+((r01*sj5*x1963))+((x1962*x1970)));
evalcond[6]=(((cj0*x1959))+(((-1.0)*x1981))+(((-1.0)*x1955*x1970))+(((-1.0)*sj5*x1957*x1969))+((x1954*x1966))+(((-1.0)*r02*sj0*x1965))+((x1961*x1962))+((x1960*x1963)));
evalcond[7]=((-0.1255)+(((-1.0)*x1958*x1963))+(((-1.0)*cj0*x1972))+(((-0.1158)*cj2))+(((-0.09746)*x1966))+(((-1.0)*x1966*x1979))+(((-1.0)*x1966*x1976))+(((-0.0009)*sj2))+((x1957*x1974))+((x1962*x1975))+((px*sj0))+(((-0.02626)*sj2*x1954))+(((-1.0)*x1955*x1956))+(((0.0718)*sj2*x1953)));
evalcond[8]=((-0.001)+(((-0.0718)*x1977))+(((-1.0)*x1957*x1958))+(((-0.1158)*sj2))+((x1956*x1962))+(((-0.09746)*x1971))+(((-1.0)*x1971*x1976))+(((-1.0)*x1971*x1979))+(((0.0009)*cj2))+((x1955*x1975))+(((-1.0)*sj0*x1972))+(((0.02626)*x1978))+(((-1.0)*x1963*x1974))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x1983=IKPowWithIntegerCheck(sj3,-1);
if(!x1983.valid){
continue;
}
IkReal x1982=x1983.value;
if( IKabs((x1982*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((0.000278551532033426)*x1982*(((5.0)+(((-4873.0)*sj3))+(((-50000.0)*pz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x1982*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr(((0.000278551532033426)*x1982*(((5.0)+(((-4873.0)*sj3))+(((-50000.0)*pz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x1982*(((((-1.0)*cj6*r20))+((r21*sj6))))), ((0.000278551532033426)*x1982*(((5.0)+(((-4873.0)*sj3))+(((-50000.0)*pz))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x1984=IKsin(j4);
IkReal x1985=IKcos(j4);
IkReal x1986=(sj0*sj6);
IkReal x1987=((0.02626)*r01);
IkReal x1988=(cj6*sj0);
IkReal x1989=((0.02626)*r10);
IkReal x1990=(cj5*r12);
IkReal x1991=(r11*sj5);
IkReal x1992=(r10*sj5);
IkReal x1993=(cj0*sj6);
IkReal x1994=(cj0*cj6);
IkReal x1995=(r21*sj6);
IkReal x1996=((1.0)*cj5);
IkReal x1997=(cj2*cj3);
IkReal x1998=(cj6*r20);
IkReal x1999=((1.0)*r10);
IkReal x2000=((1.0)*r01);
IkReal x2001=(r00*sj5);
IkReal x2002=(cj3*sj2);
IkReal x2003=((1.0)*py);
IkReal x2004=((1.0)*sj5);
IkReal x2005=((0.02626)*r00);
IkReal x2006=((0.02626)*r11);
IkReal x2007=((0.02626)*x1984);
IkReal x2008=(cj2*x1984);
IkReal x2009=(cj2*x1985);
IkReal x2010=((0.0718)*x1985);
IkReal x2011=((1.0)*x1985);
IkReal x2012=((1.0)*sj2*x1984);
evalcond[0]=(((sj3*x1984))+x1998+(((-1.0)*x1995)));
evalcond[1]=((((-1.0)*r20*sj6*x2004))+(((-1.0)*cj6*r21*x2004))+(((-1.0)*sj3*x2011))+(((-1.0)*r22*x1996)));
evalcond[2]=((-0.0001)+((sj3*x2007))+((sj3*x2010))+pz+(((-0.02626)*x1995))+(((0.02626)*x1998))+(((0.09746)*sj3)));
evalcond[3]=(x2009+((r11*x1986))+(((-1.0)*x1984*x2002))+(((-1.0)*r00*x1994))+((r01*x1993))+(((-1.0)*x1988*x1999)));
evalcond[4]=((((-1.0)*x1984*x1997))+((r11*x1993))+((r00*x1988))+(((-1.0)*x1994*x1999))+(((-1.0)*sj2*x2011))+(((-1.0)*x1986*x2000)));
evalcond[5]=(((sj0*x1990))+((x1988*x1991))+((cj0*cj5*r02))+((x1993*x2001))+x2008+((x1985*x2002))+((x1986*x1992))+((r01*sj5*x1994)));
evalcond[6]=((((-1.0)*x2012))+(((-1.0)*r02*sj0*x1996))+((cj0*x1990))+((x1991*x1994))+(((-1.0)*sj5*x1988*x2000))+((x1992*x1993))+(((-1.0)*x1986*x2001))+((x1985*x1997)));
evalcond[7]=((-0.1255)+(((-1.0)*x1986*x1987))+(((0.0718)*sj2*x1984))+((x1993*x2006))+(((-0.1158)*cj2))+(((-1.0)*x1997*x2010))+(((-1.0)*x1989*x1994))+(((-0.0009)*sj2))+(((-0.09746)*x1997))+((px*sj0))+(((-1.0)*cj0*x2003))+(((-1.0)*x1997*x2007))+(((-0.02626)*sj2*x1985))+((x1988*x2005)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((0.02626)*x2009))+((x1986*x2006))+(((-0.0718)*x2008))+(((-1.0)*x1994*x2005))+(((-1.0)*x2002*x2007))+(((-1.0)*x2002*x2010))+(((0.0009)*cj2))+(((-0.09746)*x2002))+(((-1.0)*x1988*x1989))+((x1987*x1993))+(((-1.0)*sj0*x2003))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2013=((1.0)*sj5);
CheckValue<IkReal> x2014=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x2014.valid){
continue;
}
CheckValue<IkReal> x2015 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*r20*sj6*x2013))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x2013))),IKFAST_ATAN2_MAGTHRESH);
if(!x2015.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2014.value)))+(x2015.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2016=IKsin(j4);
IkReal x2017=IKcos(j4);
IkReal x2018=(sj0*sj6);
IkReal x2019=((0.02626)*r01);
IkReal x2020=(cj6*sj0);
IkReal x2021=((0.02626)*r10);
IkReal x2022=(cj5*r12);
IkReal x2023=(r11*sj5);
IkReal x2024=(r10*sj5);
IkReal x2025=(cj0*sj6);
IkReal x2026=(cj0*cj6);
IkReal x2027=(r21*sj6);
IkReal x2028=((1.0)*cj5);
IkReal x2029=(cj2*cj3);
IkReal x2030=(cj6*r20);
IkReal x2031=((1.0)*r10);
IkReal x2032=((1.0)*r01);
IkReal x2033=(r00*sj5);
IkReal x2034=(cj3*sj2);
IkReal x2035=((1.0)*py);
IkReal x2036=((1.0)*sj5);
IkReal x2037=((0.02626)*r00);
IkReal x2038=((0.02626)*r11);
IkReal x2039=((0.02626)*x2016);
IkReal x2040=(cj2*x2016);
IkReal x2041=(cj2*x2017);
IkReal x2042=((0.0718)*x2017);
IkReal x2043=((1.0)*x2017);
IkReal x2044=((1.0)*sj2*x2016);
evalcond[0]=(x2030+(((-1.0)*x2027))+((sj3*x2016)));
evalcond[1]=((((-1.0)*r22*x2028))+(((-1.0)*sj3*x2043))+(((-1.0)*cj6*r21*x2036))+(((-1.0)*r20*sj6*x2036)));
evalcond[2]=((-0.0001)+((sj3*x2039))+(((0.02626)*x2030))+pz+(((-0.02626)*x2027))+(((0.09746)*sj3))+((sj3*x2042)));
evalcond[3]=(((r01*x2025))+(((-1.0)*x2020*x2031))+x2041+(((-1.0)*x2016*x2034))+(((-1.0)*r00*x2026))+((r11*x2018)));
evalcond[4]=(((r00*x2020))+((r11*x2025))+(((-1.0)*sj2*x2043))+(((-1.0)*x2018*x2032))+(((-1.0)*x2026*x2031))+(((-1.0)*x2016*x2029)));
evalcond[5]=(((x2020*x2023))+((x2025*x2033))+((cj0*cj5*r02))+((x2017*x2034))+((x2018*x2024))+x2040+((sj0*x2022))+((r01*sj5*x2026)));
evalcond[6]=(((x2024*x2025))+((x2017*x2029))+(((-1.0)*x2044))+(((-1.0)*r02*sj0*x2028))+((cj0*x2022))+((x2023*x2026))+(((-1.0)*sj5*x2020*x2032))+(((-1.0)*x2018*x2033)));
evalcond[7]=((-0.1255)+(((-1.0)*x2021*x2026))+((x2025*x2038))+(((-1.0)*x2029*x2042))+(((-0.1158)*cj2))+(((-0.09746)*x2029))+(((-1.0)*x2029*x2039))+(((-0.0009)*sj2))+(((-0.02626)*sj2*x2017))+((px*sj0))+(((0.0718)*sj2*x2016))+(((-1.0)*cj0*x2035))+((x2020*x2037))+(((-1.0)*x2018*x2019)));
evalcond[8]=((-0.001)+((x2018*x2038))+((x2019*x2025))+(((-0.1158)*sj2))+(((-0.09746)*x2034))+(((0.0009)*cj2))+(((-0.0718)*x2040))+(((-1.0)*x2026*x2037))+(((-1.0)*x2034*x2042))+(((-1.0)*x2020*x2021))+(((0.02626)*x2041))+(((-1.0)*sj0*x2035))+(((-1.0)*x2034*x2039))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2045=(cj5*cj6);
IkReal x2046=((1.0)*cj0);
IkReal x2047=((1.0)*sj5);
IkReal x2048=(cj5*sj6);
CheckValue<IkReal> x2049=IKPowWithIntegerCheck(cj2,-1);
if(!x2049.valid){
continue;
}
if( IKabs(((x2049.value)*(((((-1.0)*r11*x2045*x2046))+(((-1.0)*r10*x2046*x2048))+(((-1.0)*r02*sj0*x2047))+((cj0*r12*sj5))+((r01*sj0*x2045))+((r00*sj0*x2048)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r21*x2045))+(((-1.0)*r22*x2047))+((r20*x2048)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2049.value)*(((((-1.0)*r11*x2045*x2046))+(((-1.0)*r10*x2046*x2048))+(((-1.0)*r02*sj0*x2047))+((cj0*r12*sj5))+((r01*sj0*x2045))+((r00*sj0*x2048))))))+IKsqr((((r21*x2045))+(((-1.0)*r22*x2047))+((r20*x2048))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x2049.value)*(((((-1.0)*r11*x2045*x2046))+(((-1.0)*r10*x2046*x2048))+(((-1.0)*r02*sj0*x2047))+((cj0*r12*sj5))+((r01*sj0*x2045))+((r00*sj0*x2048))))), (((r21*x2045))+(((-1.0)*r22*x2047))+((r20*x2048))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2050=IKsin(j3);
IkReal x2051=(cj5*cj6);
IkReal x2052=((1.0)*cj0);
IkReal x2053=((1.0)*sj5);
IkReal x2054=((1.0)*sj0);
IkReal x2055=(cj0*sj5);
IkReal x2056=(cj5*sj6);
IkReal x2057=((1.0)*x2050);
IkReal x2058=(r10*x2056);
evalcond[0]=((((-1.0)*r22*x2053))+(((-1.0)*(IKcos(j3))))+((r20*x2056))+((r21*x2051)));
evalcond[1]=(((r12*x2055))+((r00*sj0*x2056))+(((-1.0)*cj2*x2057))+(((-1.0)*r02*sj0*x2053))+((r01*sj0*x2051))+(((-1.0)*r11*x2051*x2052))+(((-1.0)*x2052*x2058)));
evalcond[2]=((((-1.0)*x2054*x2058))+(((-1.0)*r01*x2051*x2052))+((r12*sj0*sj5))+(((-1.0)*sj2*x2057))+((r02*x2055))+(((-1.0)*r00*x2052*x2056))+(((-1.0)*r11*x2051*x2054)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
IkReal x2059=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*r20*sj6*x2059))+(((-1.0)*cj6*r21*x2059))+(((-1.0)*cj5*r22)))))+(IKabs(((((-1.0)*cj6*r20))+((r21*sj6))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
j4eval[0]=sj3;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x2060=(cj5*cj6);
IkReal x2061=((1.0)*sj0);
IkReal x2062=(r21*sj6);
IkReal x2063=(cj0*sj5);
IkReal x2064=((1.0)*r22);
IkReal x2065=(cj6*r20);
IkReal x2066=(cj5*sj6);
IkReal x2067=((1.0)*cj0);
IkReal x2068=((1.0)*sj5);
IkReal x2069=(x2066*x2067);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x2060))+(((-1.0)*sj5*x2064))+((r20*x2066)));
evalcond[2]=(x2065+(((-1.0)*x2062)));
evalcond[3]=((((-1.0)*r20*sj6*x2068))+(((-1.0)*cj5*x2064))+(((-1.0)*cj6*r21*x2068)));
evalcond[4]=((((-1.0)*r10*x2061*x2066))+(((-1.0)*r11*x2060*x2061))+((r12*sj0*sj5))+((r02*x2063))+(((-1.0)*r00*x2069))+(((-1.0)*r01*x2060*x2067)));
evalcond[5]=((((-1.0)*r10*x2069))+((r12*x2063))+(((-1.0)*r11*x2060*x2067))+((r01*sj0*x2060))+((r00*sj0*x2066))+(((-1.0)*r02*sj5*x2061)));
evalcond[6]=((-0.0001)+(((0.02626)*x2065))+pz+(((-0.02626)*x2062)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2070=((1.0)*r10);
IkReal x2071=((1.0)*cj2);
IkReal x2072=(r11*sj6);
IkReal x2073=(sj0*sj2);
IkReal x2074=(cj0*cj2);
IkReal x2075=(r01*sj6);
IkReal x2076=(cj0*x2075);
IkReal x2077=(cj6*x2073);
IkReal x2078=(cj0*cj6*sj2);
IkReal x2079=(cj2*cj6*sj0);
if( IKabs(((((-1.0)*cj6*x2070*x2074))+((sj2*x2076))+(((-1.0)*sj0*x2071*x2075))+(((-1.0)*x2070*x2077))+(((-1.0)*r00*x2078))+((r00*x2079))+((x2072*x2073))+((x2072*x2074)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj0*x2071*x2072))+(((-1.0)*x2070*x2078))+(((-1.0)*x2071*x2076))+((cj0*sj2*x2072))+((cj6*r00*x2074))+((r10*x2079))+((r00*x2077))+(((-1.0)*x2073*x2075)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*x2070*x2074))+((sj2*x2076))+(((-1.0)*sj0*x2071*x2075))+(((-1.0)*x2070*x2077))+(((-1.0)*r00*x2078))+((r00*x2079))+((x2072*x2073))+((x2072*x2074))))+IKsqr(((((-1.0)*sj0*x2071*x2072))+(((-1.0)*x2070*x2078))+(((-1.0)*x2071*x2076))+((cj0*sj2*x2072))+((cj6*r00*x2074))+((r10*x2079))+((r00*x2077))+(((-1.0)*x2073*x2075))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*x2070*x2074))+((sj2*x2076))+(((-1.0)*sj0*x2071*x2075))+(((-1.0)*x2070*x2077))+(((-1.0)*r00*x2078))+((r00*x2079))+((x2072*x2073))+((x2072*x2074))), ((((-1.0)*sj0*x2071*x2072))+(((-1.0)*x2070*x2078))+(((-1.0)*x2071*x2076))+((cj0*sj2*x2072))+((cj6*r00*x2074))+((r10*x2079))+((r00*x2077))+(((-1.0)*x2073*x2075))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2080=IKsin(j4);
IkReal x2081=IKcos(j4);
IkReal x2082=(sj0*sj6);
IkReal x2083=((0.02626)*r01);
IkReal x2084=(cj0*sj6);
IkReal x2085=(cj6*sj0);
IkReal x2086=(r11*sj5);
IkReal x2087=(r10*sj5);
IkReal x2088=(cj0*cj5);
IkReal x2089=((1.0)*sj0);
IkReal x2090=((0.02626)*r11);
IkReal x2091=((1.0)*r01);
IkReal x2092=(r00*sj5);
IkReal x2093=((1.0)*cj0);
IkReal x2094=((0.02626)*r00);
IkReal x2095=(cj0*cj6);
IkReal x2096=(cj2*x2081);
IkReal x2097=(r10*x2095);
IkReal x2098=((0.02626)*x2080);
IkReal x2099=(cj2*x2080);
IkReal x2100=((0.0718)*x2081);
IkReal x2101=(sj2*x2081);
IkReal x2102=(sj2*x2080);
IkReal x2103=((1.0)*x2102);
evalcond[0]=((((-1.0)*x2103))+x2096+(((-1.0)*cj6*r00*x2093))+((r01*x2084))+((r11*x2082))+(((-1.0)*r10*x2085)));
evalcond[1]=((((-1.0)*cj6*r10*x2093))+(((-1.0)*x2101))+((r00*x2085))+(((-1.0)*x2099))+(((-1.0)*x2082*x2091))+((r11*x2084)));
evalcond[2]=(((cj5*r12*sj0))+((x2084*x2092))+((r02*x2088))+((x2085*x2086))+x2099+x2101+((r01*sj5*x2095))+((x2082*x2087)));
evalcond[3]=(((x2084*x2087))+(((-1.0)*x2103))+x2096+(((-1.0)*sj5*x2085*x2091))+(((-1.0)*cj5*r02*x2089))+(((-1.0)*x2082*x2092))+((r12*x2088))+((x2086*x2095)));
evalcond[4]=((-0.1255)+(((-0.02626)*x2097))+((x2084*x2090))+(((-1.0)*py*x2093))+(((-0.0718)*x2096))+(((0.0718)*x2102))+(((-0.21326)*cj2))+(((-0.0009)*sj2))+(((-1.0)*x2082*x2083))+((px*sj0))+(((-1.0)*cj2*x2098))+(((-0.02626)*x2101))+((x2085*x2094)));
evalcond[5]=((-0.001)+(((-1.0)*sj2*x2100))+(((-0.0718)*x2099))+(((-1.0)*x2094*x2095))+((x2082*x2090))+(((0.0009)*cj2))+(((-0.02626)*r10*x2085))+((x2083*x2084))+(((-1.0)*py*x2089))+(((-0.21326)*sj2))+(((0.02626)*x2096))+(((-1.0)*sj2*x2098))+(((-1.0)*px*x2093)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2104=(cj5*cj6);
IkReal x2105=((1.0)*sj0);
IkReal x2106=(r21*sj6);
IkReal x2107=(cj0*sj5);
IkReal x2108=((1.0)*r22);
IkReal x2109=(cj6*r20);
IkReal x2110=(cj5*sj6);
IkReal x2111=((1.0)*cj0);
IkReal x2112=((1.0)*sj5);
IkReal x2113=(x2110*x2111);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x2104))+((r20*x2110))+(((-1.0)*sj5*x2108)));
evalcond[2]=(x2109+(((-1.0)*x2106)));
evalcond[3]=((((-1.0)*r20*sj6*x2112))+(((-1.0)*cj5*x2108))+(((-1.0)*cj6*r21*x2112)));
evalcond[4]=((((-1.0)*r00*x2113))+(((-1.0)*r10*x2105*x2110))+((r02*x2107))+(((-1.0)*r11*x2104*x2105))+((r12*sj0*sj5))+(((-1.0)*r01*x2104*x2111)));
evalcond[5]=((((-1.0)*r02*sj5*x2105))+(((-1.0)*r10*x2113))+(((-1.0)*r11*x2104*x2111))+((r01*sj0*x2104))+((r12*x2107))+((r00*sj0*x2110)));
evalcond[6]=((-0.0001)+pz+(((0.02626)*x2109))+(((-0.02626)*x2106)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2114=(sj0*sj2);
IkReal x2115=(cj0*cj2);
IkReal x2116=(r01*sj6);
IkReal x2117=(cj6*r10);
IkReal x2118=(cj2*sj0);
IkReal x2119=(cj0*sj2);
IkReal x2120=(cj6*r00);
IkReal x2121=((1.0)*r11*sj6);
IkReal x2122=((1.0)*x2119);
if( IKabs(((((-1.0)*x2116*x2122))+(((-1.0)*x2118*x2120))+((x2116*x2118))+(((-1.0)*x2114*x2121))+(((-1.0)*x2115*x2121))+((x2119*x2120))+((x2115*x2117))+((x2114*x2117)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2117*x2122))+((x2117*x2118))+(((-1.0)*x2118*x2121))+((x2114*x2120))+((x2115*x2120))+(((-1.0)*x2115*x2116))+(((-1.0)*x2114*x2116))+((r11*sj6*x2119)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2116*x2122))+(((-1.0)*x2118*x2120))+((x2116*x2118))+(((-1.0)*x2114*x2121))+(((-1.0)*x2115*x2121))+((x2119*x2120))+((x2115*x2117))+((x2114*x2117))))+IKsqr(((((-1.0)*x2117*x2122))+((x2117*x2118))+(((-1.0)*x2118*x2121))+((x2114*x2120))+((x2115*x2120))+(((-1.0)*x2115*x2116))+(((-1.0)*x2114*x2116))+((r11*sj6*x2119))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x2116*x2122))+(((-1.0)*x2118*x2120))+((x2116*x2118))+(((-1.0)*x2114*x2121))+(((-1.0)*x2115*x2121))+((x2119*x2120))+((x2115*x2117))+((x2114*x2117))), ((((-1.0)*x2117*x2122))+((x2117*x2118))+(((-1.0)*x2118*x2121))+((x2114*x2120))+((x2115*x2120))+(((-1.0)*x2115*x2116))+(((-1.0)*x2114*x2116))+((r11*sj6*x2119))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2123=IKsin(j4);
IkReal x2124=IKcos(j4);
IkReal x2125=(sj0*sj6);
IkReal x2126=((0.02626)*r01);
IkReal x2127=(cj6*sj0);
IkReal x2128=(r11*sj5);
IkReal x2129=(r10*sj5);
IkReal x2130=(cj5*r12);
IkReal x2131=((1.0)*sj0);
IkReal x2132=(cj5*r02);
IkReal x2133=((1.0)*r01);
IkReal x2134=(cj0*sj6);
IkReal x2135=(r00*sj5);
IkReal x2136=((1.0)*cj0);
IkReal x2137=((0.02626)*r00);
IkReal x2138=(cj0*cj6);
IkReal x2139=(cj2*x2123);
IkReal x2140=(sj2*x2123);
IkReal x2141=(r11*x2134);
IkReal x2142=(r10*x2138);
IkReal x2143=((0.0718)*x2124);
IkReal x2144=(cj2*x2124);
IkReal x2145=(sj2*x2124);
IkReal x2146=((1.0)*x2145);
evalcond[0]=((((-1.0)*cj6*r00*x2136))+x2144+x2140+((r11*x2125))+((r01*x2134))+(((-1.0)*r10*x2127)));
evalcond[1]=((((-1.0)*x2125*x2133))+x2139+x2141+(((-1.0)*x2146))+(((-1.0)*cj6*r10*x2136))+((r00*x2127)));
evalcond[2]=(((x2125*x2129))+((cj0*x2132))+x2139+((r01*sj5*x2138))+(((-1.0)*x2146))+((x2134*x2135))+((sj0*x2130))+((x2127*x2128)));
evalcond[3]=((((-1.0)*x2140))+(((-1.0)*x2144))+((cj0*x2130))+(((-1.0)*x2125*x2135))+(((-1.0)*sj5*x2127*x2133))+((x2128*x2138))+((x2129*x2134))+(((-1.0)*x2131*x2132)));
evalcond[4]=((-0.1255)+(((-0.02626)*x2142))+(((-0.02626)*x2145))+(((-1.0)*x2125*x2126))+((cj2*x2143))+(((-0.0009)*sj2))+((x2127*x2137))+(((0.02626)*x2139))+((px*sj0))+(((-0.01834)*cj2))+(((-1.0)*py*x2136))+(((0.0718)*x2140))+(((0.02626)*x2141)));
evalcond[5]=((-0.001)+(((-0.01834)*sj2))+(((-1.0)*px*x2136))+(((0.02626)*r11*x2125))+(((0.0009)*cj2))+((x2126*x2134))+(((-1.0)*x2137*x2138))+(((-0.02626)*r10*x2127))+(((-1.0)*py*x2131))+(((-0.0718)*x2139))+((sj2*x2143))+(((0.02626)*x2144))+(((0.02626)*x2140)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2147=(cj0*sj5);
IkReal x2148=(cj5*cj6);
IkReal x2149=((1.0)*sj5);
IkReal x2150=((1.0)*cj0);
IkReal x2151=((1.0)*sj0);
IkReal x2152=(cj5*sj6);
IkReal x2153=(r10*x2152);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r20*x2152))+(((-1.0)*r22*x2149))+((r21*x2148))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*sj3))+(((-1.0)*r00*x2150*x2152))+(((-1.0)*r01*x2148*x2150))+((r02*x2147))+((r12*sj0*sj5))+(((-1.0)*r11*x2148*x2151))+(((-1.0)*x2151*x2153)));
evalcond[3]=(((r00*sj0*x2152))+((r01*sj0*x2148))+(((-1.0)*r11*x2148*x2150))+((r12*x2147))+(((-1.0)*x2150*x2153))+(((-1.0)*r02*sj0*x2149)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2154=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*cj6*r21*x2154))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x2154))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x2155=(cj5*cj6);
IkReal x2156=((1.0)*sj0);
IkReal x2157=(r21*sj6);
IkReal x2158=(cj0*sj5);
IkReal x2159=((1.0)*r22);
IkReal x2160=(cj6*r20);
IkReal x2161=(cj5*sj6);
IkReal x2162=((1.0)*cj0);
IkReal x2163=((1.0)*sj5);
IkReal x2164=(x2161*x2162);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x2159))+((r20*x2161))+((r21*x2155)));
evalcond[2]=(x2160+(((-1.0)*x2157)));
evalcond[3]=((((-1.0)*r20*sj6*x2163))+(((-1.0)*cj5*x2159))+(((-1.0)*cj6*r21*x2163)));
evalcond[4]=(((r12*sj0*sj5))+(((-1.0)*r10*x2156*x2161))+((r02*x2158))+(((-1.0)*r11*x2155*x2156))+(((-1.0)*r01*x2155*x2162))+(((-1.0)*r00*x2164)));
evalcond[5]=((((-1.0)*r10*x2164))+((r01*sj0*x2155))+((r00*sj0*x2161))+(((-1.0)*r11*x2155*x2162))+(((-1.0)*r02*sj5*x2156))+((r12*x2158)));
evalcond[6]=((-0.0001)+(((-0.02626)*x2157))+(((0.02626)*x2160))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2165=(sj0*sj6);
IkReal x2166=(cj0*sj6);
IkReal x2167=(cj6*r00);
IkReal x2168=((1.0)*cj6*r10);
if( IKabs((((r01*x2166))+((r11*x2165))+(((-1.0)*cj0*x2167))+(((-1.0)*sj0*x2168)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj0*x2167))+(((-1.0)*cj0*x2168))+((r11*x2166))+(((-1.0)*r01*x2165)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x2166))+((r11*x2165))+(((-1.0)*cj0*x2167))+(((-1.0)*sj0*x2168))))+IKsqr((((sj0*x2167))+(((-1.0)*cj0*x2168))+((r11*x2166))+(((-1.0)*r01*x2165))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x2166))+((r11*x2165))+(((-1.0)*cj0*x2167))+(((-1.0)*sj0*x2168))), (((sj0*x2167))+(((-1.0)*cj0*x2168))+((r11*x2166))+(((-1.0)*r01*x2165))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2169=IKcos(j4);
IkReal x2170=IKsin(j4);
IkReal x2171=(cj6*sj0);
IkReal x2172=((0.02626)*r10);
IkReal x2173=(r11*sj6);
IkReal x2174=(r11*sj5);
IkReal x2175=(sj0*sj6);
IkReal x2176=(r10*sj5);
IkReal x2177=((0.02626)*r01);
IkReal x2178=(cj5*r12);
IkReal x2179=(cj0*cj6);
IkReal x2180=((1.0)*sj0);
IkReal x2181=(cj5*r02);
IkReal x2182=(cj0*sj6);
IkReal x2183=((1.0)*r10);
IkReal x2184=((1.0)*r01);
IkReal x2185=(r00*sj5);
IkReal x2186=((1.0)*cj0);
IkReal x2187=((0.02626)*r00);
IkReal x2188=((1.0)*x2170);
evalcond[0]=((((-1.0)*x2171*x2183))+(((-1.0)*x2188))+((r01*x2182))+(((-1.0)*r00*x2179))+((sj0*x2173)));
evalcond[1]=(((r00*x2171))+((cj0*x2173))+(((-1.0)*x2175*x2184))+(((-1.0)*x2179*x2183))+(((-1.0)*x2169)));
evalcond[2]=(x2169+((x2171*x2174))+((x2182*x2185))+((x2175*x2176))+((cj0*x2181))+((r01*sj5*x2179))+((sj0*x2178)));
evalcond[3]=(((cj0*x2178))+(((-1.0)*x2180*x2181))+(((-1.0)*x2175*x2185))+((x2174*x2179))+((x2176*x2182))+(((-1.0)*x2188))+(((-1.0)*sj5*x2171*x2184)));
evalcond[4]=((-0.1264)+(((-0.02626)*x2169))+(((0.02626)*cj0*x2173))+(((-1.0)*py*x2186))+(((-1.0)*x2175*x2177))+((px*sj0))+(((-1.0)*x2172*x2179))+(((0.0718)*x2170))+((x2171*x2187)));
evalcond[5]=((-0.21426)+(((-1.0)*x2171*x2172))+(((0.02626)*sj0*x2173))+(((-0.0718)*x2169))+(((-1.0)*py*x2180))+((x2177*x2182))+(((-1.0)*px*x2186))+(((-1.0)*x2179*x2187))+(((-0.02626)*x2170)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2189=(cj5*cj6);
IkReal x2190=((1.0)*sj0);
IkReal x2191=(r21*sj6);
IkReal x2192=(cj0*sj5);
IkReal x2193=((1.0)*r22);
IkReal x2194=(cj6*r20);
IkReal x2195=(cj5*sj6);
IkReal x2196=((1.0)*cj0);
IkReal x2197=((1.0)*sj5);
IkReal x2198=(x2195*x2196);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x2193))+((r20*x2195))+((r21*x2189)));
evalcond[2]=((((-1.0)*x2191))+x2194);
evalcond[3]=((((-1.0)*r20*sj6*x2197))+(((-1.0)*cj5*x2193))+(((-1.0)*cj6*r21*x2197)));
evalcond[4]=((((-1.0)*r01*x2189*x2196))+((r12*sj0*sj5))+(((-1.0)*r11*x2189*x2190))+(((-1.0)*r10*x2190*x2195))+((r02*x2192))+(((-1.0)*r00*x2198)));
evalcond[5]=((((-1.0)*r02*sj5*x2190))+((r00*sj0*x2195))+(((-1.0)*r10*x2198))+(((-1.0)*r11*x2189*x2196))+((r12*x2192))+((r01*sj0*x2189)));
evalcond[6]=((-0.0001)+(((0.02626)*x2194))+(((-0.02626)*x2191))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2199=(cj0*cj6);
IkReal x2200=(cj6*sj0);
IkReal x2201=(cj0*sj6);
IkReal x2202=((1.0)*sj0*sj6);
if( IKabs(((((-1.0)*r11*x2202))+(((-1.0)*r01*x2201))+((r10*x2200))+((r00*x2199)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x2200))+(((-1.0)*r10*x2199))+((r11*x2201))+(((-1.0)*r01*x2202)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x2202))+(((-1.0)*r01*x2201))+((r10*x2200))+((r00*x2199))))+IKsqr((((r00*x2200))+(((-1.0)*r10*x2199))+((r11*x2201))+(((-1.0)*r01*x2202))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r11*x2202))+(((-1.0)*r01*x2201))+((r10*x2200))+((r00*x2199))), (((r00*x2200))+(((-1.0)*r10*x2199))+((r11*x2201))+(((-1.0)*r01*x2202))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2203=IKsin(j4);
IkReal x2204=IKcos(j4);
IkReal x2205=(cj6*sj0);
IkReal x2206=((0.02626)*r10);
IkReal x2207=(r11*sj6);
IkReal x2208=(r11*sj5);
IkReal x2209=(sj0*sj6);
IkReal x2210=(r10*sj5);
IkReal x2211=((0.02626)*r01);
IkReal x2212=(cj5*r12);
IkReal x2213=(cj0*cj6);
IkReal x2214=((1.0)*sj0);
IkReal x2215=(cj5*r02);
IkReal x2216=(cj0*sj6);
IkReal x2217=((1.0)*r10);
IkReal x2218=((1.0)*r01);
IkReal x2219=(r00*sj5);
IkReal x2220=((1.0)*cj0);
IkReal x2221=((0.02626)*r00);
IkReal x2222=((1.0)*x2204);
evalcond[0]=((((-1.0)*x2205*x2217))+((r01*x2216))+x2203+(((-1.0)*r00*x2213))+((sj0*x2207)));
evalcond[1]=(((r00*x2205))+(((-1.0)*x2213*x2217))+(((-1.0)*x2222))+((cj0*x2207))+(((-1.0)*x2209*x2218)));
evalcond[2]=(((x2205*x2208))+((cj0*x2215))+(((-1.0)*x2222))+((x2216*x2219))+((r01*sj5*x2213))+((sj0*x2212))+((x2209*x2210)));
evalcond[3]=((((-1.0)*x2203))+(((-1.0)*sj5*x2205*x2218))+(((-1.0)*x2214*x2215))+((x2210*x2216))+(((-1.0)*x2209*x2219))+((cj0*x2212))+((x2208*x2213)));
evalcond[4]=((-0.1264)+(((-0.02626)*x2204))+(((-1.0)*py*x2220))+(((-1.0)*x2206*x2213))+(((-1.0)*x2209*x2211))+((px*sj0))+(((0.02626)*cj0*x2207))+(((0.0718)*x2203))+((x2205*x2221)));
evalcond[5]=((-0.01934)+(((-1.0)*py*x2214))+(((-1.0)*x2205*x2206))+(((0.02626)*x2203))+((x2211*x2216))+(((0.02626)*sj0*x2207))+(((-1.0)*px*x2220))+(((0.0718)*x2204))+(((-1.0)*x2213*x2221)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2223=((1.0)*cj6);
CheckValue<IkReal> x2224=IKPowWithIntegerCheck(sj3,-1);
if(!x2224.valid){
continue;
}
if( IKabs(((x2224.value)*(((((-1.0)*r20*x2223))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x2223))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2224.value)*(((((-1.0)*r20*x2223))+((r21*sj6))))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x2223))+(((-1.0)*r01*sj0*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x2224.value)*(((((-1.0)*r20*x2223))+((r21*sj6))))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x2223))+(((-1.0)*r01*sj0*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2225=IKcos(j4);
IkReal x2226=IKsin(j4);
IkReal x2227=(cj6*sj0);
IkReal x2228=((0.02626)*r10);
IkReal x2229=(sj0*sj6);
IkReal x2230=(r11*sj5);
IkReal x2231=(r10*sj5);
IkReal x2232=((0.02626)*r01);
IkReal x2233=(cj0*sj6);
IkReal x2234=(cj0*cj6);
IkReal x2235=(r21*sj6);
IkReal x2236=((1.0)*cj5);
IkReal x2237=(cj6*r20);
IkReal x2238=((1.0)*r10);
IkReal x2239=((1.0)*r01);
IkReal x2240=(r00*sj5);
IkReal x2241=((1.0)*py);
IkReal x2242=(cj5*r12);
IkReal x2243=((1.0)*sj5);
IkReal x2244=((0.02626)*r00);
IkReal x2245=((0.02626)*r11);
IkReal x2246=(cj3*x2226);
IkReal x2247=(sj3*x2226);
IkReal x2248=(cj3*x2225);
IkReal x2249=((1.0)*x2225);
evalcond[0]=(x2237+x2247+(((-1.0)*x2235)));
evalcond[1]=((((-1.0)*sj3*x2249))+(((-1.0)*r22*x2236))+(((-1.0)*cj6*r21*x2243))+(((-1.0)*r20*sj6*x2243)));
evalcond[2]=((((-1.0)*x2234*x2238))+(((-1.0)*x2229*x2239))+(((-1.0)*x2249))+((r00*x2227))+((r11*x2233)));
evalcond[3]=((((-1.0)*x2246))+(((-1.0)*x2227*x2238))+((r11*x2229))+((r01*x2233))+(((-1.0)*r00*x2234)));
evalcond[4]=((-0.0001)+(((0.02626)*x2247))+pz+(((0.02626)*x2237))+(((-0.02626)*x2235))+(((0.09746)*sj3))+(((0.0718)*sj3*x2225)));
evalcond[5]=(x2248+((cj0*cj5*r02))+((r01*sj5*x2234))+((x2229*x2231))+((x2233*x2240))+((sj0*x2242))+((x2227*x2230)));
evalcond[6]=((((-1.0)*x2226))+(((-1.0)*r02*sj0*x2236))+((x2230*x2234))+(((-1.0)*x2229*x2240))+(((-1.0)*sj5*x2227*x2239))+((x2231*x2233))+((cj0*x2242)));
evalcond[7]=((-0.1264)+(((-1.0)*cj0*x2241))+(((0.0718)*x2226))+((x2233*x2245))+(((-1.0)*x2229*x2232))+(((-1.0)*x2228*x2234))+(((-0.02626)*x2225))+((px*sj0))+((x2227*x2244)));
evalcond[8]=((-0.1168)+(((-1.0)*x2234*x2244))+((x2232*x2233))+(((-0.02626)*x2246))+(((-1.0)*x2227*x2228))+(((-1.0)*sj0*x2241))+(((-0.09746)*cj3))+(((-0.0718)*x2248))+(((-1.0)*cj0*px))+((x2229*x2245)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2250=((1.0)*sj5);
CheckValue<IkReal> x2251 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x2250))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x2250))),IKFAST_ATAN2_MAGTHRESH);
if(!x2251.valid){
continue;
}
CheckValue<IkReal> x2252=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x2252.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x2251.value)+(((1.5707963267949)*(x2252.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2253=IKcos(j4);
IkReal x2254=IKsin(j4);
IkReal x2255=(cj6*sj0);
IkReal x2256=((0.02626)*r10);
IkReal x2257=(sj0*sj6);
IkReal x2258=(r11*sj5);
IkReal x2259=(r10*sj5);
IkReal x2260=((0.02626)*r01);
IkReal x2261=(cj0*sj6);
IkReal x2262=(cj0*cj6);
IkReal x2263=(r21*sj6);
IkReal x2264=((1.0)*cj5);
IkReal x2265=(cj6*r20);
IkReal x2266=((1.0)*r10);
IkReal x2267=((1.0)*r01);
IkReal x2268=(r00*sj5);
IkReal x2269=((1.0)*py);
IkReal x2270=(cj5*r12);
IkReal x2271=((1.0)*sj5);
IkReal x2272=((0.02626)*r00);
IkReal x2273=((0.02626)*r11);
IkReal x2274=(cj3*x2254);
IkReal x2275=(sj3*x2254);
IkReal x2276=(cj3*x2253);
IkReal x2277=((1.0)*x2253);
evalcond[0]=(x2265+x2275+(((-1.0)*x2263)));
evalcond[1]=((((-1.0)*r22*x2264))+(((-1.0)*sj3*x2277))+(((-1.0)*r20*sj6*x2271))+(((-1.0)*cj6*r21*x2271)));
evalcond[2]=((((-1.0)*x2257*x2267))+((r11*x2261))+((r00*x2255))+(((-1.0)*x2277))+(((-1.0)*x2262*x2266)));
evalcond[3]=(((r01*x2261))+(((-1.0)*r00*x2262))+(((-1.0)*x2255*x2266))+(((-1.0)*x2274))+((r11*x2257)));
evalcond[4]=((-0.0001)+(((0.0718)*sj3*x2253))+(((-0.02626)*x2263))+pz+(((0.09746)*sj3))+(((0.02626)*x2275))+(((0.02626)*x2265)));
evalcond[5]=(((x2255*x2258))+((r01*sj5*x2262))+((sj0*x2270))+x2276+((cj0*cj5*r02))+((x2261*x2268))+((x2257*x2259)));
evalcond[6]=(((x2258*x2262))+((x2259*x2261))+(((-1.0)*sj5*x2255*x2267))+(((-1.0)*x2254))+(((-1.0)*x2257*x2268))+((cj0*x2270))+(((-1.0)*r02*sj0*x2264)));
evalcond[7]=((-0.1264)+(((-1.0)*x2256*x2262))+((x2255*x2272))+((x2261*x2273))+(((-0.02626)*x2253))+(((0.0718)*x2254))+(((-1.0)*x2257*x2260))+((px*sj0))+(((-1.0)*cj0*x2269)));
evalcond[8]=((-0.1168)+((x2260*x2261))+(((-1.0)*x2255*x2256))+((x2257*x2273))+(((-1.0)*sj0*x2269))+(((-0.0718)*x2276))+(((-0.09746)*cj3))+(((-1.0)*x2262*x2272))+(((-1.0)*cj0*px))+(((-0.02626)*x2274)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2278=(cj0*sj5);
IkReal x2279=(cj5*cj6);
IkReal x2280=((1.0)*sj5);
IkReal x2281=((1.0)*cj0);
IkReal x2282=((1.0)*sj0);
IkReal x2283=(cj5*sj6);
IkReal x2284=(r10*x2283);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x2279))+((r20*x2283))+(((-1.0)*r22*x2280))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*x2282*x2284))+sj3+((r12*sj0*sj5))+((r02*x2278))+(((-1.0)*r11*x2279*x2282))+(((-1.0)*r01*x2279*x2281))+(((-1.0)*r00*x2281*x2283)));
evalcond[3]=((((-1.0)*r02*sj0*x2280))+(((-1.0)*x2281*x2284))+(((-1.0)*r11*x2279*x2281))+((r12*x2278))+((r01*sj0*x2279))+((r00*sj0*x2283)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x2285=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*r20*sj6*x2285))+(((-1.0)*cj6*r21*x2285))+(((-1.0)*cj5*r22)))))+(IKabs(((((-1.0)*cj6*r20))+((r21*sj6))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=1.0;
cj1=0;
j1=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x2286=(cj5*cj6);
IkReal x2287=(r11*sj0);
IkReal x2288=(cj6*sj5);
IkReal x2289=((1.0)*cj0);
IkReal x2290=(r10*sj6);
IkReal x2291=(sj0*sj5);
IkReal x2292=(r00*sj6);
IkReal x2293=(cj0*sj5);
IkReal x2294=((0.02626)*cj0);
IkReal x2295=(r01*sj6);
IkReal x2296=((1.0)*sj0);
IkReal x2297=(cj6*r10);
IkReal x2298=(cj5*sj0);
IkReal x2299=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x2286))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x2289*x2299))+((cj0*x2295))+(((-1.0)*x2296*x2297))+((sj6*x2287)));
evalcond[3]=((1.0)+(((-1.0)*r01*x2286*x2289))+(((-1.0)*cj5*x2289*x2292))+((r02*x2293))+(((-1.0)*cj5*x2290*x2296))+(((-1.0)*x2286*x2287))+((r12*x2291)));
evalcond[4]=(((cj0*cj5*r02))+((x2287*x2288))+((x2292*x2293))+((x2290*x2291))+((r12*x2298))+((cj0*r01*x2288)));
evalcond[5]=(((r01*sj0*x2286))+(((-1.0)*cj5*x2289*x2290))+(((-1.0)*r02*x2291))+((x2292*x2298))+((r12*x2293))+(((-1.0)*r11*x2286*x2289)));
evalcond[6]=((0.1148)+(((-0.02626)*sj0*x2297))+(((-1.0)*py*x2296))+(((0.02626)*sj6*x2287))+(((-1.0)*x2294*x2299))+((x2294*x2295))+(((-1.0)*px*x2289)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2300=IKcos(j4);
IkReal x2301=IKsin(j4);
IkReal x2302=(cj0*sj6);
IkReal x2303=((0.02626)*cj6);
IkReal x2304=(cj0*r10);
IkReal x2305=((0.02626)*sj6);
IkReal x2306=(r01*sj0);
IkReal x2307=((1.0)*cj5);
IkReal x2308=((1.0)*cj6);
IkReal x2309=((1.0)*sj6);
IkReal x2310=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x2309))+x2301+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x2307))+(((-1.0)*x2300))+(((-1.0)*r21*sj5*x2308))+(((-1.0)*r20*sj5*x2309)));
evalcond[2]=((0.09736)+(((-1.0)*r21*x2305))+((r20*x2303))+(((0.0718)*x2300))+pz+(((0.02626)*x2301)));
evalcond[3]=((((-1.0)*x2306*x2309))+((r11*x2302))+x2300+((cj6*x2310))+(((-1.0)*x2304*x2308)));
evalcond[4]=((((-1.0)*sj5*x2306*x2308))+x2301+((cj0*cj5*r12))+(((-1.0)*sj5*x2309*x2310))+((r10*sj5*x2302))+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x2307)));
evalcond[5]=((-0.1246)+(((-0.0718)*x2301))+(((-1.0)*x2303*x2304))+(((0.02626)*r11*x2302))+((px*sj0))+(((-1.0)*x2305*x2306))+(((0.02626)*x2300))+(((-1.0)*cj0*py))+((x2303*x2310)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2311=(cj5*cj6);
IkReal x2312=(r11*sj0);
IkReal x2313=(cj6*sj5);
IkReal x2314=((1.0)*cj0);
IkReal x2315=(r10*sj6);
IkReal x2316=(sj0*sj5);
IkReal x2317=(r00*sj6);
IkReal x2318=(cj0*sj5);
IkReal x2319=((0.02626)*cj0);
IkReal x2320=(r01*sj6);
IkReal x2321=((1.0)*sj0);
IkReal x2322=(cj6*r10);
IkReal x2323=(cj5*sj0);
IkReal x2324=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x2311))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x2320))+(((-1.0)*x2321*x2322))+(((-1.0)*x2314*x2324))+((sj6*x2312)));
evalcond[3]=((-1.0)+(((-1.0)*r01*x2311*x2314))+(((-1.0)*cj5*x2314*x2317))+((r12*x2316))+(((-1.0)*cj5*x2315*x2321))+((r02*x2318))+(((-1.0)*x2311*x2312)));
evalcond[4]=(((x2312*x2313))+((x2317*x2318))+((x2315*x2316))+((cj0*cj5*r02))+((r12*x2323))+((cj0*r01*x2313)));
evalcond[5]=((((-1.0)*r02*x2316))+((x2317*x2323))+(((-1.0)*cj5*x2314*x2315))+((r12*x2318))+((r01*sj0*x2311))+(((-1.0)*r11*x2311*x2314)));
evalcond[6]=((0.1148)+(((-0.02626)*sj0*x2322))+(((-1.0)*py*x2321))+((x2319*x2320))+(((-1.0)*x2319*x2324))+(((0.02626)*sj6*x2312))+(((-1.0)*px*x2314)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2325=IKcos(j4);
IkReal x2326=IKsin(j4);
IkReal x2327=(cj0*sj6);
IkReal x2328=((0.02626)*cj6);
IkReal x2329=(cj0*r10);
IkReal x2330=((0.02626)*sj6);
IkReal x2331=(r01*sj0);
IkReal x2332=((1.0)*cj5);
IkReal x2333=((1.0)*cj6);
IkReal x2334=((1.0)*sj6);
IkReal x2335=(r00*sj0);
evalcond[0]=(((cj6*r20))+(((-1.0)*r21*x2334))+(((-1.0)*x2326)));
evalcond[1]=(x2325+(((-1.0)*r22*x2332))+(((-1.0)*r20*sj5*x2334))+(((-1.0)*r21*sj5*x2333)));
evalcond[2]=((-0.09756)+(((-0.0718)*x2325))+pz+(((-0.02626)*x2326))+(((-1.0)*r21*x2330))+((r20*x2328)));
evalcond[3]=(((cj6*x2335))+x2325+(((-1.0)*x2331*x2334))+((r11*x2327))+(((-1.0)*x2329*x2333)));
evalcond[4]=(x2326+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x2332))+(((-1.0)*sj5*x2334*x2335))+((cj0*cj6*r11*sj5))+((r10*sj5*x2327))+(((-1.0)*sj5*x2331*x2333)));
evalcond[5]=((-0.1246)+(((-1.0)*x2328*x2329))+(((-0.0718)*x2326))+(((0.02626)*x2325))+((px*sj0))+(((0.02626)*r11*x2327))+(((-1.0)*x2330*x2331))+(((-1.0)*cj0*py))+((x2328*x2335)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2336=(cj5*cj6);
IkReal x2337=((1.0)*sj0);
IkReal x2338=(r21*sj6);
IkReal x2339=(cj0*sj5);
IkReal x2340=((1.0)*r22);
IkReal x2341=(cj6*r20);
IkReal x2342=(cj5*sj6);
IkReal x2343=((1.0)*cj0);
IkReal x2344=((1.0)*sj5);
IkReal x2345=(x2342*x2343);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x2336))+(((-1.0)*sj5*x2340))+((r20*x2342)));
evalcond[2]=(x2341+(((-1.0)*x2338)));
evalcond[3]=((((-1.0)*cj6*r21*x2344))+(((-1.0)*r20*sj6*x2344))+(((-1.0)*cj5*x2340)));
evalcond[4]=(((r02*x2339))+(((-1.0)*r11*x2336*x2337))+(((-1.0)*r00*x2345))+((r12*sj0*sj5))+(((-1.0)*r01*x2336*x2343))+(((-1.0)*r10*x2337*x2342)));
evalcond[5]=(((r00*sj0*x2342))+(((-1.0)*r11*x2336*x2343))+((r12*x2339))+(((-1.0)*r10*x2345))+((r01*sj0*x2336))+(((-1.0)*r02*sj5*x2337)));
evalcond[6]=((-0.0001)+(((-0.02626)*x2338))+pz+(((0.02626)*x2341)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2346=(cj0*cj6);
IkReal x2347=(sj0*sj6);
IkReal x2348=((1.0)*r11);
IkReal x2349=(cj6*sj0);
IkReal x2350=(cj0*sj6);
if( IKabs((((r10*x2349))+((r00*x2346))+(((-1.0)*r01*x2350))+(((-1.0)*x2347*x2348)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x2347))+((r10*x2346))+(((-1.0)*x2348*x2350))+(((-1.0)*r00*x2349)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x2349))+((r00*x2346))+(((-1.0)*r01*x2350))+(((-1.0)*x2347*x2348))))+IKsqr((((r01*x2347))+((r10*x2346))+(((-1.0)*x2348*x2350))+(((-1.0)*r00*x2349))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x2349))+((r00*x2346))+(((-1.0)*r01*x2350))+(((-1.0)*x2347*x2348))), (((r01*x2347))+((r10*x2346))+(((-1.0)*x2348*x2350))+(((-1.0)*r00*x2349))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2351=IKcos(j4);
IkReal x2352=IKsin(j4);
IkReal x2353=(cj6*sj0);
IkReal x2354=((0.02626)*r10);
IkReal x2355=(r11*sj6);
IkReal x2356=(r11*sj5);
IkReal x2357=(sj0*sj6);
IkReal x2358=(r10*sj5);
IkReal x2359=((0.02626)*r01);
IkReal x2360=(cj5*r12);
IkReal x2361=(cj0*cj6);
IkReal x2362=((1.0)*sj0);
IkReal x2363=(cj5*r02);
IkReal x2364=(cj0*sj6);
IkReal x2365=((1.0)*r10);
IkReal x2366=((1.0)*r01);
IkReal x2367=(r00*sj5);
IkReal x2368=((1.0)*cj0);
IkReal x2369=((0.02626)*r00);
evalcond[0]=((((-1.0)*r00*x2361))+((sj0*x2355))+x2352+((r01*x2364))+(((-1.0)*x2353*x2365)));
evalcond[1]=(((cj0*x2355))+((r00*x2353))+x2351+(((-1.0)*x2357*x2366))+(((-1.0)*x2361*x2365)));
evalcond[2]=(((x2364*x2367))+((x2357*x2358))+((cj0*x2363))+((sj0*x2360))+(((-1.0)*x2351))+((x2353*x2356))+((r01*sj5*x2361)));
evalcond[3]=(((cj0*x2360))+x2352+(((-1.0)*sj5*x2353*x2366))+((x2358*x2364))+(((-1.0)*x2357*x2367))+(((-1.0)*x2362*x2363))+((x2356*x2361)));
evalcond[4]=((-0.1246)+(((-1.0)*x2357*x2359))+(((-0.0718)*x2352))+(((-1.0)*x2354*x2361))+(((0.02626)*cj0*x2355))+((x2353*x2369))+((px*sj0))+(((-1.0)*py*x2368))+(((0.02626)*x2351)));
evalcond[5]=((0.21226)+(((0.02626)*sj0*x2355))+(((-1.0)*px*x2368))+((x2359*x2364))+(((0.0718)*x2351))+(((-1.0)*x2353*x2354))+(((-1.0)*x2361*x2369))+(((-1.0)*py*x2362))+(((0.02626)*x2352)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2370=(cj5*cj6);
IkReal x2371=((1.0)*sj0);
IkReal x2372=(r21*sj6);
IkReal x2373=(cj0*sj5);
IkReal x2374=((1.0)*r22);
IkReal x2375=(cj6*r20);
IkReal x2376=(cj5*sj6);
IkReal x2377=((1.0)*cj0);
IkReal x2378=((1.0)*sj5);
IkReal x2379=(x2376*x2377);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x2376))+(((-1.0)*sj5*x2374))+((r21*x2370)));
evalcond[2]=(x2375+(((-1.0)*x2372)));
evalcond[3]=((((-1.0)*cj5*x2374))+(((-1.0)*cj6*r21*x2378))+(((-1.0)*r20*sj6*x2378)));
evalcond[4]=((((-1.0)*r11*x2370*x2371))+((r02*x2373))+(((-1.0)*r00*x2379))+((r12*sj0*sj5))+(((-1.0)*r01*x2370*x2377))+(((-1.0)*r10*x2371*x2376)));
evalcond[5]=((((-1.0)*r10*x2379))+((r12*x2373))+(((-1.0)*r11*x2370*x2377))+(((-1.0)*r02*sj5*x2371))+((r01*sj0*x2370))+((r00*sj0*x2376)));
evalcond[6]=((-0.0001)+pz+(((0.02626)*x2375))+(((-0.02626)*x2372)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2380=(sj0*sj6);
IkReal x2381=(cj6*r10);
IkReal x2382=((1.0)*sj0);
IkReal x2383=(cj6*r00);
IkReal x2384=(cj0*sj6);
if( IKabs(((((-1.0)*x2381*x2382))+((r01*x2384))+(((-1.0)*cj0*x2383))+((r11*x2380)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x2380))+((cj0*x2381))+(((-1.0)*x2382*x2383))+(((-1.0)*r11*x2384)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2381*x2382))+((r01*x2384))+(((-1.0)*cj0*x2383))+((r11*x2380))))+IKsqr((((r01*x2380))+((cj0*x2381))+(((-1.0)*x2382*x2383))+(((-1.0)*r11*x2384))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x2381*x2382))+((r01*x2384))+(((-1.0)*cj0*x2383))+((r11*x2380))), (((r01*x2380))+((cj0*x2381))+(((-1.0)*x2382*x2383))+(((-1.0)*r11*x2384))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2385=IKcos(j4);
IkReal x2386=IKsin(j4);
IkReal x2387=(cj6*sj0);
IkReal x2388=((0.02626)*r10);
IkReal x2389=(r11*sj6);
IkReal x2390=(r11*sj5);
IkReal x2391=(sj0*sj6);
IkReal x2392=(r10*sj5);
IkReal x2393=((0.02626)*r01);
IkReal x2394=(cj5*r12);
IkReal x2395=(cj0*cj6);
IkReal x2396=((1.0)*sj0);
IkReal x2397=(cj5*r02);
IkReal x2398=(cj0*sj6);
IkReal x2399=((1.0)*r10);
IkReal x2400=((1.0)*r01);
IkReal x2401=(r00*sj5);
IkReal x2402=((1.0)*cj0);
IkReal x2403=((0.02626)*r00);
evalcond[0]=(x2385+((r00*x2387))+(((-1.0)*x2391*x2400))+((cj0*x2389))+(((-1.0)*x2395*x2399)));
evalcond[1]=(((r01*x2398))+(((-1.0)*r00*x2395))+(((-1.0)*x2386))+((sj0*x2389))+(((-1.0)*x2387*x2399)));
evalcond[2]=(((x2387*x2390))+x2385+((r01*sj5*x2395))+((x2398*x2401))+((cj0*x2397))+((x2391*x2392))+((sj0*x2394)));
evalcond[3]=(((x2392*x2398))+(((-1.0)*x2391*x2401))+(((-1.0)*x2396*x2397))+x2386+(((-1.0)*sj5*x2387*x2400))+((x2390*x2395))+((cj0*x2394)));
evalcond[4]=((-0.1246)+(((-1.0)*py*x2402))+(((0.02626)*cj0*x2389))+((px*sj0))+(((-1.0)*x2388*x2395))+(((-1.0)*x2391*x2393))+(((-0.0718)*x2386))+((x2387*x2403))+(((0.02626)*x2385)));
evalcond[5]=((0.01734)+(((-0.02626)*x2386))+(((-1.0)*px*x2402))+(((0.02626)*sj0*x2389))+((x2393*x2398))+(((-1.0)*x2395*x2403))+(((-1.0)*py*x2396))+(((-1.0)*x2387*x2388))+(((-0.0718)*x2385)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2404=((1.0)*sj5);
IkReal x2405=((1.0)*sj6);
CheckValue<IkReal> x2406=IKPowWithIntegerCheck(cj3,-1);
if(!x2406.valid){
continue;
}
CheckValue<IkReal> x2407=IKPowWithIntegerCheck(sj3,-1);
if(!x2407.valid){
continue;
}
if( IKabs(((x2406.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x2405))+(((-1.0)*r11*sj0*x2405))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2407.value)*(((((-1.0)*cj6*r21*x2404))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x2404)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2406.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x2405))+(((-1.0)*r11*sj0*x2405))+((cj0*cj6*r00))))))+IKsqr(((x2407.value)*(((((-1.0)*cj6*r21*x2404))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x2404))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x2406.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x2405))+(((-1.0)*r11*sj0*x2405))+((cj0*cj6*r00))))), ((x2407.value)*(((((-1.0)*cj6*r21*x2404))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x2404))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2408=IKcos(j4);
IkReal x2409=IKsin(j4);
IkReal x2410=(cj6*sj0);
IkReal x2411=((0.02626)*r10);
IkReal x2412=(sj0*sj6);
IkReal x2413=(cj5*r12);
IkReal x2414=(r11*sj5);
IkReal x2415=(r10*sj5);
IkReal x2416=((0.02626)*r01);
IkReal x2417=(cj0*sj6);
IkReal x2418=(cj0*cj6);
IkReal x2419=(r21*sj6);
IkReal x2420=((1.0)*cj5);
IkReal x2421=(cj6*r20);
IkReal x2422=((1.0)*r10);
IkReal x2423=((1.0)*r01);
IkReal x2424=(r00*sj5);
IkReal x2425=((1.0)*py);
IkReal x2426=((1.0)*sj5);
IkReal x2427=((0.02626)*r00);
IkReal x2428=((0.02626)*r11);
IkReal x2429=((0.02626)*x2409);
IkReal x2430=(cj3*x2408);
IkReal x2431=(sj3*x2408);
evalcond[0]=(x2421+(((-1.0)*x2419))+((sj3*x2409)));
evalcond[1]=((((-1.0)*x2431))+(((-1.0)*cj6*r21*x2426))+(((-1.0)*r20*sj6*x2426))+(((-1.0)*r22*x2420)));
evalcond[2]=(x2408+((r11*x2417))+((r00*x2410))+(((-1.0)*x2418*x2422))+(((-1.0)*x2412*x2423)));
evalcond[3]=(((r11*x2412))+((r01*x2417))+(((-1.0)*x2410*x2422))+((cj3*x2409))+(((-1.0)*r00*x2418)));
evalcond[4]=((-0.0001)+(((0.0718)*x2431))+(((0.02626)*x2421))+pz+(((0.09746)*sj3))+(((-0.02626)*x2419))+((sj3*x2429)));
evalcond[5]=((((-1.0)*x2430))+((cj0*cj5*r02))+((x2417*x2424))+((x2410*x2414))+((sj0*x2413))+((r01*sj5*x2418))+((x2412*x2415)));
evalcond[6]=(x2409+((x2414*x2418))+((x2415*x2417))+(((-1.0)*sj5*x2410*x2423))+((cj0*x2413))+(((-1.0)*x2412*x2424))+(((-1.0)*r02*sj0*x2420)));
evalcond[7]=((-0.1246)+(((-0.0718)*x2409))+((x2417*x2428))+(((-1.0)*x2411*x2418))+(((-1.0)*cj0*x2425))+(((-1.0)*x2412*x2416))+((px*sj0))+(((0.02626)*x2408))+((x2410*x2427)));
evalcond[8]=((0.1148)+(((0.0718)*x2430))+((x2412*x2428))+(((-1.0)*sj0*x2425))+((x2416*x2417))+(((-1.0)*x2418*x2427))+(((0.09746)*cj3))+((cj3*x2429))+(((-1.0)*x2410*x2411))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2432=((1.0)*cj6);
CheckValue<IkReal> x2433=IKPowWithIntegerCheck(sj3,-1);
if(!x2433.valid){
continue;
}
if( IKabs(((x2433.value)*((((r21*sj6))+(((-1.0)*r20*x2432)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*sj0*x2432))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2433.value)*((((r21*sj6))+(((-1.0)*r20*x2432))))))+IKsqr(((((-1.0)*r00*sj0*x2432))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x2433.value)*((((r21*sj6))+(((-1.0)*r20*x2432))))), ((((-1.0)*r00*sj0*x2432))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2434=IKcos(j4);
IkReal x2435=IKsin(j4);
IkReal x2436=(cj6*sj0);
IkReal x2437=((0.02626)*r10);
IkReal x2438=(sj0*sj6);
IkReal x2439=(cj5*r12);
IkReal x2440=(r11*sj5);
IkReal x2441=(r10*sj5);
IkReal x2442=((0.02626)*r01);
IkReal x2443=(cj0*sj6);
IkReal x2444=(cj0*cj6);
IkReal x2445=(r21*sj6);
IkReal x2446=((1.0)*cj5);
IkReal x2447=(cj6*r20);
IkReal x2448=((1.0)*r10);
IkReal x2449=((1.0)*r01);
IkReal x2450=(r00*sj5);
IkReal x2451=((1.0)*py);
IkReal x2452=((1.0)*sj5);
IkReal x2453=((0.02626)*r00);
IkReal x2454=((0.02626)*r11);
IkReal x2455=((0.02626)*x2435);
IkReal x2456=(cj3*x2434);
IkReal x2457=(sj3*x2434);
evalcond[0]=(x2447+((sj3*x2435))+(((-1.0)*x2445)));
evalcond[1]=((((-1.0)*cj6*r21*x2452))+(((-1.0)*x2457))+(((-1.0)*r20*sj6*x2452))+(((-1.0)*r22*x2446)));
evalcond[2]=(x2434+((r00*x2436))+(((-1.0)*x2444*x2448))+(((-1.0)*x2438*x2449))+((r11*x2443)));
evalcond[3]=(((r11*x2438))+(((-1.0)*x2436*x2448))+((cj3*x2435))+((r01*x2443))+(((-1.0)*r00*x2444)));
evalcond[4]=((-0.0001)+((sj3*x2455))+(((-0.02626)*x2445))+pz+(((0.02626)*x2447))+(((0.09746)*sj3))+(((0.0718)*x2457)));
evalcond[5]=(((cj0*cj5*r02))+((x2443*x2450))+(((-1.0)*x2456))+((r01*sj5*x2444))+((x2436*x2440))+((sj0*x2439))+((x2438*x2441)));
evalcond[6]=((((-1.0)*r02*sj0*x2446))+x2435+(((-1.0)*x2438*x2450))+((x2440*x2444))+((cj0*x2439))+(((-1.0)*sj5*x2436*x2449))+((x2441*x2443)));
evalcond[7]=((-0.1246)+(((-1.0)*x2437*x2444))+((x2443*x2454))+(((-1.0)*cj0*x2451))+(((-1.0)*x2438*x2442))+((px*sj0))+((x2436*x2453))+(((-0.0718)*x2435))+(((0.02626)*x2434)));
evalcond[8]=((0.1148)+((cj3*x2455))+(((-1.0)*sj0*x2451))+((x2442*x2443))+(((-1.0)*x2444*x2453))+(((-1.0)*x2436*x2437))+(((0.09746)*cj3))+(((0.0718)*x2456))+(((-1.0)*cj0*px))+((x2438*x2454)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2458=((1.0)*sj5);
CheckValue<IkReal> x2459=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x2459.valid){
continue;
}
CheckValue<IkReal> x2460 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x2458))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x2458))),IKFAST_ATAN2_MAGTHRESH);
if(!x2460.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2459.value)))+(x2460.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2461=IKcos(j4);
IkReal x2462=IKsin(j4);
IkReal x2463=(cj6*sj0);
IkReal x2464=((0.02626)*r10);
IkReal x2465=(sj0*sj6);
IkReal x2466=(cj5*r12);
IkReal x2467=(r11*sj5);
IkReal x2468=(r10*sj5);
IkReal x2469=((0.02626)*r01);
IkReal x2470=(cj0*sj6);
IkReal x2471=(cj0*cj6);
IkReal x2472=(r21*sj6);
IkReal x2473=((1.0)*cj5);
IkReal x2474=(cj6*r20);
IkReal x2475=((1.0)*r10);
IkReal x2476=((1.0)*r01);
IkReal x2477=(r00*sj5);
IkReal x2478=((1.0)*py);
IkReal x2479=((1.0)*sj5);
IkReal x2480=((0.02626)*r00);
IkReal x2481=((0.02626)*r11);
IkReal x2482=((0.02626)*x2462);
IkReal x2483=(cj3*x2461);
IkReal x2484=(sj3*x2461);
evalcond[0]=(x2474+(((-1.0)*x2472))+((sj3*x2462)));
evalcond[1]=((((-1.0)*x2484))+(((-1.0)*r20*sj6*x2479))+(((-1.0)*r22*x2473))+(((-1.0)*cj6*r21*x2479)));
evalcond[2]=(x2461+(((-1.0)*x2471*x2475))+(((-1.0)*x2465*x2476))+((r11*x2470))+((r00*x2463)));
evalcond[3]=(((cj3*x2462))+((r11*x2465))+((r01*x2470))+(((-1.0)*x2463*x2475))+(((-1.0)*r00*x2471)));
evalcond[4]=((-0.0001)+((sj3*x2482))+(((0.02626)*x2474))+(((0.0718)*x2484))+pz+(((0.09746)*sj3))+(((-0.02626)*x2472)));
evalcond[5]=(((cj0*cj5*r02))+(((-1.0)*x2483))+((x2465*x2468))+((sj0*x2466))+((r01*sj5*x2471))+((x2470*x2477))+((x2463*x2467)));
evalcond[6]=(((x2468*x2470))+x2462+(((-1.0)*sj5*x2463*x2476))+((x2467*x2471))+(((-1.0)*x2465*x2477))+(((-1.0)*r02*sj0*x2473))+((cj0*x2466)));
evalcond[7]=((-0.1246)+(((-1.0)*x2465*x2469))+(((-1.0)*cj0*x2478))+(((-0.0718)*x2462))+((x2470*x2481))+((px*sj0))+(((0.02626)*x2461))+((x2463*x2480))+(((-1.0)*x2464*x2471)));
evalcond[8]=((0.1148)+((x2465*x2481))+((cj3*x2482))+(((-1.0)*x2463*x2464))+(((-1.0)*sj0*x2478))+(((0.0718)*x2483))+(((0.09746)*cj3))+(((-1.0)*x2471*x2480))+((x2469*x2470))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x2491=IKPowWithIntegerCheck(sj3,-1);
if(!x2491.valid){
continue;
}
IkReal x2485=x2491.value;
IkReal x2486=(r21*sj6);
IkReal x2487=(cj6*sj3);
IkReal x2488=(cj3*sj2);
IkReal x2489=((1.0)*sj3*sj6);
IkReal x2490=((1.0)*cj6*r20);
CheckValue<IkReal> x2492=IKPowWithIntegerCheck(cj2,-1);
if(!x2492.valid){
continue;
}
if( IKabs((x2485*((x2486+(((-1.0)*x2490)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x2485*(x2492.value)*((((r10*sj0*x2487))+((cj0*r00*x2487))+(((-1.0)*cj0*r01*x2489))+(((-1.0)*r11*sj0*x2489))+(((-1.0)*x2488*x2490))+((x2486*x2488)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x2485*((x2486+(((-1.0)*x2490))))))+IKsqr((x2485*(x2492.value)*((((r10*sj0*x2487))+((cj0*r00*x2487))+(((-1.0)*cj0*r01*x2489))+(((-1.0)*r11*sj0*x2489))+(((-1.0)*x2488*x2490))+((x2486*x2488))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x2485*((x2486+(((-1.0)*x2490))))), (x2485*(x2492.value)*((((r10*sj0*x2487))+((cj0*r00*x2487))+(((-1.0)*cj0*r01*x2489))+(((-1.0)*r11*sj0*x2489))+(((-1.0)*x2488*x2490))+((x2486*x2488))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2493=IKsin(j4);
IkReal x2494=IKcos(j4);
IkReal x2495=(sj0*sj6);
IkReal x2496=((0.02626)*r01);
IkReal x2497=(cj6*sj0);
IkReal x2498=((0.02626)*r10);
IkReal x2499=(cj5*r12);
IkReal x2500=(r11*sj5);
IkReal x2501=(r10*sj5);
IkReal x2502=(cj0*sj6);
IkReal x2503=(cj0*cj6);
IkReal x2504=(r21*sj6);
IkReal x2505=((1.0)*cj5);
IkReal x2506=(cj2*cj3);
IkReal x2507=(cj6*r20);
IkReal x2508=((1.0)*r10);
IkReal x2509=((1.0)*r01);
IkReal x2510=(r00*sj5);
IkReal x2511=(cj3*sj2);
IkReal x2512=((1.0)*py);
IkReal x2513=((1.0)*sj5);
IkReal x2514=((0.02626)*r00);
IkReal x2515=((0.02626)*r11);
IkReal x2516=((0.02626)*x2493);
IkReal x2517=(cj2*x2493);
IkReal x2518=(cj2*x2494);
IkReal x2519=((0.0718)*x2494);
IkReal x2520=((1.0)*x2494);
IkReal x2521=((1.0)*sj2*x2493);
evalcond[0]=(x2507+((sj3*x2493))+(((-1.0)*x2504)));
evalcond[1]=((((-1.0)*cj6*r21*x2513))+(((-1.0)*r20*sj6*x2513))+(((-1.0)*r22*x2505))+(((-1.0)*sj3*x2520)));
evalcond[2]=((-0.0001)+(((-0.02626)*x2504))+pz+(((0.09746)*sj3))+(((0.02626)*x2507))+((sj3*x2516))+((sj3*x2519)));
evalcond[3]=(x2518+(((-1.0)*x2493*x2511))+(((-1.0)*x2497*x2508))+(((-1.0)*r00*x2503))+((r11*x2495))+((r01*x2502)));
evalcond[4]=(((r00*x2497))+(((-1.0)*x2503*x2508))+(((-1.0)*x2495*x2509))+(((-1.0)*x2493*x2506))+(((-1.0)*sj2*x2520))+((r11*x2502)));
evalcond[5]=(((r01*sj5*x2503))+((x2494*x2511))+x2517+((x2497*x2500))+((cj0*cj5*r02))+((x2495*x2501))+((x2502*x2510))+((sj0*x2499)));
evalcond[6]=(((x2494*x2506))+((x2500*x2503))+((x2501*x2502))+(((-1.0)*x2495*x2510))+((cj0*x2499))+(((-1.0)*sj5*x2497*x2509))+(((-1.0)*x2521))+(((-1.0)*r02*sj0*x2505)));
evalcond[7]=((-0.1255)+(((0.0718)*sj2*x2493))+((x2497*x2514))+(((-1.0)*x2495*x2496))+(((-1.0)*x2498*x2503))+(((-1.0)*x2506*x2519))+(((-1.0)*x2506*x2516))+(((-1.0)*cj0*x2512))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+(((-0.09746)*x2506))+((px*sj0))+((x2502*x2515))+(((-0.02626)*sj2*x2494)));
evalcond[8]=((-0.001)+(((-1.0)*x2497*x2498))+(((-0.1158)*sj2))+((x2496*x2502))+(((-1.0)*x2503*x2514))+(((-0.0718)*x2517))+((x2495*x2515))+(((0.0009)*cj2))+(((-0.09746)*x2511))+(((-1.0)*sj0*x2512))+(((-1.0)*x2511*x2516))+(((-1.0)*x2511*x2519))+(((0.02626)*x2518))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x2523=IKPowWithIntegerCheck(sj3,-1);
if(!x2523.valid){
continue;
}
IkReal x2522=x2523.value;
if( IKabs((x2522*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((0.000278551532033426)*x2522*(((5.0)+(((-4873.0)*sj3))+(((-50000.0)*pz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x2522*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr(((0.000278551532033426)*x2522*(((5.0)+(((-4873.0)*sj3))+(((-50000.0)*pz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x2522*(((((-1.0)*cj6*r20))+((r21*sj6))))), ((0.000278551532033426)*x2522*(((5.0)+(((-4873.0)*sj3))+(((-50000.0)*pz))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2524=IKsin(j4);
IkReal x2525=IKcos(j4);
IkReal x2526=(sj0*sj6);
IkReal x2527=((0.02626)*r01);
IkReal x2528=(cj6*sj0);
IkReal x2529=((0.02626)*r10);
IkReal x2530=(cj5*r12);
IkReal x2531=(r11*sj5);
IkReal x2532=(r10*sj5);
IkReal x2533=(cj0*sj6);
IkReal x2534=(cj0*cj6);
IkReal x2535=(r21*sj6);
IkReal x2536=((1.0)*cj5);
IkReal x2537=(cj2*cj3);
IkReal x2538=(cj6*r20);
IkReal x2539=((1.0)*r10);
IkReal x2540=((1.0)*r01);
IkReal x2541=(r00*sj5);
IkReal x2542=(cj3*sj2);
IkReal x2543=((1.0)*py);
IkReal x2544=((1.0)*sj5);
IkReal x2545=((0.02626)*r00);
IkReal x2546=((0.02626)*r11);
IkReal x2547=((0.02626)*x2524);
IkReal x2548=(cj2*x2524);
IkReal x2549=(cj2*x2525);
IkReal x2550=((0.0718)*x2525);
IkReal x2551=((1.0)*x2525);
IkReal x2552=((1.0)*sj2*x2524);
evalcond[0]=(x2538+((sj3*x2524))+(((-1.0)*x2535)));
evalcond[1]=((((-1.0)*r22*x2536))+(((-1.0)*sj3*x2551))+(((-1.0)*cj6*r21*x2544))+(((-1.0)*r20*sj6*x2544)));
evalcond[2]=((-0.0001)+(((0.02626)*x2538))+((sj3*x2547))+((sj3*x2550))+(((-0.02626)*x2535))+pz+(((0.09746)*sj3)));
evalcond[3]=((((-1.0)*x2528*x2539))+((r01*x2533))+x2549+((r11*x2526))+(((-1.0)*x2524*x2542))+(((-1.0)*r00*x2534)));
evalcond[4]=((((-1.0)*x2534*x2539))+((r00*x2528))+(((-1.0)*x2526*x2540))+(((-1.0)*sj2*x2551))+((r11*x2533))+(((-1.0)*x2524*x2537)));
evalcond[5]=(x2548+((x2526*x2532))+((cj0*cj5*r02))+((sj0*x2530))+((x2533*x2541))+((r01*sj5*x2534))+((x2525*x2542))+((x2528*x2531)));
evalcond[6]=((((-1.0)*r02*sj0*x2536))+((x2531*x2534))+((cj0*x2530))+((x2525*x2537))+(((-1.0)*sj5*x2528*x2540))+((x2532*x2533))+(((-1.0)*x2526*x2541))+(((-1.0)*x2552)));
evalcond[7]=((-0.1255)+(((-1.0)*cj0*x2543))+((x2528*x2545))+(((-0.1158)*cj2))+((x2533*x2546))+(((-0.02626)*sj2*x2525))+(((-0.0009)*sj2))+(((0.0718)*sj2*x2524))+((px*sj0))+(((-1.0)*x2537*x2550))+(((-0.09746)*x2537))+(((-1.0)*x2537*x2547))+(((-1.0)*x2526*x2527))+(((-1.0)*x2529*x2534)));
evalcond[8]=((-0.001)+(((-1.0)*x2542*x2547))+(((-1.0)*x2542*x2550))+(((-1.0)*sj0*x2543))+(((-0.1158)*sj2))+(((-1.0)*x2528*x2529))+(((-0.09746)*x2542))+(((-0.0718)*x2548))+(((0.02626)*x2549))+(((0.0009)*cj2))+((x2527*x2533))+((x2526*x2546))+(((-1.0)*cj0*px))+(((-1.0)*x2534*x2545)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2553=((1.0)*sj5);
CheckValue<IkReal> x2554 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*r20*sj6*x2553))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x2553))),IKFAST_ATAN2_MAGTHRESH);
if(!x2554.valid){
continue;
}
CheckValue<IkReal> x2555=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x2555.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x2554.value)+(((1.5707963267949)*(x2555.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x2556=IKsin(j4);
IkReal x2557=IKcos(j4);
IkReal x2558=(sj0*sj6);
IkReal x2559=((0.02626)*r01);
IkReal x2560=(cj6*sj0);
IkReal x2561=((0.02626)*r10);
IkReal x2562=(cj5*r12);
IkReal x2563=(r11*sj5);
IkReal x2564=(r10*sj5);
IkReal x2565=(cj0*sj6);
IkReal x2566=(cj0*cj6);
IkReal x2567=(r21*sj6);
IkReal x2568=((1.0)*cj5);
IkReal x2569=(cj2*cj3);
IkReal x2570=(cj6*r20);
IkReal x2571=((1.0)*r10);
IkReal x2572=((1.0)*r01);
IkReal x2573=(r00*sj5);
IkReal x2574=(cj3*sj2);
IkReal x2575=((1.0)*py);
IkReal x2576=((1.0)*sj5);
IkReal x2577=((0.02626)*r00);
IkReal x2578=((0.02626)*r11);
IkReal x2579=((0.02626)*x2556);
IkReal x2580=(cj2*x2556);
IkReal x2581=(cj2*x2557);
IkReal x2582=((0.0718)*x2557);
IkReal x2583=((1.0)*x2557);
IkReal x2584=((1.0)*sj2*x2556);
evalcond[0]=(x2570+(((-1.0)*x2567))+((sj3*x2556)));
evalcond[1]=((((-1.0)*r20*sj6*x2576))+(((-1.0)*r22*x2568))+(((-1.0)*sj3*x2583))+(((-1.0)*cj6*r21*x2576)));
evalcond[2]=((-0.0001)+((sj3*x2582))+((sj3*x2579))+(((0.02626)*x2570))+pz+(((0.09746)*sj3))+(((-0.02626)*x2567)));
evalcond[3]=(x2581+(((-1.0)*x2556*x2574))+((r01*x2565))+((r11*x2558))+(((-1.0)*r00*x2566))+(((-1.0)*x2560*x2571)));
evalcond[4]=(((r00*x2560))+(((-1.0)*x2566*x2571))+(((-1.0)*x2556*x2569))+(((-1.0)*x2558*x2572))+((r11*x2565))+(((-1.0)*sj2*x2583)));
evalcond[5]=(((x2560*x2563))+x2580+((cj0*cj5*r02))+((x2558*x2564))+((x2557*x2574))+((r01*sj5*x2566))+((x2565*x2573))+((sj0*x2562)));
evalcond[6]=((((-1.0)*x2558*x2573))+((x2557*x2569))+(((-1.0)*x2584))+((cj0*x2562))+(((-1.0)*sj5*x2560*x2572))+((x2563*x2566))+(((-1.0)*r02*sj0*x2568))+((x2564*x2565)));
evalcond[7]=((-0.1255)+(((-1.0)*x2569*x2579))+(((-1.0)*cj0*x2575))+((x2560*x2577))+(((-0.09746)*x2569))+(((-0.1158)*cj2))+(((-1.0)*x2569*x2582))+(((0.0718)*sj2*x2556))+(((-0.02626)*sj2*x2557))+(((-1.0)*x2558*x2559))+(((-1.0)*x2561*x2566))+(((-0.0009)*sj2))+((px*sj0))+((x2565*x2578)));
evalcond[8]=((-0.001)+(((-1.0)*sj0*x2575))+(((-1.0)*x2566*x2577))+(((0.02626)*x2581))+(((-0.1158)*sj2))+((x2559*x2565))+(((-0.09746)*x2574))+((x2558*x2578))+(((0.0009)*cj2))+(((-1.0)*x2560*x2561))+(((-1.0)*x2574*x2579))+(((-1.0)*cj0*px))+(((-0.0718)*x2580))+(((-1.0)*x2574*x2582)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j1)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j3eval[0]=cj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j3eval[0]=sj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
bool bgotonextstatement = true;
do
{
IkReal x2585=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=(((r12*sj0*sj5))+(((-1.0)*cj0*r00*sj6*x2585))+(((-1.0)*r10*sj0*sj6*x2585))+(((-1.0)*cj6*r11*sj0*x2585))+(((-1.0)*cj0*cj6*r01*x2585))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2586=((1.0)*sj6);
if( IKabs(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x2586))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x2586)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x2586))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x2586))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))), (((cj6*r10*sj0))+(((-1.0)*cj0*r01*x2586))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x2586))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2587=IKcos(j4);
IkReal x2588=IKsin(j4);
IkReal x2589=((0.02626)*cj0);
IkReal x2590=(r01*sj6);
IkReal x2591=(r11*sj0);
IkReal x2592=(cj6*sj5);
IkReal x2593=((1.0)*cj0);
IkReal x2594=(sj5*sj6);
IkReal x2595=(cj6*r00);
IkReal x2596=(cj6*r10*sj0);
evalcond[0]=(x2587+(((-1.0)*x2596))+(((-1.0)*x2593*x2595))+((cj0*x2590))+((sj6*x2591)));
evalcond[1]=(((cj5*r12*sj0))+((r10*sj0*x2594))+x2588+((cj0*cj5*r02))+((x2591*x2592))+((cj0*r01*x2592))+((cj0*r00*x2594)));
evalcond[2]=((-0.0001)+(((0.02626)*x2587))+(((-1.0)*x2589*x2595))+(((-1.0)*py*sj0))+(((0.02626)*sj6*x2591))+((x2589*x2590))+(((-0.0718)*x2588))+(((-0.02626)*x2596))+(((-1.0)*px*x2593)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x2597=((1.0)*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*cj0*r11*x2597))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))))+(IKabs(((((-1.0)*r21*x2597))+((cj6*r20))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x2598=(r11*sj0);
IkReal x2599=(cj6*sj5);
IkReal x2600=(r10*sj0);
IkReal x2601=(sj5*sj6);
IkReal x2602=((1.0)*cj5);
IkReal x2603=(cj5*r12);
IkReal x2604=(cj0*sj6);
IkReal x2605=(cj0*r02);
IkReal x2606=((1.0)*sj0);
IkReal x2607=((1.0)*cj6);
IkReal x2608=(cj0*r00);
IkReal x2609=((0.02626)*cj6);
IkReal x2610=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*x2600*x2607))+(((-1.0)*x2607*x2608))+((sj6*x2598))+((r01*x2604)));
evalcond[2]=((((-1.0)*r21*x2599))+(((-1.0)*r22*x2602))+(((-1.0)*r20*x2601)));
evalcond[3]=((((-1.0)*r00*x2602*x2604))+(((-1.0)*cj6*x2602*x2610))+(((-1.0)*cj6*x2598*x2602))+(((-1.0)*sj6*x2600*x2602))+((r12*sj0*sj5))+((sj5*x2605)));
evalcond[4]=((1.0)+((x2598*x2599))+((cj5*x2605))+((x2600*x2601))+((x2599*x2610))+((x2601*x2608))+((sj0*x2603)));
evalcond[5]=(((cj0*r11*x2599))+(((-1.0)*r01*x2599*x2606))+((cj0*x2603))+(((-1.0)*r00*x2601*x2606))+((cj0*r10*x2601))+(((-1.0)*r02*sj0*x2602)));
evalcond[6]=((-0.0719)+(((-1.0)*x2608*x2609))+(((-1.0)*x2600*x2609))+(((0.02626)*r01*x2604))+(((-1.0)*py*x2606))+(((0.02626)*sj6*x2598))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2611=((1.0)*cj5);
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*cj6*r21*x2611))+(((-1.0)*r20*sj6*x2611)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr((((r22*sj5))+(((-1.0)*cj6*r21*x2611))+(((-1.0)*r20*sj6*x2611))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), (((r22*sj5))+(((-1.0)*cj6*r21*x2611))+(((-1.0)*r20*sj6*x2611))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2612=IKsin(j3);
IkReal x2613=IKcos(j3);
IkReal x2614=(cj5*cj6);
IkReal x2615=(r01*sj0);
IkReal x2616=(cj0*sj6);
IkReal x2617=((1.0)*r10);
IkReal x2618=((0.02626)*sj6);
IkReal x2619=((0.02626)*cj6);
IkReal x2620=((1.0)*sj5);
IkReal x2621=((1.0)*sj6);
IkReal x2622=(cj5*sj6);
IkReal x2623=(r00*sj0);
IkReal x2624=((1.0)*cj0);
evalcond[0]=((((-1.0)*x2612))+((cj6*r20))+(((-1.0)*r21*x2621)));
evalcond[1]=(((r20*x2622))+(((-1.0)*r22*x2620))+((r21*x2614))+x2613);
evalcond[2]=((0.0001)+(((-1.0)*r21*x2618))+((r20*x2619))+pz+(((-0.12372)*x2612)));
evalcond[3]=(((r11*x2616))+((cj6*x2623))+(((-1.0)*cj0*cj6*x2617))+(((-1.0)*x2615*x2621))+x2613);
evalcond[4]=((0.2413)+(((0.02626)*r11*x2616))+(((-1.0)*cj0*r10*x2619))+((x2619*x2623))+(((0.12372)*x2613))+(((-1.0)*py*x2624))+((px*sj0))+(((-1.0)*x2615*x2618)));
evalcond[5]=((((-1.0)*cj5*x2616*x2617))+((x2614*x2615))+((cj0*r12*sj5))+(((-1.0)*r11*x2614*x2624))+((x2622*x2623))+(((-1.0)*r02*sj0*x2620))+x2612);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2625=(r11*sj0);
IkReal x2626=(cj6*sj5);
IkReal x2627=(r10*sj0);
IkReal x2628=(sj5*sj6);
IkReal x2629=((1.0)*cj5);
IkReal x2630=(cj5*r12);
IkReal x2631=(cj0*sj6);
IkReal x2632=(cj0*r02);
IkReal x2633=((1.0)*sj0);
IkReal x2634=((1.0)*cj6);
IkReal x2635=(cj0*r00);
IkReal x2636=((0.02626)*cj6);
IkReal x2637=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=(((sj6*x2625))+((r01*x2631))+(((-1.0)*x2634*x2635))+(((-1.0)*x2627*x2634)));
evalcond[2]=((((-1.0)*r22*x2629))+(((-1.0)*r20*x2628))+(((-1.0)*r21*x2626)));
evalcond[3]=((((-1.0)*cj6*x2629*x2637))+(((-1.0)*cj6*x2625*x2629))+((r12*sj0*sj5))+(((-1.0)*r00*x2629*x2631))+((sj5*x2632))+(((-1.0)*sj6*x2627*x2629)));
evalcond[4]=((-1.0)+((sj0*x2630))+((x2627*x2628))+((x2628*x2635))+((cj5*x2632))+((x2626*x2637))+((x2625*x2626)));
evalcond[5]=((((-1.0)*r00*x2628*x2633))+((cj0*x2630))+((cj0*r11*x2626))+(((-1.0)*r01*x2626*x2633))+((cj0*r10*x2628))+(((-1.0)*r02*sj0*x2629)));
evalcond[6]=((0.0717)+(((0.02626)*r01*x2631))+(((0.02626)*sj6*x2625))+(((-1.0)*x2635*x2636))+(((-1.0)*cj0*px))+(((-1.0)*py*x2633))+(((-1.0)*x2627*x2636)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2638=((1.0)*cj5);
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r21*x2638))+((r22*sj5))+(((-1.0)*r20*sj6*x2638)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((((-1.0)*cj6*r21*x2638))+((r22*sj5))+(((-1.0)*r20*sj6*x2638))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((((-1.0)*cj6*r21*x2638))+((r22*sj5))+(((-1.0)*r20*sj6*x2638))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2639=IKsin(j3);
IkReal x2640=IKcos(j3);
IkReal x2641=(cj5*cj6);
IkReal x2642=(r01*sj0);
IkReal x2643=(cj0*sj6);
IkReal x2644=((1.0)*r10);
IkReal x2645=((0.02626)*sj6);
IkReal x2646=((0.02626)*cj6);
IkReal x2647=((1.0)*sj5);
IkReal x2648=((1.0)*sj6);
IkReal x2649=(cj5*sj6);
IkReal x2650=(r00*sj0);
IkReal x2651=((1.0)*cj0);
evalcond[0]=((((-1.0)*r21*x2648))+((cj6*r20))+x2639);
evalcond[1]=((((-1.0)*r22*x2647))+((r21*x2641))+x2640+((r20*x2649)));
evalcond[2]=((0.0001)+(((-0.0712)*x2639))+(((-1.0)*r21*x2645))+pz+((r20*x2646)));
evalcond[3]=(((r11*x2643))+(((-1.0)*cj0*cj6*x2644))+(((-1.0)*x2642*x2648))+((cj6*x2650))+(((-1.0)*x2640)));
evalcond[4]=((0.2413)+(((-1.0)*py*x2651))+(((0.0712)*x2640))+(((-1.0)*x2642*x2645))+(((-1.0)*cj0*r10*x2646))+((px*sj0))+((x2646*x2650))+(((0.02626)*r11*x2643)));
evalcond[5]=(((x2649*x2650))+(((-1.0)*r11*x2641*x2651))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*x2647))+(((-1.0)*cj5*x2643*x2644))+((x2641*x2642))+x2639);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2652=(cj6*sj0);
IkReal x2653=(sj0*sj6);
IkReal x2654=((1.0)*cj5);
IkReal x2655=(cj0*sj6);
IkReal x2656=(cj0*r02);
IkReal x2657=((1.0)*r10);
IkReal x2658=(r12*sj0);
IkReal x2659=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((1.0)+(((-1.0)*x2652*x2657))+((r11*x2653))+((r01*x2655))+(((-1.0)*r00*x2659)));
evalcond[3]=((((-1.0)*r01*x2653))+((r11*x2655))+((r00*x2652))+(((-1.0)*x2657*x2659)));
evalcond[4]=((((-1.0)*r01*x2654*x2659))+(((-1.0)*r11*x2652*x2654))+((sj5*x2658))+((sj5*x2656))+(((-1.0)*r00*x2654*x2655))+(((-1.0)*r10*x2653*x2654)));
evalcond[5]=(((r10*sj5*x2653))+((r11*sj5*x2652))+((r01*sj5*x2659))+((cj5*x2656))+((cj5*x2658))+((r00*sj5*x2655)));
evalcond[6]=((0.02616)+(((0.02626)*r01*x2655))+(((-1.0)*py*sj0))+(((-0.02626)*r00*x2659))+(((-1.0)*cj0*px))+(((-0.02626)*r10*x2652))+(((0.02626)*r11*x2653)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2660=((1.0)*cj5);
if( IKabs(((0.000590807042419946)+(((5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*sj6*x2660))+((r22*sj5))+(((-1.0)*cj6*r21*x2660)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((5.90807042419946)*pz))))+IKsqr(((((-1.0)*r20*sj6*x2660))+((r22*sj5))+(((-1.0)*cj6*r21*x2660))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((5.90807042419946)*pz))), ((((-1.0)*r20*sj6*x2660))+((r22*sj5))+(((-1.0)*cj6*r21*x2660))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2661=IKsin(j3);
IkReal x2662=IKcos(j3);
IkReal x2663=(cj5*cj6);
IkReal x2664=(r01*sj0);
IkReal x2665=(cj0*cj5);
IkReal x2666=(r10*sj6);
IkReal x2667=((0.02626)*sj6);
IkReal x2668=((0.02626)*cj6);
IkReal x2669=((1.0)*cj5);
IkReal x2670=(r02*sj0);
IkReal x2671=((1.0)*sj5);
IkReal x2672=(cj0*r11);
IkReal x2673=(cj0*sj5);
IkReal x2674=(r20*sj6);
IkReal x2675=(r00*sj0);
evalcond[0]=((0.0001)+(((-0.16926)*x2661))+pz);
evalcond[1]=(((r21*x2663))+((cj5*x2674))+(((-1.0)*r22*x2671))+x2662);
evalcond[2]=((((-1.0)*x2671*x2674))+(((-1.0)*cj6*r21*x2671))+(((-1.0)*r22*x2669))+x2661);
evalcond[3]=((0.2413)+((x2668*x2675))+((x2667*x2672))+(((0.16926)*x2662))+(((-1.0)*x2664*x2667))+((px*sj0))+(((-1.0)*cj0*r10*x2668))+(((-1.0)*cj0*py)));
evalcond[4]=(((r12*x2673))+(((-1.0)*x2670*x2671))+((x2663*x2664))+((cj5*sj6*x2675))+(((-1.0)*x2665*x2666))+(((-1.0)*x2663*x2672))+x2661);
evalcond[5]=((((-1.0)*x2662))+(((-1.0)*sj6*x2671*x2675))+((r12*x2665))+((x2666*x2673))+(((-1.0)*cj6*x2664*x2671))+((cj6*sj5*x2672))+(((-1.0)*x2669*x2670)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2676=(cj6*sj0);
IkReal x2677=(sj0*sj6);
IkReal x2678=((1.0)*cj5);
IkReal x2679=(cj0*sj6);
IkReal x2680=(cj0*r02);
IkReal x2681=((1.0)*r10);
IkReal x2682=(r12*sj0);
IkReal x2683=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((-1.0)+(((-1.0)*r00*x2683))+(((-1.0)*x2676*x2681))+((r01*x2679))+((r11*x2677)));
evalcond[3]=((((-1.0)*x2681*x2683))+((r00*x2676))+(((-1.0)*r01*x2677))+((r11*x2679)));
evalcond[4]=((((-1.0)*r11*x2676*x2678))+(((-1.0)*r00*x2678*x2679))+(((-1.0)*r01*x2678*x2683))+(((-1.0)*r10*x2677*x2678))+((sj5*x2680))+((sj5*x2682)));
evalcond[5]=(((r11*sj5*x2676))+((cj5*x2680))+((cj5*x2682))+((r00*sj5*x2679))+((r01*sj5*x2683))+((r10*sj5*x2677)));
evalcond[6]=((-0.02636)+(((0.02626)*r01*x2679))+(((-0.02626)*r00*x2683))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x2676))+(((0.02626)*r11*x2677))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2684=((1.0)*cj5);
if( IKabs(((0.00389711613406079)+(((38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*r20*sj6*x2684))+(((-1.0)*cj6*r21*x2684)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((38.9711613406079)*pz))))+IKsqr((((r22*sj5))+(((-1.0)*r20*sj6*x2684))+(((-1.0)*cj6*r21*x2684))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((38.9711613406079)*pz))), (((r22*sj5))+(((-1.0)*r20*sj6*x2684))+(((-1.0)*cj6*r21*x2684))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2685=IKsin(j3);
IkReal x2686=IKcos(j3);
IkReal x2687=(cj5*cj6);
IkReal x2688=(r01*sj0);
IkReal x2689=(cj0*cj5);
IkReal x2690=(r10*sj6);
IkReal x2691=((0.02626)*sj6);
IkReal x2692=((0.02626)*cj6);
IkReal x2693=((1.0)*cj5);
IkReal x2694=(r02*sj0);
IkReal x2695=((1.0)*sj5);
IkReal x2696=(cj0*r11);
IkReal x2697=(cj0*sj5);
IkReal x2698=(r20*sj6);
IkReal x2699=(r00*sj0);
evalcond[0]=((0.0001)+(((-0.02566)*x2685))+pz);
evalcond[1]=(((cj5*x2698))+((r21*x2687))+(((-1.0)*r22*x2695))+x2686);
evalcond[2]=((((-1.0)*cj6*r21*x2695))+(((-1.0)*r22*x2693))+(((-1.0)*x2685))+(((-1.0)*x2695*x2698)));
evalcond[3]=((0.2413)+((x2691*x2696))+(((0.02566)*x2686))+(((-1.0)*x2688*x2691))+(((-1.0)*cj0*r10*x2692))+((px*sj0))+(((-1.0)*cj0*py))+((x2692*x2699)));
evalcond[4]=(((r12*x2697))+(((-1.0)*x2689*x2690))+((x2687*x2688))+(((-1.0)*x2687*x2696))+((cj5*sj6*x2699))+x2685+(((-1.0)*x2694*x2695)));
evalcond[5]=((((-1.0)*cj6*x2688*x2695))+(((-1.0)*sj6*x2695*x2699))+((x2690*x2697))+((r12*x2689))+(((-1.0)*x2693*x2694))+((cj6*sj5*x2696))+x2686);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2700=(r20*sj6);
IkReal x2701=((1.0)*cj5);
IkReal x2702=(cj6*r21);
CheckValue<IkReal> x2703=IKPowWithIntegerCheck(cj4,-1);
if(!x2703.valid){
continue;
}
if( IKabs(((x2703.value)*((((cj5*r22))+((sj5*x2700))+((sj5*x2702)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*x2701*x2702))+(((-1.0)*x2700*x2701)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2703.value)*((((cj5*r22))+((sj5*x2700))+((sj5*x2702))))))+IKsqr((((r22*sj5))+(((-1.0)*x2701*x2702))+(((-1.0)*x2700*x2701))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x2703.value)*((((cj5*r22))+((sj5*x2700))+((sj5*x2702))))), (((r22*sj5))+(((-1.0)*x2701*x2702))+(((-1.0)*x2700*x2701))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x2704=IKsin(j3);
IkReal x2705=IKcos(j3);
IkReal x2706=(cj5*cj6);
IkReal x2707=(cj0*cj5);
IkReal x2708=(r01*sj0);
IkReal x2709=(r10*sj6);
IkReal x2710=((0.02626)*sj6);
IkReal x2711=(cj0*r11);
IkReal x2712=((0.02626)*cj6);
IkReal x2713=(cj0*r10);
IkReal x2714=((1.0)*r22);
IkReal x2715=(cj0*sj5);
IkReal x2716=((1.0)*sj6);
IkReal x2717=(cj5*sj6);
IkReal x2718=(r00*sj0);
IkReal x2719=((1.0)*cj6);
IkReal x2720=(cj4*x2704);
IkReal x2721=(sj4*x2705);
IkReal x2722=((1.0)*r02*sj0);
IkReal x2723=(sj4*x2704);
IkReal x2724=(cj4*x2705);
evalcond[0]=((((-1.0)*r21*x2716))+(((-1.0)*x2723))+((cj6*r20)));
evalcond[1]=(x2705+(((-1.0)*sj5*x2714))+((r21*x2706))+((r20*x2717)));
evalcond[2]=(x2720+(((-1.0)*r20*sj5*x2716))+(((-1.0)*r21*sj5*x2719))+(((-1.0)*cj5*x2714)));
evalcond[3]=(x2721+((sj6*x2711))+((cj6*x2718))+(((-1.0)*x2713*x2719))+(((-1.0)*x2708*x2716)));
evalcond[4]=((0.0001)+(((-1.0)*r21*x2710))+(((-0.02626)*x2723))+(((-0.0718)*x2720))+pz+(((-0.09746)*x2704))+((r20*x2712)));
evalcond[5]=(((r12*x2715))+x2704+(((-1.0)*x2707*x2709))+(((-1.0)*sj5*x2722))+(((-1.0)*x2706*x2711))+((x2706*x2708))+((x2717*x2718)));
evalcond[6]=(((r12*x2707))+(((-1.0)*sj5*x2708*x2719))+(((-1.0)*sj5*x2716*x2718))+((x2709*x2715))+(((-1.0)*x2724))+(((-1.0)*cj5*x2722))+((cj6*sj5*x2711)));
evalcond[7]=((0.2413)+(((-1.0)*x2712*x2713))+(((0.02626)*x2721))+((x2712*x2718))+(((-1.0)*x2708*x2710))+((x2710*x2711))+((px*sj0))+(((0.09746)*x2705))+(((0.0718)*x2724))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2725=((1.0)*r21);
CheckValue<IkReal> x2726=IKPowWithIntegerCheck(sj4,-1);
if(!x2726.valid){
continue;
}
if( IKabs(((x2726.value)*(((((-1.0)*sj6*x2725))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x2725)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2726.value)*(((((-1.0)*sj6*x2725))+((cj6*r20))))))+IKsqr(((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x2725))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x2726.value)*(((((-1.0)*sj6*x2725))+((cj6*r20))))), ((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x2725))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x2727=IKsin(j3);
IkReal x2728=IKcos(j3);
IkReal x2729=(cj5*cj6);
IkReal x2730=(cj0*cj5);
IkReal x2731=(r01*sj0);
IkReal x2732=(r10*sj6);
IkReal x2733=((0.02626)*sj6);
IkReal x2734=(cj0*r11);
IkReal x2735=((0.02626)*cj6);
IkReal x2736=(cj0*r10);
IkReal x2737=((1.0)*r22);
IkReal x2738=(cj0*sj5);
IkReal x2739=((1.0)*sj6);
IkReal x2740=(cj5*sj6);
IkReal x2741=(r00*sj0);
IkReal x2742=((1.0)*cj6);
IkReal x2743=(cj4*x2727);
IkReal x2744=(sj4*x2728);
IkReal x2745=((1.0)*r02*sj0);
IkReal x2746=(sj4*x2727);
IkReal x2747=(cj4*x2728);
evalcond[0]=(((cj6*r20))+(((-1.0)*x2746))+(((-1.0)*r21*x2739)));
evalcond[1]=(x2728+((r21*x2729))+((r20*x2740))+(((-1.0)*sj5*x2737)));
evalcond[2]=(x2743+(((-1.0)*r20*sj5*x2739))+(((-1.0)*cj5*x2737))+(((-1.0)*r21*sj5*x2742)));
evalcond[3]=(x2744+(((-1.0)*x2731*x2739))+(((-1.0)*x2736*x2742))+((cj6*x2741))+((sj6*x2734)));
evalcond[4]=((0.0001)+(((-0.0718)*x2743))+(((-0.09746)*x2727))+pz+((r20*x2735))+(((-0.02626)*x2746))+(((-1.0)*r21*x2733)));
evalcond[5]=(x2727+(((-1.0)*x2730*x2732))+(((-1.0)*x2729*x2734))+((x2740*x2741))+((r12*x2738))+(((-1.0)*sj5*x2745))+((x2729*x2731)));
evalcond[6]=(((cj6*sj5*x2734))+((x2732*x2738))+((r12*x2730))+(((-1.0)*x2747))+(((-1.0)*sj5*x2731*x2742))+(((-1.0)*cj5*x2745))+(((-1.0)*sj5*x2739*x2741)));
evalcond[7]=((0.2413)+(((-1.0)*x2731*x2733))+(((0.0718)*x2747))+(((0.09746)*x2728))+(((-1.0)*x2735*x2736))+(((0.02626)*x2744))+((px*sj0))+((x2733*x2734))+(((-1.0)*cj0*py))+((x2735*x2741)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2748=((1.0)*sj6);
CheckValue<IkReal> x2749=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x2749.valid){
continue;
}
CheckValue<IkReal> x2750 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*x2748)))),((((-1.0)*cj0*r11*x2748))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))),IKFAST_ATAN2_MAGTHRESH);
if(!x2750.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2749.value)))+(x2750.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x2751=IKsin(j3);
IkReal x2752=IKcos(j3);
IkReal x2753=(cj5*cj6);
IkReal x2754=(cj0*cj5);
IkReal x2755=(r01*sj0);
IkReal x2756=(r10*sj6);
IkReal x2757=((0.02626)*sj6);
IkReal x2758=(cj0*r11);
IkReal x2759=((0.02626)*cj6);
IkReal x2760=(cj0*r10);
IkReal x2761=((1.0)*r22);
IkReal x2762=(cj0*sj5);
IkReal x2763=((1.0)*sj6);
IkReal x2764=(cj5*sj6);
IkReal x2765=(r00*sj0);
IkReal x2766=((1.0)*cj6);
IkReal x2767=(cj4*x2751);
IkReal x2768=(sj4*x2752);
IkReal x2769=((1.0)*r02*sj0);
IkReal x2770=(sj4*x2751);
IkReal x2771=(cj4*x2752);
evalcond[0]=((((-1.0)*x2770))+((cj6*r20))+(((-1.0)*r21*x2763)));
evalcond[1]=(x2752+((r21*x2753))+((r20*x2764))+(((-1.0)*sj5*x2761)));
evalcond[2]=(x2767+(((-1.0)*r21*sj5*x2766))+(((-1.0)*r20*sj5*x2763))+(((-1.0)*cj5*x2761)));
evalcond[3]=(x2768+(((-1.0)*x2755*x2763))+(((-1.0)*x2760*x2766))+((sj6*x2758))+((cj6*x2765)));
evalcond[4]=((0.0001)+(((-0.09746)*x2751))+pz+((r20*x2759))+(((-0.0718)*x2767))+(((-1.0)*r21*x2757))+(((-0.02626)*x2770)));
evalcond[5]=(x2751+((x2753*x2755))+((r12*x2762))+(((-1.0)*x2754*x2756))+(((-1.0)*x2753*x2758))+((x2764*x2765))+(((-1.0)*sj5*x2769)));
evalcond[6]=((((-1.0)*x2771))+((x2756*x2762))+((cj6*sj5*x2758))+(((-1.0)*sj5*x2763*x2765))+((r12*x2754))+(((-1.0)*sj5*x2755*x2766))+(((-1.0)*cj5*x2769)));
evalcond[7]=((0.2413)+((x2759*x2765))+(((0.0718)*x2771))+((x2757*x2758))+(((-1.0)*x2759*x2760))+((px*sj0))+(((-1.0)*x2755*x2757))+(((0.02626)*x2768))+(((0.09746)*x2752))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2772=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj0*r00*sj6*x2772))+(((-1.0)*cj0*cj6*r01*x2772))+((r12*sj0*sj5))+(((-1.0)*cj6*r11*sj0*x2772))+(((-1.0)*r10*sj0*sj6*x2772))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2773=((1.0)*cj6);
if( IKabs(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x2773))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x2773)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x2773))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x2773))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))), (((r11*sj0*sj6))+(((-1.0)*cj0*r00*x2773))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x2773))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2774=IKsin(j4);
IkReal x2775=IKcos(j4);
IkReal x2776=((0.02626)*cj0);
IkReal x2777=(r01*sj6);
IkReal x2778=(r11*sj0);
IkReal x2779=(cj6*sj5);
IkReal x2780=((1.0)*cj0);
IkReal x2781=(sj5*sj6);
IkReal x2782=(cj6*r00);
IkReal x2783=(cj6*r10*sj0);
evalcond[0]=(((sj6*x2778))+(((-1.0)*x2775))+(((-1.0)*x2780*x2782))+((cj0*x2777))+(((-1.0)*x2783)));
evalcond[1]=(((cj5*r12*sj0))+(((-1.0)*x2774))+((cj0*r00*x2781))+((cj0*cj5*r02))+((r10*sj0*x2781))+((x2778*x2779))+((cj0*r01*x2779)));
evalcond[2]=((-0.0019)+(((0.02626)*sj6*x2778))+(((-1.0)*px*x2780))+(((0.0718)*x2774))+(((-0.02626)*x2783))+(((-1.0)*x2776*x2782))+((x2776*x2777))+(((-1.0)*py*sj0))+(((-0.02626)*x2775)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x2784=((1.0)*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x2784))+(((-1.0)*cj0*cj6*r10)))))+(IKabs(((((-1.0)*r21*x2784))+((cj6*r20))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x2785=(r11*sj0);
IkReal x2786=(cj6*sj5);
IkReal x2787=(r10*sj0);
IkReal x2788=(sj5*sj6);
IkReal x2789=((1.0)*cj5);
IkReal x2790=(cj5*r12);
IkReal x2791=(cj0*sj6);
IkReal x2792=(cj0*r02);
IkReal x2793=((1.0)*sj0);
IkReal x2794=((1.0)*cj6);
IkReal x2795=(cj0*r00);
IkReal x2796=((0.02626)*cj6);
IkReal x2797=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*x2787*x2794))+((sj6*x2785))+((r01*x2791))+(((-1.0)*x2794*x2795)));
evalcond[2]=((((-1.0)*r21*x2786))+(((-1.0)*r20*x2788))+(((-1.0)*r22*x2789)));
evalcond[3]=(((sj5*x2792))+((r12*sj0*sj5))+(((-1.0)*r00*x2789*x2791))+(((-1.0)*cj6*x2789*x2797))+(((-1.0)*sj6*x2787*x2789))+(((-1.0)*cj6*x2785*x2789)));
evalcond[4]=((-1.0)+((x2786*x2797))+((x2785*x2786))+((x2787*x2788))+((sj0*x2790))+((cj5*x2792))+((x2788*x2795)));
evalcond[5]=((((-1.0)*r00*x2788*x2793))+((cj0*r11*x2786))+((cj0*x2790))+((cj0*r10*x2788))+(((-1.0)*r02*sj0*x2789))+(((-1.0)*r01*x2786*x2793)));
evalcond[6]=((0.0699)+(((-1.0)*x2795*x2796))+(((-1.0)*x2787*x2796))+(((0.02626)*r01*x2791))+(((0.02626)*sj6*x2785))+(((-1.0)*cj0*px))+(((-1.0)*py*x2793)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2798=((1.0)*cj5);
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*cj6*r21*x2798))+(((-1.0)*r20*sj6*x2798)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr((((r22*sj5))+(((-1.0)*cj6*r21*x2798))+(((-1.0)*r20*sj6*x2798))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), (((r22*sj5))+(((-1.0)*cj6*r21*x2798))+(((-1.0)*r20*sj6*x2798))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2799=IKsin(j3);
IkReal x2800=IKcos(j3);
IkReal x2801=(cj5*cj6);
IkReal x2802=(r01*sj0);
IkReal x2803=(cj0*sj6);
IkReal x2804=((1.0)*r10);
IkReal x2805=((0.02626)*sj6);
IkReal x2806=((0.02626)*cj6);
IkReal x2807=((1.0)*sj5);
IkReal x2808=((1.0)*sj6);
IkReal x2809=(cj5*sj6);
IkReal x2810=(r00*sj0);
IkReal x2811=((1.0)*cj0);
IkReal x2812=((1.0)*x2799);
evalcond[0]=((((-1.0)*r21*x2808))+(((-1.0)*x2812))+((cj6*r20)));
evalcond[1]=(((r20*x2809))+(((-1.0)*r22*x2807))+((r21*x2801))+x2800);
evalcond[2]=((0.0001)+((r20*x2806))+(((-1.0)*r21*x2805))+pz+(((-0.12372)*x2799)));
evalcond[3]=((((-1.0)*x2800))+(((-1.0)*x2802*x2808))+((cj6*x2810))+(((-1.0)*cj0*cj6*x2804))+((r11*x2803)));
evalcond[4]=((0.0097)+(((-1.0)*cj0*r10*x2806))+(((0.02626)*r11*x2803))+(((-1.0)*py*x2811))+(((-1.0)*x2802*x2805))+((px*sj0))+(((-0.12372)*x2800))+((x2806*x2810)));
evalcond[5]=(((x2809*x2810))+(((-1.0)*r11*x2801*x2811))+(((-1.0)*cj5*x2803*x2804))+(((-1.0)*r02*sj0*x2807))+((cj0*r12*sj5))+(((-1.0)*x2812))+((x2801*x2802)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2813=(r11*sj0);
IkReal x2814=(cj6*sj5);
IkReal x2815=(r10*sj0);
IkReal x2816=(sj5*sj6);
IkReal x2817=((1.0)*cj5);
IkReal x2818=(cj5*r12);
IkReal x2819=(cj0*sj6);
IkReal x2820=(cj0*r02);
IkReal x2821=((1.0)*sj0);
IkReal x2822=((1.0)*cj6);
IkReal x2823=(cj0*r00);
IkReal x2824=((0.02626)*cj6);
IkReal x2825=(cj0*r01);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=(((r01*x2819))+(((-1.0)*x2822*x2823))+((sj6*x2813))+(((-1.0)*x2815*x2822)));
evalcond[2]=((((-1.0)*r22*x2817))+(((-1.0)*r20*x2816))+(((-1.0)*r21*x2814)));
evalcond[3]=((((-1.0)*r00*x2817*x2819))+(((-1.0)*cj6*x2813*x2817))+(((-1.0)*cj6*x2817*x2825))+((sj5*x2820))+((r12*sj0*sj5))+(((-1.0)*sj6*x2815*x2817)));
evalcond[4]=((1.0)+((x2814*x2825))+((x2813*x2814))+((cj5*x2820))+((x2815*x2816))+((sj0*x2818))+((x2816*x2823)));
evalcond[5]=((((-1.0)*r01*x2814*x2821))+((cj0*r10*x2816))+(((-1.0)*r02*sj0*x2817))+(((-1.0)*r00*x2816*x2821))+((cj0*x2818))+((cj0*r11*x2814)));
evalcond[6]=((-0.0737)+(((0.02626)*r01*x2819))+(((-1.0)*py*x2821))+(((0.02626)*sj6*x2813))+(((-1.0)*x2823*x2824))+(((-1.0)*cj0*px))+(((-1.0)*x2815*x2824)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2826=((1.0)*cj5);
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r21*x2826))+(((-1.0)*r20*sj6*x2826))+((r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((((-1.0)*cj6*r21*x2826))+(((-1.0)*r20*sj6*x2826))+((r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((((-1.0)*cj6*r21*x2826))+(((-1.0)*r20*sj6*x2826))+((r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2827=IKsin(j3);
IkReal x2828=IKcos(j3);
IkReal x2829=(cj5*cj6);
IkReal x2830=(r01*sj0);
IkReal x2831=(cj0*sj6);
IkReal x2832=((1.0)*r10);
IkReal x2833=((0.02626)*sj6);
IkReal x2834=((0.02626)*cj6);
IkReal x2835=((1.0)*sj5);
IkReal x2836=((1.0)*sj6);
IkReal x2837=(cj5*sj6);
IkReal x2838=(r00*sj0);
IkReal x2839=((1.0)*cj0);
evalcond[0]=((((-1.0)*r21*x2836))+((cj6*r20))+x2827);
evalcond[1]=(((r20*x2837))+((r21*x2829))+(((-1.0)*r22*x2835))+x2828);
evalcond[2]=((0.0001)+(((-0.0712)*x2827))+((r20*x2834))+(((-1.0)*r21*x2833))+pz);
evalcond[3]=((((-1.0)*cj0*cj6*x2832))+x2828+((r11*x2831))+((cj6*x2838))+(((-1.0)*x2830*x2836)));
evalcond[4]=((0.0097)+(((-0.0712)*x2828))+((x2834*x2838))+(((0.02626)*r11*x2831))+(((-1.0)*cj0*r10*x2834))+(((-1.0)*py*x2839))+((px*sj0))+(((-1.0)*x2830*x2833)));
evalcond[5]=(((x2829*x2830))+(((-1.0)*r02*sj0*x2835))+(((-1.0)*x2827))+(((-1.0)*r11*x2829*x2839))+(((-1.0)*cj5*x2831*x2832))+((cj0*r12*sj5))+((x2837*x2838)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2840=(cj6*sj0);
IkReal x2841=(sj0*sj6);
IkReal x2842=((1.0)*cj5);
IkReal x2843=(cj0*sj6);
IkReal x2844=(cj0*r02);
IkReal x2845=((1.0)*r10);
IkReal x2846=(r12*sj0);
IkReal x2847=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((-1.0)+(((-1.0)*r00*x2847))+((r11*x2841))+(((-1.0)*x2840*x2845))+((r01*x2843)));
evalcond[3]=(((r11*x2843))+(((-1.0)*x2845*x2847))+((r00*x2840))+(((-1.0)*r01*x2841)));
evalcond[4]=((((-1.0)*r11*x2840*x2842))+(((-1.0)*r10*x2841*x2842))+((sj5*x2846))+((sj5*x2844))+(((-1.0)*r01*x2842*x2847))+(((-1.0)*r00*x2842*x2843)));
evalcond[5]=(((r01*sj5*x2847))+((r10*sj5*x2841))+((cj5*x2846))+((cj5*x2844))+((r00*sj5*x2843))+((r11*sj5*x2840)));
evalcond[6]=((-0.02816)+(((-0.02626)*r00*x2847))+(((-0.02626)*r10*x2840))+(((-1.0)*py*sj0))+(((0.02626)*r01*x2843))+(((0.02626)*r11*x2841))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2848=((1.0)*cj5);
if( IKabs(((0.000590807042419946)+(((5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*r20*sj6*x2848))+(((-1.0)*cj6*r21*x2848)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((5.90807042419946)*pz))))+IKsqr((((r22*sj5))+(((-1.0)*r20*sj6*x2848))+(((-1.0)*cj6*r21*x2848))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((5.90807042419946)*pz))), (((r22*sj5))+(((-1.0)*r20*sj6*x2848))+(((-1.0)*cj6*r21*x2848))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2849=IKsin(j3);
IkReal x2850=IKcos(j3);
IkReal x2851=(cj5*cj6);
IkReal x2852=(r01*sj0);
IkReal x2853=(cj0*cj5);
IkReal x2854=(r10*sj6);
IkReal x2855=((0.02626)*sj6);
IkReal x2856=((0.02626)*cj6);
IkReal x2857=((1.0)*cj5);
IkReal x2858=(r02*sj0);
IkReal x2859=((1.0)*sj5);
IkReal x2860=(cj0*r11);
IkReal x2861=(cj0*sj5);
IkReal x2862=(r20*sj6);
IkReal x2863=(r00*sj0);
evalcond[0]=((0.0001)+(((-0.16926)*x2849))+pz);
evalcond[1]=(((r21*x2851))+((cj5*x2862))+(((-1.0)*r22*x2859))+x2850);
evalcond[2]=((((-1.0)*cj6*r21*x2859))+(((-1.0)*x2859*x2862))+(((-1.0)*r22*x2857))+x2849);
evalcond[3]=((0.0097)+((x2856*x2863))+(((-0.16926)*x2850))+((x2855*x2860))+((px*sj0))+(((-1.0)*cj0*r10*x2856))+(((-1.0)*x2852*x2855))+(((-1.0)*cj0*py)));
evalcond[4]=(((x2854*x2861))+((r12*x2853))+(((-1.0)*sj6*x2859*x2863))+(((-1.0)*x2857*x2858))+((cj6*sj5*x2860))+(((-1.0)*cj6*x2852*x2859))+x2850);
evalcond[5]=((((-1.0)*x2853*x2854))+((r12*x2861))+((x2851*x2852))+(((-1.0)*x2849))+(((-1.0)*x2851*x2860))+((cj5*sj6*x2863))+(((-1.0)*x2858*x2859)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2864=(cj6*sj0);
IkReal x2865=(sj0*sj6);
IkReal x2866=((1.0)*cj5);
IkReal x2867=(cj0*sj6);
IkReal x2868=(cj0*r02);
IkReal x2869=((1.0)*r10);
IkReal x2870=(r12*sj0);
IkReal x2871=(cj0*cj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[2]=((1.0)+(((-1.0)*x2864*x2869))+(((-1.0)*r00*x2871))+((r11*x2865))+((r01*x2867)));
evalcond[3]=(((r00*x2864))+(((-1.0)*x2869*x2871))+(((-1.0)*r01*x2865))+((r11*x2867)));
evalcond[4]=(((sj5*x2870))+(((-1.0)*r01*x2866*x2871))+(((-1.0)*r00*x2866*x2867))+(((-1.0)*r10*x2865*x2866))+((sj5*x2868))+(((-1.0)*r11*x2864*x2866)));
evalcond[5]=(((r11*sj5*x2864))+((cj5*x2868))+((r00*sj5*x2867))+((r01*sj5*x2871))+((r10*sj5*x2865))+((cj5*x2870)));
evalcond[6]=((0.02436)+(((0.02626)*r01*x2867))+(((-0.02626)*r00*x2871))+(((-1.0)*py*sj0))+(((0.02626)*r11*x2865))+(((-0.02626)*r10*x2864))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2872=((1.0)*cj5);
if( IKabs(((0.00389711613406079)+(((38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*sj6*x2872))+((r22*sj5))+(((-1.0)*cj6*r21*x2872)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((38.9711613406079)*pz))))+IKsqr(((((-1.0)*r20*sj6*x2872))+((r22*sj5))+(((-1.0)*cj6*r21*x2872))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((38.9711613406079)*pz))), ((((-1.0)*r20*sj6*x2872))+((r22*sj5))+(((-1.0)*cj6*r21*x2872))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2873=IKsin(j3);
IkReal x2874=IKcos(j3);
IkReal x2875=(cj5*cj6);
IkReal x2876=(r01*sj0);
IkReal x2877=(cj0*cj5);
IkReal x2878=(r10*sj6);
IkReal x2879=((0.02626)*sj6);
IkReal x2880=((0.02626)*cj6);
IkReal x2881=((1.0)*cj5);
IkReal x2882=(r02*sj0);
IkReal x2883=((1.0)*sj5);
IkReal x2884=(cj0*r11);
IkReal x2885=(cj0*sj5);
IkReal x2886=(r20*sj6);
IkReal x2887=(r00*sj0);
IkReal x2888=((1.0)*x2873);
evalcond[0]=((0.0001)+(((-0.02566)*x2873))+pz);
evalcond[1]=((((-1.0)*r22*x2883))+((r21*x2875))+((cj5*x2886))+x2874);
evalcond[2]=((((-1.0)*x2883*x2886))+(((-1.0)*r22*x2881))+(((-1.0)*cj6*r21*x2883))+(((-1.0)*x2888)));
evalcond[3]=((0.0097)+(((-1.0)*x2876*x2879))+((x2880*x2887))+(((-0.02566)*x2874))+((x2879*x2884))+(((-1.0)*cj0*r10*x2880))+((px*sj0))+(((-1.0)*cj0*py)));
evalcond[4]=((((-1.0)*x2882*x2883))+(((-1.0)*x2877*x2878))+((x2875*x2876))+((r12*x2885))+(((-1.0)*x2888))+((cj5*sj6*x2887))+(((-1.0)*x2875*x2884)));
evalcond[5]=((((-1.0)*x2874))+(((-1.0)*cj6*x2876*x2883))+((x2878*x2885))+((cj6*sj5*x2884))+((r12*x2877))+(((-1.0)*sj6*x2883*x2887))+(((-1.0)*x2881*x2882)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2889=(r20*sj6);
IkReal x2890=((1.0)*cj5);
IkReal x2891=(cj6*r21);
CheckValue<IkReal> x2892=IKPowWithIntegerCheck(cj4,-1);
if(!x2892.valid){
continue;
}
if( IKabs(((x2892.value)*((((cj5*r22))+((sj5*x2891))+((sj5*x2889)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2890*x2891))+(((-1.0)*x2889*x2890))+((r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2892.value)*((((cj5*r22))+((sj5*x2891))+((sj5*x2889))))))+IKsqr(((((-1.0)*x2890*x2891))+(((-1.0)*x2889*x2890))+((r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x2892.value)*((((cj5*r22))+((sj5*x2891))+((sj5*x2889))))), ((((-1.0)*x2890*x2891))+(((-1.0)*x2889*x2890))+((r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x2893=IKsin(j3);
IkReal x2894=IKcos(j3);
IkReal x2895=(cj5*cj6);
IkReal x2896=(cj0*cj5);
IkReal x2897=(r01*sj0);
IkReal x2898=(r10*sj6);
IkReal x2899=((0.02626)*sj6);
IkReal x2900=(cj0*r11);
IkReal x2901=((0.02626)*cj6);
IkReal x2902=(cj0*r10);
IkReal x2903=((1.0)*cj5);
IkReal x2904=(r02*sj0);
IkReal x2905=((1.0)*sj5);
IkReal x2906=(cj0*sj5);
IkReal x2907=((1.0)*sj6);
IkReal x2908=(r20*sj6);
IkReal x2909=(r00*sj0);
IkReal x2910=(cj4*x2893);
IkReal x2911=(sj4*x2894);
IkReal x2912=((1.0)*x2893);
IkReal x2913=(cj4*x2894);
evalcond[0]=((((-1.0)*r21*x2907))+((cj6*r20))+(((-1.0)*sj4*x2912)));
evalcond[1]=(((r21*x2895))+((cj5*x2908))+x2894+(((-1.0)*r22*x2905)));
evalcond[2]=((((-1.0)*x2905*x2908))+(((-1.0)*cj6*r21*x2905))+x2910+(((-1.0)*r22*x2903)));
evalcond[3]=((((-1.0)*cj6*x2902))+(((-1.0)*x2897*x2907))+((sj6*x2900))+(((-1.0)*x2911))+((cj6*x2909)));
evalcond[4]=((0.0001)+(((-0.09746)*x2893))+(((-0.02626)*sj4*x2893))+(((-0.0718)*x2910))+pz+((r20*x2901))+(((-1.0)*r21*x2899)));
evalcond[5]=((((-1.0)*x2896*x2898))+(((-1.0)*x2904*x2905))+((x2895*x2897))+((cj5*sj6*x2909))+(((-1.0)*x2895*x2900))+((r12*x2906))+(((-1.0)*x2912)));
evalcond[6]=(((cj6*sj5*x2900))+(((-1.0)*cj6*x2897*x2905))+((r12*x2896))+((x2898*x2906))+(((-1.0)*x2903*x2904))+x2913+(((-1.0)*sj6*x2905*x2909)));
evalcond[7]=((0.0097)+(((-0.09746)*x2894))+((x2899*x2900))+(((-1.0)*x2901*x2902))+((x2901*x2909))+(((-0.0718)*x2913))+(((-0.02626)*x2911))+(((-1.0)*x2897*x2899))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2914=((1.0)*r21);
CheckValue<IkReal> x2915=IKPowWithIntegerCheck(sj4,-1);
if(!x2915.valid){
continue;
}
if( IKabs(((x2915.value)*(((((-1.0)*sj6*x2914))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj5*cj6*x2914))+(((-1.0)*cj5*r20*sj6))+((r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2915.value)*(((((-1.0)*sj6*x2914))+((cj6*r20))))))+IKsqr(((((-1.0)*cj5*cj6*x2914))+(((-1.0)*cj5*r20*sj6))+((r22*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x2915.value)*(((((-1.0)*sj6*x2914))+((cj6*r20))))), ((((-1.0)*cj5*cj6*x2914))+(((-1.0)*cj5*r20*sj6))+((r22*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x2916=IKsin(j3);
IkReal x2917=IKcos(j3);
IkReal x2918=(cj5*cj6);
IkReal x2919=(cj0*cj5);
IkReal x2920=(r01*sj0);
IkReal x2921=(r10*sj6);
IkReal x2922=((0.02626)*sj6);
IkReal x2923=(cj0*r11);
IkReal x2924=((0.02626)*cj6);
IkReal x2925=(cj0*r10);
IkReal x2926=((1.0)*cj5);
IkReal x2927=(r02*sj0);
IkReal x2928=((1.0)*sj5);
IkReal x2929=(cj0*sj5);
IkReal x2930=((1.0)*sj6);
IkReal x2931=(r20*sj6);
IkReal x2932=(r00*sj0);
IkReal x2933=(cj4*x2916);
IkReal x2934=(sj4*x2917);
IkReal x2935=((1.0)*x2916);
IkReal x2936=(cj4*x2917);
evalcond[0]=((((-1.0)*sj4*x2935))+((cj6*r20))+(((-1.0)*r21*x2930)));
evalcond[1]=(((cj5*x2931))+((r21*x2918))+(((-1.0)*r22*x2928))+x2917);
evalcond[2]=((((-1.0)*cj6*r21*x2928))+(((-1.0)*r22*x2926))+x2933+(((-1.0)*x2928*x2931)));
evalcond[3]=((((-1.0)*x2920*x2930))+(((-1.0)*cj6*x2925))+((sj6*x2923))+(((-1.0)*x2934))+((cj6*x2932)));
evalcond[4]=((0.0001)+(((-0.09746)*x2916))+(((-1.0)*r21*x2922))+(((-0.0718)*x2933))+(((-0.02626)*sj4*x2916))+((r20*x2924))+pz);
evalcond[5]=((((-1.0)*x2927*x2928))+((cj5*sj6*x2932))+(((-1.0)*x2935))+(((-1.0)*x2918*x2923))+((x2918*x2920))+(((-1.0)*x2919*x2921))+((r12*x2929)));
evalcond[6]=(((x2921*x2929))+((r12*x2919))+(((-1.0)*sj6*x2928*x2932))+((cj6*sj5*x2923))+(((-1.0)*x2926*x2927))+(((-1.0)*cj6*x2920*x2928))+x2936);
evalcond[7]=((0.0097)+(((-0.09746)*x2917))+(((-1.0)*x2920*x2922))+((x2924*x2932))+(((-0.0718)*x2936))+(((-0.02626)*x2934))+(((-1.0)*x2924*x2925))+((px*sj0))+((x2922*x2923))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2937=((1.0)*sj6);
CheckValue<IkReal> x2938 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*x2937)))),(((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x2937))),IKFAST_ATAN2_MAGTHRESH);
if(!x2938.valid){
continue;
}
CheckValue<IkReal> x2939=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x2939.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x2938.value)+(((1.5707963267949)*(x2939.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x2940=IKsin(j3);
IkReal x2941=IKcos(j3);
IkReal x2942=(cj5*cj6);
IkReal x2943=(cj0*cj5);
IkReal x2944=(r01*sj0);
IkReal x2945=(r10*sj6);
IkReal x2946=((0.02626)*sj6);
IkReal x2947=(cj0*r11);
IkReal x2948=((0.02626)*cj6);
IkReal x2949=(cj0*r10);
IkReal x2950=((1.0)*cj5);
IkReal x2951=(r02*sj0);
IkReal x2952=((1.0)*sj5);
IkReal x2953=(cj0*sj5);
IkReal x2954=((1.0)*sj6);
IkReal x2955=(r20*sj6);
IkReal x2956=(r00*sj0);
IkReal x2957=(cj4*x2940);
IkReal x2958=(sj4*x2941);
IkReal x2959=((1.0)*x2940);
IkReal x2960=(cj4*x2941);
evalcond[0]=((((-1.0)*sj4*x2959))+(((-1.0)*r21*x2954))+((cj6*r20)));
evalcond[1]=(((r21*x2942))+((cj5*x2955))+(((-1.0)*r22*x2952))+x2941);
evalcond[2]=((((-1.0)*x2952*x2955))+(((-1.0)*cj6*r21*x2952))+(((-1.0)*r22*x2950))+x2957);
evalcond[3]=((((-1.0)*x2958))+((cj6*x2956))+((sj6*x2947))+(((-1.0)*cj6*x2949))+(((-1.0)*x2944*x2954)));
evalcond[4]=((0.0001)+(((-0.0718)*x2957))+(((-1.0)*r21*x2946))+(((-0.09746)*x2940))+(((-0.02626)*sj4*x2940))+pz+((r20*x2948)));
evalcond[5]=(((cj5*sj6*x2956))+(((-1.0)*x2943*x2945))+(((-1.0)*x2959))+(((-1.0)*x2942*x2947))+(((-1.0)*x2951*x2952))+((r12*x2953))+((x2942*x2944)));
evalcond[6]=(((x2945*x2953))+((cj6*sj5*x2947))+(((-1.0)*sj6*x2952*x2956))+(((-1.0)*cj6*x2944*x2952))+((r12*x2943))+(((-1.0)*x2950*x2951))+x2960);
evalcond[7]=((0.0097)+((x2946*x2947))+((x2948*x2956))+(((-0.09746)*x2941))+(((-1.0)*x2948*x2949))+(((-0.02626)*x2958))+((px*sj0))+(((-0.0718)*x2960))+(((-1.0)*cj0*py))+(((-1.0)*x2944*x2946)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2961=(cj5*cj6);
IkReal x2962=((1.0)*cj0);
IkReal x2963=(cj5*sj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r11*x2961*x2962))+(((-1.0)*r10*x2962*x2963))+((r01*sj0*x2961))+((cj0*r12*sj5))+((r00*sj0*x2963))+(((-1.0)*r02*sj0*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*cj0*py))+(((13.9275766016713)*px*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*cj0*py))+(((13.9275766016713)*px*sj0))))+IKsqr((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*cj0*py))+(((13.9275766016713)*px*sj0))), (((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2964=IKcos(j4);
IkReal x2965=IKsin(j4);
IkReal x2966=((1.0)*cj0);
IkReal x2967=(cj6*r10);
IkReal x2968=(cj0*sj6);
IkReal x2969=(cj6*sj5);
IkReal x2970=((0.02626)*sj0);
IkReal x2971=(cj6*r00);
IkReal x2972=((1.0)*sj0);
IkReal x2973=(r01*x2972);
evalcond[0]=(((r11*x2968))+(((-1.0)*x2966*x2967))+(((-1.0)*sj6*x2973))+((sj0*x2971))+x2964);
evalcond[1]=(((cj0*cj5*r12))+(((-1.0)*cj5*r02*x2972))+(((-1.0)*x2969*x2973))+((cj0*r11*x2969))+(((-1.0)*r00*sj5*sj6*x2972))+x2965+((r10*sj5*x2968)));
evalcond[2]=((0.1264)+(((0.02626)*r11*x2968))+((x2970*x2971))+(((0.02626)*x2964))+(((-0.02626)*cj0*x2967))+(((-1.0)*r01*sj6*x2970))+(((-1.0)*py*x2966))+((px*sj0))+(((-0.0718)*x2965)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2974=((1.0)*cj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x2974))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x2974))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x2975=(cj0*r11);
IkReal x2976=(sj0*sj5);
IkReal x2977=((1.0)*cj5);
IkReal x2978=(r10*sj6);
IkReal x2979=((0.02626)*sj6);
IkReal x2980=(r01*sj0);
IkReal x2981=(cj5*r12);
IkReal x2982=((1.0)*sj5);
IkReal x2983=((1.0)*sj6);
IkReal x2984=(cj0*sj5);
IkReal x2985=(r00*sj6);
IkReal x2986=(cj6*r01);
IkReal x2987=(cj0*cj6*r10);
IkReal x2988=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj6*r21*x2982))+(((-1.0)*r22*x2977))+(((-1.0)*r20*sj6*x2982)));
evalcond[2]=(((sj6*x2975))+(((-1.0)*x2987))+(((-1.0)*x2980*x2983))+x2988);
evalcond[3]=(((x2984*x2986))+((x2984*x2985))+((cj0*cj5*r02))+((cj6*r11*x2976))+((sj0*x2981))+((x2976*x2978)));
evalcond[4]=((((-1.0)*cj6*x2975*x2977))+((cj5*sj0*x2985))+((cj5*cj6*x2980))+(((-1.0)*r02*x2976))+((r12*x2984))+(((-1.0)*cj0*x2977*x2978)));
evalcond[5]=((1.0)+((cj0*x2981))+((cj6*sj5*x2975))+((x2978*x2984))+(((-1.0)*x2976*x2986))+(((-1.0)*r00*x2976*x2983))+(((-1.0)*r02*sj0*x2977)));
evalcond[6]=((0.0546)+(((-1.0)*x2979*x2980))+(((-0.02626)*x2987))+((x2975*x2979))+(((0.02626)*x2988))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2989=((1.0)*cj5);
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*cj6*r21*x2989))+(((-1.0)*r20*sj6*x2989)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr((((r22*sj5))+(((-1.0)*cj6*r21*x2989))+(((-1.0)*r20*sj6*x2989))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), (((r22*sj5))+(((-1.0)*cj6*r21*x2989))+(((-1.0)*r20*sj6*x2989))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2990=IKsin(j3);
IkReal x2991=IKcos(j3);
IkReal x2992=(cj5*cj6);
IkReal x2993=(r11*sj0);
IkReal x2994=(cj0*sj6);
IkReal x2995=((1.0)*cj5);
IkReal x2996=((0.02626)*sj6);
IkReal x2997=((0.02626)*cj6);
IkReal x2998=((1.0)*sj0);
IkReal x2999=(r10*sj0);
IkReal x3000=((1.0)*cj0);
IkReal x3001=((1.0)*x2990);
evalcond[0]=((((-1.0)*x3001))+((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x2992))+(((-1.0)*r22*sj5))+x2991);
evalcond[2]=((0.0001)+((r20*x2997))+pz+(((-1.0)*r21*x2996))+(((-0.12372)*x2990)));
evalcond[3]=((((-1.0)*cj6*r10*x2998))+((r01*x2994))+(((-1.0)*x2991))+(((-1.0)*cj6*r00*x3000))+((sj6*x2993)));
evalcond[4]=((-0.1168)+(((-1.0)*px*x3000))+(((-1.0)*py*x2998))+(((-1.0)*x2997*x2999))+((x2993*x2996))+(((0.02626)*r01*x2994))+(((-1.0)*cj0*r00*x2997))+(((-0.12372)*x2991)));
evalcond[5]=((((-1.0)*r01*x2992*x3000))+(((-1.0)*sj6*x2995*x2999))+((r12*sj0*sj5))+(((-1.0)*x3001))+((cj0*r02*sj5))+(((-1.0)*r00*x2994*x2995))+(((-1.0)*x2992*x2993)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3002=(cj0*r11);
IkReal x3003=(sj0*sj5);
IkReal x3004=((1.0)*cj5);
IkReal x3005=(r10*sj6);
IkReal x3006=((0.02626)*sj6);
IkReal x3007=(r01*sj0);
IkReal x3008=(cj5*r12);
IkReal x3009=((1.0)*sj5);
IkReal x3010=((1.0)*sj6);
IkReal x3011=(cj0*sj5);
IkReal x3012=(r00*sj6);
IkReal x3013=(cj6*r01);
IkReal x3014=(cj0*cj6*r10);
IkReal x3015=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x3004))+(((-1.0)*cj6*r21*x3009))+(((-1.0)*r20*sj6*x3009)));
evalcond[2]=(((sj6*x3002))+x3015+(((-1.0)*x3007*x3010))+(((-1.0)*x3014)));
evalcond[3]=(((x3011*x3013))+((x3011*x3012))+((cj0*cj5*r02))+((x3003*x3005))+((sj0*x3008))+((cj6*r11*x3003)));
evalcond[4]=((((-1.0)*cj0*x3004*x3005))+((cj5*cj6*x3007))+((cj5*sj0*x3012))+((r12*x3011))+(((-1.0)*r02*x3003))+(((-1.0)*cj6*x3002*x3004)));
evalcond[5]=((-1.0)+(((-1.0)*r02*sj0*x3004))+((cj0*x3008))+(((-1.0)*x3003*x3013))+((cj6*sj5*x3002))+((x3005*x3011))+(((-1.0)*r00*x3003*x3010)));
evalcond[6]=((0.1982)+(((0.02626)*x3015))+(((-0.02626)*x3014))+((x3002*x3006))+((px*sj0))+(((-1.0)*x3006*x3007))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3016=((1.0)*cj5);
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*cj6*r21*x3016))+(((-1.0)*r20*sj6*x3016)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr((((r22*sj5))+(((-1.0)*cj6*r21*x3016))+(((-1.0)*r20*sj6*x3016))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), (((r22*sj5))+(((-1.0)*cj6*r21*x3016))+(((-1.0)*r20*sj6*x3016))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3017=IKsin(j3);
IkReal x3018=IKcos(j3);
IkReal x3019=(cj5*cj6);
IkReal x3020=(r11*sj0);
IkReal x3021=(cj0*sj6);
IkReal x3022=((1.0)*cj5);
IkReal x3023=((0.02626)*sj6);
IkReal x3024=((0.02626)*cj6);
IkReal x3025=((1.0)*sj0);
IkReal x3026=(r10*sj0);
IkReal x3027=((1.0)*cj0);
evalcond[0]=(x3017+((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[1]=(x3018+((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x3019)));
evalcond[2]=((0.0001)+(((-0.0712)*x3017))+(((-1.0)*r21*x3023))+((r20*x3024))+pz);
evalcond[3]=(x3018+(((-1.0)*cj6*r00*x3027))+((sj6*x3020))+(((-1.0)*cj6*r10*x3025))+((r01*x3021)));
evalcond[4]=((-0.1168)+(((-1.0)*px*x3027))+(((-1.0)*py*x3025))+(((0.02626)*r01*x3021))+(((-0.0712)*x3018))+((x3020*x3023))+(((-1.0)*cj0*r00*x3024))+(((-1.0)*x3024*x3026)));
evalcond[5]=(((r12*sj0*sj5))+(((-1.0)*r00*x3021*x3022))+(((-1.0)*r01*x3019*x3027))+(((-1.0)*x3019*x3020))+(((-1.0)*x3017))+((cj0*r02*sj5))+(((-1.0)*sj6*x3022*x3026)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3028=(r11*sj6);
IkReal x3029=(r01*sj0);
IkReal x3030=(cj5*cj6);
IkReal x3031=(cj0*cj5);
IkReal x3032=((1.0)*r10);
IkReal x3033=((0.02626)*cj0);
IkReal x3034=(cj6*sj0);
IkReal x3035=((1.0)*sj6);
IkReal x3036=(cj0*cj6);
IkReal x3037=((1.0)*cj0);
IkReal x3038=(cj0*sj5);
IkReal x3039=(r00*sj0);
IkReal x3040=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r21*x3035))+((cj6*r20)));
evalcond[2]=((((-1.0)*r00*x3036))+((sj0*x3028))+((cj0*r01*sj6))+(((-1.0)*x3032*x3034)));
evalcond[3]=((1.0)+(((-1.0)*x3029*x3035))+((r00*x3034))+(((-1.0)*x3032*x3036))+((cj0*x3028)));
evalcond[4]=((((-1.0)*r11*x3030*x3037))+(((-1.0)*sj6*x3031*x3032))+((r12*x3038))+((cj5*sj6*x3039))+(((-1.0)*sj5*x3040))+((x3029*x3030)));
evalcond[5]=((((-1.0)*cj5*x3040))+((r12*x3031))+((r10*sj6*x3038))+(((-1.0)*cj6*sj5*x3029))+((r11*sj5*x3036))+(((-1.0)*sj5*x3035*x3039)));
evalcond[6]=((0.15266)+((x3028*x3033))+(((-1.0)*cj6*r10*x3033))+(((-1.0)*py*x3037))+(((0.02626)*r00*x3034))+(((-0.02626)*sj6*x3029))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3041=((1.0)*cj5);
if( IKabs(((0.000590807042419946)+(((5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*r20*sj6*x3041))+(((-1.0)*cj6*r21*x3041)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((5.90807042419946)*pz))))+IKsqr((((r22*sj5))+(((-1.0)*r20*sj6*x3041))+(((-1.0)*cj6*r21*x3041))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((5.90807042419946)*pz))), (((r22*sj5))+(((-1.0)*r20*sj6*x3041))+(((-1.0)*cj6*r21*x3041))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3042=IKsin(j3);
IkReal x3043=IKcos(j3);
IkReal x3044=(cj6*sj0);
IkReal x3045=(cj6*r21);
IkReal x3046=((1.0)*cj5);
IkReal x3047=(cj0*sj6);
IkReal x3048=(cj0*r02);
IkReal x3049=((1.0)*sj5);
IkReal x3050=(r20*sj6);
IkReal x3051=(r12*sj0);
IkReal x3052=(cj0*cj6);
IkReal x3053=(r10*sj0*sj6);
evalcond[0]=((0.0001)+pz+(((-0.16926)*x3042)));
evalcond[1]=(x3043+((cj5*x3045))+(((-1.0)*r22*x3049))+((cj5*x3050)));
evalcond[2]=((((-1.0)*x3045*x3049))+x3042+(((-1.0)*r22*x3046))+(((-1.0)*x3049*x3050)));
evalcond[3]=(((r00*sj5*x3047))+x3043+((cj5*x3048))+((r01*sj5*x3052))+((sj5*x3053))+((cj5*x3051))+((r11*sj5*x3044)));
evalcond[4]=((-0.1168)+(((-0.02626)*r00*x3052))+(((-0.02626)*r10*x3044))+(((-1.0)*py*sj0))+(((0.02626)*r01*x3047))+(((0.02626)*r11*sj0*sj6))+(((-1.0)*cj0*px))+(((-0.16926)*x3043)));
evalcond[5]=(((sj5*x3048))+(((-1.0)*r11*x3044*x3046))+(((-1.0)*r01*x3046*x3052))+(((-1.0)*r00*x3046*x3047))+(((-1.0)*x3046*x3053))+(((-1.0)*x3042))+((sj5*x3051)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3054=(r11*sj6);
IkReal x3055=(r01*sj0);
IkReal x3056=(cj5*cj6);
IkReal x3057=(cj0*cj5);
IkReal x3058=((1.0)*r10);
IkReal x3059=((0.02626)*cj0);
IkReal x3060=(cj6*sj0);
IkReal x3061=((1.0)*sj6);
IkReal x3062=(cj0*cj6);
IkReal x3063=((1.0)*cj0);
IkReal x3064=(cj0*sj5);
IkReal x3065=(r00*sj0);
IkReal x3066=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=(((cj6*r20))+(((-1.0)*r21*x3061)));
evalcond[2]=((((-1.0)*x3058*x3060))+((sj0*x3054))+((cj0*r01*sj6))+(((-1.0)*r00*x3062)));
evalcond[3]=((-1.0)+(((-1.0)*x3058*x3062))+((r00*x3060))+((cj0*x3054))+(((-1.0)*x3055*x3061)));
evalcond[4]=((((-1.0)*sj6*x3057*x3058))+(((-1.0)*r11*x3056*x3063))+((r12*x3064))+((x3055*x3056))+(((-1.0)*sj5*x3066))+((cj5*sj6*x3065)));
evalcond[5]=(((r10*sj6*x3064))+((r12*x3057))+(((-1.0)*sj5*x3061*x3065))+((r11*sj5*x3062))+(((-1.0)*cj5*x3066))+(((-1.0)*cj6*sj5*x3055)));
evalcond[6]=((0.10014)+(((0.02626)*r00*x3060))+(((-1.0)*cj6*r10*x3059))+(((-0.02626)*sj6*x3055))+((x3054*x3059))+((px*sj0))+(((-1.0)*py*x3063)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3067=((1.0)*cj5);
if( IKabs(((0.00389711613406079)+(((38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*r20*sj6*x3067))+(((-1.0)*cj6*r21*x3067)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((38.9711613406079)*pz))))+IKsqr((((r22*sj5))+(((-1.0)*r20*sj6*x3067))+(((-1.0)*cj6*r21*x3067))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((38.9711613406079)*pz))), (((r22*sj5))+(((-1.0)*r20*sj6*x3067))+(((-1.0)*cj6*r21*x3067))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3068=IKsin(j3);
IkReal x3069=IKcos(j3);
IkReal x3070=(cj5*cj6);
IkReal x3071=(sj0*sj5);
IkReal x3072=(r10*sj6);
IkReal x3073=((1.0)*sj0);
IkReal x3074=((1.0)*cj5);
IkReal x3075=(cj0*sj6);
IkReal x3076=(cj0*r02);
IkReal x3077=((1.0)*sj5);
IkReal x3078=(r20*sj6);
IkReal x3079=((0.02626)*cj6);
IkReal x3080=((1.0)*cj0);
IkReal x3081=((1.0)*x3068);
evalcond[0]=((0.0001)+(((-0.02566)*x3068))+pz);
evalcond[1]=((((-1.0)*r22*x3077))+x3069+((cj5*x3078))+((r21*x3070)));
evalcond[2]=((((-1.0)*x3081))+(((-1.0)*r22*x3074))+(((-1.0)*cj6*r21*x3077))+(((-1.0)*x3077*x3078)));
evalcond[3]=(((cj5*r12*sj0))+((cj6*r11*x3071))+(((-1.0)*x3069))+((cj5*x3076))+((cj0*cj6*r01*sj5))+((x3071*x3072))+((r00*sj5*x3075)));
evalcond[4]=((-0.1168)+(((-1.0)*r10*sj0*x3079))+(((0.02626)*r01*x3075))+(((-0.02566)*x3069))+(((-1.0)*px*x3080))+(((0.02626)*r11*sj0*sj6))+(((-1.0)*cj0*r00*x3079))+(((-1.0)*py*x3073)));
evalcond[5]=((((-1.0)*x3081))+(((-1.0)*cj5*x3072*x3073))+(((-1.0)*r11*x3070*x3073))+(((-1.0)*r01*x3070*x3080))+((sj5*x3076))+((r12*x3071))+(((-1.0)*r00*x3074*x3075)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3082=(r20*sj6);
IkReal x3083=((1.0)*cj5);
IkReal x3084=(cj6*r21);
CheckValue<IkReal> x3085=IKPowWithIntegerCheck(cj4,-1);
if(!x3085.valid){
continue;
}
if( IKabs(((x3085.value)*((((cj5*r22))+((sj5*x3082))+((sj5*x3084)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x3083*x3084))+((r22*sj5))+(((-1.0)*x3082*x3083)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3085.value)*((((cj5*r22))+((sj5*x3082))+((sj5*x3084))))))+IKsqr(((((-1.0)*x3083*x3084))+((r22*sj5))+(((-1.0)*x3082*x3083))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x3085.value)*((((cj5*r22))+((sj5*x3082))+((sj5*x3084))))), ((((-1.0)*x3083*x3084))+((r22*sj5))+(((-1.0)*x3082*x3083))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x3086=IKsin(j3);
IkReal x3087=IKcos(j3);
IkReal x3088=(cj5*cj6);
IkReal x3089=(r11*sj0);
IkReal x3090=(cj6*sj5);
IkReal x3091=(r10*sj0);
IkReal x3092=(sj5*sj6);
IkReal x3093=(cj0*sj6);
IkReal x3094=((1.0)*cj5);
IkReal x3095=((0.02626)*sj6);
IkReal x3096=(cj0*r02);
IkReal x3097=((0.02626)*cj6);
IkReal x3098=((1.0)*cj6);
IkReal x3099=(cj0*r00);
IkReal x3100=(cj0*r01);
IkReal x3101=(r12*sj0);
IkReal x3102=((1.0)*r21);
IkReal x3103=(cj4*x3086);
IkReal x3104=(sj4*x3087);
IkReal x3105=((1.0)*x3086);
IkReal x3106=(cj4*x3087);
evalcond[0]=((((-1.0)*sj6*x3102))+((cj6*r20))+(((-1.0)*sj4*x3105)));
evalcond[1]=(x3087+((cj5*r20*sj6))+((r21*x3088))+(((-1.0)*r22*sj5)));
evalcond[2]=(x3103+(((-1.0)*r22*x3094))+(((-1.0)*x3090*x3102))+(((-1.0)*r20*x3092)));
evalcond[3]=(((r01*x3093))+(((-1.0)*x3098*x3099))+(((-1.0)*x3104))+(((-1.0)*x3091*x3098))+((sj6*x3089)));
evalcond[4]=((0.0001)+(((-0.02626)*sj4*x3086))+((r20*x3097))+(((-0.09746)*x3086))+(((-0.0718)*x3103))+(((-1.0)*r21*x3095))+pz);
evalcond[5]=(x3106+((cj5*x3101))+((cj5*x3096))+((x3092*x3099))+((x3091*x3092))+((x3089*x3090))+((x3090*x3100)));
evalcond[6]=(((sj5*x3096))+((sj5*x3101))+(((-1.0)*r00*x3093*x3094))+(((-1.0)*x3105))+(((-1.0)*x3088*x3100))+(((-1.0)*sj6*x3091*x3094))+(((-1.0)*x3088*x3089)));
evalcond[7]=((-0.1168)+(((-0.09746)*x3087))+(((-0.0718)*x3106))+(((-0.02626)*x3104))+(((-1.0)*x3091*x3097))+(((-1.0)*py*sj0))+((x3089*x3095))+(((-1.0)*cj0*px))+(((0.02626)*r01*x3093))+(((-1.0)*x3097*x3099)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3107=((1.0)*r21);
CheckValue<IkReal> x3108=IKPowWithIntegerCheck(sj4,-1);
if(!x3108.valid){
continue;
}
if( IKabs(((x3108.value)*(((((-1.0)*sj6*x3107))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x3107)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3108.value)*(((((-1.0)*sj6*x3107))+((cj6*r20))))))+IKsqr(((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x3107))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x3108.value)*(((((-1.0)*sj6*x3107))+((cj6*r20))))), ((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x3107))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x3109=IKsin(j3);
IkReal x3110=IKcos(j3);
IkReal x3111=(cj5*cj6);
IkReal x3112=(r11*sj0);
IkReal x3113=(cj6*sj5);
IkReal x3114=(r10*sj0);
IkReal x3115=(sj5*sj6);
IkReal x3116=(cj0*sj6);
IkReal x3117=((1.0)*cj5);
IkReal x3118=((0.02626)*sj6);
IkReal x3119=(cj0*r02);
IkReal x3120=((0.02626)*cj6);
IkReal x3121=((1.0)*cj6);
IkReal x3122=(cj0*r00);
IkReal x3123=(cj0*r01);
IkReal x3124=(r12*sj0);
IkReal x3125=((1.0)*r21);
IkReal x3126=(cj4*x3109);
IkReal x3127=(sj4*x3110);
IkReal x3128=((1.0)*x3109);
IkReal x3129=(cj4*x3110);
evalcond[0]=((((-1.0)*sj4*x3128))+((cj6*r20))+(((-1.0)*sj6*x3125)));
evalcond[1]=(x3110+((cj5*r20*sj6))+((r21*x3111))+(((-1.0)*r22*sj5)));
evalcond[2]=(x3126+(((-1.0)*x3113*x3125))+(((-1.0)*r20*x3115))+(((-1.0)*r22*x3117)));
evalcond[3]=((((-1.0)*x3114*x3121))+(((-1.0)*x3127))+((sj6*x3112))+(((-1.0)*x3121*x3122))+((r01*x3116)));
evalcond[4]=((0.0001)+(((-0.0718)*x3126))+(((-1.0)*r21*x3118))+(((-0.09746)*x3109))+(((-0.02626)*sj4*x3109))+((r20*x3120))+pz);
evalcond[5]=(x3129+((x3115*x3122))+((x3112*x3113))+((x3114*x3115))+((cj5*x3124))+((x3113*x3123))+((cj5*x3119)));
evalcond[6]=((((-1.0)*x3111*x3123))+(((-1.0)*sj6*x3114*x3117))+((sj5*x3119))+((sj5*x3124))+(((-1.0)*x3128))+(((-1.0)*x3111*x3112))+(((-1.0)*r00*x3116*x3117)));
evalcond[7]=((-0.1168)+(((-0.0718)*x3129))+(((-1.0)*x3114*x3120))+((x3112*x3118))+(((-0.09746)*x3110))+(((0.02626)*r01*x3116))+(((-0.02626)*x3127))+(((-1.0)*py*sj0))+(((-1.0)*x3120*x3122))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3130=((1.0)*cj6);
CheckValue<IkReal> x3131 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),((((-1.0)*r10*sj0*x3130))+((r11*sj0*sj6))+(((-1.0)*cj0*r00*x3130))+((cj0*r01*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x3131.valid){
continue;
}
CheckValue<IkReal> x3132=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x3132.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x3131.value)+(((1.5707963267949)*(x3132.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x3133=IKsin(j3);
IkReal x3134=IKcos(j3);
IkReal x3135=(cj5*cj6);
IkReal x3136=(r11*sj0);
IkReal x3137=(cj6*sj5);
IkReal x3138=(r10*sj0);
IkReal x3139=(sj5*sj6);
IkReal x3140=(cj0*sj6);
IkReal x3141=((1.0)*cj5);
IkReal x3142=((0.02626)*sj6);
IkReal x3143=(cj0*r02);
IkReal x3144=((0.02626)*cj6);
IkReal x3145=((1.0)*cj6);
IkReal x3146=(cj0*r00);
IkReal x3147=(cj0*r01);
IkReal x3148=(r12*sj0);
IkReal x3149=((1.0)*r21);
IkReal x3150=(cj4*x3133);
IkReal x3151=(sj4*x3134);
IkReal x3152=((1.0)*x3133);
IkReal x3153=(cj4*x3134);
evalcond[0]=((((-1.0)*sj4*x3152))+((cj6*r20))+(((-1.0)*sj6*x3149)));
evalcond[1]=(x3134+((cj5*r20*sj6))+((r21*x3135))+(((-1.0)*r22*sj5)));
evalcond[2]=(x3150+(((-1.0)*r22*x3141))+(((-1.0)*r20*x3139))+(((-1.0)*x3137*x3149)));
evalcond[3]=((((-1.0)*x3151))+((sj6*x3136))+(((-1.0)*x3145*x3146))+((r01*x3140))+(((-1.0)*x3138*x3145)));
evalcond[4]=((0.0001)+(((-0.09746)*x3133))+(((-0.02626)*sj4*x3133))+((r20*x3144))+(((-0.0718)*x3150))+pz+(((-1.0)*r21*x3142)));
evalcond[5]=(x3153+((cj5*x3148))+((cj5*x3143))+((x3138*x3139))+((x3139*x3146))+((x3136*x3137))+((x3137*x3147)));
evalcond[6]=((((-1.0)*x3152))+((sj5*x3143))+((sj5*x3148))+(((-1.0)*sj6*x3138*x3141))+(((-1.0)*x3135*x3147))+(((-1.0)*x3135*x3136))+(((-1.0)*r00*x3140*x3141)));
evalcond[7]=((-0.1168)+(((0.02626)*r01*x3140))+(((-0.09746)*x3134))+(((-1.0)*x3144*x3146))+(((-0.02626)*x3151))+(((-0.0718)*x3153))+(((-1.0)*x3138*x3144))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px))+((x3136*x3142)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3154=(cj5*cj6);
IkReal x3155=((1.0)*cj0);
IkReal x3156=(cj5*sj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r11*x3154*x3155))+((r01*sj0*x3154))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))+(((-1.0)*r10*x3155*x3156))+((r00*sj0*x3156)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*cj0*py))+(((-13.9275766016713)*px*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*cj0*py))+(((-13.9275766016713)*px*sj0))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*cj0*py))+(((-13.9275766016713)*px*sj0))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3157=IKsin(j4);
IkReal x3158=IKcos(j4);
IkReal x3159=(cj0*r10);
IkReal x3160=((1.0)*cj6);
IkReal x3161=(sj5*sj6);
IkReal x3162=((0.02626)*sj6);
IkReal x3163=(cj0*r11);
IkReal x3164=(r01*sj0);
IkReal x3165=((0.02626)*cj6);
IkReal x3166=(r00*sj0);
evalcond[0]=((((-1.0)*x3158))+((sj6*x3163))+((cj6*x3166))+(((-1.0)*x3159*x3160))+(((-1.0)*sj6*x3164)));
evalcond[1]=((((-1.0)*x3157))+(((-1.0)*cj5*r02*sj0))+((cj0*cj5*r12))+(((-1.0)*sj5*x3160*x3164))+((x3159*x3161))+((cj6*sj5*x3163))+(((-1.0)*x3161*x3166)));
evalcond[2]=((0.1246)+(((-1.0)*x3162*x3164))+((x3162*x3163))+(((-0.02626)*x3158))+(((0.0718)*x3157))+((px*sj0))+(((-1.0)*x3159*x3165))+((x3165*x3166))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x3167=((1.0)*sj6);
j3eval[0]=sj4;
j3eval[1]=((IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x3167))+(((-1.0)*r11*sj0*x3167))+((cj0*cj6*r00)))))+(IKabs((((cj6*r20))+(((-1.0)*r21*x3167))))));
j3eval[2]=IKsign(sj4);
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x3168=(cj0*r11);
IkReal x3169=(sj0*sj5);
IkReal x3170=((1.0)*cj5);
IkReal x3171=(r10*sj6);
IkReal x3172=((0.02626)*sj6);
IkReal x3173=(r01*sj0);
IkReal x3174=(cj5*r12);
IkReal x3175=((1.0)*sj5);
IkReal x3176=((1.0)*sj6);
IkReal x3177=(cj0*sj5);
IkReal x3178=(r00*sj6);
IkReal x3179=(cj6*r01);
IkReal x3180=(cj0*cj6*r10);
IkReal x3181=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj6*r21*x3175))+(((-1.0)*r20*sj6*x3175))+(((-1.0)*r22*x3170)));
evalcond[2]=(x3181+(((-1.0)*x3173*x3176))+((sj6*x3168))+(((-1.0)*x3180)));
evalcond[3]=(((sj0*x3174))+((x3177*x3178))+((x3177*x3179))+((cj0*cj5*r02))+((cj6*r11*x3169))+((x3169*x3171)));
evalcond[4]=(((cj5*sj0*x3178))+(((-1.0)*r02*x3169))+(((-1.0)*cj6*x3168*x3170))+((cj5*cj6*x3173))+(((-1.0)*cj0*x3170*x3171))+((r12*x3177)));
evalcond[5]=((-1.0)+(((-1.0)*x3169*x3179))+((cj0*x3174))+((x3171*x3177))+(((-1.0)*r02*sj0*x3170))+((cj6*sj5*x3168))+(((-1.0)*r00*x3169*x3176)));
evalcond[6]=((0.1964)+((x3168*x3172))+(((0.02626)*x3181))+(((-1.0)*x3172*x3173))+((px*sj0))+(((-1.0)*cj0*py))+(((-0.02626)*x3180)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3182=((1.0)*cj5);
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r21*x3182))+((r22*sj5))+(((-1.0)*r20*sj6*x3182)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((((-1.0)*cj6*r21*x3182))+((r22*sj5))+(((-1.0)*r20*sj6*x3182))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((((-1.0)*cj6*r21*x3182))+((r22*sj5))+(((-1.0)*r20*sj6*x3182))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3183=IKsin(j3);
IkReal x3184=IKcos(j3);
IkReal x3185=(cj5*cj6);
IkReal x3186=(r11*sj0);
IkReal x3187=(cj0*sj6);
IkReal x3188=((1.0)*cj5);
IkReal x3189=((0.02626)*sj6);
IkReal x3190=((0.02626)*cj6);
IkReal x3191=((1.0)*sj0);
IkReal x3192=(r10*sj0);
IkReal x3193=((1.0)*cj0);
evalcond[0]=(((cj6*r20))+(((-1.0)*r21*sj6))+(((-1.0)*x3183)));
evalcond[1]=(x3184+((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x3185)));
evalcond[2]=((0.0001)+(((-0.12372)*x3183))+((r20*x3190))+(((-1.0)*r21*x3189))+pz);
evalcond[3]=(((sj6*x3186))+x3184+((r01*x3187))+(((-1.0)*cj6*r00*x3193))+(((-1.0)*cj6*r10*x3191)));
evalcond[4]=((0.1148)+(((-1.0)*x3190*x3192))+(((-1.0)*px*x3193))+(((0.12372)*x3184))+(((-1.0)*cj0*r00*x3190))+(((0.02626)*r01*x3187))+(((-1.0)*py*x3191))+((x3186*x3189)));
evalcond[5]=(x3183+((r12*sj0*sj5))+(((-1.0)*sj6*x3188*x3192))+(((-1.0)*x3185*x3186))+(((-1.0)*r00*x3187*x3188))+(((-1.0)*r01*x3185*x3193))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3194=(cj0*r11);
IkReal x3195=(sj0*sj5);
IkReal x3196=((1.0)*cj5);
IkReal x3197=(r10*sj6);
IkReal x3198=((0.02626)*sj6);
IkReal x3199=(r01*sj0);
IkReal x3200=(cj5*r12);
IkReal x3201=((1.0)*sj5);
IkReal x3202=((1.0)*sj6);
IkReal x3203=(cj0*sj5);
IkReal x3204=(r00*sj6);
IkReal x3205=(cj6*r01);
IkReal x3206=(cj0*cj6*r10);
IkReal x3207=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj6*r21*x3201))+(((-1.0)*r22*x3196))+(((-1.0)*r20*sj6*x3201)));
evalcond[2]=((((-1.0)*x3199*x3202))+x3207+(((-1.0)*x3206))+((sj6*x3194)));
evalcond[3]=(((sj0*x3200))+((cj6*r11*x3195))+((cj0*cj5*r02))+((x3195*x3197))+((x3203*x3205))+((x3203*x3204)));
evalcond[4]=(((cj5*cj6*x3199))+(((-1.0)*r02*x3195))+((r12*x3203))+((cj5*sj0*x3204))+(((-1.0)*cj6*x3194*x3196))+(((-1.0)*cj0*x3196*x3197)));
evalcond[5]=((1.0)+((x3197*x3203))+((cj6*sj5*x3194))+(((-1.0)*r02*sj0*x3196))+((cj0*x3200))+(((-1.0)*r00*x3195*x3202))+(((-1.0)*x3195*x3205)));
evalcond[6]=((0.0528)+(((-1.0)*x3198*x3199))+((x3194*x3198))+(((0.02626)*x3207))+((px*sj0))+(((-0.02626)*x3206))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3208=((1.0)*cj5);
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r21*x3208))+((r22*sj5))+(((-1.0)*r20*sj6*x3208)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((((-1.0)*cj6*r21*x3208))+((r22*sj5))+(((-1.0)*r20*sj6*x3208))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((((-1.0)*cj6*r21*x3208))+((r22*sj5))+(((-1.0)*r20*sj6*x3208))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3209=IKsin(j3);
IkReal x3210=IKcos(j3);
IkReal x3211=(cj5*cj6);
IkReal x3212=(r11*sj0);
IkReal x3213=(cj0*sj6);
IkReal x3214=((1.0)*cj5);
IkReal x3215=((0.02626)*sj6);
IkReal x3216=((0.02626)*cj6);
IkReal x3217=((1.0)*sj0);
IkReal x3218=(r10*sj0);
IkReal x3219=((1.0)*cj0);
evalcond[0]=(x3209+((cj6*r20))+(((-1.0)*r21*sj6)));
evalcond[1]=(((cj5*r20*sj6))+x3210+(((-1.0)*r22*sj5))+((r21*x3211)));
evalcond[2]=((0.0001)+(((-1.0)*r21*x3215))+(((-0.0712)*x3209))+((r20*x3216))+pz);
evalcond[3]=(((r01*x3213))+(((-1.0)*x3210))+(((-1.0)*cj6*r00*x3219))+(((-1.0)*cj6*r10*x3217))+((sj6*x3212)));
evalcond[4]=((0.1148)+((x3212*x3215))+(((-1.0)*px*x3219))+(((0.0712)*x3210))+(((-1.0)*x3216*x3218))+(((-1.0)*cj0*r00*x3216))+(((0.02626)*r01*x3213))+(((-1.0)*py*x3217)));
evalcond[5]=((((-1.0)*r01*x3211*x3219))+x3209+(((-1.0)*sj6*x3214*x3218))+((r12*sj0*sj5))+(((-1.0)*r00*x3213*x3214))+(((-1.0)*x3211*x3212))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3220=(r11*sj6);
IkReal x3221=(r01*sj0);
IkReal x3222=(cj5*cj6);
IkReal x3223=(cj0*cj5);
IkReal x3224=((1.0)*r10);
IkReal x3225=((0.02626)*cj0);
IkReal x3226=(cj6*sj0);
IkReal x3227=((1.0)*sj6);
IkReal x3228=(cj0*cj6);
IkReal x3229=((1.0)*cj0);
IkReal x3230=(cj0*sj5);
IkReal x3231=(r00*sj0);
IkReal x3232=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r21*x3227))+((cj6*r20)));
evalcond[2]=((((-1.0)*r00*x3228))+(((-1.0)*x3224*x3226))+((sj0*x3220))+((cj0*r01*sj6)));
evalcond[3]=((-1.0)+((cj0*x3220))+(((-1.0)*x3224*x3228))+((r00*x3226))+(((-1.0)*x3221*x3227)));
evalcond[4]=((((-1.0)*sj6*x3223*x3224))+((r12*x3230))+((x3221*x3222))+((cj5*sj6*x3231))+(((-1.0)*sj5*x3232))+(((-1.0)*r11*x3222*x3229)));
evalcond[5]=(((r12*x3223))+((r10*sj6*x3230))+(((-1.0)*cj6*sj5*x3221))+((r11*sj5*x3228))+(((-1.0)*cj5*x3232))+(((-1.0)*sj5*x3227*x3231)));
evalcond[6]=((0.09834)+(((-1.0)*cj6*r10*x3225))+((x3220*x3225))+(((-0.02626)*sj6*x3221))+(((-1.0)*py*x3229))+((px*sj0))+(((0.02626)*r00*x3226)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3233=((1.0)*cj5);
if( IKabs(((0.000590807042419946)+(((5.90807042419946)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r21*x3233))+((r22*sj5))+(((-1.0)*r20*sj6*x3233)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.000590807042419946)+(((5.90807042419946)*pz))))+IKsqr(((((-1.0)*cj6*r21*x3233))+((r22*sj5))+(((-1.0)*r20*sj6*x3233))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.000590807042419946)+(((5.90807042419946)*pz))), ((((-1.0)*cj6*r21*x3233))+((r22*sj5))+(((-1.0)*r20*sj6*x3233))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3234=IKsin(j3);
IkReal x3235=IKcos(j3);
IkReal x3236=(cj6*sj0);
IkReal x3237=(cj6*r21);
IkReal x3238=(sj5*sj6);
IkReal x3239=(r10*sj0);
IkReal x3240=((1.0)*cj5);
IkReal x3241=(cj0*sj6);
IkReal x3242=(cj0*r02);
IkReal x3243=((1.0)*sj5);
IkReal x3244=(cj0*r00);
IkReal x3245=(r12*sj0);
IkReal x3246=(cj0*cj6*r01);
evalcond[0]=((0.0001)+(((-0.16926)*x3234))+pz);
evalcond[1]=(((cj5*x3237))+((cj5*r20*sj6))+x3235+(((-1.0)*r22*x3243)));
evalcond[2]=((((-1.0)*x3237*x3243))+x3234+(((-1.0)*r20*x3238))+(((-1.0)*r22*x3240)));
evalcond[3]=(((sj5*x3246))+((r11*sj5*x3236))+((cj5*x3242))+((cj5*x3245))+(((-1.0)*x3235))+((x3238*x3244))+((x3238*x3239)));
evalcond[4]=((0.1148)+(((0.02626)*r01*x3241))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x3236))+(((0.16926)*x3235))+(((0.02626)*r11*sj0*sj6))+(((-1.0)*cj0*px))+(((-0.02626)*cj6*x3244)));
evalcond[5]=((((-1.0)*r00*x3240*x3241))+((sj5*x3242))+((sj5*x3245))+(((-1.0)*x3240*x3246))+x3234+(((-1.0)*sj6*x3239*x3240))+(((-1.0)*r11*x3236*x3240)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3247=(r11*sj6);
IkReal x3248=(r01*sj0);
IkReal x3249=(cj5*cj6);
IkReal x3250=(cj0*cj5);
IkReal x3251=((1.0)*r10);
IkReal x3252=((0.02626)*cj0);
IkReal x3253=(cj6*sj0);
IkReal x3254=((1.0)*sj6);
IkReal x3255=(cj0*cj6);
IkReal x3256=((1.0)*cj0);
IkReal x3257=(cj0*sj5);
IkReal x3258=(r00*sj0);
IkReal x3259=((1.0)*r02*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r21*x3254))+((cj6*r20)));
evalcond[2]=((((-1.0)*r00*x3255))+((cj0*r01*sj6))+(((-1.0)*x3251*x3253))+((sj0*x3247)));
evalcond[3]=((1.0)+(((-1.0)*x3248*x3254))+((r00*x3253))+(((-1.0)*x3251*x3255))+((cj0*x3247)));
evalcond[4]=(((r12*x3257))+(((-1.0)*r11*x3249*x3256))+((cj5*sj6*x3258))+(((-1.0)*sj6*x3250*x3251))+(((-1.0)*sj5*x3259))+((x3248*x3249)));
evalcond[5]=(((r12*x3250))+(((-1.0)*cj6*sj5*x3248))+((r10*sj6*x3257))+(((-1.0)*cj5*x3259))+((r11*sj5*x3255))+(((-1.0)*sj5*x3254*x3258)));
evalcond[6]=((0.15086)+(((-0.02626)*sj6*x3248))+((x3247*x3252))+(((-1.0)*cj6*r10*x3252))+(((-1.0)*py*x3256))+((px*sj0))+(((0.02626)*r00*x3253)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3260=((1.0)*cj5);
if( IKabs(((0.00389711613406079)+(((38.9711613406079)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*sj6*x3260))+((r22*sj5))+(((-1.0)*cj6*r21*x3260)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.00389711613406079)+(((38.9711613406079)*pz))))+IKsqr(((((-1.0)*r20*sj6*x3260))+((r22*sj5))+(((-1.0)*cj6*r21*x3260))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((0.00389711613406079)+(((38.9711613406079)*pz))), ((((-1.0)*r20*sj6*x3260))+((r22*sj5))+(((-1.0)*cj6*r21*x3260))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3261=IKsin(j3);
IkReal x3262=IKcos(j3);
IkReal x3263=(cj5*cj6);
IkReal x3264=(sj0*sj5);
IkReal x3265=(r10*sj6);
IkReal x3266=((1.0)*sj0);
IkReal x3267=((1.0)*cj5);
IkReal x3268=(cj0*sj6);
IkReal x3269=(cj0*r02);
IkReal x3270=((1.0)*sj5);
IkReal x3271=(r20*sj6);
IkReal x3272=((0.02626)*cj6);
IkReal x3273=((1.0)*cj0);
evalcond[0]=((0.0001)+(((-0.02566)*x3261))+pz);
evalcond[1]=(((cj5*x3271))+((r21*x3263))+x3262+(((-1.0)*r22*x3270)));
evalcond[2]=((((-1.0)*x3261))+(((-1.0)*cj6*r21*x3270))+(((-1.0)*x3270*x3271))+(((-1.0)*r22*x3267)));
evalcond[3]=(((cj5*r12*sj0))+((cj5*x3269))+((cj6*r11*x3264))+x3262+((r00*sj5*x3268))+((cj0*cj6*r01*sj5))+((x3264*x3265)));
evalcond[4]=((0.1148)+(((-1.0)*px*x3273))+(((-1.0)*cj0*r00*x3272))+(((-1.0)*r10*sj0*x3272))+(((0.02626)*r01*x3268))+(((0.02566)*x3262))+(((-1.0)*py*x3266))+(((0.02626)*r11*sj0*sj6)));
evalcond[5]=((((-1.0)*r11*x3263*x3266))+(((-1.0)*cj5*x3265*x3266))+x3261+((sj5*x3269))+(((-1.0)*r00*x3267*x3268))+((r12*x3264))+(((-1.0)*r01*x3263*x3273)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3274=(r20*sj6);
IkReal x3275=((1.0)*cj5);
IkReal x3276=(cj6*r21);
CheckValue<IkReal> x3277=IKPowWithIntegerCheck(cj4,-1);
if(!x3277.valid){
continue;
}
if( IKabs(((x3277.value)*((((cj5*r22))+((sj5*x3276))+((sj5*x3274)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*sj5))+(((-1.0)*x3275*x3276))+(((-1.0)*x3274*x3275)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3277.value)*((((cj5*r22))+((sj5*x3276))+((sj5*x3274))))))+IKsqr((((r22*sj5))+(((-1.0)*x3275*x3276))+(((-1.0)*x3274*x3275))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x3277.value)*((((cj5*r22))+((sj5*x3276))+((sj5*x3274))))), (((r22*sj5))+(((-1.0)*x3275*x3276))+(((-1.0)*x3274*x3275))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x3278=IKsin(j3);
IkReal x3279=IKcos(j3);
IkReal x3280=(cj5*cj6);
IkReal x3281=(r11*sj0);
IkReal x3282=(cj6*sj5);
IkReal x3283=(r10*sj0);
IkReal x3284=(sj5*sj6);
IkReal x3285=((1.0)*cj5);
IkReal x3286=(cj0*sj6);
IkReal x3287=(cj0*r02);
IkReal x3288=((0.02626)*cj6);
IkReal x3289=((1.0)*cj6);
IkReal x3290=((0.02626)*sj6);
IkReal x3291=(cj0*r00);
IkReal x3292=(cj0*r01);
IkReal x3293=(r12*sj0);
IkReal x3294=((1.0)*r21);
IkReal x3295=(cj4*x3278);
IkReal x3296=(sj4*x3279);
IkReal x3297=(sj4*x3278);
IkReal x3298=(cj4*x3279);
evalcond[0]=(((cj6*r20))+(((-1.0)*sj6*x3294))+(((-1.0)*x3297)));
evalcond[1]=(((cj5*r20*sj6))+x3279+((r21*x3280))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*r20*x3284))+(((-1.0)*r22*x3285))+x3295+(((-1.0)*x3282*x3294)));
evalcond[3]=(((sj6*x3281))+x3296+(((-1.0)*x3283*x3289))+(((-1.0)*x3289*x3291))+((r01*x3286)));
evalcond[4]=((0.0001)+((r20*x3288))+(((-1.0)*r21*x3290))+(((-0.02626)*x3297))+(((-0.09746)*x3278))+pz+(((-0.0718)*x3295)));
evalcond[5]=(((cj5*x3293))+((cj5*x3287))+((x3282*x3292))+((x3283*x3284))+((x3281*x3282))+(((-1.0)*x3298))+((x3284*x3291)));
evalcond[6]=((((-1.0)*sj6*x3283*x3285))+((sj5*x3287))+((sj5*x3293))+x3278+(((-1.0)*x3280*x3281))+(((-1.0)*x3280*x3292))+(((-1.0)*r00*x3285*x3286)));
evalcond[7]=((0.1148)+(((0.02626)*x3296))+(((0.0718)*x3298))+(((-1.0)*x3283*x3288))+(((-1.0)*x3288*x3291))+(((-1.0)*py*sj0))+((x3281*x3290))+(((-1.0)*cj0*px))+(((0.02626)*r01*x3286))+(((0.09746)*x3279)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3299=((1.0)*r21);
CheckValue<IkReal> x3300=IKPowWithIntegerCheck(sj4,-1);
if(!x3300.valid){
continue;
}
if( IKabs(((x3300.value)*((((cj6*r20))+(((-1.0)*sj6*x3299)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x3299)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3300.value)*((((cj6*r20))+(((-1.0)*sj6*x3299))))))+IKsqr(((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x3299))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x3300.value)*((((cj6*r20))+(((-1.0)*sj6*x3299))))), ((((-1.0)*cj5*r20*sj6))+((r22*sj5))+(((-1.0)*cj5*cj6*x3299))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x3301=IKsin(j3);
IkReal x3302=IKcos(j3);
IkReal x3303=(cj5*cj6);
IkReal x3304=(r11*sj0);
IkReal x3305=(cj6*sj5);
IkReal x3306=(r10*sj0);
IkReal x3307=(sj5*sj6);
IkReal x3308=((1.0)*cj5);
IkReal x3309=(cj0*sj6);
IkReal x3310=(cj0*r02);
IkReal x3311=((0.02626)*cj6);
IkReal x3312=((1.0)*cj6);
IkReal x3313=((0.02626)*sj6);
IkReal x3314=(cj0*r00);
IkReal x3315=(cj0*r01);
IkReal x3316=(r12*sj0);
IkReal x3317=((1.0)*r21);
IkReal x3318=(cj4*x3301);
IkReal x3319=(sj4*x3302);
IkReal x3320=(sj4*x3301);
IkReal x3321=(cj4*x3302);
evalcond[0]=((((-1.0)*x3320))+(((-1.0)*sj6*x3317))+((cj6*r20)));
evalcond[1]=(x3302+((cj5*r20*sj6))+((r21*x3303))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x3305*x3317))+x3318+(((-1.0)*r22*x3308))+(((-1.0)*r20*x3307)));
evalcond[3]=(x3319+((sj6*x3304))+(((-1.0)*x3312*x3314))+(((-1.0)*x3306*x3312))+((r01*x3309)));
evalcond[4]=((0.0001)+(((-1.0)*r21*x3313))+(((-0.0718)*x3318))+(((-0.09746)*x3301))+pz+(((-0.02626)*x3320))+((r20*x3311)));
evalcond[5]=((((-1.0)*x3321))+((cj5*x3316))+((cj5*x3310))+((x3304*x3305))+((x3307*x3314))+((x3306*x3307))+((x3305*x3315)));
evalcond[6]=((((-1.0)*sj6*x3306*x3308))+x3301+(((-1.0)*r00*x3308*x3309))+((sj5*x3310))+((sj5*x3316))+(((-1.0)*x3303*x3315))+(((-1.0)*x3303*x3304)));
evalcond[7]=((0.1148)+(((0.09746)*x3302))+(((-1.0)*x3306*x3311))+((x3304*x3313))+(((0.0718)*x3321))+(((0.02626)*x3319))+(((-1.0)*py*sj0))+(((-1.0)*x3311*x3314))+(((0.02626)*r01*x3309))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3322=((1.0)*sj6);
CheckValue<IkReal> x3323 = IKatan2WithCheck(IkReal(((((-1.0)*r21*x3322))+((cj6*r20)))),(((cj6*r10*sj0))+(((-1.0)*r11*sj0*x3322))+(((-1.0)*cj0*r01*x3322))+((cj0*cj6*r00))),IKFAST_ATAN2_MAGTHRESH);
if(!x3323.valid){
continue;
}
CheckValue<IkReal> x3324=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x3324.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x3323.value)+(((1.5707963267949)*(x3324.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x3325=IKsin(j3);
IkReal x3326=IKcos(j3);
IkReal x3327=(cj5*cj6);
IkReal x3328=(r11*sj0);
IkReal x3329=(cj6*sj5);
IkReal x3330=(r10*sj0);
IkReal x3331=(sj5*sj6);
IkReal x3332=((1.0)*cj5);
IkReal x3333=(cj0*sj6);
IkReal x3334=(cj0*r02);
IkReal x3335=((0.02626)*cj6);
IkReal x3336=((1.0)*cj6);
IkReal x3337=((0.02626)*sj6);
IkReal x3338=(cj0*r00);
IkReal x3339=(cj0*r01);
IkReal x3340=(r12*sj0);
IkReal x3341=((1.0)*r21);
IkReal x3342=(cj4*x3325);
IkReal x3343=(sj4*x3326);
IkReal x3344=(sj4*x3325);
IkReal x3345=(cj4*x3326);
evalcond[0]=((((-1.0)*x3344))+(((-1.0)*sj6*x3341))+((cj6*r20)));
evalcond[1]=(x3326+((cj5*r20*sj6))+((r21*x3327))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*r20*x3331))+x3342+(((-1.0)*r22*x3332))+(((-1.0)*x3329*x3341)));
evalcond[3]=((((-1.0)*x3330*x3336))+x3343+((r01*x3333))+((sj6*x3328))+(((-1.0)*x3336*x3338)));
evalcond[4]=((0.0001)+(((-1.0)*r21*x3337))+(((-0.0718)*x3342))+pz+(((-0.09746)*x3325))+(((-0.02626)*x3344))+((r20*x3335)));
evalcond[5]=(((x3328*x3329))+(((-1.0)*x3345))+((cj5*x3340))+((cj5*x3334))+((x3331*x3338))+((x3330*x3331))+((x3329*x3339)));
evalcond[6]=((((-1.0)*sj6*x3330*x3332))+x3325+((sj5*x3334))+(((-1.0)*x3327*x3339))+((sj5*x3340))+(((-1.0)*r00*x3332*x3333))+(((-1.0)*x3327*x3328)));
evalcond[7]=((0.1148)+(((-1.0)*x3330*x3335))+(((0.0718)*x3345))+(((0.02626)*x3343))+((x3328*x3337))+(((-1.0)*x3335*x3338))+(((-1.0)*py*sj0))+(((0.02626)*r01*x3333))+(((0.09746)*x3326))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3, j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3346=((1.0)*cj5);
CheckValue<IkReal> x3347=IKPowWithIntegerCheck(sj2,-1);
if(!x3347.valid){
continue;
}
if( IKabs(((x3347.value)*(((((-1.0)*r10*sj0*sj6*x3346))+((r12*sj0*sj5))+(((-1.0)*cj0*r00*sj6*x3346))+(((-1.0)*cj0*cj6*r01*x3346))+(((-1.0)*cj6*r11*sj0*x3346))+((cj0*r02*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r21*x3346))+((r22*sj5))+(((-1.0)*r20*sj6*x3346)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3347.value)*(((((-1.0)*r10*sj0*sj6*x3346))+((r12*sj0*sj5))+(((-1.0)*cj0*r00*sj6*x3346))+(((-1.0)*cj0*cj6*r01*x3346))+(((-1.0)*cj6*r11*sj0*x3346))+((cj0*r02*sj5))))))+IKsqr(((((-1.0)*cj6*r21*x3346))+((r22*sj5))+(((-1.0)*r20*sj6*x3346))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x3347.value)*(((((-1.0)*r10*sj0*sj6*x3346))+((r12*sj0*sj5))+(((-1.0)*cj0*r00*sj6*x3346))+(((-1.0)*cj0*cj6*r01*x3346))+(((-1.0)*cj6*r11*sj0*x3346))+((cj0*r02*sj5))))), ((((-1.0)*cj6*r21*x3346))+((r22*sj5))+(((-1.0)*r20*sj6*x3346))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3348=IKsin(j3);
IkReal x3349=(cj5*cj6);
IkReal x3350=((1.0)*sj5);
IkReal x3351=((1.0)*cj0);
IkReal x3352=(cj0*sj5);
IkReal x3353=(cj5*sj6);
IkReal x3354=(r10*x3353);
IkReal x3355=((1.0)*r11*x3349);
evalcond[0]=(((r20*x3353))+(IKcos(j3))+((r21*x3349))+(((-1.0)*r22*x3350)));
evalcond[1]=(((r12*x3352))+(((-1.0)*r11*x3349*x3351))+(((-1.0)*r02*sj0*x3350))+(((-1.0)*x3351*x3354))+((cj2*x3348))+((r01*sj0*x3349))+((r00*sj0*x3353)));
evalcond[2]=((((-1.0)*r01*x3349*x3351))+(((-1.0)*sj0*x3354))+((r12*sj0*sj5))+(((-1.0)*sj0*x3355))+(((-1.0)*sj2*x3348))+((r02*x3352))+(((-1.0)*r00*x3351*x3353)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j4eval[0]=sj3;
j4eval[1]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x3356=(cj5*cj6);
IkReal x3357=((1.0)*sj0);
IkReal x3358=(r21*sj6);
IkReal x3359=(cj0*sj5);
IkReal x3360=((1.0)*r22);
IkReal x3361=(cj6*r20);
IkReal x3362=(cj5*sj6);
IkReal x3363=((1.0)*cj0);
IkReal x3364=((1.0)*sj5);
IkReal x3365=(x3362*x3363);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x3356))+((r20*x3362))+(((-1.0)*sj5*x3360)));
evalcond[2]=(x3361+(((-1.0)*x3358)));
evalcond[3]=((((-1.0)*cj6*r21*x3364))+(((-1.0)*cj5*x3360))+(((-1.0)*r20*sj6*x3364)));
evalcond[4]=((((-1.0)*r10*x3357*x3362))+(((-1.0)*r01*x3356*x3363))+((r12*sj0*sj5))+(((-1.0)*r11*x3356*x3357))+(((-1.0)*r00*x3365))+((r02*x3359)));
evalcond[5]=(((r00*sj0*x3362))+(((-1.0)*r10*x3365))+((r12*x3359))+(((-1.0)*r11*x3356*x3363))+(((-1.0)*r02*sj5*x3357))+((r01*sj0*x3356)));
evalcond[6]=((0.0001)+pz+(((0.02626)*x3361))+(((-0.02626)*x3358)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3366=(cj0*sj6);
IkReal x3367=(r01*sj2);
IkReal x3368=(sj0*sj2);
IkReal x3369=((1.0)*cj6);
IkReal x3370=(sj0*sj6);
IkReal x3371=(cj0*sj2);
IkReal x3372=(cj6*r10);
IkReal x3373=(cj2*sj0);
IkReal x3374=(cj2*r01);
IkReal x3375=(cj0*cj2);
IkReal x3376=((1.0)*cj2*r11);
if( IKabs(((((-1.0)*x3366*x3376))+((x3372*x3375))+(((-1.0)*r00*x3369*x3373))+(((-1.0)*r00*x3369*x3371))+((x3370*x3374))+(((-1.0)*r10*x3368*x3369))+((r11*sj6*x3368))+((x3366*x3367)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x3366*x3374))+(((-1.0)*x3370*x3376))+((x3372*x3373))+(((-1.0)*r00*x3368*x3369))+((cj6*r00*x3375))+((x3367*x3370))+(((-1.0)*r11*sj2*x3366))+((x3371*x3372)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x3366*x3376))+((x3372*x3375))+(((-1.0)*r00*x3369*x3373))+(((-1.0)*r00*x3369*x3371))+((x3370*x3374))+(((-1.0)*r10*x3368*x3369))+((r11*sj6*x3368))+((x3366*x3367))))+IKsqr(((((-1.0)*x3366*x3374))+(((-1.0)*x3370*x3376))+((x3372*x3373))+(((-1.0)*r00*x3368*x3369))+((cj6*r00*x3375))+((x3367*x3370))+(((-1.0)*r11*sj2*x3366))+((x3371*x3372))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x3366*x3376))+((x3372*x3375))+(((-1.0)*r00*x3369*x3373))+(((-1.0)*r00*x3369*x3371))+((x3370*x3374))+(((-1.0)*r10*x3368*x3369))+((r11*sj6*x3368))+((x3366*x3367))), ((((-1.0)*x3366*x3374))+(((-1.0)*x3370*x3376))+((x3372*x3373))+(((-1.0)*r00*x3368*x3369))+((cj6*r00*x3375))+((x3367*x3370))+(((-1.0)*r11*sj2*x3366))+((x3371*x3372))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3377=IKcos(j4);
IkReal x3378=IKsin(j4);
IkReal x3379=(sj0*sj6);
IkReal x3380=((0.02626)*r01);
IkReal x3381=(cj6*sj0);
IkReal x3382=(r11*sj5);
IkReal x3383=(r10*sj5);
IkReal x3384=(cj5*r12);
IkReal x3385=((1.0)*sj0);
IkReal x3386=(cj5*r02);
IkReal x3387=((1.0)*r01);
IkReal x3388=(cj0*sj6);
IkReal x3389=(r00*sj5);
IkReal x3390=((1.0)*cj0);
IkReal x3391=((0.02626)*r00);
IkReal x3392=(cj0*cj6);
IkReal x3393=(sj2*x3377);
IkReal x3394=(cj2*x3378);
IkReal x3395=(sj2*x3378);
IkReal x3396=(r11*x3388);
IkReal x3397=(r10*x3392);
IkReal x3398=((0.0718)*x3377);
IkReal x3399=(cj2*x3377);
IkReal x3400=(x3393+x3394);
evalcond[0]=((((-1.0)*cj6*r10*x3390))+x3396+x3400+(((-1.0)*x3379*x3387))+((r00*x3381)));
evalcond[1]=(((r01*x3388))+(((-1.0)*cj6*r00*x3390))+(((-1.0)*r10*x3381))+x3399+(((-1.0)*x3395))+((r11*x3379)));
evalcond[2]=(((sj0*x3384))+((x3381*x3382))+((cj0*x3386))+((x3379*x3383))+((r01*sj5*x3392))+x3400+((x3388*x3389)));
evalcond[3]=((((-1.0)*sj5*x3381*x3387))+x3395+((cj0*x3384))+(((-1.0)*x3399))+(((-1.0)*x3385*x3386))+(((-1.0)*x3379*x3389))+((x3382*x3392))+((x3383*x3388)));
evalcond[4]=((0.1255)+((x3381*x3391))+(((-1.0)*py*x3390))+(((-0.0718)*x3395))+(((-0.02626)*x3397))+((cj2*x3398))+(((-1.0)*x3379*x3380))+(((0.02626)*x3393))+(((0.02626)*x3396))+(((0.02626)*x3394))+((px*sj0))+(((0.21326)*cj2))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+((x3380*x3388))+(((0.02626)*r11*x3379))+(((-0.0718)*x3394))+(((-0.0718)*x3393))+(((-0.02626)*x3395))+(((-1.0)*py*x3385))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-1.0)*px*x3390))+(((0.02626)*x3399))+(((-1.0)*x3391*x3392))+(((-0.02626)*r10*x3381)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3401=(cj5*cj6);
IkReal x3402=((1.0)*sj0);
IkReal x3403=(r21*sj6);
IkReal x3404=(cj0*sj5);
IkReal x3405=((1.0)*r22);
IkReal x3406=(cj6*r20);
IkReal x3407=(cj5*sj6);
IkReal x3408=((1.0)*cj0);
IkReal x3409=((1.0)*sj5);
IkReal x3410=(x3407*x3408);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x3405))+((r21*x3401))+((r20*x3407)));
evalcond[2]=((((-1.0)*x3403))+x3406);
evalcond[3]=((((-1.0)*cj5*x3405))+(((-1.0)*r20*sj6*x3409))+(((-1.0)*cj6*r21*x3409)));
evalcond[4]=((((-1.0)*r10*x3402*x3407))+((r02*x3404))+(((-1.0)*r11*x3401*x3402))+((r12*sj0*sj5))+(((-1.0)*r00*x3410))+(((-1.0)*r01*x3401*x3408)));
evalcond[5]=(((r00*sj0*x3407))+(((-1.0)*r11*x3401*x3408))+(((-1.0)*r02*sj5*x3402))+((r01*sj0*x3401))+((r12*x3404))+(((-1.0)*r10*x3410)));
evalcond[6]=((0.0001)+(((0.02626)*x3406))+(((-0.02626)*x3403))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3411=(cj6*r10);
IkReal x3412=(r11*sj0);
IkReal x3413=(r01*sj6);
IkReal x3414=((1.0)*sj0);
IkReal x3415=(cj2*sj6);
IkReal x3416=(cj0*r11);
IkReal x3417=(cj2*sj0);
IkReal x3418=(cj6*r00);
IkReal x3419=(sj0*sj2);
IkReal x3420=((1.0)*cj0*cj2);
IkReal x3421=((1.0)*sj2*sj6);
IkReal x3422=(sj2*x3418);
if( IKabs((((x3417*x3418))+((x3411*x3419))+(((-1.0)*x3412*x3421))+(((-1.0)*x3411*x3420))+((x3415*x3416))+(((-1.0)*cj0*sj2*x3413))+(((-1.0)*cj2*x3413*x3414))+((cj0*x3422)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3411*x3417))+(((-1.0)*x3412*x3415))+((cj0*cj2*x3418))+(((-1.0)*x3413*x3420))+(((-1.0)*x3416*x3421))+((cj0*sj2*x3411))+((x3413*x3419))+(((-1.0)*x3414*x3422)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3417*x3418))+((x3411*x3419))+(((-1.0)*x3412*x3421))+(((-1.0)*x3411*x3420))+((x3415*x3416))+(((-1.0)*cj0*sj2*x3413))+(((-1.0)*cj2*x3413*x3414))+((cj0*x3422))))+IKsqr((((x3411*x3417))+(((-1.0)*x3412*x3415))+((cj0*cj2*x3418))+(((-1.0)*x3413*x3420))+(((-1.0)*x3416*x3421))+((cj0*sj2*x3411))+((x3413*x3419))+(((-1.0)*x3414*x3422))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x3417*x3418))+((x3411*x3419))+(((-1.0)*x3412*x3421))+(((-1.0)*x3411*x3420))+((x3415*x3416))+(((-1.0)*cj0*sj2*x3413))+(((-1.0)*cj2*x3413*x3414))+((cj0*x3422))), (((x3411*x3417))+(((-1.0)*x3412*x3415))+((cj0*cj2*x3418))+(((-1.0)*x3413*x3420))+(((-1.0)*x3416*x3421))+((cj0*sj2*x3411))+((x3413*x3419))+(((-1.0)*x3414*x3422))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3423=IKcos(j4);
IkReal x3424=IKsin(j4);
IkReal x3425=((0.02626)*sj0);
IkReal x3426=(cj6*r10);
IkReal x3427=(r01*sj6);
IkReal x3428=(r11*sj6);
IkReal x3429=(sj0*sj5);
IkReal x3430=(cj6*r11);
IkReal x3431=(r10*sj6);
IkReal x3432=(cj5*r12);
IkReal x3433=((0.02626)*cj0);
IkReal x3434=((1.0)*sj0);
IkReal x3435=(cj5*r02);
IkReal x3436=(cj0*sj5);
IkReal x3437=(r00*sj6);
IkReal x3438=(cj6*r00);
IkReal x3439=((1.0)*cj0);
IkReal x3440=(cj6*r01);
IkReal x3441=(cj2*x3423);
IkReal x3442=(sj2*x3424);
IkReal x3443=((0.02626)*x3424);
IkReal x3444=(cj2*x3424);
IkReal x3445=((0.0718)*x3423);
IkReal x3446=(sj2*x3423);
IkReal x3447=(x3441+x3442);
evalcond[0]=((((-1.0)*x3426*x3434))+(((-1.0)*x3438*x3439))+x3447+((sj0*x3428))+((cj0*x3427)));
evalcond[1]=((((-1.0)*x3427*x3434))+(((-1.0)*x3426*x3439))+x3446+(((-1.0)*x3444))+((sj0*x3438))+((cj0*x3428)));
evalcond[2]=(((cj0*x3435))+((x3429*x3430))+((x3429*x3431))+x3444+(((-1.0)*x3446))+((x3436*x3440))+((x3436*x3437))+((sj0*x3432)));
evalcond[3]=(((cj0*x3432))+((x3430*x3436))+x3447+(((-1.0)*x3434*x3435))+(((-1.0)*x3429*x3440))+((x3431*x3436))+(((-1.0)*x3429*x3437)));
evalcond[4]=((0.1255)+((x3425*x3438))+(((-0.0718)*x3441))+(((-0.0718)*x3442))+(((0.02626)*x3446))+((x3428*x3433))+(((-1.0)*x3426*x3433))+(((-1.0)*cj2*x3443))+(((-1.0)*x3425*x3427))+(((0.01834)*cj2))+((px*sj0))+(((-1.0)*py*x3439))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-1.0)*px*x3439))+((x3425*x3428))+(((-0.0718)*x3444))+(((0.02626)*x3441))+(((0.02626)*x3442))+(((-0.01834)*sj2))+((x3427*x3433))+(((-1.0)*x3433*x3438))+(((-1.0)*x3425*x3426))+(((0.0009)*cj2))+((sj2*x3445))+(((-1.0)*py*x3434)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3448=(cj0*sj5);
IkReal x3449=(cj5*cj6);
IkReal x3450=((1.0)*sj5);
IkReal x3451=((1.0)*cj0);
IkReal x3452=((1.0)*sj0);
IkReal x3453=(cj5*sj6);
IkReal x3454=(r10*x3453);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=(((r21*x3449))+cj3+((r20*x3453))+(((-1.0)*r22*x3450)));
evalcond[2]=((((-1.0)*r00*x3451*x3453))+((r02*x3448))+((r12*sj0*sj5))+(((-1.0)*r11*x3449*x3452))+(((-1.0)*r01*x3449*x3451))+(((-1.0)*x3452*x3454)));
evalcond[3]=((((-1.0)*x3451*x3454))+sj3+((r12*x3448))+(((-1.0)*r11*x3449*x3451))+((r00*sj0*x3453))+(((-1.0)*r02*sj0*x3450))+((r01*sj0*x3449)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x3455=(cj5*cj6);
IkReal x3456=(cj0*sj6);
IkReal x3457=(r01*sj0);
IkReal x3458=((1.0)*sj0);
IkReal x3459=((1.0)*cj5);
IkReal x3460=(cj0*r12);
IkReal x3461=(r02*sj5);
IkReal x3462=((1.0)*sj5);
IkReal x3463=(cj5*sj6);
IkReal x3464=((1.0)*cj0);
IkReal x3465=(cj0*cj6*r10);
IkReal x3466=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x3455))+((r20*x3463))+(((-1.0)*r22*x3462)));
evalcond[2]=((((-1.0)*cj6*r10*x3464))+x3466+(((-1.0)*sj6*x3457))+((r11*x3456)));
evalcond[3]=((((-1.0)*r10*x3458*x3463))+(((-1.0)*r00*x3456*x3459))+((cj0*x3461))+((r12*sj0*sj5))+(((-1.0)*r01*x3455*x3464))+(((-1.0)*r11*x3455*x3458)));
evalcond[4]=((1.0)+((sj5*x3460))+(((-1.0)*r11*x3455*x3464))+(((-1.0)*x3458*x3461))+((x3455*x3457))+((r00*sj0*x3463))+(((-1.0)*r10*x3456*x3459)));
evalcond[5]=((((-1.0)*r00*sj5*sj6*x3458))+(((-1.0)*cj6*x3457*x3462))+((cj5*x3460))+((r10*sj5*x3456))+(((-1.0)*cj5*r02*x3458))+((cj0*cj6*r11*sj5)));
evalcond[6]=((0.2413)+(((-0.02626)*sj6*x3457))+(((-1.0)*py*x3464))+(((0.02626)*r11*x3456))+((px*sj0))+(((-0.02626)*x3465))+(((0.02626)*x3466)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3467=IKcos(j4);
IkReal x3468=IKsin(j4);
IkReal x3469=(r11*sj0);
IkReal x3470=(cj6*sj5);
IkReal x3471=(r10*sj0);
IkReal x3472=(sj5*sj6);
IkReal x3473=((0.02626)*sj6);
IkReal x3474=(cj0*r01);
IkReal x3475=((0.02626)*cj6);
IkReal x3476=((1.0)*cj6);
IkReal x3477=(cj0*r00);
IkReal x3478=((1.0)*r21);
evalcond[0]=((((-1.0)*sj6*x3478))+((cj6*r20))+(((-1.0)*x3468)));
evalcond[1]=((((-1.0)*r20*x3472))+x3467+(((-1.0)*cj5*r22))+(((-1.0)*x3470*x3478)));
evalcond[2]=((-0.09736)+(((-1.0)*r21*x3473))+((r20*x3475))+pz+(((-0.0718)*x3467))+(((-0.02626)*x3468)));
evalcond[3]=((((-1.0)*x3471*x3476))+x3467+(((-1.0)*x3476*x3477))+((sj6*x3474))+((sj6*x3469)));
evalcond[4]=(((cj5*r12*sj0))+((x3470*x3474))+((cj0*cj5*r02))+((x3471*x3472))+((x3469*x3470))+x3468+((x3472*x3477)));
evalcond[5]=((-0.0001)+((x3473*x3474))+(((-1.0)*x3471*x3475))+((x3469*x3473))+(((-0.0718)*x3468))+(((-1.0)*py*sj0))+(((-1.0)*x3475*x3477))+(((0.02626)*x3467))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3479=(cj5*cj6);
IkReal x3480=(cj0*sj6);
IkReal x3481=(r01*sj0);
IkReal x3482=((1.0)*sj0);
IkReal x3483=((1.0)*cj5);
IkReal x3484=(cj0*r12);
IkReal x3485=(r02*sj5);
IkReal x3486=((1.0)*sj5);
IkReal x3487=(cj5*sj6);
IkReal x3488=((1.0)*cj0);
IkReal x3489=(cj0*cj6*r10);
IkReal x3490=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r20*x3487))+(((-1.0)*r22*x3486))+((r21*x3479)));
evalcond[2]=((((-1.0)*sj6*x3481))+(((-1.0)*cj6*r10*x3488))+x3490+((r11*x3480)));
evalcond[3]=((((-1.0)*r01*x3479*x3488))+(((-1.0)*r11*x3479*x3482))+((r12*sj0*sj5))+((cj0*x3485))+(((-1.0)*r00*x3480*x3483))+(((-1.0)*r10*x3482*x3487)));
evalcond[4]=((-1.0)+(((-1.0)*x3482*x3485))+(((-1.0)*r11*x3479*x3488))+((x3479*x3481))+((sj5*x3484))+(((-1.0)*r10*x3480*x3483))+((r00*sj0*x3487)));
evalcond[5]=(((cj5*x3484))+(((-1.0)*r00*sj5*sj6*x3482))+(((-1.0)*cj5*r02*x3482))+(((-1.0)*cj6*x3481*x3486))+((cj0*cj6*r11*sj5))+((r10*sj5*x3480)));
evalcond[6]=((0.2413)+(((-1.0)*py*x3488))+(((0.02626)*r11*x3480))+(((0.02626)*x3490))+((px*sj0))+(((-0.02626)*sj6*x3481))+(((-0.02626)*x3489)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3491=IKcos(j4);
IkReal x3492=IKsin(j4);
IkReal x3493=(r11*sj0);
IkReal x3494=(cj6*sj5);
IkReal x3495=(r10*sj0);
IkReal x3496=(sj5*sj6);
IkReal x3497=((0.02626)*sj6);
IkReal x3498=(cj0*r01);
IkReal x3499=((0.02626)*cj6);
IkReal x3500=((1.0)*cj6);
IkReal x3501=(cj0*r00);
IkReal x3502=((1.0)*r21);
evalcond[0]=(x3492+((cj6*r20))+(((-1.0)*sj6*x3502)));
evalcond[1]=((((-1.0)*r20*x3496))+(((-1.0)*cj5*r22))+(((-1.0)*x3491))+(((-1.0)*x3494*x3502)));
evalcond[2]=((0.09756)+((r20*x3499))+(((0.02626)*x3492))+(((0.0718)*x3491))+pz+(((-1.0)*r21*x3497)));
evalcond[3]=(((sj6*x3498))+((sj6*x3493))+(((-1.0)*x3495*x3500))+x3491+(((-1.0)*x3500*x3501)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x3494*x3498))+x3492+((x3496*x3501))+((x3493*x3494))+((x3495*x3496)));
evalcond[5]=((-0.0001)+((x3497*x3498))+(((0.02626)*x3491))+(((-1.0)*py*sj0))+(((-1.0)*x3499*x3501))+(((-1.0)*x3495*x3499))+(((-0.0718)*x3492))+((x3493*x3497))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3503=(cj5*cj6);
IkReal x3504=((1.0)*sj0);
IkReal x3505=(r21*sj6);
IkReal x3506=(cj0*sj5);
IkReal x3507=((1.0)*r22);
IkReal x3508=(cj6*r20);
IkReal x3509=(cj5*sj6);
IkReal x3510=((1.0)*cj0);
IkReal x3511=((1.0)*sj5);
IkReal x3512=(x3509*x3510);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x3509))+(((-1.0)*sj5*x3507))+((r21*x3503)));
evalcond[2]=(x3508+(((-1.0)*x3505)));
evalcond[3]=((((-1.0)*cj6*r21*x3511))+(((-1.0)*r20*sj6*x3511))+(((-1.0)*cj5*x3507)));
evalcond[4]=((((-1.0)*r01*x3503*x3510))+((r12*sj0*sj5))+(((-1.0)*r11*x3503*x3504))+((r02*x3506))+(((-1.0)*r00*x3512))+(((-1.0)*r10*x3504*x3509)));
evalcond[5]=((((-1.0)*r02*sj5*x3504))+(((-1.0)*r10*x3512))+((r12*x3506))+((r01*sj0*x3503))+((r00*sj0*x3509))+(((-1.0)*r11*x3503*x3510)));
evalcond[6]=((0.0001)+(((-0.02626)*x3505))+pz+(((0.02626)*x3508)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3513=(cj0*cj6);
IkReal x3514=(sj0*sj6);
IkReal x3515=((1.0)*r11);
IkReal x3516=(cj6*sj0);
IkReal x3517=(cj0*sj6);
if( IKabs(((((-1.0)*x3515*x3517))+((r10*x3513))+((r01*x3514))+(((-1.0)*r00*x3516)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x3514*x3515))+((r10*x3516))+((r00*x3513))+(((-1.0)*r01*x3517)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x3515*x3517))+((r10*x3513))+((r01*x3514))+(((-1.0)*r00*x3516))))+IKsqr(((((-1.0)*x3514*x3515))+((r10*x3516))+((r00*x3513))+(((-1.0)*r01*x3517))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x3515*x3517))+((r10*x3513))+((r01*x3514))+(((-1.0)*r00*x3516))), ((((-1.0)*x3514*x3515))+((r10*x3516))+((r00*x3513))+(((-1.0)*r01*x3517))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3518=IKsin(j4);
IkReal x3519=IKcos(j4);
IkReal x3520=(cj6*sj0);
IkReal x3521=((0.02626)*r10);
IkReal x3522=(r11*sj6);
IkReal x3523=(r11*sj5);
IkReal x3524=(sj0*sj6);
IkReal x3525=(r10*sj5);
IkReal x3526=(cj0*cj6);
IkReal x3527=((0.02626)*r01);
IkReal x3528=(cj5*r12);
IkReal x3529=((1.0)*sj0);
IkReal x3530=(cj5*r02);
IkReal x3531=(cj0*sj6);
IkReal x3532=((1.0)*r10);
IkReal x3533=((1.0)*r01);
IkReal x3534=(r00*sj5);
IkReal x3535=((1.0)*cj0);
IkReal x3536=((0.02626)*r00);
evalcond[0]=(x3519+((r01*x3531))+(((-1.0)*x3520*x3532))+(((-1.0)*r00*x3526))+((sj0*x3522)));
evalcond[1]=(((cj0*x3522))+(((-1.0)*x3524*x3533))+((r00*x3520))+x3518+(((-1.0)*x3526*x3532)));
evalcond[2]=(((x3524*x3525))+((r01*sj5*x3526))+((x3531*x3534))+x3518+((cj0*x3530))+((x3520*x3523))+((sj0*x3528)));
evalcond[3]=(((cj0*x3528))+(((-1.0)*sj5*x3520*x3533))+((x3523*x3526))+(((-1.0)*x3529*x3530))+((x3525*x3531))+(((-1.0)*x3524*x3534))+(((-1.0)*x3519)));
evalcond[4]=((0.33876)+((x3520*x3536))+(((-1.0)*x3524*x3527))+(((-1.0)*py*x3535))+(((-1.0)*x3521*x3526))+((px*sj0))+(((0.02626)*x3518))+(((0.0718)*x3519))+(((0.02626)*cj0*x3522)));
evalcond[5]=((-0.0001)+(((-1.0)*x3526*x3536))+(((-1.0)*px*x3535))+(((0.02626)*sj0*x3522))+(((-1.0)*py*x3529))+(((0.02626)*x3519))+(((-1.0)*x3520*x3521))+(((-0.0718)*x3518))+((x3527*x3531)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3537=(cj5*cj6);
IkReal x3538=((1.0)*sj0);
IkReal x3539=(r21*sj6);
IkReal x3540=(cj0*sj5);
IkReal x3541=((1.0)*r22);
IkReal x3542=(cj6*r20);
IkReal x3543=(cj5*sj6);
IkReal x3544=((1.0)*cj0);
IkReal x3545=((1.0)*sj5);
IkReal x3546=(x3543*x3544);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x3543))+(((-1.0)*sj5*x3541))+((r21*x3537)));
evalcond[2]=(x3542+(((-1.0)*x3539)));
evalcond[3]=((((-1.0)*cj6*r21*x3545))+(((-1.0)*r20*sj6*x3545))+(((-1.0)*cj5*x3541)));
evalcond[4]=(((r02*x3540))+(((-1.0)*r10*x3538*x3543))+(((-1.0)*r00*x3546))+(((-1.0)*r11*x3537*x3538))+((r12*sj0*sj5))+(((-1.0)*r01*x3537*x3544)));
evalcond[5]=((((-1.0)*r11*x3537*x3544))+((r01*sj0*x3537))+(((-1.0)*r10*x3546))+((r12*x3540))+(((-1.0)*r02*sj5*x3538))+((r00*sj0*x3543)));
evalcond[6]=((0.0001)+(((0.02626)*x3542))+(((-0.02626)*x3539))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3547=(cj0*cj6);
IkReal x3548=(cj6*sj0);
IkReal x3549=(cj0*sj6);
IkReal x3550=((1.0)*sj0*sj6);
if( IKabs((((r00*x3548))+(((-1.0)*r01*x3550))+(((-1.0)*r10*x3547))+((r11*x3549)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x3547))+(((-1.0)*r11*x3550))+(((-1.0)*r01*x3549))+((r10*x3548)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x3548))+(((-1.0)*r01*x3550))+(((-1.0)*r10*x3547))+((r11*x3549))))+IKsqr((((r00*x3547))+(((-1.0)*r11*x3550))+(((-1.0)*r01*x3549))+((r10*x3548))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r00*x3548))+(((-1.0)*r01*x3550))+(((-1.0)*r10*x3547))+((r11*x3549))), (((r00*x3547))+(((-1.0)*r11*x3550))+(((-1.0)*r01*x3549))+((r10*x3548))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3551=IKsin(j4);
IkReal x3552=IKcos(j4);
IkReal x3553=(cj6*sj0);
IkReal x3554=((0.02626)*r10);
IkReal x3555=(r11*sj6);
IkReal x3556=(r11*sj5);
IkReal x3557=(sj0*sj6);
IkReal x3558=(r10*sj5);
IkReal x3559=((0.02626)*r01);
IkReal x3560=(cj5*r12);
IkReal x3561=(cj0*cj6);
IkReal x3562=((1.0)*sj0);
IkReal x3563=(cj5*r02);
IkReal x3564=(cj0*sj6);
IkReal x3565=((1.0)*r10);
IkReal x3566=((1.0)*r01);
IkReal x3567=(r00*sj5);
IkReal x3568=((1.0)*cj0);
IkReal x3569=((0.02626)*r00);
evalcond[0]=(((sj0*x3555))+x3552+((r01*x3564))+(((-1.0)*r00*x3561))+(((-1.0)*x3553*x3565)));
evalcond[1]=(((r00*x3553))+(((-1.0)*x3561*x3565))+((cj0*x3555))+(((-1.0)*x3551))+(((-1.0)*x3557*x3566)));
evalcond[2]=(((sj0*x3560))+x3551+((x3553*x3556))+((r01*sj5*x3561))+((cj0*x3563))+((x3564*x3567))+((x3557*x3558)));
evalcond[3]=((((-1.0)*sj5*x3553*x3566))+x3552+(((-1.0)*x3562*x3563))+((cj0*x3560))+((x3556*x3561))+((x3558*x3564))+(((-1.0)*x3557*x3567)));
evalcond[4]=((0.14384)+(((-1.0)*py*x3568))+(((-1.0)*x3557*x3559))+(((-1.0)*x3554*x3561))+(((-0.02626)*x3551))+((px*sj0))+((x3553*x3569))+(((-0.0718)*x3552))+(((0.02626)*cj0*x3555)));
evalcond[5]=((-0.0001)+((x3559*x3564))+(((-1.0)*py*x3562))+(((0.02626)*x3552))+(((-1.0)*x3561*x3569))+(((0.02626)*sj0*x3555))+(((-1.0)*px*x3568))+(((-1.0)*x3553*x3554))+(((-0.0718)*x3551)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x3570=IKPowWithIntegerCheck(cj3,-1);
if(!x3570.valid){
continue;
}
CheckValue<IkReal> x3571=IKPowWithIntegerCheck(sj3,-1);
if(!x3571.valid){
continue;
}
if( IKabs(((x3570.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x3571.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3570.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))+IKsqr(((x3571.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x3570.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))), ((x3571.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3572=IKcos(j4);
IkReal x3573=IKsin(j4);
IkReal x3574=(cj6*sj0);
IkReal x3575=((0.02626)*r10);
IkReal x3576=(sj0*sj6);
IkReal x3577=(cj5*r12);
IkReal x3578=(r11*sj5);
IkReal x3579=(r10*sj5);
IkReal x3580=(cj0*cj6);
IkReal x3581=((0.02626)*r01);
IkReal x3582=(cj0*sj6);
IkReal x3583=(r21*sj6);
IkReal x3584=((1.0)*cj5);
IkReal x3585=(cj6*r20);
IkReal x3586=((1.0)*r10);
IkReal x3587=((1.0)*r01);
IkReal x3588=(r00*sj5);
IkReal x3589=((1.0)*py);
IkReal x3590=((1.0)*sj5);
IkReal x3591=((0.02626)*r00);
IkReal x3592=((0.02626)*r11);
IkReal x3593=(sj3*x3573);
IkReal x3594=(sj3*x3572);
IkReal x3595=(cj3*x3573);
IkReal x3596=(cj3*x3572);
evalcond[0]=(x3585+(((-1.0)*x3583))+(((-1.0)*x3593)));
evalcond[1]=((((-1.0)*cj6*r21*x3590))+(((-1.0)*r22*x3584))+x3594+(((-1.0)*r20*sj6*x3590)));
evalcond[2]=((((-1.0)*x3574*x3586))+x3572+((r01*x3582))+((r11*x3576))+(((-1.0)*r00*x3580)));
evalcond[3]=((((-1.0)*x3576*x3587))+((r00*x3574))+x3595+((r11*x3582))+(((-1.0)*x3580*x3586)));
evalcond[4]=((0.0001)+(((0.02626)*x3585))+(((-0.0718)*x3594))+pz+(((-0.09746)*sj3))+(((-0.02626)*x3583))+(((-0.02626)*x3593)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x3580))+x3573+((sj0*x3577))+((x3574*x3578))+((x3582*x3588))+((x3576*x3579)));
evalcond[6]=((((-1.0)*sj5*x3574*x3587))+((cj0*x3577))+((x3579*x3582))+((x3578*x3580))+(((-1.0)*x3596))+(((-1.0)*x3576*x3588))+(((-1.0)*r02*sj0*x3584)));
evalcond[7]=((-0.0001)+(((-1.0)*sj0*x3589))+(((-1.0)*x3580*x3591))+(((-1.0)*x3574*x3575))+((x3576*x3592))+(((0.02626)*x3572))+(((-1.0)*cj0*px))+((x3581*x3582))+(((-0.0718)*x3573)));
evalcond[8]=((0.2413)+(((-1.0)*x3576*x3581))+(((-1.0)*cj0*x3589))+(((0.02626)*x3595))+(((-1.0)*x3575*x3580))+((px*sj0))+((x3582*x3592))+(((0.0718)*x3596))+(((0.09746)*cj3))+((x3574*x3591)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3597=((1.0)*sj6);
CheckValue<IkReal> x3598=IKPowWithIntegerCheck(sj3,-1);
if(!x3598.valid){
continue;
}
if( IKabs(((x3598.value)*(((((-1.0)*r21*x3597))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x3597))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x3597)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3598.value)*(((((-1.0)*r21*x3597))+((cj6*r20))))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x3597))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x3597))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x3598.value)*(((((-1.0)*r21*x3597))+((cj6*r20))))), (((cj6*r10*sj0))+(((-1.0)*cj0*r01*x3597))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x3597))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3599=IKcos(j4);
IkReal x3600=IKsin(j4);
IkReal x3601=(cj6*sj0);
IkReal x3602=((0.02626)*r10);
IkReal x3603=(sj0*sj6);
IkReal x3604=(cj5*r12);
IkReal x3605=(r11*sj5);
IkReal x3606=(r10*sj5);
IkReal x3607=(cj0*cj6);
IkReal x3608=((0.02626)*r01);
IkReal x3609=(cj0*sj6);
IkReal x3610=(r21*sj6);
IkReal x3611=((1.0)*cj5);
IkReal x3612=(cj6*r20);
IkReal x3613=((1.0)*r10);
IkReal x3614=((1.0)*r01);
IkReal x3615=(r00*sj5);
IkReal x3616=((1.0)*py);
IkReal x3617=((1.0)*sj5);
IkReal x3618=((0.02626)*r00);
IkReal x3619=((0.02626)*r11);
IkReal x3620=(sj3*x3600);
IkReal x3621=(sj3*x3599);
IkReal x3622=(cj3*x3600);
IkReal x3623=(cj3*x3599);
evalcond[0]=((((-1.0)*x3610))+x3612+(((-1.0)*x3620)));
evalcond[1]=((((-1.0)*r20*sj6*x3617))+(((-1.0)*cj6*r21*x3617))+x3621+(((-1.0)*r22*x3611)));
evalcond[2]=(((r11*x3603))+x3599+(((-1.0)*x3601*x3613))+((r01*x3609))+(((-1.0)*r00*x3607)));
evalcond[3]=(((r11*x3609))+(((-1.0)*x3603*x3614))+x3622+(((-1.0)*x3607*x3613))+((r00*x3601)));
evalcond[4]=((0.0001)+(((-0.02626)*x3610))+(((-0.0718)*x3621))+(((-0.02626)*x3620))+pz+(((0.02626)*x3612))+(((-0.09746)*sj3)));
evalcond[5]=(((cj0*cj5*r02))+((x3609*x3615))+x3600+((x3601*x3605))+((x3603*x3606))+((sj0*x3604))+((r01*sj5*x3607)));
evalcond[6]=(((x3606*x3609))+(((-1.0)*r02*sj0*x3611))+(((-1.0)*sj5*x3601*x3614))+((cj0*x3604))+(((-1.0)*x3603*x3615))+((x3605*x3607))+(((-1.0)*x3623)));
evalcond[7]=((-0.0001)+(((0.02626)*x3599))+((x3608*x3609))+(((-1.0)*x3601*x3602))+(((-1.0)*x3607*x3618))+(((-1.0)*sj0*x3616))+((x3603*x3619))+(((-0.0718)*x3600))+(((-1.0)*cj0*px)));
evalcond[8]=((0.2413)+(((0.0718)*x3623))+(((0.02626)*x3622))+((x3609*x3619))+(((-1.0)*x3602*x3607))+(((-1.0)*cj0*x3616))+(((-1.0)*x3603*x3608))+((x3601*x3618))+((px*sj0))+(((0.09746)*cj3)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x3624=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x3624.valid){
continue;
}
CheckValue<IkReal> x3625 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x3625.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3624.value)))+(x3625.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3626=IKcos(j4);
IkReal x3627=IKsin(j4);
IkReal x3628=(cj6*sj0);
IkReal x3629=((0.02626)*r10);
IkReal x3630=(sj0*sj6);
IkReal x3631=(cj5*r12);
IkReal x3632=(r11*sj5);
IkReal x3633=(r10*sj5);
IkReal x3634=(cj0*cj6);
IkReal x3635=((0.02626)*r01);
IkReal x3636=(cj0*sj6);
IkReal x3637=(r21*sj6);
IkReal x3638=((1.0)*cj5);
IkReal x3639=(cj6*r20);
IkReal x3640=((1.0)*r10);
IkReal x3641=((1.0)*r01);
IkReal x3642=(r00*sj5);
IkReal x3643=((1.0)*py);
IkReal x3644=((1.0)*sj5);
IkReal x3645=((0.02626)*r00);
IkReal x3646=((0.02626)*r11);
IkReal x3647=(sj3*x3627);
IkReal x3648=(sj3*x3626);
IkReal x3649=(cj3*x3627);
IkReal x3650=(cj3*x3626);
evalcond[0]=(x3639+(((-1.0)*x3647))+(((-1.0)*x3637)));
evalcond[1]=((((-1.0)*cj6*r21*x3644))+(((-1.0)*r22*x3638))+x3648+(((-1.0)*r20*sj6*x3644)));
evalcond[2]=(((r11*x3630))+(((-1.0)*x3628*x3640))+x3626+((r01*x3636))+(((-1.0)*r00*x3634)));
evalcond[3]=(((r11*x3636))+(((-1.0)*x3630*x3641))+((r00*x3628))+(((-1.0)*x3634*x3640))+x3649);
evalcond[4]=((0.0001)+(((-0.02626)*x3637))+(((-0.02626)*x3647))+(((0.02626)*x3639))+pz+(((-0.09746)*sj3))+(((-0.0718)*x3648)));
evalcond[5]=(((r01*sj5*x3634))+((cj0*cj5*r02))+x3627+((x3628*x3632))+((x3636*x3642))+((x3630*x3633))+((sj0*x3631)));
evalcond[6]=((((-1.0)*x3630*x3642))+((x3632*x3634))+(((-1.0)*x3650))+((x3633*x3636))+((cj0*x3631))+(((-1.0)*sj5*x3628*x3641))+(((-1.0)*r02*sj0*x3638)));
evalcond[7]=((-0.0001)+(((-1.0)*sj0*x3643))+((x3630*x3646))+(((0.02626)*x3626))+(((-0.0718)*x3627))+(((-1.0)*x3634*x3645))+((x3635*x3636))+(((-1.0)*x3628*x3629))+(((-1.0)*cj0*px)));
evalcond[8]=((0.2413)+(((-1.0)*cj0*x3643))+(((-1.0)*x3630*x3635))+((x3636*x3646))+(((0.02626)*x3649))+((x3628*x3645))+((px*sj0))+(((0.09746)*cj3))+(((0.0718)*x3650))+(((-1.0)*x3629*x3634)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3651=(cj0*sj5);
IkReal x3652=(cj5*cj6);
IkReal x3653=((1.0)*sj5);
IkReal x3654=((1.0)*cj0);
IkReal x3655=((1.0)*sj0);
IkReal x3656=(cj5*sj6);
IkReal x3657=(r10*x3656);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=(cj3+((r20*x3656))+((r21*x3652))+(((-1.0)*r22*x3653)));
evalcond[2]=((((-1.0)*r01*x3652*x3654))+(((-1.0)*r00*x3654*x3656))+((r12*sj0*sj5))+(((-1.0)*r11*x3652*x3655))+((r02*x3651))+(((-1.0)*x3655*x3657)));
evalcond[3]=((((-1.0)*sj3))+((r12*x3651))+((r01*sj0*x3652))+(((-1.0)*r02*sj0*x3653))+(((-1.0)*x3654*x3657))+(((-1.0)*r11*x3652*x3654))+((r00*sj0*x3656)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x3658=(cj5*cj6);
IkReal x3659=((1.0)*sj0);
IkReal x3660=(r21*sj6);
IkReal x3661=(cj0*sj5);
IkReal x3662=((1.0)*r22);
IkReal x3663=(cj6*r20);
IkReal x3664=(cj5*sj6);
IkReal x3665=((1.0)*cj0);
IkReal x3666=((1.0)*sj5);
IkReal x3667=(x3664*x3665);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x3658))+((r20*x3664))+(((-1.0)*sj5*x3662)));
evalcond[2]=((((-1.0)*x3660))+x3663);
evalcond[3]=((((-1.0)*r20*sj6*x3666))+(((-1.0)*cj6*r21*x3666))+(((-1.0)*cj5*x3662)));
evalcond[4]=((((-1.0)*r10*x3659*x3664))+(((-1.0)*r01*x3658*x3665))+((r12*sj0*sj5))+(((-1.0)*r00*x3667))+((r02*x3661))+(((-1.0)*r11*x3658*x3659)));
evalcond[5]=((((-1.0)*r11*x3658*x3665))+((r01*sj0*x3658))+((r12*x3661))+((r00*sj0*x3664))+(((-1.0)*r02*sj5*x3659))+(((-1.0)*r10*x3667)));
evalcond[6]=((0.0001)+(((0.02626)*x3663))+pz+(((-0.02626)*x3660)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3668=(sj0*sj6);
IkReal x3669=(cj0*sj6);
IkReal x3670=(cj6*r00);
IkReal x3671=((1.0)*cj6*r10);
if( IKabs(((((-1.0)*cj0*x3671))+((r11*x3669))+(((-1.0)*r01*x3668))+((sj0*x3670)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj0*x3671))+(((-1.0)*cj0*x3670))+((r11*x3668))+((r01*x3669)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*x3671))+((r11*x3669))+(((-1.0)*r01*x3668))+((sj0*x3670))))+IKsqr(((((-1.0)*sj0*x3671))+(((-1.0)*cj0*x3670))+((r11*x3668))+((r01*x3669))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*x3671))+((r11*x3669))+(((-1.0)*r01*x3668))+((sj0*x3670))), ((((-1.0)*sj0*x3671))+(((-1.0)*cj0*x3670))+((r11*x3668))+((r01*x3669))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3672=IKcos(j4);
IkReal x3673=IKsin(j4);
IkReal x3674=(cj6*sj0);
IkReal x3675=((0.02626)*r10);
IkReal x3676=(r11*sj6);
IkReal x3677=(r11*sj5);
IkReal x3678=(sj0*sj6);
IkReal x3679=(r10*sj5);
IkReal x3680=((0.02626)*r01);
IkReal x3681=(cj5*r12);
IkReal x3682=(cj0*cj6);
IkReal x3683=((1.0)*sj0);
IkReal x3684=(cj5*r02);
IkReal x3685=(cj0*sj6);
IkReal x3686=((1.0)*r10);
IkReal x3687=((1.0)*r01);
IkReal x3688=(r00*sj5);
IkReal x3689=((1.0)*cj0);
IkReal x3690=((0.02626)*r00);
IkReal x3691=((1.0)*x3673);
evalcond[0]=(((r01*x3685))+(((-1.0)*r00*x3682))+(((-1.0)*x3674*x3686))+(((-1.0)*x3672))+((sj0*x3676)));
evalcond[1]=(((r00*x3674))+(((-1.0)*x3682*x3686))+(((-1.0)*x3691))+(((-1.0)*x3678*x3687))+((cj0*x3676)));
evalcond[2]=(((x3678*x3679))+((sj0*x3681))+((r01*sj5*x3682))+((x3685*x3688))+((cj0*x3684))+((x3674*x3677))+(((-1.0)*x3691)));
evalcond[3]=((((-1.0)*x3678*x3688))+(((-1.0)*x3683*x3684))+((cj0*x3681))+x3672+(((-1.0)*sj5*x3674*x3687))+((x3679*x3685))+((x3677*x3682)));
evalcond[4]=((-0.08776)+(((-0.02626)*x3673))+(((0.02626)*cj0*x3676))+(((-1.0)*x3675*x3682))+(((-1.0)*py*x3689))+((px*sj0))+((x3674*x3690))+(((-1.0)*x3678*x3680))+(((-0.0718)*x3672)));
evalcond[5]=((-0.0019)+(((-0.02626)*x3672))+((x3680*x3685))+(((0.02626)*sj0*x3676))+(((-1.0)*px*x3689))+(((-1.0)*py*x3683))+(((-1.0)*x3682*x3690))+(((0.0718)*x3673))+(((-1.0)*x3674*x3675)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3692=(cj5*cj6);
IkReal x3693=((1.0)*sj0);
IkReal x3694=(r21*sj6);
IkReal x3695=(cj0*sj5);
IkReal x3696=((1.0)*r22);
IkReal x3697=(cj6*r20);
IkReal x3698=(cj5*sj6);
IkReal x3699=((1.0)*cj0);
IkReal x3700=((1.0)*sj5);
IkReal x3701=(x3698*x3699);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x3698))+(((-1.0)*sj5*x3696))+((r21*x3692)));
evalcond[2]=(x3697+(((-1.0)*x3694)));
evalcond[3]=((((-1.0)*r20*sj6*x3700))+(((-1.0)*cj5*x3696))+(((-1.0)*cj6*r21*x3700)));
evalcond[4]=((((-1.0)*r00*x3701))+((r02*x3695))+((r12*sj0*sj5))+(((-1.0)*r10*x3693*x3698))+(((-1.0)*r01*x3692*x3699))+(((-1.0)*r11*x3692*x3693)));
evalcond[5]=((((-1.0)*r10*x3701))+((r01*sj0*x3692))+(((-1.0)*r02*sj5*x3693))+((r12*x3695))+((r00*sj0*x3698))+(((-1.0)*r11*x3692*x3699)));
evalcond[6]=((0.0001)+(((-0.02626)*x3694))+pz+(((0.02626)*x3697)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3702=(sj0*sj6);
IkReal x3703=(cj6*r10);
IkReal x3704=((1.0)*sj0);
IkReal x3705=(cj6*r00);
IkReal x3706=(cj0*sj6);
if( IKabs((((r01*x3702))+(((-1.0)*x3704*x3705))+((cj0*x3703))+(((-1.0)*r11*x3706)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x3705))+((r01*x3706))+((r11*x3702))+(((-1.0)*x3703*x3704)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x3702))+(((-1.0)*x3704*x3705))+((cj0*x3703))+(((-1.0)*r11*x3706))))+IKsqr(((((-1.0)*cj0*x3705))+((r01*x3706))+((r11*x3702))+(((-1.0)*x3703*x3704))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x3702))+(((-1.0)*x3704*x3705))+((cj0*x3703))+(((-1.0)*r11*x3706))), ((((-1.0)*cj0*x3705))+((r01*x3706))+((r11*x3702))+(((-1.0)*x3703*x3704))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3707=IKsin(j4);
IkReal x3708=IKcos(j4);
IkReal x3709=(cj6*sj0);
IkReal x3710=((0.02626)*r10);
IkReal x3711=(r11*sj6);
IkReal x3712=(r11*sj5);
IkReal x3713=(sj0*sj6);
IkReal x3714=(r10*sj5);
IkReal x3715=(cj0*cj6);
IkReal x3716=((0.02626)*r01);
IkReal x3717=(cj5*r12);
IkReal x3718=((1.0)*sj0);
IkReal x3719=(cj5*r02);
IkReal x3720=(cj0*sj6);
IkReal x3721=((1.0)*r10);
IkReal x3722=((1.0)*r01);
IkReal x3723=(r00*sj5);
IkReal x3724=((1.0)*cj0);
IkReal x3725=((0.02626)*r00);
IkReal x3726=((1.0)*x3708);
evalcond[0]=(((r00*x3709))+(((-1.0)*x3713*x3722))+x3707+((cj0*x3711))+(((-1.0)*x3715*x3721)));
evalcond[1]=((((-1.0)*x3726))+(((-1.0)*r00*x3715))+((sj0*x3711))+((r01*x3720))+(((-1.0)*x3709*x3721)));
evalcond[2]=(((sj0*x3717))+((x3709*x3712))+((r01*sj5*x3715))+((cj0*x3719))+((x3720*x3723))+((x3713*x3714))+(((-1.0)*x3707)));
evalcond[3]=((((-1.0)*x3713*x3723))+(((-1.0)*x3726))+((x3712*x3715))+(((-1.0)*sj5*x3709*x3722))+((x3714*x3720))+((cj0*x3717))+(((-1.0)*x3718*x3719)));
evalcond[4]=((0.10716)+(((-1.0)*x3713*x3716))+(((0.02626)*x3707))+(((0.0718)*x3708))+(((-1.0)*x3710*x3715))+((x3709*x3725))+(((0.02626)*cj0*x3711))+(((-1.0)*py*x3724))+((px*sj0)));
evalcond[5]=((-0.0019)+((x3716*x3720))+(((0.0718)*x3707))+(((-1.0)*px*x3724))+(((0.02626)*sj0*x3711))+(((-1.0)*py*x3718))+(((-1.0)*x3709*x3710))+(((-0.02626)*x3708))+(((-1.0)*x3715*x3725)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3727=((1.0)*cj6);
CheckValue<IkReal> x3728=IKPowWithIntegerCheck(sj3,-1);
if(!x3728.valid){
continue;
}
if( IKabs(((x3728.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x3727))+(((-1.0)*cj0*r00*x3727))+((cj0*r01*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3728.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x3727))+(((-1.0)*cj0*r00*x3727))+((cj0*r01*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x3728.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))), (((r11*sj0*sj6))+(((-1.0)*r10*sj0*x3727))+(((-1.0)*cj0*r00*x3727))+((cj0*r01*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3729=IKcos(j4);
IkReal x3730=IKsin(j4);
IkReal x3731=(cj6*sj0);
IkReal x3732=((0.02626)*r10);
IkReal x3733=(sj0*sj6);
IkReal x3734=(r11*sj5);
IkReal x3735=(r10*sj5);
IkReal x3736=(cj0*cj6);
IkReal x3737=((0.02626)*r01);
IkReal x3738=(cj0*sj6);
IkReal x3739=(r21*sj6);
IkReal x3740=((1.0)*cj5);
IkReal x3741=(cj6*r20);
IkReal x3742=((1.0)*r10);
IkReal x3743=((1.0)*r01);
IkReal x3744=(r00*sj5);
IkReal x3745=((1.0)*py);
IkReal x3746=(cj5*r12);
IkReal x3747=((1.0)*sj5);
IkReal x3748=((0.02626)*r00);
IkReal x3749=((0.02626)*r11);
IkReal x3750=((1.0)*x3730);
IkReal x3751=((0.02626)*x3730);
IkReal x3752=(sj3*x3729);
IkReal x3753=(cj3*x3729);
evalcond[0]=(x3741+(((-1.0)*sj3*x3750))+(((-1.0)*x3739)));
evalcond[1]=((((-1.0)*r22*x3740))+x3752+(((-1.0)*r20*sj6*x3747))+(((-1.0)*cj6*r21*x3747)));
evalcond[2]=((((-1.0)*r00*x3736))+((r01*x3738))+((r11*x3733))+(((-1.0)*x3731*x3742))+(((-1.0)*x3729)));
evalcond[3]=(((r00*x3731))+(((-1.0)*cj3*x3750))+((r11*x3738))+(((-1.0)*x3736*x3742))+(((-1.0)*x3733*x3743)));
evalcond[4]=((0.0001)+(((-0.0718)*x3752))+(((0.02626)*x3741))+(((-1.0)*sj3*x3751))+pz+(((-0.09746)*sj3))+(((-0.02626)*x3739)));
evalcond[5]=(((x3733*x3735))+((cj0*cj5*r02))+((sj0*x3746))+((x3731*x3734))+(((-1.0)*x3750))+((r01*sj5*x3736))+((x3738*x3744)));
evalcond[6]=(((x3734*x3736))+((x3735*x3738))+((cj0*x3746))+x3753+(((-1.0)*x3733*x3744))+(((-1.0)*sj5*x3731*x3743))+(((-1.0)*r02*sj0*x3740)));
evalcond[7]=((-0.0019)+(((-1.0)*sj0*x3745))+(((0.0718)*x3730))+(((-1.0)*x3736*x3748))+(((-1.0)*x3731*x3732))+(((-0.02626)*x3729))+((x3737*x3738))+((x3733*x3749))+(((-1.0)*cj0*px)));
evalcond[8]=((0.0097)+(((-0.0718)*x3753))+(((-1.0)*cj3*x3751))+((x3731*x3748))+(((-1.0)*cj0*x3745))+(((-0.09746)*cj3))+(((-1.0)*x3732*x3736))+((px*sj0))+(((-1.0)*x3733*x3737))+((x3738*x3749)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x3754=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x3754.valid){
continue;
}
CheckValue<IkReal> x3755 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x3755.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3754.value)))+(x3755.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3756=IKcos(j4);
IkReal x3757=IKsin(j4);
IkReal x3758=(cj6*sj0);
IkReal x3759=((0.02626)*r10);
IkReal x3760=(sj0*sj6);
IkReal x3761=(r11*sj5);
IkReal x3762=(r10*sj5);
IkReal x3763=(cj0*cj6);
IkReal x3764=((0.02626)*r01);
IkReal x3765=(cj0*sj6);
IkReal x3766=(r21*sj6);
IkReal x3767=((1.0)*cj5);
IkReal x3768=(cj6*r20);
IkReal x3769=((1.0)*r10);
IkReal x3770=((1.0)*r01);
IkReal x3771=(r00*sj5);
IkReal x3772=((1.0)*py);
IkReal x3773=(cj5*r12);
IkReal x3774=((1.0)*sj5);
IkReal x3775=((0.02626)*r00);
IkReal x3776=((0.02626)*r11);
IkReal x3777=((1.0)*x3757);
IkReal x3778=((0.02626)*x3757);
IkReal x3779=(sj3*x3756);
IkReal x3780=(cj3*x3756);
evalcond[0]=((((-1.0)*sj3*x3777))+(((-1.0)*x3766))+x3768);
evalcond[1]=((((-1.0)*r22*x3767))+(((-1.0)*r20*sj6*x3774))+x3779+(((-1.0)*cj6*r21*x3774)));
evalcond[2]=((((-1.0)*x3756))+((r11*x3760))+(((-1.0)*r00*x3763))+((r01*x3765))+(((-1.0)*x3758*x3769)));
evalcond[3]=(((r00*x3758))+(((-1.0)*x3763*x3769))+(((-1.0)*cj3*x3777))+((r11*x3765))+(((-1.0)*x3760*x3770)));
evalcond[4]=((0.0001)+(((-1.0)*sj3*x3778))+(((-0.0718)*x3779))+(((-0.02626)*x3766))+pz+(((-0.09746)*sj3))+(((0.02626)*x3768)));
evalcond[5]=(((cj0*cj5*r02))+((x3758*x3761))+((sj0*x3773))+((r01*sj5*x3763))+((x3760*x3762))+(((-1.0)*x3777))+((x3765*x3771)));
evalcond[6]=(((cj0*x3773))+(((-1.0)*x3760*x3771))+(((-1.0)*r02*sj0*x3767))+x3780+((x3761*x3763))+(((-1.0)*sj5*x3758*x3770))+((x3762*x3765)));
evalcond[7]=((-0.0019)+(((-1.0)*x3763*x3775))+(((-1.0)*x3758*x3759))+(((-1.0)*sj0*x3772))+(((0.0718)*x3757))+(((-0.02626)*x3756))+((x3760*x3776))+((x3764*x3765))+(((-1.0)*cj0*px)));
evalcond[8]=((0.0097)+((x3758*x3775))+(((-1.0)*cj0*x3772))+(((-1.0)*x3759*x3763))+(((-1.0)*cj3*x3778))+(((-1.0)*x3760*x3764))+(((-0.0718)*x3780))+(((-0.09746)*cj3))+((px*sj0))+((x3765*x3776)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x3787=IKPowWithIntegerCheck(sj3,-1);
if(!x3787.valid){
continue;
}
IkReal x3781=x3787.value;
IkReal x3782=(cj6*sj3);
IkReal x3783=(sj3*sj6);
IkReal x3784=(r21*sj6);
IkReal x3785=(cj2*cj3);
IkReal x3786=(cj6*r20);
CheckValue<IkReal> x3788=IKPowWithIntegerCheck(sj2,-1);
if(!x3788.valid){
continue;
}
if( IKabs((x3781*(((((-1.0)*x3784))+x3786)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x3781*(x3788.value)*((((x3784*x3785))+(((-1.0)*r00*sj0*x3782))+(((-1.0)*x3785*x3786))+((r01*sj0*x3783))+((cj0*r10*x3782))+(((-1.0)*cj0*r11*x3783)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x3781*(((((-1.0)*x3784))+x3786))))+IKsqr((x3781*(x3788.value)*((((x3784*x3785))+(((-1.0)*r00*sj0*x3782))+(((-1.0)*x3785*x3786))+((r01*sj0*x3783))+((cj0*r10*x3782))+(((-1.0)*cj0*r11*x3783))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x3781*(((((-1.0)*x3784))+x3786))), (x3781*(x3788.value)*((((x3784*x3785))+(((-1.0)*r00*sj0*x3782))+(((-1.0)*x3785*x3786))+((r01*sj0*x3783))+((cj0*r10*x3782))+(((-1.0)*cj0*r11*x3783))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3789=IKsin(j4);
IkReal x3790=IKcos(j4);
IkReal x3791=((0.02626)*sj0);
IkReal x3792=(cj6*r10);
IkReal x3793=(r01*sj6);
IkReal x3794=(r11*sj0);
IkReal x3795=(cj0*cj5);
IkReal x3796=(cj6*sj5);
IkReal x3797=((0.02626)*cj0);
IkReal x3798=(cj0*sj6);
IkReal x3799=(r21*sj6);
IkReal x3800=((1.0)*sj0);
IkReal x3801=((0.02626)*cj3);
IkReal x3802=(cj6*r20);
IkReal x3803=((1.0)*cj3);
IkReal x3804=(r00*sj5);
IkReal x3805=((0.0718)*cj3);
IkReal x3806=(cj6*r00);
IkReal x3807=((1.0)*cj0);
IkReal x3808=((0.09746)*cj3);
IkReal x3809=(r11*sj6);
IkReal x3810=(r10*sj5*sj6);
IkReal x3811=(sj3*x3789);
IkReal x3812=(cj2*x3789);
IkReal x3813=(sj3*x3790);
IkReal x3814=(cj2*x3790);
IkReal x3815=(sj2*x3789);
IkReal x3816=(sj2*x3790);
evalcond[0]=((((-1.0)*x3799))+(((-1.0)*x3811))+x3802);
evalcond[1]=((((-1.0)*r21*x3796))+x3813+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.0001)+(((0.02626)*x3802))+(((-0.02626)*x3799))+(((-0.02626)*x3811))+pz+(((-0.09746)*sj3))+(((-0.0718)*x3813)));
evalcond[3]=(((cj3*x3812))+x3816+(((-1.0)*x3793*x3800))+(((-1.0)*x3792*x3807))+((r11*x3798))+((sj0*x3806)));
evalcond[4]=(((cj0*x3793))+((sj6*x3794))+(((-1.0)*x3803*x3815))+x3814+(((-1.0)*x3792*x3800))+(((-1.0)*x3806*x3807)));
evalcond[5]=(((cj5*r12*sj0))+((cj3*x3816))+((r02*x3795))+((x3798*x3804))+x3812+((sj0*x3810))+((cj0*r01*x3796))+((x3794*x3796)));
evalcond[6]=((((-1.0)*sj6*x3800*x3804))+((r10*sj5*x3798))+((cj0*r11*x3796))+(((-1.0)*x3803*x3814))+(((-1.0)*cj5*r02*x3800))+(((-1.0)*r01*x3796*x3800))+x3815+((r12*x3795)));
evalcond[7]=((0.1255)+(((-1.0)*x3791*x3793))+(((0.1158)*cj2))+((x3801*x3812))+((x3797*x3809))+((x3805*x3814))+(((0.02626)*x3816))+(((-1.0)*py*x3807))+((x3791*x3806))+((px*sj0))+(((-0.0718)*x3815))+(((-1.0)*x3792*x3797))+(((0.0009)*sj2))+((cj2*x3808)));
evalcond[8]=((-0.001)+((x3793*x3797))+(((-1.0)*sj2*x3808))+(((-0.1158)*sj2))+(((-1.0)*x3801*x3815))+(((-1.0)*x3791*x3792))+(((0.02626)*x3814))+(((-1.0)*py*x3800))+(((0.0009)*cj2))+(((-1.0)*x3797*x3806))+((x3791*x3809))+(((-1.0)*px*x3807))+(((-0.0718)*x3812))+(((-1.0)*x3805*x3816)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x3818=IKPowWithIntegerCheck(sj3,-1);
if(!x3818.valid){
continue;
}
IkReal x3817=x3818.value;
if( IKabs((x3817*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((0.000278551532033426)*x3817*(((5.0)+(((50000.0)*pz))+(((-4873.0)*sj3)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x3817*((((cj6*r20))+(((-1.0)*r21*sj6))))))+IKsqr(((0.000278551532033426)*x3817*(((5.0)+(((50000.0)*pz))+(((-4873.0)*sj3))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x3817*((((cj6*r20))+(((-1.0)*r21*sj6))))), ((0.000278551532033426)*x3817*(((5.0)+(((50000.0)*pz))+(((-4873.0)*sj3))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3819=IKsin(j4);
IkReal x3820=IKcos(j4);
IkReal x3821=((0.02626)*sj0);
IkReal x3822=(cj6*r10);
IkReal x3823=(r01*sj6);
IkReal x3824=(r11*sj0);
IkReal x3825=(cj0*cj5);
IkReal x3826=(cj6*sj5);
IkReal x3827=((0.02626)*cj0);
IkReal x3828=(cj0*sj6);
IkReal x3829=(r21*sj6);
IkReal x3830=((1.0)*sj0);
IkReal x3831=((0.02626)*cj3);
IkReal x3832=(cj6*r20);
IkReal x3833=((1.0)*cj3);
IkReal x3834=(r00*sj5);
IkReal x3835=((0.0718)*cj3);
IkReal x3836=(cj6*r00);
IkReal x3837=((1.0)*cj0);
IkReal x3838=((0.09746)*cj3);
IkReal x3839=(r11*sj6);
IkReal x3840=(r10*sj5*sj6);
IkReal x3841=(sj3*x3819);
IkReal x3842=(cj2*x3819);
IkReal x3843=(sj3*x3820);
IkReal x3844=(cj2*x3820);
IkReal x3845=(sj2*x3819);
IkReal x3846=(sj2*x3820);
evalcond[0]=((((-1.0)*x3829))+(((-1.0)*x3841))+x3832);
evalcond[1]=(x3843+(((-1.0)*cj5*r22))+(((-1.0)*r21*x3826))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.0001)+(((-0.0718)*x3843))+(((-0.02626)*x3829))+pz+(((-0.02626)*x3841))+(((0.02626)*x3832))+(((-0.09746)*sj3)));
evalcond[3]=(((r11*x3828))+((sj0*x3836))+((cj3*x3842))+x3846+(((-1.0)*x3823*x3830))+(((-1.0)*x3822*x3837)));
evalcond[4]=(x3844+((cj0*x3823))+((sj6*x3824))+(((-1.0)*x3836*x3837))+(((-1.0)*x3833*x3845))+(((-1.0)*x3822*x3830)));
evalcond[5]=(((cj5*r12*sj0))+((x3828*x3834))+((cj3*x3846))+((cj0*r01*x3826))+((x3824*x3826))+((r02*x3825))+x3842+((sj0*x3840)));
evalcond[6]=(((r12*x3825))+(((-1.0)*sj6*x3830*x3834))+((cj0*r11*x3826))+x3845+((r10*sj5*x3828))+(((-1.0)*x3833*x3844))+(((-1.0)*r01*x3826*x3830))+(((-1.0)*cj5*r02*x3830)));
evalcond[7]=((0.1255)+(((-1.0)*py*x3837))+(((0.1158)*cj2))+(((0.02626)*x3846))+((x3821*x3836))+(((-1.0)*x3822*x3827))+(((-1.0)*x3821*x3823))+((x3827*x3839))+(((-0.0718)*x3845))+((cj2*x3838))+((px*sj0))+((x3831*x3842))+(((0.0009)*sj2))+((x3835*x3844)));
evalcond[8]=((-0.001)+(((-1.0)*x3831*x3845))+(((-1.0)*py*x3830))+(((-0.1158)*sj2))+(((-1.0)*px*x3837))+(((0.02626)*x3844))+((x3821*x3839))+(((-1.0)*x3821*x3822))+(((-1.0)*x3835*x3846))+(((-0.0718)*x3842))+(((0.0009)*cj2))+(((-1.0)*sj2*x3838))+(((-1.0)*x3827*x3836))+((x3823*x3827)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x3847=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x3847.valid){
continue;
}
CheckValue<IkReal> x3848 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x3848.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3847.value)))+(x3848.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x3849=IKsin(j4);
IkReal x3850=IKcos(j4);
IkReal x3851=((0.02626)*sj0);
IkReal x3852=(cj6*r10);
IkReal x3853=(r01*sj6);
IkReal x3854=(r11*sj0);
IkReal x3855=(cj0*cj5);
IkReal x3856=(cj6*sj5);
IkReal x3857=((0.02626)*cj0);
IkReal x3858=(cj0*sj6);
IkReal x3859=(r21*sj6);
IkReal x3860=((1.0)*sj0);
IkReal x3861=((0.02626)*cj3);
IkReal x3862=(cj6*r20);
IkReal x3863=((1.0)*cj3);
IkReal x3864=(r00*sj5);
IkReal x3865=((0.0718)*cj3);
IkReal x3866=(cj6*r00);
IkReal x3867=((1.0)*cj0);
IkReal x3868=((0.09746)*cj3);
IkReal x3869=(r11*sj6);
IkReal x3870=(r10*sj5*sj6);
IkReal x3871=(sj3*x3849);
IkReal x3872=(cj2*x3849);
IkReal x3873=(sj3*x3850);
IkReal x3874=(cj2*x3850);
IkReal x3875=(sj2*x3849);
IkReal x3876=(sj2*x3850);
evalcond[0]=((((-1.0)*x3859))+x3862+(((-1.0)*x3871)));
evalcond[1]=(x3873+(((-1.0)*cj5*r22))+(((-1.0)*r21*x3856))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.0001)+(((0.02626)*x3862))+(((-0.0718)*x3873))+(((-0.02626)*x3859))+pz+(((-0.09746)*sj3))+(((-0.02626)*x3871)));
evalcond[3]=(((r11*x3858))+x3876+(((-1.0)*x3852*x3867))+(((-1.0)*x3853*x3860))+((cj3*x3872))+((sj0*x3866)));
evalcond[4]=((((-1.0)*x3866*x3867))+x3874+(((-1.0)*x3852*x3860))+((cj0*x3853))+(((-1.0)*x3863*x3875))+((sj6*x3854)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x3855))+((x3854*x3856))+((sj0*x3870))+x3872+((x3858*x3864))+((cj3*x3876))+((cj0*r01*x3856)));
evalcond[6]=((((-1.0)*sj6*x3860*x3864))+((cj0*r11*x3856))+(((-1.0)*r01*x3856*x3860))+(((-1.0)*cj5*r02*x3860))+((r10*sj5*x3858))+x3875+((r12*x3855))+(((-1.0)*x3863*x3874)));
evalcond[7]=((0.1255)+(((-1.0)*py*x3867))+(((0.1158)*cj2))+((x3865*x3874))+((x3861*x3872))+(((-0.0718)*x3875))+((x3857*x3869))+((cj2*x3868))+(((0.02626)*x3876))+((x3851*x3866))+((px*sj0))+(((-1.0)*x3852*x3857))+(((-1.0)*x3851*x3853))+(((0.0009)*sj2)));
evalcond[8]=((-0.001)+(((-1.0)*py*x3860))+(((-0.1158)*sj2))+(((-1.0)*x3865*x3876))+(((-1.0)*x3857*x3866))+(((-1.0)*sj2*x3868))+(((-0.0718)*x3872))+(((0.0009)*cj2))+((x3853*x3857))+(((-1.0)*x3861*x3875))+(((0.02626)*x3874))+((x3851*x3869))+(((-1.0)*px*x3867))+(((-1.0)*x3851*x3852)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3877=((1.0)*cj5);
IkReal x3878=(cj0*cj5);
CheckValue<IkReal> x3879=IKPowWithIntegerCheck(cj2,-1);
if(!x3879.valid){
continue;
}
if( IKabs(((x3879.value)*((((r02*sj0*sj5))+(((-1.0)*cj6*r01*sj0*x3877))+((r10*sj6*x3878))+((cj6*r11*x3878))+(((-1.0)*cj0*r12*sj5))+(((-1.0)*r00*sj0*sj6*x3877)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r21*x3877))+((r22*sj5))+(((-1.0)*r20*sj6*x3877)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3879.value)*((((r02*sj0*sj5))+(((-1.0)*cj6*r01*sj0*x3877))+((r10*sj6*x3878))+((cj6*r11*x3878))+(((-1.0)*cj0*r12*sj5))+(((-1.0)*r00*sj0*sj6*x3877))))))+IKsqr(((((-1.0)*cj6*r21*x3877))+((r22*sj5))+(((-1.0)*r20*sj6*x3877))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x3879.value)*((((r02*sj0*sj5))+(((-1.0)*cj6*r01*sj0*x3877))+((r10*sj6*x3878))+((cj6*r11*x3878))+(((-1.0)*cj0*r12*sj5))+(((-1.0)*r00*sj0*sj6*x3877))))), ((((-1.0)*cj6*r21*x3877))+((r22*sj5))+(((-1.0)*r20*sj6*x3877))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3880=IKsin(j3);
IkReal x3881=(cj5*cj6);
IkReal x3882=((1.0)*sj5);
IkReal x3883=((1.0)*cj0);
IkReal x3884=(cj0*sj5);
IkReal x3885=(cj5*sj6);
IkReal x3886=(r10*x3885);
IkReal x3887=((1.0)*r11*x3881);
evalcond[0]=(((r21*x3881))+(((-1.0)*r22*x3882))+(IKcos(j3))+((r20*x3885)));
evalcond[1]=((((-1.0)*r02*sj0*x3882))+((r00*sj0*x3885))+((r12*x3884))+((cj2*x3880))+(((-1.0)*x3883*x3886))+(((-1.0)*r11*x3881*x3883))+((r01*sj0*x3881)));
evalcond[2]=((((-1.0)*r01*x3881*x3883))+(((-1.0)*sj0*x3886))+(((-1.0)*sj2*x3880))+((r12*sj0*sj5))+((r02*x3884))+(((-1.0)*sj0*x3887))+(((-1.0)*r00*x3883*x3885)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
j4eval[0]=sj3;
j4eval[1]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x3888=(cj5*cj6);
IkReal x3889=((1.0)*sj0);
IkReal x3890=(r21*sj6);
IkReal x3891=(cj0*sj5);
IkReal x3892=((1.0)*r22);
IkReal x3893=(cj6*r20);
IkReal x3894=(cj5*sj6);
IkReal x3895=((1.0)*cj0);
IkReal x3896=((1.0)*sj5);
IkReal x3897=(x3894*x3895);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x3894))+((r21*x3888))+(((-1.0)*sj5*x3892)));
evalcond[2]=((((-1.0)*x3890))+x3893);
evalcond[3]=((((-1.0)*cj5*x3892))+(((-1.0)*cj6*r21*x3896))+(((-1.0)*r20*sj6*x3896)));
evalcond[4]=((((-1.0)*r11*x3888*x3889))+((r12*sj0*sj5))+(((-1.0)*r01*x3888*x3895))+(((-1.0)*r00*x3897))+(((-1.0)*r10*x3889*x3894))+((r02*x3891)));
evalcond[5]=((((-1.0)*r10*x3897))+((r12*x3891))+(((-1.0)*r02*sj5*x3889))+(((-1.0)*r11*x3888*x3895))+((r01*sj0*x3888))+((r00*sj0*x3894)));
evalcond[6]=((0.0001)+(((-0.02626)*x3890))+(((0.02626)*x3893))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3898=(cj0*sj6);
IkReal x3899=(r01*sj2);
IkReal x3900=(sj0*sj2);
IkReal x3901=((1.0)*cj6);
IkReal x3902=(sj0*sj6);
IkReal x3903=(cj0*sj2);
IkReal x3904=(cj6*r10);
IkReal x3905=(cj2*sj0);
IkReal x3906=(cj2*r01);
IkReal x3907=(cj0*cj2);
IkReal x3908=((1.0)*cj2*r11);
if( IKabs((((r11*sj6*x3900))+((x3902*x3906))+((x3904*x3907))+((x3898*x3899))+(((-1.0)*r00*x3901*x3905))+(((-1.0)*r00*x3901*x3903))+(((-1.0)*r10*x3900*x3901))+(((-1.0)*x3898*x3908)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x3898*x3906))+((x3903*x3904))+(((-1.0)*x3902*x3908))+((x3904*x3905))+((cj6*r00*x3907))+((x3899*x3902))+(((-1.0)*r00*x3900*x3901))+(((-1.0)*r11*sj2*x3898)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*sj6*x3900))+((x3902*x3906))+((x3904*x3907))+((x3898*x3899))+(((-1.0)*r00*x3901*x3905))+(((-1.0)*r00*x3901*x3903))+(((-1.0)*r10*x3900*x3901))+(((-1.0)*x3898*x3908))))+IKsqr(((((-1.0)*x3898*x3906))+((x3903*x3904))+(((-1.0)*x3902*x3908))+((x3904*x3905))+((cj6*r00*x3907))+((x3899*x3902))+(((-1.0)*r00*x3900*x3901))+(((-1.0)*r11*sj2*x3898))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*sj6*x3900))+((x3902*x3906))+((x3904*x3907))+((x3898*x3899))+(((-1.0)*r00*x3901*x3905))+(((-1.0)*r00*x3901*x3903))+(((-1.0)*r10*x3900*x3901))+(((-1.0)*x3898*x3908))), ((((-1.0)*x3898*x3906))+((x3903*x3904))+(((-1.0)*x3902*x3908))+((x3904*x3905))+((cj6*r00*x3907))+((x3899*x3902))+(((-1.0)*r00*x3900*x3901))+(((-1.0)*r11*sj2*x3898))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3909=IKcos(j4);
IkReal x3910=IKsin(j4);
IkReal x3911=(sj0*sj6);
IkReal x3912=((0.02626)*r01);
IkReal x3913=(cj6*sj0);
IkReal x3914=(r11*sj5);
IkReal x3915=(r10*sj5);
IkReal x3916=(cj5*r12);
IkReal x3917=((1.0)*sj0);
IkReal x3918=(cj5*r02);
IkReal x3919=((1.0)*r01);
IkReal x3920=(cj0*sj6);
IkReal x3921=(r00*sj5);
IkReal x3922=((1.0)*cj0);
IkReal x3923=((0.02626)*r00);
IkReal x3924=(cj0*cj6);
IkReal x3925=(sj2*x3909);
IkReal x3926=(cj2*x3910);
IkReal x3927=(sj2*x3910);
IkReal x3928=(r11*x3920);
IkReal x3929=(r10*x3924);
IkReal x3930=((0.0718)*x3909);
IkReal x3931=(cj2*x3909);
IkReal x3932=(x3926+x3925);
evalcond[0]=((((-1.0)*x3911*x3919))+x3928+x3932+((r00*x3913))+(((-1.0)*cj6*r10*x3922)));
evalcond[1]=((((-1.0)*x3927))+(((-1.0)*r10*x3913))+((r11*x3911))+(((-1.0)*cj6*r00*x3922))+x3931+((r01*x3920)));
evalcond[2]=(((x3920*x3921))+((r01*sj5*x3924))+((sj0*x3916))+((x3913*x3914))+x3932+((x3911*x3915))+((cj0*x3918)));
evalcond[3]=((((-1.0)*x3931))+(((-1.0)*x3917*x3918))+((x3914*x3924))+((x3915*x3920))+x3927+(((-1.0)*sj5*x3913*x3919))+((cj0*x3916))+(((-1.0)*x3911*x3921)));
evalcond[4]=((0.1255)+(((-1.0)*py*x3922))+(((-1.0)*x3911*x3912))+((cj2*x3930))+(((0.02626)*x3926))+(((0.02626)*x3925))+(((0.02626)*x3928))+((px*sj0))+(((-0.0718)*x3927))+(((0.21326)*cj2))+(((-0.02626)*x3929))+(((0.0009)*sj2))+((x3913*x3923)));
evalcond[5]=((-0.001)+(((0.02626)*r11*x3911))+(((-1.0)*px*x3922))+(((-1.0)*py*x3917))+((x3912*x3920))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-0.02626)*r10*x3913))+(((0.02626)*x3931))+(((-1.0)*x3923*x3924))+(((-0.0718)*x3925))+(((-0.0718)*x3926))+(((-0.02626)*x3927)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3933=(cj5*cj6);
IkReal x3934=((1.0)*sj0);
IkReal x3935=(r21*sj6);
IkReal x3936=(cj0*sj5);
IkReal x3937=((1.0)*r22);
IkReal x3938=(cj6*r20);
IkReal x3939=(cj5*sj6);
IkReal x3940=((1.0)*cj0);
IkReal x3941=((1.0)*sj5);
IkReal x3942=(x3939*x3940);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x3933))+(((-1.0)*sj5*x3937))+((r20*x3939)));
evalcond[2]=((((-1.0)*x3935))+x3938);
evalcond[3]=((((-1.0)*r20*sj6*x3941))+(((-1.0)*cj5*x3937))+(((-1.0)*cj6*r21*x3941)));
evalcond[4]=((((-1.0)*r01*x3933*x3940))+(((-1.0)*r10*x3934*x3939))+(((-1.0)*r11*x3933*x3934))+((r12*sj0*sj5))+(((-1.0)*r00*x3942))+((r02*x3936)));
evalcond[5]=((((-1.0)*r02*sj5*x3934))+((r01*sj0*x3933))+(((-1.0)*r11*x3933*x3940))+((r00*sj0*x3939))+(((-1.0)*r10*x3942))+((r12*x3936)));
evalcond[6]=((0.0001)+pz+(((0.02626)*x3938))+(((-0.02626)*x3935)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3943=(cj6*r10);
IkReal x3944=(r11*sj0);
IkReal x3945=(r01*sj6);
IkReal x3946=((1.0)*sj0);
IkReal x3947=(cj2*sj6);
IkReal x3948=(cj0*r11);
IkReal x3949=(cj2*sj0);
IkReal x3950=(cj6*r00);
IkReal x3951=(sj0*sj2);
IkReal x3952=((1.0)*cj0*cj2);
IkReal x3953=((1.0)*sj2*sj6);
IkReal x3954=(sj2*x3950);
if( IKabs(((((-1.0)*cj2*x3945*x3946))+((cj0*x3954))+((x3947*x3948))+((x3949*x3950))+(((-1.0)*x3943*x3952))+(((-1.0)*cj0*sj2*x3945))+(((-1.0)*x3944*x3953))+((x3943*x3951)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj0*cj2*x3950))+(((-1.0)*x3948*x3953))+(((-1.0)*x3946*x3954))+((cj0*sj2*x3943))+((x3943*x3949))+(((-1.0)*x3945*x3952))+((x3945*x3951))+(((-1.0)*x3944*x3947)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj2*x3945*x3946))+((cj0*x3954))+((x3947*x3948))+((x3949*x3950))+(((-1.0)*x3943*x3952))+(((-1.0)*cj0*sj2*x3945))+(((-1.0)*x3944*x3953))+((x3943*x3951))))+IKsqr((((cj0*cj2*x3950))+(((-1.0)*x3948*x3953))+(((-1.0)*x3946*x3954))+((cj0*sj2*x3943))+((x3943*x3949))+(((-1.0)*x3945*x3952))+((x3945*x3951))+(((-1.0)*x3944*x3947))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj2*x3945*x3946))+((cj0*x3954))+((x3947*x3948))+((x3949*x3950))+(((-1.0)*x3943*x3952))+(((-1.0)*cj0*sj2*x3945))+(((-1.0)*x3944*x3953))+((x3943*x3951))), (((cj0*cj2*x3950))+(((-1.0)*x3948*x3953))+(((-1.0)*x3946*x3954))+((cj0*sj2*x3943))+((x3943*x3949))+(((-1.0)*x3945*x3952))+((x3945*x3951))+(((-1.0)*x3944*x3947))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3955=IKcos(j4);
IkReal x3956=IKsin(j4);
IkReal x3957=((0.02626)*sj0);
IkReal x3958=(cj6*r10);
IkReal x3959=(r01*sj6);
IkReal x3960=(r11*sj6);
IkReal x3961=(sj0*sj5);
IkReal x3962=(cj6*r11);
IkReal x3963=(r10*sj6);
IkReal x3964=(cj5*r12);
IkReal x3965=((0.02626)*cj0);
IkReal x3966=((1.0)*sj0);
IkReal x3967=(cj5*r02);
IkReal x3968=(cj0*sj5);
IkReal x3969=(r00*sj6);
IkReal x3970=(cj6*r00);
IkReal x3971=((1.0)*cj0);
IkReal x3972=(cj6*r01);
IkReal x3973=(cj2*x3955);
IkReal x3974=(sj2*x3956);
IkReal x3975=((0.02626)*x3956);
IkReal x3976=(cj2*x3956);
IkReal x3977=((0.0718)*x3955);
IkReal x3978=(sj2*x3955);
IkReal x3979=(x3973+x3974);
evalcond[0]=(((cj0*x3959))+(((-1.0)*x3958*x3966))+x3979+(((-1.0)*x3970*x3971))+((sj0*x3960)));
evalcond[1]=((((-1.0)*x3958*x3971))+(((-1.0)*x3959*x3966))+x3978+(((-1.0)*x3976))+((sj0*x3970))+((cj0*x3960)));
evalcond[2]=(((x3961*x3963))+((x3961*x3962))+x3976+((x3968*x3969))+((x3968*x3972))+(((-1.0)*x3978))+((cj0*x3967))+((sj0*x3964)));
evalcond[3]=(((x3962*x3968))+(((-1.0)*x3961*x3969))+(((-1.0)*x3961*x3972))+x3979+(((-1.0)*x3966*x3967))+((x3963*x3968))+((cj0*x3964)));
evalcond[4]=((0.1255)+(((-0.0718)*x3974))+(((-0.0718)*x3973))+(((-1.0)*py*x3971))+((x3957*x3970))+(((-1.0)*x3957*x3959))+((x3960*x3965))+(((-1.0)*x3958*x3965))+(((0.01834)*cj2))+((px*sj0))+(((0.0009)*sj2))+(((-1.0)*cj2*x3975))+(((0.02626)*x3978)));
evalcond[5]=((-0.001)+((sj2*x3977))+(((-0.0718)*x3976))+(((-0.01834)*sj2))+((x3957*x3960))+(((-1.0)*py*x3966))+(((-1.0)*x3965*x3970))+(((-1.0)*x3957*x3958))+(((0.0009)*cj2))+(((-1.0)*px*x3971))+((x3959*x3965))+(((0.02626)*x3974))+(((0.02626)*x3973)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3980=(cj0*sj5);
IkReal x3981=(cj5*cj6);
IkReal x3982=((1.0)*sj5);
IkReal x3983=((1.0)*cj0);
IkReal x3984=((1.0)*sj0);
IkReal x3985=(cj5*sj6);
IkReal x3986=(r10*x3985);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=(((r21*x3981))+cj3+(((-1.0)*r22*x3982))+((r20*x3985)));
evalcond[2]=((((-1.0)*r01*x3981*x3983))+(((-1.0)*r00*x3983*x3985))+(((-1.0)*r11*x3981*x3984))+(((-1.0)*x3984*x3986))+((r12*sj0*sj5))+((r02*x3980)));
evalcond[3]=((((-1.0)*r02*sj0*x3982))+sj3+(((-1.0)*r11*x3981*x3983))+((r00*sj0*x3985))+(((-1.0)*x3983*x3986))+((r01*sj0*x3981))+((r12*x3980)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x3987=(cj5*cj6);
IkReal x3988=(cj0*sj6);
IkReal x3989=(r01*sj0);
IkReal x3990=((1.0)*sj0);
IkReal x3991=((1.0)*cj5);
IkReal x3992=(cj0*r12);
IkReal x3993=(r02*sj5);
IkReal x3994=((1.0)*sj5);
IkReal x3995=(cj5*sj6);
IkReal x3996=((1.0)*cj0);
IkReal x3997=(cj0*cj6*r10);
IkReal x3998=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x3987))+(((-1.0)*r22*x3994))+((r20*x3995)));
evalcond[2]=(((r11*x3988))+(((-1.0)*cj6*r10*x3996))+(((-1.0)*sj6*x3989))+x3998);
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r01*x3987*x3996))+(((-1.0)*r00*x3988*x3991))+(((-1.0)*r11*x3987*x3990))+(((-1.0)*r10*x3990*x3995))+((cj0*x3993)));
evalcond[4]=((1.0)+((sj5*x3992))+(((-1.0)*r10*x3988*x3991))+(((-1.0)*x3990*x3993))+((x3987*x3989))+(((-1.0)*r11*x3987*x3996))+((r00*sj0*x3995)));
evalcond[5]=((((-1.0)*cj5*r02*x3990))+(((-1.0)*r00*sj5*sj6*x3990))+((cj5*x3992))+((cj0*cj6*r11*sj5))+(((-1.0)*cj6*x3989*x3994))+((r10*sj5*x3988)));
evalcond[6]=((0.2413)+(((0.02626)*r11*x3988))+(((-1.0)*py*x3996))+(((0.02626)*x3998))+(((-0.02626)*sj6*x3989))+(((-0.02626)*x3997))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3999=IKcos(j4);
IkReal x4000=IKsin(j4);
IkReal x4001=(r11*sj0);
IkReal x4002=(cj6*sj5);
IkReal x4003=(r10*sj0);
IkReal x4004=(sj5*sj6);
IkReal x4005=((0.02626)*sj6);
IkReal x4006=(cj0*r01);
IkReal x4007=((0.02626)*cj6);
IkReal x4008=((1.0)*cj6);
IkReal x4009=(cj0*r00);
IkReal x4010=((1.0)*r21);
evalcond[0]=((((-1.0)*x4000))+(((-1.0)*sj6*x4010))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x4004))+(((-1.0)*x4002*x4010))+x3999+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.09736)+(((-1.0)*r21*x4005))+pz+(((-0.02626)*x4000))+(((-0.0718)*x3999))+((r20*x4007)));
evalcond[3]=((((-1.0)*x4008*x4009))+x3999+(((-1.0)*x4003*x4008))+((sj6*x4001))+((sj6*x4006)));
evalcond[4]=(((x4001*x4002))+((cj5*r12*sj0))+((cj0*cj5*r02))+((x4004*x4009))+x4000+((x4003*x4004))+((x4002*x4006)));
evalcond[5]=((-0.0001)+((x4001*x4005))+(((-0.0718)*x4000))+(((0.02626)*x3999))+((x4005*x4006))+(((-1.0)*x4007*x4009))+(((-1.0)*py*sj0))+(((-1.0)*x4003*x4007))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4011=(cj5*cj6);
IkReal x4012=(cj0*sj6);
IkReal x4013=(r01*sj0);
IkReal x4014=((1.0)*sj0);
IkReal x4015=((1.0)*cj5);
IkReal x4016=(cj0*r12);
IkReal x4017=(r02*sj5);
IkReal x4018=((1.0)*sj5);
IkReal x4019=(cj5*sj6);
IkReal x4020=((1.0)*cj0);
IkReal x4021=(cj0*cj6*r10);
IkReal x4022=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x4018))+((r20*x4019))+((r21*x4011)));
evalcond[2]=((((-1.0)*cj6*r10*x4020))+x4022+((r11*x4012))+(((-1.0)*sj6*x4013)));
evalcond[3]=(((cj0*x4017))+(((-1.0)*r10*x4014*x4019))+(((-1.0)*r01*x4011*x4020))+((r12*sj0*sj5))+(((-1.0)*r11*x4011*x4014))+(((-1.0)*r00*x4012*x4015)));
evalcond[4]=((-1.0)+(((-1.0)*r11*x4011*x4020))+((x4011*x4013))+(((-1.0)*x4014*x4017))+((r00*sj0*x4019))+((sj5*x4016))+(((-1.0)*r10*x4012*x4015)));
evalcond[5]=(((cj5*x4016))+(((-1.0)*cj6*x4013*x4018))+(((-1.0)*r00*sj5*sj6*x4014))+((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x4014))+((r10*sj5*x4012)));
evalcond[6]=((0.2413)+(((0.02626)*r11*x4012))+(((-1.0)*py*x4020))+(((0.02626)*x4022))+((px*sj0))+(((-0.02626)*sj6*x4013))+(((-0.02626)*x4021)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4023=IKcos(j4);
IkReal x4024=IKsin(j4);
IkReal x4025=(r11*sj0);
IkReal x4026=(cj6*sj5);
IkReal x4027=(r10*sj0);
IkReal x4028=(sj5*sj6);
IkReal x4029=((0.02626)*sj6);
IkReal x4030=(cj0*r01);
IkReal x4031=((0.02626)*cj6);
IkReal x4032=((1.0)*cj6);
IkReal x4033=(cj0*r00);
IkReal x4034=((1.0)*r21);
evalcond[0]=((((-1.0)*sj6*x4034))+x4024+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x4028))+(((-1.0)*x4023))+(((-1.0)*x4026*x4034))+(((-1.0)*cj5*r22)));
evalcond[2]=((0.09756)+(((0.0718)*x4023))+((r20*x4031))+(((0.02626)*x4024))+pz+(((-1.0)*r21*x4029)));
evalcond[3]=((((-1.0)*x4027*x4032))+x4023+((sj6*x4025))+((sj6*x4030))+(((-1.0)*x4032*x4033)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x4028*x4033))+((x4026*x4030))+x4024+((x4025*x4026))+((x4027*x4028)));
evalcond[5]=((-0.0001)+(((-1.0)*x4031*x4033))+((x4029*x4030))+(((-1.0)*x4027*x4031))+(((0.02626)*x4023))+((x4025*x4029))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px))+(((-0.0718)*x4024)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4035=(cj5*cj6);
IkReal x4036=((1.0)*sj0);
IkReal x4037=(r21*sj6);
IkReal x4038=(cj0*sj5);
IkReal x4039=((1.0)*r22);
IkReal x4040=(cj6*r20);
IkReal x4041=(cj5*sj6);
IkReal x4042=((1.0)*cj0);
IkReal x4043=((1.0)*sj5);
IkReal x4044=(x4041*x4042);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x4035))+((r20*x4041))+(((-1.0)*sj5*x4039)));
evalcond[2]=(x4040+(((-1.0)*x4037)));
evalcond[3]=((((-1.0)*cj5*x4039))+(((-1.0)*cj6*r21*x4043))+(((-1.0)*r20*sj6*x4043)));
evalcond[4]=((((-1.0)*r10*x4036*x4041))+((r02*x4038))+((r12*sj0*sj5))+(((-1.0)*r00*x4044))+(((-1.0)*r01*x4035*x4042))+(((-1.0)*r11*x4035*x4036)));
evalcond[5]=(((r00*sj0*x4041))+(((-1.0)*r11*x4035*x4042))+(((-1.0)*r10*x4044))+(((-1.0)*r02*sj5*x4036))+((r01*sj0*x4035))+((r12*x4038)));
evalcond[6]=((0.0001)+(((-0.02626)*x4037))+pz+(((0.02626)*x4040)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4045=(cj0*cj6);
IkReal x4046=(sj0*sj6);
IkReal x4047=((1.0)*r11);
IkReal x4048=(cj6*sj0);
IkReal x4049=(cj0*sj6);
if( IKabs(((((-1.0)*r00*x4048))+(((-1.0)*x4047*x4049))+((r10*x4045))+((r01*x4046)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x4049))+(((-1.0)*x4046*x4047))+((r10*x4048))+((r00*x4045)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x4048))+(((-1.0)*x4047*x4049))+((r10*x4045))+((r01*x4046))))+IKsqr(((((-1.0)*r01*x4049))+(((-1.0)*x4046*x4047))+((r10*x4048))+((r00*x4045))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r00*x4048))+(((-1.0)*x4047*x4049))+((r10*x4045))+((r01*x4046))), ((((-1.0)*r01*x4049))+(((-1.0)*x4046*x4047))+((r10*x4048))+((r00*x4045))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4050=IKsin(j4);
IkReal x4051=IKcos(j4);
IkReal x4052=(cj6*sj0);
IkReal x4053=((0.02626)*r10);
IkReal x4054=(r11*sj6);
IkReal x4055=(r11*sj5);
IkReal x4056=(sj0*sj6);
IkReal x4057=(r10*sj5);
IkReal x4058=(cj0*cj6);
IkReal x4059=((0.02626)*r01);
IkReal x4060=(cj5*r12);
IkReal x4061=((1.0)*sj0);
IkReal x4062=(cj5*r02);
IkReal x4063=(cj0*sj6);
IkReal x4064=((1.0)*r10);
IkReal x4065=((1.0)*r01);
IkReal x4066=(r00*sj5);
IkReal x4067=((1.0)*cj0);
IkReal x4068=((0.02626)*r00);
evalcond[0]=(((sj0*x4054))+(((-1.0)*r00*x4058))+(((-1.0)*x4052*x4064))+x4051+((r01*x4063)));
evalcond[1]=(x4050+((cj0*x4054))+(((-1.0)*x4058*x4064))+((r00*x4052))+(((-1.0)*x4056*x4065)));
evalcond[2]=(((sj0*x4060))+((r01*sj5*x4058))+((x4063*x4066))+x4050+((cj0*x4062))+((x4056*x4057))+((x4052*x4055)));
evalcond[3]=((((-1.0)*x4061*x4062))+(((-1.0)*sj5*x4052*x4065))+((cj0*x4060))+((x4055*x4058))+(((-1.0)*x4051))+((x4057*x4063))+(((-1.0)*x4056*x4066)));
evalcond[4]=((0.33876)+(((-1.0)*x4053*x4058))+(((0.0718)*x4051))+((px*sj0))+(((0.02626)*x4050))+(((-1.0)*py*x4067))+((x4052*x4068))+(((0.02626)*cj0*x4054))+(((-1.0)*x4056*x4059)));
evalcond[5]=((-0.0001)+((x4059*x4063))+(((-1.0)*x4052*x4053))+(((0.02626)*sj0*x4054))+(((-0.0718)*x4050))+(((-1.0)*px*x4067))+(((-1.0)*x4058*x4068))+(((0.02626)*x4051))+(((-1.0)*py*x4061)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4069=(cj5*cj6);
IkReal x4070=((1.0)*sj0);
IkReal x4071=(r21*sj6);
IkReal x4072=(cj0*sj5);
IkReal x4073=((1.0)*r22);
IkReal x4074=(cj6*r20);
IkReal x4075=(cj5*sj6);
IkReal x4076=((1.0)*cj0);
IkReal x4077=((1.0)*sj5);
IkReal x4078=(x4075*x4076);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x4075))+((r21*x4069))+(((-1.0)*sj5*x4073)));
evalcond[2]=((((-1.0)*x4071))+x4074);
evalcond[3]=((((-1.0)*cj6*r21*x4077))+(((-1.0)*r20*sj6*x4077))+(((-1.0)*cj5*x4073)));
evalcond[4]=((((-1.0)*r00*x4078))+(((-1.0)*r01*x4069*x4076))+(((-1.0)*r10*x4070*x4075))+((r12*sj0*sj5))+((r02*x4072))+(((-1.0)*r11*x4069*x4070)));
evalcond[5]=((((-1.0)*r10*x4078))+((r12*x4072))+(((-1.0)*r02*sj5*x4070))+((r01*sj0*x4069))+((r00*sj0*x4075))+(((-1.0)*r11*x4069*x4076)));
evalcond[6]=((0.0001)+(((0.02626)*x4074))+pz+(((-0.02626)*x4071)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4079=(cj0*cj6);
IkReal x4080=(cj6*sj0);
IkReal x4081=(cj0*sj6);
IkReal x4082=((1.0)*sj0*sj6);
if( IKabs((((r00*x4080))+(((-1.0)*r01*x4082))+((r11*x4081))+(((-1.0)*r10*x4079)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x4082))+((r10*x4080))+((r00*x4079))+(((-1.0)*r01*x4081)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x4080))+(((-1.0)*r01*x4082))+((r11*x4081))+(((-1.0)*r10*x4079))))+IKsqr(((((-1.0)*r11*x4082))+((r10*x4080))+((r00*x4079))+(((-1.0)*r01*x4081))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r00*x4080))+(((-1.0)*r01*x4082))+((r11*x4081))+(((-1.0)*r10*x4079))), ((((-1.0)*r11*x4082))+((r10*x4080))+((r00*x4079))+(((-1.0)*r01*x4081))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4083=IKsin(j4);
IkReal x4084=IKcos(j4);
IkReal x4085=(cj6*sj0);
IkReal x4086=((0.02626)*r10);
IkReal x4087=(r11*sj6);
IkReal x4088=(r11*sj5);
IkReal x4089=(sj0*sj6);
IkReal x4090=(r10*sj5);
IkReal x4091=((0.02626)*r01);
IkReal x4092=(cj5*r12);
IkReal x4093=(cj0*cj6);
IkReal x4094=((1.0)*sj0);
IkReal x4095=(cj5*r02);
IkReal x4096=(cj0*sj6);
IkReal x4097=((1.0)*r10);
IkReal x4098=((1.0)*r01);
IkReal x4099=(r00*sj5);
IkReal x4100=((1.0)*cj0);
IkReal x4101=((0.02626)*r00);
evalcond[0]=(((r01*x4096))+x4084+(((-1.0)*x4085*x4097))+(((-1.0)*r00*x4093))+((sj0*x4087)));
evalcond[1]=((((-1.0)*x4089*x4098))+((r00*x4085))+((cj0*x4087))+(((-1.0)*x4093*x4097))+(((-1.0)*x4083)));
evalcond[2]=(((r01*sj5*x4093))+((x4085*x4088))+((cj0*x4095))+x4083+((x4089*x4090))+((x4096*x4099))+((sj0*x4092)));
evalcond[3]=(((x4088*x4093))+(((-1.0)*sj5*x4085*x4098))+((cj0*x4092))+x4084+(((-1.0)*x4089*x4099))+((x4090*x4096))+(((-1.0)*x4094*x4095)));
evalcond[4]=((0.14384)+(((-1.0)*x4089*x4091))+(((-0.0718)*x4084))+(((-1.0)*py*x4100))+(((-1.0)*x4086*x4093))+((x4085*x4101))+((px*sj0))+(((0.02626)*cj0*x4087))+(((-0.02626)*x4083)));
evalcond[5]=((-0.0001)+(((-0.0718)*x4083))+(((-1.0)*py*x4094))+(((-1.0)*px*x4100))+(((0.02626)*x4084))+(((-1.0)*x4085*x4086))+((x4091*x4096))+(((0.02626)*sj0*x4087))+(((-1.0)*x4093*x4101)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x4102=IKPowWithIntegerCheck(cj3,-1);
if(!x4102.valid){
continue;
}
CheckValue<IkReal> x4103=IKPowWithIntegerCheck(sj3,-1);
if(!x4103.valid){
continue;
}
if( IKabs(((x4102.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4103.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4102.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))+IKsqr(((x4103.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x4102.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))), ((x4103.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4104=IKcos(j4);
IkReal x4105=IKsin(j4);
IkReal x4106=(cj6*sj0);
IkReal x4107=((0.02626)*r10);
IkReal x4108=(sj0*sj6);
IkReal x4109=(cj5*r12);
IkReal x4110=(r11*sj5);
IkReal x4111=(r10*sj5);
IkReal x4112=(cj0*cj6);
IkReal x4113=((0.02626)*r01);
IkReal x4114=(cj0*sj6);
IkReal x4115=(r21*sj6);
IkReal x4116=((1.0)*cj5);
IkReal x4117=(cj6*r20);
IkReal x4118=((1.0)*r10);
IkReal x4119=((1.0)*r01);
IkReal x4120=(r00*sj5);
IkReal x4121=((1.0)*py);
IkReal x4122=((1.0)*sj5);
IkReal x4123=((0.02626)*r00);
IkReal x4124=((0.02626)*r11);
IkReal x4125=(sj3*x4105);
IkReal x4126=(sj3*x4104);
IkReal x4127=(cj3*x4105);
IkReal x4128=(cj3*x4104);
evalcond[0]=(x4117+(((-1.0)*x4115))+(((-1.0)*x4125)));
evalcond[1]=((((-1.0)*cj6*r21*x4122))+(((-1.0)*r22*x4116))+(((-1.0)*r20*sj6*x4122))+x4126);
evalcond[2]=(x4104+((r11*x4108))+(((-1.0)*r00*x4112))+((r01*x4114))+(((-1.0)*x4106*x4118)));
evalcond[3]=((((-1.0)*x4112*x4118))+x4127+(((-1.0)*x4108*x4119))+((r11*x4114))+((r00*x4106)));
evalcond[4]=((0.0001)+(((-0.0718)*x4126))+pz+(((-0.09746)*sj3))+(((0.02626)*x4117))+(((-0.02626)*x4115))+(((-0.02626)*x4125)));
evalcond[5]=(((x4108*x4111))+((cj0*cj5*r02))+((x4106*x4110))+((r01*sj5*x4112))+((x4114*x4120))+x4105+((sj0*x4109)));
evalcond[6]=((((-1.0)*sj5*x4106*x4119))+((cj0*x4109))+(((-1.0)*x4108*x4120))+(((-1.0)*r02*sj0*x4116))+((x4111*x4114))+((x4110*x4112))+(((-1.0)*x4128)));
evalcond[7]=((-0.0001)+((x4108*x4124))+(((-0.0718)*x4105))+(((0.02626)*x4104))+(((-1.0)*sj0*x4121))+(((-1.0)*x4112*x4123))+(((-1.0)*x4106*x4107))+((x4113*x4114))+(((-1.0)*cj0*px)));
evalcond[8]=((0.2413)+((x4106*x4123))+((x4114*x4124))+(((-1.0)*cj0*x4121))+((px*sj0))+(((0.09746)*cj3))+(((-1.0)*x4108*x4113))+(((0.02626)*x4127))+(((-1.0)*x4107*x4112))+(((0.0718)*x4128)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4129=((1.0)*sj6);
CheckValue<IkReal> x4130=IKPowWithIntegerCheck(sj3,-1);
if(!x4130.valid){
continue;
}
if( IKabs(((x4130.value)*(((((-1.0)*r21*x4129))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x4129))+(((-1.0)*cj0*r01*x4129))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4130.value)*(((((-1.0)*r21*x4129))+((cj6*r20))))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x4129))+(((-1.0)*cj0*r01*x4129))+((cj0*cj6*r00))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x4130.value)*(((((-1.0)*r21*x4129))+((cj6*r20))))), (((cj6*r10*sj0))+(((-1.0)*r11*sj0*x4129))+(((-1.0)*cj0*r01*x4129))+((cj0*cj6*r00))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4131=IKcos(j4);
IkReal x4132=IKsin(j4);
IkReal x4133=(cj6*sj0);
IkReal x4134=((0.02626)*r10);
IkReal x4135=(sj0*sj6);
IkReal x4136=(cj5*r12);
IkReal x4137=(r11*sj5);
IkReal x4138=(r10*sj5);
IkReal x4139=(cj0*cj6);
IkReal x4140=((0.02626)*r01);
IkReal x4141=(cj0*sj6);
IkReal x4142=(r21*sj6);
IkReal x4143=((1.0)*cj5);
IkReal x4144=(cj6*r20);
IkReal x4145=((1.0)*r10);
IkReal x4146=((1.0)*r01);
IkReal x4147=(r00*sj5);
IkReal x4148=((1.0)*py);
IkReal x4149=((1.0)*sj5);
IkReal x4150=((0.02626)*r00);
IkReal x4151=((0.02626)*r11);
IkReal x4152=(sj3*x4132);
IkReal x4153=(sj3*x4131);
IkReal x4154=(cj3*x4132);
IkReal x4155=(cj3*x4131);
evalcond[0]=((((-1.0)*x4152))+(((-1.0)*x4142))+x4144);
evalcond[1]=((((-1.0)*r20*sj6*x4149))+(((-1.0)*cj6*r21*x4149))+x4153+(((-1.0)*r22*x4143)));
evalcond[2]=((((-1.0)*r00*x4139))+((r01*x4141))+((r11*x4135))+(((-1.0)*x4133*x4145))+x4131);
evalcond[3]=(((r00*x4133))+((r11*x4141))+(((-1.0)*x4135*x4146))+(((-1.0)*x4139*x4145))+x4154);
evalcond[4]=((0.0001)+(((-0.02626)*x4142))+(((-0.02626)*x4152))+(((0.02626)*x4144))+pz+(((-0.09746)*sj3))+(((-0.0718)*x4153)));
evalcond[5]=(((cj0*cj5*r02))+((x4141*x4147))+((sj0*x4136))+x4132+((x4135*x4138))+((x4133*x4137))+((r01*sj5*x4139)));
evalcond[6]=((((-1.0)*r02*sj0*x4143))+(((-1.0)*x4135*x4147))+(((-1.0)*x4155))+(((-1.0)*sj5*x4133*x4146))+((x4138*x4141))+((cj0*x4136))+((x4137*x4139)));
evalcond[7]=((-0.0001)+(((0.02626)*x4131))+(((-1.0)*sj0*x4148))+(((-1.0)*x4133*x4134))+(((-1.0)*x4139*x4150))+(((-0.0718)*x4132))+((x4135*x4151))+(((-1.0)*cj0*px))+((x4140*x4141)));
evalcond[8]=((0.2413)+(((-1.0)*cj0*x4148))+(((-1.0)*x4134*x4139))+((x4141*x4151))+(((0.02626)*x4154))+(((0.0718)*x4155))+(((-1.0)*x4135*x4140))+((x4133*x4150))+((px*sj0))+(((0.09746)*cj3)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x4156=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x4156.valid){
continue;
}
CheckValue<IkReal> x4157 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x4157.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4156.value)))+(x4157.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4158=IKcos(j4);
IkReal x4159=IKsin(j4);
IkReal x4160=(cj6*sj0);
IkReal x4161=((0.02626)*r10);
IkReal x4162=(sj0*sj6);
IkReal x4163=(cj5*r12);
IkReal x4164=(r11*sj5);
IkReal x4165=(r10*sj5);
IkReal x4166=(cj0*cj6);
IkReal x4167=((0.02626)*r01);
IkReal x4168=(cj0*sj6);
IkReal x4169=(r21*sj6);
IkReal x4170=((1.0)*cj5);
IkReal x4171=(cj6*r20);
IkReal x4172=((1.0)*r10);
IkReal x4173=((1.0)*r01);
IkReal x4174=(r00*sj5);
IkReal x4175=((1.0)*py);
IkReal x4176=((1.0)*sj5);
IkReal x4177=((0.02626)*r00);
IkReal x4178=((0.02626)*r11);
IkReal x4179=(sj3*x4159);
IkReal x4180=(sj3*x4158);
IkReal x4181=(cj3*x4159);
IkReal x4182=(cj3*x4158);
evalcond[0]=((((-1.0)*x4169))+(((-1.0)*x4179))+x4171);
evalcond[1]=((((-1.0)*cj6*r21*x4176))+x4180+(((-1.0)*r22*x4170))+(((-1.0)*r20*sj6*x4176)));
evalcond[2]=(((r01*x4168))+(((-1.0)*x4160*x4172))+x4158+((r11*x4162))+(((-1.0)*r00*x4166)));
evalcond[3]=(((r00*x4160))+(((-1.0)*x4162*x4173))+(((-1.0)*x4166*x4172))+x4181+((r11*x4168)));
evalcond[4]=((0.0001)+(((-0.02626)*x4169))+(((-0.02626)*x4179))+pz+(((-0.0718)*x4180))+(((0.02626)*x4171))+(((-0.09746)*sj3)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x4166))+((x4160*x4164))+x4159+((sj0*x4163))+((x4162*x4165))+((x4168*x4174)));
evalcond[6]=(((x4165*x4168))+(((-1.0)*r02*sj0*x4170))+(((-1.0)*x4182))+((cj0*x4163))+(((-1.0)*sj5*x4160*x4173))+(((-1.0)*x4162*x4174))+((x4164*x4166)));
evalcond[7]=((-0.0001)+((x4167*x4168))+(((-1.0)*x4160*x4161))+(((-1.0)*sj0*x4175))+((x4162*x4178))+(((0.02626)*x4158))+(((-1.0)*x4166*x4177))+(((-0.0718)*x4159))+(((-1.0)*cj0*px)));
evalcond[8]=((0.2413)+(((0.0718)*x4182))+((x4160*x4177))+(((-1.0)*x4161*x4166))+(((-1.0)*x4162*x4167))+(((-1.0)*cj0*x4175))+((px*sj0))+(((0.09746)*cj3))+(((0.02626)*x4181))+((x4168*x4178)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4183=(cj0*sj5);
IkReal x4184=(cj5*cj6);
IkReal x4185=((1.0)*sj5);
IkReal x4186=((1.0)*cj0);
IkReal x4187=((1.0)*sj0);
IkReal x4188=(cj5*sj6);
IkReal x4189=(r10*x4188);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=(((r20*x4188))+cj3+((r21*x4184))+(((-1.0)*r22*x4185)));
evalcond[2]=(((r02*x4183))+(((-1.0)*x4187*x4189))+((r12*sj0*sj5))+(((-1.0)*r00*x4186*x4188))+(((-1.0)*r11*x4184*x4187))+(((-1.0)*r01*x4184*x4186)));
evalcond[3]=(((r01*sj0*x4184))+((r12*x4183))+(((-1.0)*sj3))+(((-1.0)*r02*sj0*x4185))+(((-1.0)*x4186*x4189))+(((-1.0)*r11*x4184*x4186))+((r00*sj0*x4188)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=-1.0;
cj1=0;
j1=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x4190=(cj5*cj6);
IkReal x4191=((1.0)*sj0);
IkReal x4192=(r21*sj6);
IkReal x4193=(cj0*sj5);
IkReal x4194=((1.0)*r22);
IkReal x4195=(cj6*r20);
IkReal x4196=(cj5*sj6);
IkReal x4197=((1.0)*cj0);
IkReal x4198=((1.0)*sj5);
IkReal x4199=(x4196*x4197);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x4196))+((r21*x4190))+(((-1.0)*sj5*x4194)));
evalcond[2]=((((-1.0)*x4192))+x4195);
evalcond[3]=((((-1.0)*cj6*r21*x4198))+(((-1.0)*r20*sj6*x4198))+(((-1.0)*cj5*x4194)));
evalcond[4]=((((-1.0)*r00*x4199))+((r02*x4193))+(((-1.0)*r11*x4190*x4191))+((r12*sj0*sj5))+(((-1.0)*r10*x4191*x4196))+(((-1.0)*r01*x4190*x4197)));
evalcond[5]=(((r12*x4193))+(((-1.0)*r11*x4190*x4197))+(((-1.0)*r02*sj5*x4191))+(((-1.0)*r10*x4199))+((r00*sj0*x4196))+((r01*sj0*x4190)));
evalcond[6]=((0.0001)+(((-0.02626)*x4192))+pz+(((0.02626)*x4195)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4200=(sj0*sj6);
IkReal x4201=(cj0*sj6);
IkReal x4202=(cj6*r00);
IkReal x4203=((1.0)*cj6*r10);
if( IKabs((((r11*x4201))+(((-1.0)*r01*x4200))+((sj0*x4202))+(((-1.0)*cj0*x4203)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x4200))+(((-1.0)*cj0*x4202))+((r01*x4201))+(((-1.0)*sj0*x4203)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x4201))+(((-1.0)*r01*x4200))+((sj0*x4202))+(((-1.0)*cj0*x4203))))+IKsqr((((r11*x4200))+(((-1.0)*cj0*x4202))+((r01*x4201))+(((-1.0)*sj0*x4203))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x4201))+(((-1.0)*r01*x4200))+((sj0*x4202))+(((-1.0)*cj0*x4203))), (((r11*x4200))+(((-1.0)*cj0*x4202))+((r01*x4201))+(((-1.0)*sj0*x4203))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4204=IKcos(j4);
IkReal x4205=IKsin(j4);
IkReal x4206=(cj6*sj0);
IkReal x4207=((0.02626)*r10);
IkReal x4208=(r11*sj6);
IkReal x4209=(r11*sj5);
IkReal x4210=(sj0*sj6);
IkReal x4211=(r10*sj5);
IkReal x4212=((0.02626)*r01);
IkReal x4213=(cj5*r12);
IkReal x4214=(cj0*cj6);
IkReal x4215=((1.0)*sj0);
IkReal x4216=(cj5*r02);
IkReal x4217=(cj0*sj6);
IkReal x4218=((1.0)*r10);
IkReal x4219=((1.0)*r01);
IkReal x4220=(r00*sj5);
IkReal x4221=((1.0)*cj0);
IkReal x4222=((0.02626)*r00);
IkReal x4223=((1.0)*x4205);
evalcond[0]=((((-1.0)*r00*x4214))+((sj0*x4208))+(((-1.0)*x4206*x4218))+(((-1.0)*x4204))+((r01*x4217)));
evalcond[1]=((((-1.0)*x4223))+((cj0*x4208))+(((-1.0)*x4210*x4219))+((r00*x4206))+(((-1.0)*x4214*x4218)));
evalcond[2]=((((-1.0)*x4223))+((r01*sj5*x4214))+((x4217*x4220))+((x4210*x4211))+((cj0*x4216))+((sj0*x4213))+((x4206*x4209)));
evalcond[3]=((((-1.0)*sj5*x4206*x4219))+(((-1.0)*x4210*x4220))+((x4209*x4214))+((cj0*x4213))+x4204+(((-1.0)*x4215*x4216))+((x4211*x4217)));
evalcond[4]=((-0.08776)+(((-1.0)*x4210*x4212))+(((0.02626)*cj0*x4208))+(((-1.0)*x4207*x4214))+(((-0.02626)*x4205))+(((-1.0)*py*x4221))+(((-0.0718)*x4204))+((px*sj0))+((x4206*x4222)));
evalcond[5]=((-0.0019)+(((-1.0)*px*x4221))+(((-1.0)*x4206*x4207))+(((0.0718)*x4205))+(((-1.0)*x4214*x4222))+(((-0.02626)*x4204))+((x4212*x4217))+(((-1.0)*py*x4215))+(((0.02626)*sj0*x4208)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4224=(cj5*cj6);
IkReal x4225=((1.0)*sj0);
IkReal x4226=(r21*sj6);
IkReal x4227=(cj0*sj5);
IkReal x4228=((1.0)*r22);
IkReal x4229=(cj6*r20);
IkReal x4230=(cj5*sj6);
IkReal x4231=((1.0)*cj0);
IkReal x4232=((1.0)*sj5);
IkReal x4233=(x4230*x4231);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x4228))+((r21*x4224))+((r20*x4230)));
evalcond[2]=((((-1.0)*x4226))+x4229);
evalcond[3]=((((-1.0)*r20*sj6*x4232))+(((-1.0)*cj6*r21*x4232))+(((-1.0)*cj5*x4228)));
evalcond[4]=(((r12*sj0*sj5))+((r02*x4227))+(((-1.0)*r01*x4224*x4231))+(((-1.0)*r10*x4225*x4230))+(((-1.0)*r00*x4233))+(((-1.0)*r11*x4224*x4225)));
evalcond[5]=(((r00*sj0*x4230))+(((-1.0)*r10*x4233))+(((-1.0)*r02*sj5*x4225))+(((-1.0)*r11*x4224*x4231))+((r01*sj0*x4224))+((r12*x4227)));
evalcond[6]=((0.0001)+(((0.02626)*x4229))+pz+(((-0.02626)*x4226)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4234=(sj0*sj6);
IkReal x4235=(cj6*r10);
IkReal x4236=((1.0)*sj0);
IkReal x4237=(cj6*r00);
IkReal x4238=(cj0*sj6);
if( IKabs((((r01*x4234))+(((-1.0)*r11*x4238))+(((-1.0)*x4236*x4237))+((cj0*x4235)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x4238))+(((-1.0)*cj0*x4237))+(((-1.0)*x4235*x4236))+((r11*x4234)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x4234))+(((-1.0)*r11*x4238))+(((-1.0)*x4236*x4237))+((cj0*x4235))))+IKsqr((((r01*x4238))+(((-1.0)*cj0*x4237))+(((-1.0)*x4235*x4236))+((r11*x4234))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x4234))+(((-1.0)*r11*x4238))+(((-1.0)*x4236*x4237))+((cj0*x4235))), (((r01*x4238))+(((-1.0)*cj0*x4237))+(((-1.0)*x4235*x4236))+((r11*x4234))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4239=IKsin(j4);
IkReal x4240=IKcos(j4);
IkReal x4241=(cj6*sj0);
IkReal x4242=((0.02626)*r10);
IkReal x4243=(r11*sj6);
IkReal x4244=(r11*sj5);
IkReal x4245=(sj0*sj6);
IkReal x4246=(r10*sj5);
IkReal x4247=(cj0*cj6);
IkReal x4248=((0.02626)*r01);
IkReal x4249=(cj5*r12);
IkReal x4250=((1.0)*sj0);
IkReal x4251=(cj5*r02);
IkReal x4252=(cj0*sj6);
IkReal x4253=((1.0)*r10);
IkReal x4254=((1.0)*r01);
IkReal x4255=(r00*sj5);
IkReal x4256=((1.0)*cj0);
IkReal x4257=((0.02626)*r00);
IkReal x4258=((1.0)*x4240);
evalcond[0]=(((r00*x4241))+(((-1.0)*x4245*x4254))+(((-1.0)*x4247*x4253))+x4239+((cj0*x4243)));
evalcond[1]=(((sj0*x4243))+(((-1.0)*x4241*x4253))+((r01*x4252))+(((-1.0)*x4258))+(((-1.0)*r00*x4247)));
evalcond[2]=(((cj0*x4251))+((x4241*x4244))+(((-1.0)*x4239))+((sj0*x4249))+((x4252*x4255))+((x4245*x4246))+((r01*sj5*x4247)));
evalcond[3]=((((-1.0)*sj5*x4241*x4254))+(((-1.0)*x4245*x4255))+(((-1.0)*x4258))+((x4246*x4252))+((x4244*x4247))+((cj0*x4249))+(((-1.0)*x4250*x4251)));
evalcond[4]=((0.10716)+(((-1.0)*py*x4256))+(((0.02626)*cj0*x4243))+(((0.0718)*x4240))+(((0.02626)*x4239))+((x4241*x4257))+((px*sj0))+(((-1.0)*x4245*x4248))+(((-1.0)*x4242*x4247)));
evalcond[5]=((-0.0019)+(((-1.0)*x4241*x4242))+(((-1.0)*py*x4250))+(((-1.0)*px*x4256))+(((0.02626)*sj0*x4243))+(((-0.02626)*x4240))+(((-1.0)*x4247*x4257))+((x4248*x4252))+(((0.0718)*x4239)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4259=((1.0)*cj6);
CheckValue<IkReal> x4260=IKPowWithIntegerCheck(sj3,-1);
if(!x4260.valid){
continue;
}
if( IKabs(((x4260.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x4259))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x4259)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4260.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x4259))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x4259))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x4260.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))), (((r11*sj0*sj6))+(((-1.0)*r10*sj0*x4259))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x4259))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4261=IKcos(j4);
IkReal x4262=IKsin(j4);
IkReal x4263=(cj6*sj0);
IkReal x4264=((0.02626)*r10);
IkReal x4265=(sj0*sj6);
IkReal x4266=(r11*sj5);
IkReal x4267=(r10*sj5);
IkReal x4268=(cj0*cj6);
IkReal x4269=((0.02626)*r01);
IkReal x4270=(cj0*sj6);
IkReal x4271=(r21*sj6);
IkReal x4272=((1.0)*cj5);
IkReal x4273=(cj6*r20);
IkReal x4274=((1.0)*r10);
IkReal x4275=((1.0)*r01);
IkReal x4276=(r00*sj5);
IkReal x4277=((1.0)*py);
IkReal x4278=(cj5*r12);
IkReal x4279=((1.0)*sj5);
IkReal x4280=((0.02626)*r00);
IkReal x4281=((0.02626)*r11);
IkReal x4282=((1.0)*x4262);
IkReal x4283=((0.02626)*x4262);
IkReal x4284=(sj3*x4261);
IkReal x4285=(cj3*x4261);
evalcond[0]=((((-1.0)*sj3*x4282))+x4273+(((-1.0)*x4271)));
evalcond[1]=((((-1.0)*r20*sj6*x4279))+(((-1.0)*cj6*r21*x4279))+(((-1.0)*r22*x4272))+x4284);
evalcond[2]=(((r11*x4265))+(((-1.0)*x4263*x4274))+(((-1.0)*r00*x4268))+(((-1.0)*x4261))+((r01*x4270)));
evalcond[3]=(((r11*x4270))+(((-1.0)*cj3*x4282))+(((-1.0)*x4268*x4274))+(((-1.0)*x4265*x4275))+((r00*x4263)));
evalcond[4]=((0.0001)+(((-0.0718)*x4284))+(((0.02626)*x4273))+(((-1.0)*sj3*x4283))+(((-0.02626)*x4271))+pz+(((-0.09746)*sj3)));
evalcond[5]=((((-1.0)*x4282))+((cj0*cj5*r02))+((x4270*x4276))+((r01*sj5*x4268))+((x4265*x4267))+((x4263*x4266))+((sj0*x4278)));
evalcond[6]=(((x4267*x4270))+((x4266*x4268))+(((-1.0)*r02*sj0*x4272))+(((-1.0)*x4265*x4276))+x4285+((cj0*x4278))+(((-1.0)*sj5*x4263*x4275)));
evalcond[7]=((-0.0019)+(((-1.0)*x4263*x4264))+((x4265*x4281))+(((-0.02626)*x4261))+(((-1.0)*sj0*x4277))+(((0.0718)*x4262))+((x4269*x4270))+(((-1.0)*cj0*px))+(((-1.0)*x4268*x4280)));
evalcond[8]=((0.0097)+(((-0.0718)*x4285))+(((-1.0)*x4264*x4268))+(((-1.0)*cj0*x4277))+((x4270*x4281))+((x4263*x4280))+(((-0.09746)*cj3))+(((-1.0)*cj3*x4283))+((px*sj0))+(((-1.0)*x4265*x4269)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x4286=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x4286.valid){
continue;
}
CheckValue<IkReal> x4287 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x4287.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4286.value)))+(x4287.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4288=IKcos(j4);
IkReal x4289=IKsin(j4);
IkReal x4290=(cj6*sj0);
IkReal x4291=((0.02626)*r10);
IkReal x4292=(sj0*sj6);
IkReal x4293=(r11*sj5);
IkReal x4294=(r10*sj5);
IkReal x4295=(cj0*cj6);
IkReal x4296=((0.02626)*r01);
IkReal x4297=(cj0*sj6);
IkReal x4298=(r21*sj6);
IkReal x4299=((1.0)*cj5);
IkReal x4300=(cj6*r20);
IkReal x4301=((1.0)*r10);
IkReal x4302=((1.0)*r01);
IkReal x4303=(r00*sj5);
IkReal x4304=((1.0)*py);
IkReal x4305=(cj5*r12);
IkReal x4306=((1.0)*sj5);
IkReal x4307=((0.02626)*r00);
IkReal x4308=((0.02626)*r11);
IkReal x4309=((1.0)*x4289);
IkReal x4310=((0.02626)*x4289);
IkReal x4311=(sj3*x4288);
IkReal x4312=(cj3*x4288);
evalcond[0]=((((-1.0)*x4298))+(((-1.0)*sj3*x4309))+x4300);
evalcond[1]=((((-1.0)*r22*x4299))+(((-1.0)*r20*sj6*x4306))+x4311+(((-1.0)*cj6*r21*x4306)));
evalcond[2]=(((r01*x4297))+(((-1.0)*x4290*x4301))+(((-1.0)*r00*x4295))+(((-1.0)*x4288))+((r11*x4292)));
evalcond[3]=(((r00*x4290))+(((-1.0)*cj3*x4309))+(((-1.0)*x4295*x4301))+((r11*x4297))+(((-1.0)*x4292*x4302)));
evalcond[4]=((0.0001)+(((-0.0718)*x4311))+(((-1.0)*sj3*x4310))+pz+(((0.02626)*x4300))+(((-0.09746)*sj3))+(((-0.02626)*x4298)));
evalcond[5]=(((sj0*x4305))+((x4292*x4294))+((cj0*cj5*r02))+((x4290*x4293))+((x4297*x4303))+(((-1.0)*x4309))+((r01*sj5*x4295)));
evalcond[6]=((((-1.0)*sj5*x4290*x4302))+(((-1.0)*r02*sj0*x4299))+((x4293*x4295))+(((-1.0)*x4292*x4303))+x4312+((cj0*x4305))+((x4294*x4297)));
evalcond[7]=((-0.0019)+(((-1.0)*x4290*x4291))+(((-0.02626)*x4288))+(((-1.0)*x4295*x4307))+(((0.0718)*x4289))+((x4292*x4308))+((x4296*x4297))+(((-1.0)*sj0*x4304))+(((-1.0)*cj0*px)));
evalcond[8]=((0.0097)+((x4290*x4307))+(((-1.0)*x4291*x4295))+(((-0.0718)*x4312))+(((-1.0)*cj3*x4310))+(((-0.09746)*cj3))+((px*sj0))+(((-1.0)*x4292*x4296))+((x4297*x4308))+(((-1.0)*cj0*x4304)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x4319=IKPowWithIntegerCheck(sj3,-1);
if(!x4319.valid){
continue;
}
IkReal x4313=x4319.value;
IkReal x4314=(cj6*sj3);
IkReal x4315=(sj3*sj6);
IkReal x4316=(r21*sj6);
IkReal x4317=(cj2*cj3);
IkReal x4318=(cj6*r20);
CheckValue<IkReal> x4320=IKPowWithIntegerCheck(sj2,-1);
if(!x4320.valid){
continue;
}
if( IKabs((x4313*((x4318+(((-1.0)*x4316)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x4313*(x4320.value)*((((cj0*r10*x4314))+(((-1.0)*cj0*r11*x4315))+((x4316*x4317))+(((-1.0)*x4317*x4318))+((r01*sj0*x4315))+(((-1.0)*r00*sj0*x4314)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x4313*((x4318+(((-1.0)*x4316))))))+IKsqr((x4313*(x4320.value)*((((cj0*r10*x4314))+(((-1.0)*cj0*r11*x4315))+((x4316*x4317))+(((-1.0)*x4317*x4318))+((r01*sj0*x4315))+(((-1.0)*r00*sj0*x4314))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x4313*((x4318+(((-1.0)*x4316))))), (x4313*(x4320.value)*((((cj0*r10*x4314))+(((-1.0)*cj0*r11*x4315))+((x4316*x4317))+(((-1.0)*x4317*x4318))+((r01*sj0*x4315))+(((-1.0)*r00*sj0*x4314))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4321=IKsin(j4);
IkReal x4322=IKcos(j4);
IkReal x4323=((0.02626)*sj0);
IkReal x4324=(cj6*r10);
IkReal x4325=(r01*sj6);
IkReal x4326=(r11*sj0);
IkReal x4327=(cj0*cj5);
IkReal x4328=(cj6*sj5);
IkReal x4329=((0.02626)*cj0);
IkReal x4330=(cj0*sj6);
IkReal x4331=(r21*sj6);
IkReal x4332=((1.0)*sj0);
IkReal x4333=((0.02626)*cj3);
IkReal x4334=(cj6*r20);
IkReal x4335=((1.0)*cj3);
IkReal x4336=(r00*sj5);
IkReal x4337=((0.0718)*cj3);
IkReal x4338=(cj6*r00);
IkReal x4339=((1.0)*cj0);
IkReal x4340=((0.09746)*cj3);
IkReal x4341=(r11*sj6);
IkReal x4342=(r10*sj5*sj6);
IkReal x4343=(sj3*x4321);
IkReal x4344=(cj2*x4321);
IkReal x4345=(sj3*x4322);
IkReal x4346=(cj2*x4322);
IkReal x4347=(sj2*x4321);
IkReal x4348=(sj2*x4322);
evalcond[0]=((((-1.0)*x4331))+x4334+(((-1.0)*x4343)));
evalcond[1]=((((-1.0)*cj5*r22))+x4345+(((-1.0)*r21*x4328))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.0001)+(((0.02626)*x4334))+(((-0.02626)*x4331))+pz+(((-0.02626)*x4343))+(((-0.09746)*sj3))+(((-0.0718)*x4345)));
evalcond[3]=((((-1.0)*x4325*x4332))+(((-1.0)*x4324*x4339))+((sj0*x4338))+((r11*x4330))+x4348+((cj3*x4344)));
evalcond[4]=(((cj0*x4325))+(((-1.0)*x4338*x4339))+(((-1.0)*x4324*x4332))+((sj6*x4326))+x4346+(((-1.0)*x4335*x4347)));
evalcond[5]=(((cj5*r12*sj0))+((x4326*x4328))+x4344+((sj0*x4342))+((r02*x4327))+((x4330*x4336))+((cj0*r01*x4328))+((cj3*x4348)));
evalcond[6]=(((cj0*r11*x4328))+(((-1.0)*sj6*x4332*x4336))+(((-1.0)*r01*x4328*x4332))+((r10*sj5*x4330))+((r12*x4327))+x4347+(((-1.0)*cj5*r02*x4332))+(((-1.0)*x4335*x4346)));
evalcond[7]=((0.1255)+(((-1.0)*x4324*x4329))+(((0.1158)*cj2))+(((-1.0)*py*x4339))+(((-1.0)*x4323*x4325))+((x4323*x4338))+((x4337*x4346))+((px*sj0))+(((-0.0718)*x4347))+((cj2*x4340))+(((0.02626)*x4348))+(((0.0009)*sj2))+((x4333*x4344))+((x4329*x4341)));
evalcond[8]=((-0.001)+(((-1.0)*x4333*x4347))+(((-0.1158)*sj2))+(((-1.0)*py*x4332))+((x4325*x4329))+(((-1.0)*px*x4339))+(((0.0009)*cj2))+(((-1.0)*x4323*x4324))+(((-0.0718)*x4344))+(((-1.0)*x4337*x4348))+(((-1.0)*x4329*x4338))+(((0.02626)*x4346))+((x4323*x4341))+(((-1.0)*sj2*x4340)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x4350=IKPowWithIntegerCheck(sj3,-1);
if(!x4350.valid){
continue;
}
IkReal x4349=x4350.value;
if( IKabs((x4349*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((0.000278551532033426)*x4349*(((5.0)+(((50000.0)*pz))+(((-4873.0)*sj3)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x4349*((((cj6*r20))+(((-1.0)*r21*sj6))))))+IKsqr(((0.000278551532033426)*x4349*(((5.0)+(((50000.0)*pz))+(((-4873.0)*sj3))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x4349*((((cj6*r20))+(((-1.0)*r21*sj6))))), ((0.000278551532033426)*x4349*(((5.0)+(((50000.0)*pz))+(((-4873.0)*sj3))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4351=IKsin(j4);
IkReal x4352=IKcos(j4);
IkReal x4353=((0.02626)*sj0);
IkReal x4354=(cj6*r10);
IkReal x4355=(r01*sj6);
IkReal x4356=(r11*sj0);
IkReal x4357=(cj0*cj5);
IkReal x4358=(cj6*sj5);
IkReal x4359=((0.02626)*cj0);
IkReal x4360=(cj0*sj6);
IkReal x4361=(r21*sj6);
IkReal x4362=((1.0)*sj0);
IkReal x4363=((0.02626)*cj3);
IkReal x4364=(cj6*r20);
IkReal x4365=((1.0)*cj3);
IkReal x4366=(r00*sj5);
IkReal x4367=((0.0718)*cj3);
IkReal x4368=(cj6*r00);
IkReal x4369=((1.0)*cj0);
IkReal x4370=((0.09746)*cj3);
IkReal x4371=(r11*sj6);
IkReal x4372=(r10*sj5*sj6);
IkReal x4373=(sj3*x4351);
IkReal x4374=(cj2*x4351);
IkReal x4375=(sj3*x4352);
IkReal x4376=(cj2*x4352);
IkReal x4377=(sj2*x4351);
IkReal x4378=(sj2*x4352);
evalcond[0]=((((-1.0)*x4373))+(((-1.0)*x4361))+x4364);
evalcond[1]=((((-1.0)*r21*x4358))+(((-1.0)*cj5*r22))+x4375+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.0001)+(((0.02626)*x4364))+(((-0.0718)*x4375))+(((-0.02626)*x4373))+(((-0.02626)*x4361))+pz+(((-0.09746)*sj3)));
evalcond[3]=((((-1.0)*x4355*x4362))+((r11*x4360))+((cj3*x4374))+(((-1.0)*x4354*x4369))+((sj0*x4368))+x4378);
evalcond[4]=(((cj0*x4355))+(((-1.0)*x4354*x4362))+((sj6*x4356))+(((-1.0)*x4365*x4377))+x4376+(((-1.0)*x4368*x4369)));
evalcond[5]=(((cj5*r12*sj0))+((sj0*x4372))+((cj3*x4378))+((cj0*r01*x4358))+((r02*x4357))+((x4360*x4366))+x4374+((x4356*x4358)));
evalcond[6]=((((-1.0)*cj5*r02*x4362))+((cj0*r11*x4358))+(((-1.0)*x4365*x4376))+x4377+((r12*x4357))+(((-1.0)*sj6*x4362*x4366))+((r10*sj5*x4360))+(((-1.0)*r01*x4358*x4362)));
evalcond[7]=((0.1255)+(((-1.0)*x4353*x4355))+((cj2*x4370))+((x4359*x4371))+(((0.02626)*x4378))+(((0.1158)*cj2))+(((-0.0718)*x4377))+((x4363*x4374))+((x4367*x4376))+((px*sj0))+(((-1.0)*py*x4369))+((x4353*x4368))+(((0.0009)*sj2))+(((-1.0)*x4354*x4359)));
evalcond[8]=((-0.001)+(((-1.0)*px*x4369))+(((-1.0)*x4363*x4377))+(((-1.0)*x4353*x4354))+(((-0.1158)*sj2))+(((0.02626)*x4376))+(((-0.0718)*x4374))+(((-1.0)*x4359*x4368))+(((0.0009)*cj2))+(((-1.0)*sj2*x4370))+(((-1.0)*py*x4362))+(((-1.0)*x4367*x4378))+((x4355*x4359))+((x4353*x4371)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x4379=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x4379.valid){
continue;
}
CheckValue<IkReal> x4380 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x4380.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4379.value)))+(x4380.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4381=IKsin(j4);
IkReal x4382=IKcos(j4);
IkReal x4383=((0.02626)*sj0);
IkReal x4384=(cj6*r10);
IkReal x4385=(r01*sj6);
IkReal x4386=(r11*sj0);
IkReal x4387=(cj0*cj5);
IkReal x4388=(cj6*sj5);
IkReal x4389=((0.02626)*cj0);
IkReal x4390=(cj0*sj6);
IkReal x4391=(r21*sj6);
IkReal x4392=((1.0)*sj0);
IkReal x4393=((0.02626)*cj3);
IkReal x4394=(cj6*r20);
IkReal x4395=((1.0)*cj3);
IkReal x4396=(r00*sj5);
IkReal x4397=((0.0718)*cj3);
IkReal x4398=(cj6*r00);
IkReal x4399=((1.0)*cj0);
IkReal x4400=((0.09746)*cj3);
IkReal x4401=(r11*sj6);
IkReal x4402=(r10*sj5*sj6);
IkReal x4403=(sj3*x4381);
IkReal x4404=(cj2*x4381);
IkReal x4405=(sj3*x4382);
IkReal x4406=(cj2*x4382);
IkReal x4407=(sj2*x4381);
IkReal x4408=(sj2*x4382);
evalcond[0]=((((-1.0)*x4391))+(((-1.0)*x4403))+x4394);
evalcond[1]=(x4405+(((-1.0)*r21*x4388))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.0001)+(((-0.02626)*x4391))+(((-0.02626)*x4403))+(((-0.0718)*x4405))+pz+(((0.02626)*x4394))+(((-0.09746)*sj3)));
evalcond[3]=(x4408+((cj3*x4404))+(((-1.0)*x4384*x4399))+((r11*x4390))+((sj0*x4398))+(((-1.0)*x4385*x4392)));
evalcond[4]=(x4406+((sj6*x4386))+(((-1.0)*x4395*x4407))+(((-1.0)*x4384*x4392))+(((-1.0)*x4398*x4399))+((cj0*x4385)));
evalcond[5]=(((cj5*r12*sj0))+x4404+((r02*x4387))+((cj0*r01*x4388))+((x4390*x4396))+((cj3*x4408))+((sj0*x4402))+((x4386*x4388)));
evalcond[6]=(((cj0*r11*x4388))+(((-1.0)*r01*x4388*x4392))+x4407+((r10*sj5*x4390))+(((-1.0)*sj6*x4392*x4396))+(((-1.0)*x4395*x4406))+(((-1.0)*cj5*r02*x4392))+((r12*x4387)));
evalcond[7]=((0.1255)+(((0.02626)*x4408))+((x4383*x4398))+(((0.1158)*cj2))+((x4393*x4404))+(((-1.0)*py*x4399))+(((-0.0718)*x4407))+((x4389*x4401))+(((-1.0)*x4384*x4389))+((px*sj0))+(((-1.0)*x4383*x4385))+(((0.0009)*sj2))+((cj2*x4400))+((x4397*x4406)));
evalcond[8]=((-0.001)+(((-1.0)*x4389*x4398))+(((0.02626)*x4406))+(((-1.0)*sj2*x4400))+(((-0.1158)*sj2))+(((-1.0)*py*x4392))+(((-0.0718)*x4404))+((x4383*x4401))+(((0.0009)*cj2))+(((-1.0)*px*x4399))+(((-1.0)*x4397*x4408))+(((-1.0)*x4393*x4407))+(((-1.0)*x4383*x4384))+((x4385*x4389)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j1))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
j3eval[0]=cj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
j3eval[0]=sj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
bool bgotonextstatement = true;
do
{
IkReal x4409=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj0*r00*sj6*x4409))+(((-1.0)*cj0*cj6*r01*x4409))+((r12*sj0*sj5))+(((-1.0)*cj6*r11*sj0*x4409))+(((-1.0)*r10*sj0*sj6*x4409))+((cj0*r02*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4410=((1.0)*sj6);
if( IKabs(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*r01*x4410))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x4410))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))))+IKsqr(((((-1.0)*cj0*r01*x4410))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x4410))+((cj0*cj6*r00))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))), ((((-1.0)*cj0*r01*x4410))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x4410))+((cj0*cj6*r00))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x4411=IKcos(j4);
IkReal x4412=IKsin(j4);
IkReal x4413=((0.02626)*cj0);
IkReal x4414=(r01*sj6);
IkReal x4415=(r11*sj0);
IkReal x4416=(cj6*sj5);
IkReal x4417=((1.0)*cj0);
IkReal x4418=(sj5*sj6);
IkReal x4419=(cj6*r00);
IkReal x4420=(cj6*r10*sj0);
evalcond[0]=(x4411+(((-1.0)*x4417*x4419))+((sj6*x4415))+((cj0*x4414))+(((-1.0)*x4420)));
evalcond[1]=(((cj5*r12*sj0))+((cj0*cj5*r02))+x4412+((r10*sj0*x4418))+((cj0*r00*x4418))+((x4415*x4416))+((cj0*r01*x4416)));
evalcond[2]=((-0.0001)+(((0.02626)*x4411))+(((0.02626)*sj6*x4415))+(((-0.02626)*x4420))+(((-0.0718)*x4412))+((x4413*x4414))+(((-1.0)*x4413*x4419))+(((-1.0)*py*sj0))+(((-1.0)*px*x4417)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal x4421=((1.0)*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x4421)))))+(IKabs((((cj6*r20))+(((-1.0)*r21*x4421))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4422=(cj6*r21);
IkReal x4423=(r20*sj6);
CheckValue<IkReal> x4424=IKPowWithIntegerCheck(cj4,-1);
if(!x4424.valid){
continue;
}
if( IKabs((((cj5*x4423))+((cj5*x4422))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4424.value)*((((cj5*r22))+((sj5*x4422))+((sj5*x4423)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x4423))+((cj5*x4422))+(((-1.0)*r22*sj5))))+IKsqr(((x4424.value)*((((cj5*r22))+((sj5*x4422))+((sj5*x4423))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj5*x4423))+((cj5*x4422))+(((-1.0)*r22*sj5))), ((x4424.value)*((((cj5*r22))+((sj5*x4422))+((sj5*x4423))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4425=IKcos(j3);
IkReal x4426=IKsin(j3);
IkReal x4427=(cj5*cj6);
IkReal x4428=(cj0*cj5);
IkReal x4429=(cj0*r11);
IkReal x4430=(r01*sj0);
IkReal x4431=(r10*sj6);
IkReal x4432=((0.02626)*sj6);
IkReal x4433=((0.02626)*cj6);
IkReal x4434=(cj0*r10);
IkReal x4435=((1.0)*cj5);
IkReal x4436=(r02*sj0);
IkReal x4437=((1.0)*sj5);
IkReal x4438=(cj0*sj5);
IkReal x4439=((1.0)*sj6);
IkReal x4440=(r20*sj6);
IkReal x4441=(r00*sj0);
IkReal x4442=(cj4*x4426);
IkReal x4443=(sj4*x4425);
IkReal x4444=((1.0)*x4426);
IkReal x4445=(cj4*x4425);
evalcond[0]=((((-1.0)*x4443))+((cj6*r20))+(((-1.0)*r21*x4439)));
evalcond[1]=((((-1.0)*x4444))+(((-1.0)*r22*x4437))+((r21*x4427))+((cj5*x4440)));
evalcond[2]=(x4445+(((-1.0)*r22*x4435))+(((-1.0)*x4437*x4440))+(((-1.0)*cj6*r21*x4437)));
evalcond[3]=(((cj6*x4441))+(((-1.0)*x4430*x4439))+((sj6*x4429))+(((-1.0)*cj6*x4434))+(((-1.0)*sj4*x4444)));
evalcond[4]=((-0.2413)+(((-0.09746)*x4425))+(((-0.02626)*x4443))+((r20*x4433))+(((-0.0718)*x4445))+pz+(((-1.0)*r21*x4432)));
evalcond[5]=(((cj5*sj6*x4441))+(((-1.0)*x4428*x4431))+x4425+((r12*x4438))+(((-1.0)*x4427*x4429))+(((-1.0)*x4436*x4437))+((x4427*x4430)));
evalcond[6]=(x4442+((cj6*sj5*x4429))+(((-1.0)*sj6*x4437*x4441))+(((-1.0)*cj6*x4430*x4437))+(((-1.0)*x4435*x4436))+((x4431*x4438))+((r12*x4428)));
evalcond[7]=((0.0001)+((x4429*x4432))+(((-0.09746)*x4426))+(((-1.0)*x4430*x4432))+(((-1.0)*x4433*x4434))+(((-0.02626)*sj4*x4426))+(((-0.0718)*x4442))+((px*sj0))+(((-1.0)*cj0*py))+((x4433*x4441)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x4446=IKPowWithIntegerCheck(sj4,-1);
if(!x4446.valid){
continue;
}
if( IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4446.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))+IKsqr(((x4446.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))), ((x4446.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4447=IKcos(j3);
IkReal x4448=IKsin(j3);
IkReal x4449=(cj5*cj6);
IkReal x4450=(cj0*cj5);
IkReal x4451=(cj0*r11);
IkReal x4452=(r01*sj0);
IkReal x4453=(r10*sj6);
IkReal x4454=((0.02626)*sj6);
IkReal x4455=((0.02626)*cj6);
IkReal x4456=(cj0*r10);
IkReal x4457=((1.0)*cj5);
IkReal x4458=(r02*sj0);
IkReal x4459=((1.0)*sj5);
IkReal x4460=(cj0*sj5);
IkReal x4461=((1.0)*sj6);
IkReal x4462=(r20*sj6);
IkReal x4463=(r00*sj0);
IkReal x4464=(cj4*x4448);
IkReal x4465=(sj4*x4447);
IkReal x4466=((1.0)*x4448);
IkReal x4467=(cj4*x4447);
evalcond[0]=((((-1.0)*r21*x4461))+(((-1.0)*x4465))+((cj6*r20)));
evalcond[1]=(((r21*x4449))+(((-1.0)*r22*x4459))+((cj5*x4462))+(((-1.0)*x4466)));
evalcond[2]=((((-1.0)*cj6*r21*x4459))+x4467+(((-1.0)*r22*x4457))+(((-1.0)*x4459*x4462)));
evalcond[3]=(((cj6*x4463))+(((-1.0)*x4452*x4461))+(((-1.0)*cj6*x4456))+((sj6*x4451))+(((-1.0)*sj4*x4466)));
evalcond[4]=((-0.2413)+(((-0.02626)*x4465))+((r20*x4455))+(((-0.0718)*x4467))+pz+(((-0.09746)*x4447))+(((-1.0)*r21*x4454)));
evalcond[5]=((((-1.0)*x4450*x4453))+x4447+((cj5*sj6*x4463))+((r12*x4460))+(((-1.0)*x4449*x4451))+((x4449*x4452))+(((-1.0)*x4458*x4459)));
evalcond[6]=(((x4453*x4460))+(((-1.0)*sj6*x4459*x4463))+x4464+(((-1.0)*cj6*x4452*x4459))+(((-1.0)*x4457*x4458))+((r12*x4450))+((cj6*sj5*x4451)));
evalcond[7]=((0.0001)+((x4455*x4463))+(((-1.0)*x4455*x4456))+((x4451*x4454))+(((-0.02626)*sj4*x4448))+(((-0.0718)*x4464))+((px*sj0))+(((-0.09746)*x4448))+(((-1.0)*cj0*py))+(((-1.0)*x4452*x4454)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4468=((1.0)*sj6);
CheckValue<IkReal> x4469 = IKatan2WithCheck(IkReal((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x4468))+(((-1.0)*cj0*cj6*r10)))),((((-1.0)*r21*x4468))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x4469.valid){
continue;
}
CheckValue<IkReal> x4470=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x4470.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x4469.value)+(((1.5707963267949)*(x4470.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4471=IKcos(j3);
IkReal x4472=IKsin(j3);
IkReal x4473=(cj5*cj6);
IkReal x4474=(cj0*cj5);
IkReal x4475=(cj0*r11);
IkReal x4476=(r01*sj0);
IkReal x4477=(r10*sj6);
IkReal x4478=((0.02626)*sj6);
IkReal x4479=((0.02626)*cj6);
IkReal x4480=(cj0*r10);
IkReal x4481=((1.0)*cj5);
IkReal x4482=(r02*sj0);
IkReal x4483=((1.0)*sj5);
IkReal x4484=(cj0*sj5);
IkReal x4485=((1.0)*sj6);
IkReal x4486=(r20*sj6);
IkReal x4487=(r00*sj0);
IkReal x4488=(cj4*x4472);
IkReal x4489=(sj4*x4471);
IkReal x4490=((1.0)*x4472);
IkReal x4491=(cj4*x4471);
evalcond[0]=((((-1.0)*x4489))+(((-1.0)*r21*x4485))+((cj6*r20)));
evalcond[1]=(((cj5*x4486))+((r21*x4473))+(((-1.0)*r22*x4483))+(((-1.0)*x4490)));
evalcond[2]=(x4491+(((-1.0)*cj6*r21*x4483))+(((-1.0)*r22*x4481))+(((-1.0)*x4483*x4486)));
evalcond[3]=((((-1.0)*cj6*x4480))+((sj6*x4475))+(((-1.0)*sj4*x4490))+(((-1.0)*x4476*x4485))+((cj6*x4487)));
evalcond[4]=((-0.2413)+((r20*x4479))+(((-0.09746)*x4471))+(((-1.0)*r21*x4478))+pz+(((-0.02626)*x4489))+(((-0.0718)*x4491)));
evalcond[5]=((((-1.0)*x4474*x4477))+x4471+(((-1.0)*x4473*x4475))+((cj5*sj6*x4487))+((x4473*x4476))+((r12*x4484))+(((-1.0)*x4482*x4483)));
evalcond[6]=((((-1.0)*x4481*x4482))+((cj6*sj5*x4475))+x4488+((x4477*x4484))+(((-1.0)*sj6*x4483*x4487))+((r12*x4474))+(((-1.0)*cj6*x4476*x4483)));
evalcond[7]=((0.0001)+(((-0.0718)*x4488))+(((-1.0)*x4476*x4478))+(((-0.09746)*x4472))+(((-1.0)*x4479*x4480))+((x4479*x4487))+((px*sj0))+((x4475*x4478))+(((-0.02626)*sj4*x4472))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4492=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=(((r12*sj0*sj5))+(((-1.0)*cj6*r11*sj0*x4492))+(((-1.0)*r10*sj0*sj6*x4492))+(((-1.0)*cj0*r00*sj6*x4492))+((cj0*r02*sj5))+(((-1.0)*cj0*cj6*r01*x4492)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4493=((1.0)*cj6);
if( IKabs(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x4493))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x4493)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x4493))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x4493))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))), (((r11*sj0*sj6))+(((-1.0)*cj0*r00*x4493))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x4493))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x4494=IKsin(j4);
IkReal x4495=IKcos(j4);
IkReal x4496=((0.02626)*cj0);
IkReal x4497=(r01*sj6);
IkReal x4498=(r11*sj0);
IkReal x4499=(cj6*sj5);
IkReal x4500=((1.0)*cj0);
IkReal x4501=(sj5*sj6);
IkReal x4502=(cj6*r00);
IkReal x4503=(cj6*r10*sj0);
evalcond[0]=((((-1.0)*x4495))+((cj0*x4497))+(((-1.0)*x4500*x4502))+(((-1.0)*x4503))+((sj6*x4498)));
evalcond[1]=(((cj5*r12*sj0))+((cj0*r01*x4499))+((cj0*r00*x4501))+(((-1.0)*x4494))+((cj0*cj5*r02))+((r10*sj0*x4501))+((x4498*x4499)));
evalcond[2]=((-0.0019)+(((-0.02626)*x4495))+(((0.0718)*x4494))+(((-0.02626)*x4503))+(((-1.0)*x4496*x4502))+(((0.02626)*sj6*x4498))+(((-1.0)*px*x4500))+(((-1.0)*py*sj0))+((x4496*x4497)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x4504=((1.0)*cj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x4504)))))+(IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x4504))+(((-1.0)*r01*sj0*sj6))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4505=((1.0)*sj5);
IkReal x4506=(cj6*r21);
IkReal x4507=(r20*sj6);
IkReal x4508=((1.0)*cj5);
CheckValue<IkReal> x4509=IKPowWithIntegerCheck(cj4,-1);
if(!x4509.valid){
continue;
}
if( IKabs(((((-1.0)*x4506*x4508))+((r22*sj5))+(((-1.0)*x4507*x4508)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4509.value)*(((((-1.0)*r22*x4508))+(((-1.0)*x4505*x4506))+(((-1.0)*x4505*x4507)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4506*x4508))+((r22*sj5))+(((-1.0)*x4507*x4508))))+IKsqr(((x4509.value)*(((((-1.0)*r22*x4508))+(((-1.0)*x4505*x4506))+(((-1.0)*x4505*x4507))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*x4506*x4508))+((r22*sj5))+(((-1.0)*x4507*x4508))), ((x4509.value)*(((((-1.0)*r22*x4508))+(((-1.0)*x4505*x4506))+(((-1.0)*x4505*x4507))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4510=IKcos(j3);
IkReal x4511=IKsin(j3);
IkReal x4512=(cj5*cj6);
IkReal x4513=(cj0*cj5);
IkReal x4514=(cj0*r11);
IkReal x4515=(r01*sj0);
IkReal x4516=(r10*sj6);
IkReal x4517=((0.02626)*sj6);
IkReal x4518=((0.02626)*cj6);
IkReal x4519=(cj0*r10);
IkReal x4520=((1.0)*cj5);
IkReal x4521=(r02*sj0);
IkReal x4522=((1.0)*sj5);
IkReal x4523=(cj0*sj5);
IkReal x4524=((1.0)*sj6);
IkReal x4525=(r20*sj6);
IkReal x4526=(r00*sj0);
IkReal x4527=(cj4*x4511);
IkReal x4528=(sj4*x4510);
IkReal x4529=(sj4*x4511);
IkReal x4530=(cj4*x4510);
evalcond[0]=(x4528+(((-1.0)*r21*x4524))+((cj6*r20)));
evalcond[1]=(((cj5*x4525))+x4511+(((-1.0)*r22*x4522))+((r21*x4512)));
evalcond[2]=((((-1.0)*x4530))+(((-1.0)*r22*x4520))+(((-1.0)*x4522*x4525))+(((-1.0)*cj6*r21*x4522)));
evalcond[3]=((((-1.0)*x4529))+(((-1.0)*cj6*x4519))+((sj6*x4514))+((cj6*x4526))+(((-1.0)*x4515*x4524)));
evalcond[4]=((-0.0097)+((r20*x4518))+pz+(((0.0718)*x4530))+(((-1.0)*r21*x4517))+(((0.09746)*x4510))+(((0.02626)*x4528)));
evalcond[5]=((((-1.0)*x4513*x4516))+(((-1.0)*x4512*x4514))+((r12*x4523))+x4510+((cj5*sj6*x4526))+((x4512*x4515))+(((-1.0)*x4521*x4522)));
evalcond[6]=(((cj6*sj5*x4514))+x4527+(((-1.0)*x4520*x4521))+((x4516*x4523))+(((-1.0)*cj6*x4515*x4522))+((r12*x4513))+(((-1.0)*sj6*x4522*x4526)));
evalcond[7]=((0.0001)+(((-1.0)*x4518*x4519))+(((-1.0)*x4515*x4517))+(((-0.02626)*x4529))+((px*sj0))+(((-0.09746)*x4511))+(((-1.0)*cj0*py))+((x4518*x4526))+((x4514*x4517))+(((-0.0718)*x4527)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4531=((1.0)*cj5);
CheckValue<IkReal> x4532=IKPowWithIntegerCheck(sj4,-1);
if(!x4532.valid){
continue;
}
if( IKabs((((r22*sj5))+(((-1.0)*r20*sj6*x4531))+(((-1.0)*cj6*r21*x4531)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4532.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*sj5))+(((-1.0)*r20*sj6*x4531))+(((-1.0)*cj6*r21*x4531))))+IKsqr(((x4532.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((r22*sj5))+(((-1.0)*r20*sj6*x4531))+(((-1.0)*cj6*r21*x4531))), ((x4532.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4533=IKcos(j3);
IkReal x4534=IKsin(j3);
IkReal x4535=(cj5*cj6);
IkReal x4536=(cj0*cj5);
IkReal x4537=(cj0*r11);
IkReal x4538=(r01*sj0);
IkReal x4539=(r10*sj6);
IkReal x4540=((0.02626)*sj6);
IkReal x4541=((0.02626)*cj6);
IkReal x4542=(cj0*r10);
IkReal x4543=((1.0)*cj5);
IkReal x4544=(r02*sj0);
IkReal x4545=((1.0)*sj5);
IkReal x4546=(cj0*sj5);
IkReal x4547=((1.0)*sj6);
IkReal x4548=(r20*sj6);
IkReal x4549=(r00*sj0);
IkReal x4550=(cj4*x4534);
IkReal x4551=(sj4*x4533);
IkReal x4552=(sj4*x4534);
IkReal x4553=(cj4*x4533);
evalcond[0]=(x4551+(((-1.0)*r21*x4547))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x4545))+((r21*x4535))+x4534+((cj5*x4548)));
evalcond[2]=((((-1.0)*r22*x4543))+(((-1.0)*x4545*x4548))+(((-1.0)*cj6*r21*x4545))+(((-1.0)*x4553)));
evalcond[3]=(((cj6*x4549))+((sj6*x4537))+(((-1.0)*cj6*x4542))+(((-1.0)*x4538*x4547))+(((-1.0)*x4552)));
evalcond[4]=((-0.0097)+(((0.09746)*x4533))+((r20*x4541))+pz+(((-1.0)*r21*x4540))+(((0.02626)*x4551))+(((0.0718)*x4553)));
evalcond[5]=(((cj5*sj6*x4549))+(((-1.0)*x4535*x4537))+x4533+(((-1.0)*x4544*x4545))+((r12*x4546))+(((-1.0)*x4536*x4539))+((x4535*x4538)));
evalcond[6]=(((r12*x4536))+x4550+(((-1.0)*cj6*x4538*x4545))+(((-1.0)*sj6*x4545*x4549))+(((-1.0)*x4543*x4544))+((cj6*sj5*x4537))+((x4539*x4546)));
evalcond[7]=((0.0001)+(((-0.09746)*x4534))+((x4537*x4540))+(((-0.0718)*x4550))+(((-1.0)*x4538*x4540))+(((-1.0)*x4541*x4542))+((x4541*x4549))+((px*sj0))+(((-0.02626)*x4552))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4554=((1.0)*cj6);
CheckValue<IkReal> x4555=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x4555.valid){
continue;
}
CheckValue<IkReal> x4556 = IKatan2WithCheck(IkReal(((((-1.0)*cj0*r10*x4554))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6)))),(((r21*sj6))+(((-1.0)*r20*x4554))),IKFAST_ATAN2_MAGTHRESH);
if(!x4556.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4555.value)))+(x4556.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4557=IKcos(j3);
IkReal x4558=IKsin(j3);
IkReal x4559=(cj5*cj6);
IkReal x4560=(cj0*cj5);
IkReal x4561=(cj0*r11);
IkReal x4562=(r01*sj0);
IkReal x4563=(r10*sj6);
IkReal x4564=((0.02626)*sj6);
IkReal x4565=((0.02626)*cj6);
IkReal x4566=(cj0*r10);
IkReal x4567=((1.0)*cj5);
IkReal x4568=(r02*sj0);
IkReal x4569=((1.0)*sj5);
IkReal x4570=(cj0*sj5);
IkReal x4571=((1.0)*sj6);
IkReal x4572=(r20*sj6);
IkReal x4573=(r00*sj0);
IkReal x4574=(cj4*x4558);
IkReal x4575=(sj4*x4557);
IkReal x4576=(sj4*x4558);
IkReal x4577=(cj4*x4557);
evalcond[0]=(x4575+((cj6*r20))+(((-1.0)*r21*x4571)));
evalcond[1]=(x4558+((cj5*x4572))+(((-1.0)*r22*x4569))+((r21*x4559)));
evalcond[2]=((((-1.0)*x4569*x4572))+(((-1.0)*cj6*r21*x4569))+(((-1.0)*r22*x4567))+(((-1.0)*x4577)));
evalcond[3]=(((sj6*x4561))+(((-1.0)*cj6*x4566))+(((-1.0)*x4562*x4571))+((cj6*x4573))+(((-1.0)*x4576)));
evalcond[4]=((-0.0097)+(((-1.0)*r21*x4564))+(((0.0718)*x4577))+(((0.09746)*x4557))+pz+((r20*x4565))+(((0.02626)*x4575)));
evalcond[5]=((((-1.0)*x4559*x4561))+((r12*x4570))+x4557+(((-1.0)*x4568*x4569))+((cj5*sj6*x4573))+(((-1.0)*x4560*x4563))+((x4559*x4562)));
evalcond[6]=(((x4563*x4570))+(((-1.0)*x4567*x4568))+x4574+(((-1.0)*sj6*x4569*x4573))+((r12*x4560))+(((-1.0)*cj6*x4562*x4569))+((cj6*sj5*x4561)));
evalcond[7]=((0.0001)+((x4565*x4573))+(((-0.02626)*x4576))+(((-0.09746)*x4558))+(((-0.0718)*x4574))+((px*sj0))+((x4561*x4564))+(((-1.0)*x4562*x4564))+(((-1.0)*cj0*py))+(((-1.0)*x4565*x4566)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x4578=IKsin(j4);
IkReal x4579=IKcos(j4);
IkReal x4580=((1.0)*r21);
IkReal x4581=(cj6*r20);
evalcond[0]=(x4581+(((-1.0)*sj6*x4580))+(((-1.0)*x4579)));
evalcond[1]=((((-1.0)*cj6*sj5*x4580))+(((-1.0)*cj5*r22))+(((-1.0)*x4578))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((-0.1264)+(((0.0718)*x4578))+(((-0.02626)*r21*sj6))+(((-0.02626)*x4579))+(((0.02626)*x4581))+pz);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x4582=(sj0*sj6);
IkReal x4583=(cj0*sj6);
IkReal x4584=(cj6*r00);
IkReal x4585=((1.0)*cj6*r10);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs((((sj0*x4584))+(((-1.0)*r01*x4582))+(((-1.0)*cj0*x4585))+((r11*x4583)))))+(IKabs(((((-1.0)*cj0*x4584))+((r11*x4582))+((r01*x4583))+(((-1.0)*sj0*x4585))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj1=0;
cj1=1.0;
j1=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=cj4;
j3eval[1]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4586=(sj0*sj6);
IkReal x4587=(cj0*sj6);
IkReal x4588=(cj6*sj0);
IkReal x4589=((1.0)*r10);
IkReal x4590=((1.0)*cj0*cj6);
CheckValue<IkReal> x4591=IKPowWithIntegerCheck(cj4,-1);
if(!x4591.valid){
continue;
}
CheckValue<IkReal> x4592=IKPowWithIntegerCheck(sj4,-1);
if(!x4592.valid){
continue;
}
if( IKabs(((x4591.value)*(((((-1.0)*sj5*x4587*x4589))+(((-1.0)*cj0*cj5*r12))+((r01*sj5*x4588))+((cj5*r02*sj0))+(((-1.0)*r11*sj5*x4590))+((r00*sj5*x4586)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4592.value)*(((((-1.0)*r00*x4590))+((r11*x4586))+(((-1.0)*x4588*x4589))+((r01*x4587)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4591.value)*(((((-1.0)*sj5*x4587*x4589))+(((-1.0)*cj0*cj5*r12))+((r01*sj5*x4588))+((cj5*r02*sj0))+(((-1.0)*r11*sj5*x4590))+((r00*sj5*x4586))))))+IKsqr(((x4592.value)*(((((-1.0)*r00*x4590))+((r11*x4586))+(((-1.0)*x4588*x4589))+((r01*x4587))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x4591.value)*(((((-1.0)*sj5*x4587*x4589))+(((-1.0)*cj0*cj5*r12))+((r01*sj5*x4588))+((cj5*r02*sj0))+(((-1.0)*r11*sj5*x4590))+((r00*sj5*x4586))))), ((x4592.value)*(((((-1.0)*r00*x4590))+((r11*x4586))+(((-1.0)*x4588*x4589))+((r01*x4587))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4593=IKcos(j3);
IkReal x4594=IKsin(j3);
IkReal x4595=(cj6*sj0);
IkReal x4596=((0.02626)*r10);
IkReal x4597=(sj0*sj6);
IkReal x4598=(cj0*cj5);
IkReal x4599=(r11*sj5);
IkReal x4600=((1.0)*r11);
IkReal x4601=(r10*sj5);
IkReal x4602=((1.0)*sj6);
IkReal x4603=((0.02626)*r01);
IkReal x4604=(cj0*sj6);
IkReal x4605=(cj0*cj6);
IkReal x4606=((1.0)*cj5);
IkReal x4607=(r02*sj0);
IkReal x4608=(cj0*sj5);
IkReal x4609=((0.02626)*r11);
IkReal x4610=((1.0)*r10);
IkReal x4611=((1.0)*r01);
IkReal x4612=(r00*sj5);
IkReal x4613=((1.0)*py);
IkReal x4614=(r12*sj0);
IkReal x4615=((0.02626)*r00);
IkReal x4616=(cj4*x4594);
IkReal x4617=(sj4*x4593);
IkReal x4618=((1.0)*x4594);
IkReal x4619=(cj4*x4593);
evalcond[0]=((((-1.0)*x4617))+(((-1.0)*x4595*x4610))+((r01*x4604))+((r11*x4597))+(((-1.0)*r00*x4605)));
evalcond[1]=(((r11*x4604))+(((-1.0)*x4605*x4610))+(((-1.0)*sj4*x4618))+(((-1.0)*x4597*x4611))+((r00*x4595)));
evalcond[2]=(((r01*sj5*x4605))+((x4595*x4599))+((r02*x4598))+x4619+((x4597*x4601))+((cj5*x4614))+((x4604*x4612)));
evalcond[3]=(((cj5*r00*x4597))+((cj5*r01*x4595))+((r12*x4608))+x4593+(((-1.0)*sj5*x4607))+(((-1.0)*cj6*x4598*x4600))+(((-1.0)*r10*x4598*x4602)));
evalcond[4]=((((-1.0)*sj5*x4595*x4611))+(((-1.0)*x4597*x4612))+((x4599*x4605))+((x4601*x4604))+(((-1.0)*x4606*x4607))+x4616+((r12*x4598)));
evalcond[5]=((((-1.0)*cj6*x4598*x4611))+(((-1.0)*r10*x4597*x4606))+((r02*x4608))+(((-1.0)*cj5*x4595*x4600))+(((-1.0)*r00*x4598*x4602))+(((-1.0)*x4618))+((sj5*x4614)));
evalcond[6]=((0.0001)+((x4595*x4615))+(((-1.0)*cj0*x4613))+((x4604*x4609))+(((-1.0)*x4596*x4605))+(((-1.0)*x4597*x4603))+(((-0.0718)*x4616))+((px*sj0))+(((-0.02626)*sj4*x4594))+(((-0.09746)*x4594)));
evalcond[7]=((-0.1168)+(((-1.0)*x4595*x4596))+(((-1.0)*sj0*x4613))+((x4597*x4609))+(((-0.02626)*x4617))+((x4603*x4604))+(((-1.0)*x4605*x4615))+(((-0.0718)*x4619))+(((-0.09746)*x4593))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4620=(cj0*r10);
IkReal x4621=((1.0)*cj6);
IkReal x4622=(cj5*sj6);
IkReal x4623=((1.0)*sj0);
IkReal x4624=(cj0*r11);
CheckValue<IkReal> x4625=IKPowWithIntegerCheck(sj4,-1);
if(!x4625.valid){
continue;
}
if( IKabs(((x4625.value)*((((cj6*r00*sj0))+((sj6*x4624))+(((-1.0)*r01*sj6*x4623))+(((-1.0)*x4620*x4621)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r02*sj0*sj5))+((cj5*cj6*x4624))+(((-1.0)*r00*x4622*x4623))+((x4620*x4622))+(((-1.0)*cj5*r01*sj0*x4621))+(((-1.0)*cj0*r12*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4625.value)*((((cj6*r00*sj0))+((sj6*x4624))+(((-1.0)*r01*sj6*x4623))+(((-1.0)*x4620*x4621))))))+IKsqr((((r02*sj0*sj5))+((cj5*cj6*x4624))+(((-1.0)*r00*x4622*x4623))+((x4620*x4622))+(((-1.0)*cj5*r01*sj0*x4621))+(((-1.0)*cj0*r12*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x4625.value)*((((cj6*r00*sj0))+((sj6*x4624))+(((-1.0)*r01*sj6*x4623))+(((-1.0)*x4620*x4621))))), (((r02*sj0*sj5))+((cj5*cj6*x4624))+(((-1.0)*r00*x4622*x4623))+((x4620*x4622))+(((-1.0)*cj5*r01*sj0*x4621))+(((-1.0)*cj0*r12*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4626=IKcos(j3);
IkReal x4627=IKsin(j3);
IkReal x4628=(cj6*sj0);
IkReal x4629=((0.02626)*r10);
IkReal x4630=(sj0*sj6);
IkReal x4631=(cj0*cj5);
IkReal x4632=(r11*sj5);
IkReal x4633=((1.0)*r11);
IkReal x4634=(r10*sj5);
IkReal x4635=((1.0)*sj6);
IkReal x4636=((0.02626)*r01);
IkReal x4637=(cj0*sj6);
IkReal x4638=(cj0*cj6);
IkReal x4639=((1.0)*cj5);
IkReal x4640=(r02*sj0);
IkReal x4641=(cj0*sj5);
IkReal x4642=((0.02626)*r11);
IkReal x4643=((1.0)*r10);
IkReal x4644=((1.0)*r01);
IkReal x4645=(r00*sj5);
IkReal x4646=((1.0)*py);
IkReal x4647=(r12*sj0);
IkReal x4648=((0.02626)*r00);
IkReal x4649=(cj4*x4627);
IkReal x4650=(sj4*x4626);
IkReal x4651=((1.0)*x4627);
IkReal x4652=(cj4*x4626);
evalcond[0]=(((r01*x4637))+((r11*x4630))+(((-1.0)*x4628*x4643))+(((-1.0)*x4650))+(((-1.0)*r00*x4638)));
evalcond[1]=((((-1.0)*sj4*x4651))+((r11*x4637))+(((-1.0)*x4630*x4644))+(((-1.0)*x4638*x4643))+((r00*x4628)));
evalcond[2]=(((x4630*x4634))+x4652+((r02*x4631))+((x4637*x4645))+((cj5*x4647))+((x4628*x4632))+((r01*sj5*x4638)));
evalcond[3]=((((-1.0)*cj6*x4631*x4633))+(((-1.0)*r10*x4631*x4635))+((cj5*r00*x4630))+x4626+((r12*x4641))+(((-1.0)*sj5*x4640))+((cj5*r01*x4628)));
evalcond[4]=(((r12*x4631))+x4649+(((-1.0)*sj5*x4628*x4644))+((x4632*x4638))+((x4634*x4637))+(((-1.0)*x4630*x4645))+(((-1.0)*x4639*x4640)));
evalcond[5]=(((sj5*x4647))+(((-1.0)*x4651))+(((-1.0)*r10*x4630*x4639))+((r02*x4641))+(((-1.0)*r00*x4631*x4635))+(((-1.0)*cj6*x4631*x4644))+(((-1.0)*cj5*x4628*x4633)));
evalcond[6]=((0.0001)+(((-0.09746)*x4627))+(((-0.02626)*sj4*x4627))+((x4628*x4648))+(((-1.0)*cj0*x4646))+(((-1.0)*x4630*x4636))+(((-0.0718)*x4649))+((x4637*x4642))+((px*sj0))+(((-1.0)*x4629*x4638)));
evalcond[7]=((-0.1168)+(((-0.09746)*x4626))+((x4630*x4642))+(((-0.0718)*x4652))+((x4636*x4637))+(((-1.0)*sj0*x4646))+(((-0.02626)*x4650))+(((-1.0)*x4638*x4648))+(((-1.0)*x4628*x4629))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4653=(sj0*sj6);
IkReal x4654=(cj0*sj6);
IkReal x4655=(cj6*r00);
IkReal x4656=((1.0)*cj6*r10);
CheckValue<IkReal> x4657 = IKatan2WithCheck(IkReal((((sj0*x4655))+((r11*x4654))+(((-1.0)*cj0*x4656))+(((-1.0)*r01*x4653)))),((((-1.0)*sj0*x4656))+((r11*x4653))+(((-1.0)*cj0*x4655))+((r01*x4654))),IKFAST_ATAN2_MAGTHRESH);
if(!x4657.valid){
continue;
}
CheckValue<IkReal> x4658=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x4658.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x4657.value)+(((1.5707963267949)*(x4658.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4659=IKcos(j3);
IkReal x4660=IKsin(j3);
IkReal x4661=(cj6*sj0);
IkReal x4662=((0.02626)*r10);
IkReal x4663=(sj0*sj6);
IkReal x4664=(cj0*cj5);
IkReal x4665=(r11*sj5);
IkReal x4666=((1.0)*r11);
IkReal x4667=(r10*sj5);
IkReal x4668=((1.0)*sj6);
IkReal x4669=((0.02626)*r01);
IkReal x4670=(cj0*sj6);
IkReal x4671=(cj0*cj6);
IkReal x4672=((1.0)*cj5);
IkReal x4673=(r02*sj0);
IkReal x4674=(cj0*sj5);
IkReal x4675=((0.02626)*r11);
IkReal x4676=((1.0)*r10);
IkReal x4677=((1.0)*r01);
IkReal x4678=(r00*sj5);
IkReal x4679=((1.0)*py);
IkReal x4680=(r12*sj0);
IkReal x4681=((0.02626)*r00);
IkReal x4682=(cj4*x4660);
IkReal x4683=(sj4*x4659);
IkReal x4684=((1.0)*x4660);
IkReal x4685=(cj4*x4659);
evalcond[0]=((((-1.0)*x4661*x4676))+(((-1.0)*r00*x4671))+((r11*x4663))+((r01*x4670))+(((-1.0)*x4683)));
evalcond[1]=((((-1.0)*x4663*x4677))+((r11*x4670))+(((-1.0)*sj4*x4684))+((r00*x4661))+(((-1.0)*x4671*x4676)));
evalcond[2]=(((r01*sj5*x4671))+((r02*x4664))+((x4670*x4678))+x4685+((x4661*x4665))+((x4663*x4667))+((cj5*x4680)));
evalcond[3]=((((-1.0)*r10*x4664*x4668))+(((-1.0)*cj6*x4664*x4666))+x4659+((r12*x4674))+((cj5*r01*x4661))+((cj5*r00*x4663))+(((-1.0)*sj5*x4673)));
evalcond[4]=(((x4667*x4670))+((x4665*x4671))+((r12*x4664))+x4682+(((-1.0)*x4663*x4678))+(((-1.0)*x4672*x4673))+(((-1.0)*sj5*x4661*x4677)));
evalcond[5]=((((-1.0)*r10*x4663*x4672))+((r02*x4674))+((sj5*x4680))+(((-1.0)*r00*x4664*x4668))+(((-1.0)*cj6*x4664*x4677))+(((-1.0)*cj5*x4661*x4666))+(((-1.0)*x4684)));
evalcond[6]=((0.0001)+(((-1.0)*x4662*x4671))+(((-1.0)*x4663*x4669))+((x4670*x4675))+(((-1.0)*cj0*x4679))+(((-0.02626)*sj4*x4660))+((px*sj0))+(((-0.0718)*x4682))+(((-0.09746)*x4660))+((x4661*x4681)));
evalcond[7]=((-0.1168)+(((-1.0)*x4661*x4662))+(((-0.09746)*x4659))+((x4669*x4670))+(((-1.0)*x4671*x4681))+(((-1.0)*sj0*x4679))+((x4663*x4675))+(((-0.0718)*x4685))+(((-0.02626)*x4683))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x4686=IKcos(j4);
IkReal x4687=IKsin(j4);
IkReal x4688=((1.0)*r21);
IkReal x4689=(cj6*r20);
evalcond[0]=((((-1.0)*sj6*x4688))+x4686+x4689);
evalcond[1]=(x4687+(((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x4688))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((-0.1246)+(((0.02626)*x4686))+(((0.02626)*x4689))+(((-0.02626)*r21*sj6))+pz+(((-0.0718)*x4687)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x4690=(cj0*cj6);
IkReal x4691=(cj6*sj0);
IkReal x4692=(cj0*sj6);
IkReal x4693=((1.0)*sj0*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*r10*x4690))+(((-1.0)*r01*x4693))+((r00*x4691))+((r11*x4692)))))+(IKabs((((r00*x4690))+(((-1.0)*r01*x4692))+((r10*x4691))+(((-1.0)*r11*x4693))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj1=0;
cj1=1.0;
j1=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=sj4;
j3eval[1]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4694=(cj0*cj6);
IkReal x4695=(sj0*sj5);
IkReal x4696=(cj0*sj6);
CheckValue<IkReal> x4697=IKPowWithIntegerCheck(sj4,-1);
if(!x4697.valid){
continue;
}
CheckValue<IkReal> x4698=IKPowWithIntegerCheck(cj4,-1);
if(!x4698.valid){
continue;
}
if( IKabs(((x4697.value)*(((((-1.0)*r10*x4694))+((cj6*r00*sj0))+((r11*x4696))+(((-1.0)*r01*sj0*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4698.value)*((((cj5*r12*sj0))+((r00*sj5*x4696))+((cj6*r11*x4695))+((cj0*cj5*r02))+((r10*sj6*x4695))+((r01*sj5*x4694)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4697.value)*(((((-1.0)*r10*x4694))+((cj6*r00*sj0))+((r11*x4696))+(((-1.0)*r01*sj0*sj6))))))+IKsqr(((x4698.value)*((((cj5*r12*sj0))+((r00*sj5*x4696))+((cj6*r11*x4695))+((cj0*cj5*r02))+((r10*sj6*x4695))+((r01*sj5*x4694))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x4697.value)*(((((-1.0)*r10*x4694))+((cj6*r00*sj0))+((r11*x4696))+(((-1.0)*r01*sj0*sj6))))), ((x4698.value)*((((cj5*r12*sj0))+((r00*sj5*x4696))+((cj6*r11*x4695))+((cj0*cj5*r02))+((r10*sj6*x4695))+((r01*sj5*x4694))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4699=IKcos(j3);
IkReal x4700=IKsin(j3);
IkReal x4701=(cj6*sj0);
IkReal x4702=((0.02626)*r10);
IkReal x4703=(sj0*sj6);
IkReal x4704=(cj0*cj5);
IkReal x4705=(r11*sj5);
IkReal x4706=((1.0)*r11);
IkReal x4707=(r10*sj5);
IkReal x4708=((1.0)*sj6);
IkReal x4709=((0.02626)*r01);
IkReal x4710=(cj0*sj6);
IkReal x4711=(cj0*cj6);
IkReal x4712=((1.0)*sj0);
IkReal x4713=(cj0*sj5);
IkReal x4714=((0.02626)*r11);
IkReal x4715=((1.0)*r10);
IkReal x4716=((1.0)*r01);
IkReal x4717=((1.0)*cj0);
IkReal x4718=(r00*sj5);
IkReal x4719=(r12*sj0);
IkReal x4720=((0.02626)*r00);
IkReal x4721=(cj4*x4700);
IkReal x4722=(sj4*x4699);
IkReal x4723=(sj4*x4700);
IkReal x4724=(cj4*x4699);
evalcond[0]=((((-1.0)*x4701*x4715))+((r01*x4710))+x4722+(((-1.0)*r00*x4711))+((r11*x4703)));
evalcond[1]=((((-1.0)*x4723))+(((-1.0)*x4703*x4716))+(((-1.0)*x4711*x4715))+((r00*x4701))+((r11*x4710)));
evalcond[2]=((((-1.0)*x4724))+((r01*sj5*x4711))+((x4710*x4718))+((cj5*x4719))+((x4701*x4705))+((r02*x4704))+((x4703*x4707)));
evalcond[3]=((((-1.0)*r02*sj5*x4712))+(((-1.0)*cj6*x4704*x4706))+((cj5*r00*x4703))+x4699+((cj5*r01*x4701))+(((-1.0)*r10*x4704*x4708))+((r12*x4713)));
evalcond[4]=((((-1.0)*cj5*x4701*x4706))+x4700+(((-1.0)*cj6*x4704*x4716))+((sj5*x4719))+(((-1.0)*r00*x4704*x4708))+((r02*x4713))+(((-1.0)*cj5*x4703*x4715)));
evalcond[5]=((((-1.0)*sj5*x4701*x4716))+((x4705*x4711))+x4721+(((-1.0)*cj5*r02*x4712))+((x4707*x4710))+(((-1.0)*x4703*x4718))+((r12*x4704)));
evalcond[6]=((0.0001)+(((-0.0718)*x4721))+(((-1.0)*x4703*x4709))+((x4710*x4714))+((x4701*x4720))+(((-0.09746)*x4700))+((px*sj0))+(((-0.02626)*x4723))+(((-1.0)*py*x4717))+(((-1.0)*x4702*x4711)));
evalcond[7]=((0.1148)+(((0.09746)*x4699))+((x4709*x4710))+(((-1.0)*px*x4717))+(((0.02626)*x4722))+(((0.0718)*x4724))+((x4703*x4714))+(((-1.0)*py*x4712))+(((-1.0)*x4711*x4720))+(((-1.0)*x4701*x4702)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4725=(cj0*r00);
IkReal x4726=(cj5*sj6);
IkReal x4727=((1.0)*sj5);
IkReal x4728=(cj5*cj6);
IkReal x4729=(cj0*r01);
IkReal x4730=(r11*sj0);
IkReal x4731=((1.0)*sj6);
IkReal x4732=(r10*sj0);
CheckValue<IkReal> x4733=IKPowWithIntegerCheck(sj4,-1);
if(!x4733.valid){
continue;
}
if( IKabs((((x4725*x4726))+(((-1.0)*cj0*r02*x4727))+(((-1.0)*r12*sj0*x4727))+((x4726*x4732))+((x4728*x4729))+((x4728*x4730)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4733.value)*(((((-1.0)*x4730*x4731))+((cj6*x4732))+((cj6*x4725))+(((-1.0)*x4729*x4731)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x4725*x4726))+(((-1.0)*cj0*r02*x4727))+(((-1.0)*r12*sj0*x4727))+((x4726*x4732))+((x4728*x4729))+((x4728*x4730))))+IKsqr(((x4733.value)*(((((-1.0)*x4730*x4731))+((cj6*x4732))+((cj6*x4725))+(((-1.0)*x4729*x4731))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((x4725*x4726))+(((-1.0)*cj0*r02*x4727))+(((-1.0)*r12*sj0*x4727))+((x4726*x4732))+((x4728*x4729))+((x4728*x4730))), ((x4733.value)*(((((-1.0)*x4730*x4731))+((cj6*x4732))+((cj6*x4725))+(((-1.0)*x4729*x4731))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4734=IKcos(j3);
IkReal x4735=IKsin(j3);
IkReal x4736=(cj6*sj0);
IkReal x4737=((0.02626)*r10);
IkReal x4738=(sj0*sj6);
IkReal x4739=(cj0*cj5);
IkReal x4740=(r11*sj5);
IkReal x4741=((1.0)*r11);
IkReal x4742=(r10*sj5);
IkReal x4743=((1.0)*sj6);
IkReal x4744=((0.02626)*r01);
IkReal x4745=(cj0*sj6);
IkReal x4746=(cj0*cj6);
IkReal x4747=((1.0)*sj0);
IkReal x4748=(cj0*sj5);
IkReal x4749=((0.02626)*r11);
IkReal x4750=((1.0)*r10);
IkReal x4751=((1.0)*r01);
IkReal x4752=((1.0)*cj0);
IkReal x4753=(r00*sj5);
IkReal x4754=(r12*sj0);
IkReal x4755=((0.02626)*r00);
IkReal x4756=(cj4*x4735);
IkReal x4757=(sj4*x4734);
IkReal x4758=(sj4*x4735);
IkReal x4759=(cj4*x4734);
evalcond[0]=(((r11*x4738))+((r01*x4745))+(((-1.0)*x4736*x4750))+x4757+(((-1.0)*r00*x4746)));
evalcond[1]=(((r11*x4745))+(((-1.0)*x4746*x4750))+(((-1.0)*x4738*x4751))+((r00*x4736))+(((-1.0)*x4758)));
evalcond[2]=(((x4745*x4753))+((x4738*x4742))+((x4736*x4740))+((r02*x4739))+((r01*sj5*x4746))+(((-1.0)*x4759))+((cj5*x4754)));
evalcond[3]=((((-1.0)*r10*x4739*x4743))+(((-1.0)*cj6*x4739*x4741))+((r12*x4748))+(((-1.0)*r02*sj5*x4747))+x4734+((cj5*r00*x4738))+((cj5*r01*x4736)));
evalcond[4]=((((-1.0)*cj6*x4739*x4751))+(((-1.0)*cj5*x4738*x4750))+(((-1.0)*r00*x4739*x4743))+((sj5*x4754))+x4735+((r02*x4748))+(((-1.0)*cj5*x4736*x4741)));
evalcond[5]=((((-1.0)*sj5*x4736*x4751))+((x4742*x4745))+((x4740*x4746))+(((-1.0)*x4738*x4753))+(((-1.0)*cj5*r02*x4747))+x4756+((r12*x4739)));
evalcond[6]=((0.0001)+(((-0.0718)*x4756))+(((-1.0)*py*x4752))+(((-0.09746)*x4735))+(((-1.0)*x4737*x4746))+((x4736*x4755))+(((-0.02626)*x4758))+((px*sj0))+(((-1.0)*x4738*x4744))+((x4745*x4749)));
evalcond[7]=((0.1148)+(((-1.0)*py*x4747))+((x4738*x4749))+(((-1.0)*x4736*x4737))+(((0.09746)*x4734))+(((-1.0)*x4746*x4755))+(((0.02626)*x4757))+(((-1.0)*px*x4752))+(((0.0718)*x4759))+((x4744*x4745)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4760=(cj0*cj6);
IkReal x4761=(cj6*sj0);
IkReal x4762=(cj0*sj6);
IkReal x4763=((1.0)*sj0*sj6);
CheckValue<IkReal> x4764 = IKatan2WithCheck(IkReal((((r00*x4761))+((r11*x4762))+(((-1.0)*r10*x4760))+(((-1.0)*r01*x4763)))),(((r00*x4760))+(((-1.0)*r11*x4763))+(((-1.0)*r01*x4762))+((r10*x4761))),IKFAST_ATAN2_MAGTHRESH);
if(!x4764.valid){
continue;
}
CheckValue<IkReal> x4765=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x4765.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x4764.value)+(((1.5707963267949)*(x4765.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x4766=IKcos(j3);
IkReal x4767=IKsin(j3);
IkReal x4768=(cj6*sj0);
IkReal x4769=((0.02626)*r10);
IkReal x4770=(sj0*sj6);
IkReal x4771=(cj0*cj5);
IkReal x4772=(r11*sj5);
IkReal x4773=((1.0)*r11);
IkReal x4774=(r10*sj5);
IkReal x4775=((1.0)*sj6);
IkReal x4776=((0.02626)*r01);
IkReal x4777=(cj0*sj6);
IkReal x4778=(cj0*cj6);
IkReal x4779=((1.0)*sj0);
IkReal x4780=(cj0*sj5);
IkReal x4781=((0.02626)*r11);
IkReal x4782=((1.0)*r10);
IkReal x4783=((1.0)*r01);
IkReal x4784=((1.0)*cj0);
IkReal x4785=(r00*sj5);
IkReal x4786=(r12*sj0);
IkReal x4787=((0.02626)*r00);
IkReal x4788=(cj4*x4767);
IkReal x4789=(sj4*x4766);
IkReal x4790=(sj4*x4767);
IkReal x4791=(cj4*x4766);
evalcond[0]=(((r11*x4770))+((r01*x4777))+x4789+(((-1.0)*r00*x4778))+(((-1.0)*x4768*x4782)));
evalcond[1]=(((r11*x4777))+(((-1.0)*x4770*x4783))+((r00*x4768))+(((-1.0)*x4790))+(((-1.0)*x4778*x4782)));
evalcond[2]=(((x4777*x4785))+((x4768*x4772))+((r02*x4771))+((cj5*x4786))+(((-1.0)*x4791))+((r01*sj5*x4778))+((x4770*x4774)));
evalcond[3]=(((cj5*r00*x4770))+((r12*x4780))+(((-1.0)*r02*sj5*x4779))+(((-1.0)*r10*x4771*x4775))+x4766+((cj5*r01*x4768))+(((-1.0)*cj6*x4771*x4773)));
evalcond[4]=(((r02*x4780))+(((-1.0)*r00*x4771*x4775))+x4767+(((-1.0)*cj5*x4768*x4773))+((sj5*x4786))+(((-1.0)*cj6*x4771*x4783))+(((-1.0)*cj5*x4770*x4782)));
evalcond[5]=(((r12*x4771))+((x4772*x4778))+(((-1.0)*x4770*x4785))+x4788+(((-1.0)*cj5*r02*x4779))+(((-1.0)*sj5*x4768*x4783))+((x4774*x4777)));
evalcond[6]=((0.0001)+(((-1.0)*x4769*x4778))+(((-0.02626)*x4790))+((x4777*x4781))+(((-1.0)*x4770*x4776))+((x4768*x4787))+(((-0.09746)*x4767))+(((-0.0718)*x4788))+((px*sj0))+(((-1.0)*py*x4784)));
evalcond[7]=((0.1148)+(((0.02626)*x4789))+(((0.0718)*x4791))+((x4776*x4777))+(((0.09746)*x4766))+(((-1.0)*x4768*x4769))+((x4770*x4781))+(((-1.0)*px*x4784))+(((-1.0)*x4778*x4787))+(((-1.0)*py*x4779)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3, j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4792=((1.0)*cj5);
IkReal x4793=(sj0*sj6);
IkReal x4794=(r02*sj5);
IkReal x4795=(cj6*r01);
IkReal x4796=(cj6*r11);
IkReal x4797=(r12*sj5);
IkReal x4798=(cj0*sj6);
CheckValue<IkReal> x4799=IKPowWithIntegerCheck(sj2,-1);
if(!x4799.valid){
continue;
}
if( IKabs(((x4799.value)*((((sj0*x4797))+(((-1.0)*r10*x4792*x4793))+((cj0*x4794))+(((-1.0)*sj0*x4792*x4796))+(((-1.0)*cj0*x4792*x4795))+(((-1.0)*r00*x4792*x4798)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x4797))+((sj0*x4794))+((cj5*r10*x4798))+(((-1.0)*sj0*x4792*x4795))+(((-1.0)*r00*x4792*x4793))+((cj0*cj5*x4796)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4799.value)*((((sj0*x4797))+(((-1.0)*r10*x4792*x4793))+((cj0*x4794))+(((-1.0)*sj0*x4792*x4796))+(((-1.0)*cj0*x4792*x4795))+(((-1.0)*r00*x4792*x4798))))))+IKsqr(((((-1.0)*cj0*x4797))+((sj0*x4794))+((cj5*r10*x4798))+(((-1.0)*sj0*x4792*x4795))+(((-1.0)*r00*x4792*x4793))+((cj0*cj5*x4796))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x4799.value)*((((sj0*x4797))+(((-1.0)*r10*x4792*x4793))+((cj0*x4794))+(((-1.0)*sj0*x4792*x4796))+(((-1.0)*cj0*x4792*x4795))+(((-1.0)*r00*x4792*x4798))))), ((((-1.0)*cj0*x4797))+((sj0*x4794))+((cj5*r10*x4798))+(((-1.0)*sj0*x4792*x4795))+(((-1.0)*r00*x4792*x4793))+((cj0*cj5*x4796))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x4800=IKsin(j3);
IkReal x4801=(cj5*cj6);
IkReal x4802=((1.0)*sj5);
IkReal x4803=((1.0)*cj0);
IkReal x4804=(cj0*sj5);
IkReal x4805=(cj5*sj6);
IkReal x4806=(r10*x4805);
IkReal x4807=((1.0)*x4800);
IkReal x4808=((1.0)*r11*x4801);
evalcond[0]=((((-1.0)*r22*x4802))+(((-1.0)*cj2*x4807))+((r21*x4801))+((r20*x4805)));
evalcond[1]=((((-1.0)*r02*sj0*x4802))+((r01*sj0*x4801))+(((-1.0)*r11*x4801*x4803))+(IKcos(j3))+(((-1.0)*x4803*x4806))+((r12*x4804))+((r00*sj0*x4805)));
evalcond[2]=(((r02*x4804))+(((-1.0)*sj2*x4807))+(((-1.0)*r00*x4803*x4805))+((r12*sj0*sj5))+(((-1.0)*r01*x4801*x4803))+(((-1.0)*sj0*x4806))+(((-1.0)*sj0*x4808)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
IkReal x4809=cj2*cj2;
IkReal x4810=(cj2*cj3);
IkReal x4811=(cj6*r20);
IkReal x4812=(cj6*r21);
IkReal x4813=(cj5*r22);
IkReal x4814=(r20*sj6);
IkReal x4815=((1.0)*sj2*sj5);
IkReal x4816=((1.0)*r21*sj6);
IkReal x4817=((1.0)+((x4809*(cj3*cj3)))+(((-1.0)*x4809)));
j4eval[0]=x4817;
j4eval[1]=IKsign(x4817);
j4eval[2]=((IKabs((((sj2*x4811))+((x4810*x4813))+(((-1.0)*sj2*x4816))+((sj5*x4810*x4814))+((sj5*x4810*x4812)))))+(IKabs(((((-1.0)*x4814*x4815))+((x4810*x4811))+(((-1.0)*x4810*x4816))+(((-1.0)*sj2*x4813))+(((-1.0)*x4812*x4815))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=1.0;
j1=0;
j4eval[0]=sj3;
j4eval[1]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x4818=(cj5*cj6);
IkReal x4819=(cj0*sj6);
IkReal x4820=(r01*sj0);
IkReal x4821=((1.0)*sj0);
IkReal x4822=((1.0)*cj5);
IkReal x4823=(cj0*r12);
IkReal x4824=(r02*sj5);
IkReal x4825=((1.0)*sj5);
IkReal x4826=(cj5*sj6);
IkReal x4827=((1.0)*cj0);
IkReal x4828=(cj0*cj6*r10);
IkReal x4829=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=(((r21*x4818))+(((-1.0)*r22*x4825))+((r20*x4826)));
evalcond[2]=(((r11*x4819))+(((-1.0)*cj6*r10*x4827))+(((-1.0)*sj6*x4820))+x4829);
evalcond[3]=((((-1.0)*r01*x4818*x4827))+(((-1.0)*r11*x4818*x4821))+((r12*sj0*sj5))+(((-1.0)*r00*x4819*x4822))+((cj0*x4824))+(((-1.0)*r10*x4821*x4826)));
evalcond[4]=((1.0)+((x4818*x4820))+(((-1.0)*r10*x4819*x4822))+((sj5*x4823))+((r00*sj0*x4826))+(((-1.0)*r11*x4818*x4827))+(((-1.0)*x4821*x4824)));
evalcond[5]=(((cj5*x4823))+(((-1.0)*r00*sj5*sj6*x4821))+((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x4821))+(((-1.0)*cj6*x4820*x4825))+((r10*sj5*x4819)));
evalcond[6]=((0.0001)+(((-0.02626)*x4828))+(((-0.02626)*sj6*x4820))+(((0.02626)*r11*x4819))+(((0.02626)*x4829))+(((-1.0)*py*x4827))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4830=((1.0)*r21);
IkReal x4831=(cj2*sj6);
IkReal x4832=(cj5*r22);
IkReal x4833=(cj6*sj5);
IkReal x4834=(r20*sj2);
if( IKabs(((((-1.0)*x4830*x4831))+((cj2*cj6*r20))+(((-1.0)*sj5*sj6*x4834))+(((-1.0)*sj2*x4830*x4833))+(((-1.0)*sj2*x4832)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*sj5*x4831))+(((-1.0)*sj2*sj6*x4830))+((cj6*x4834))+((cj2*x4832))+((cj2*r21*x4833)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4830*x4831))+((cj2*cj6*r20))+(((-1.0)*sj5*sj6*x4834))+(((-1.0)*sj2*x4830*x4833))+(((-1.0)*sj2*x4832))))+IKsqr((((r20*sj5*x4831))+(((-1.0)*sj2*sj6*x4830))+((cj6*x4834))+((cj2*x4832))+((cj2*r21*x4833))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x4830*x4831))+((cj2*cj6*r20))+(((-1.0)*sj5*sj6*x4834))+(((-1.0)*sj2*x4830*x4833))+(((-1.0)*sj2*x4832))), (((r20*sj5*x4831))+(((-1.0)*sj2*sj6*x4830))+((cj6*x4834))+((cj2*x4832))+((cj2*r21*x4833))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4835=IKcos(j4);
IkReal x4836=IKsin(j4);
IkReal x4837=(cj6*sj0);
IkReal x4838=(sj0*sj6);
IkReal x4839=(cj6*r20);
IkReal x4840=((0.02626)*sj6);
IkReal x4841=(cj0*r01);
IkReal x4842=(cj0*r00);
IkReal x4843=(sj5*sj6);
IkReal x4844=((1.0)*r21);
IkReal x4845=(cj6*sj5);
IkReal x4846=(cj2*x4835);
IkReal x4847=((0.02626)*x4836);
IkReal x4848=(cj2*x4836);
IkReal x4849=((0.0718)*x4835);
IkReal x4850=(sj2*x4835);
IkReal x4851=(sj2*x4836);
IkReal x4852=((1.0)*x4851);
evalcond[0]=((((-1.0)*x4850))+(((-1.0)*sj6*x4844))+(((-1.0)*x4848))+x4839);
evalcond[1]=((((-1.0)*r20*x4843))+(((-1.0)*x4844*x4845))+(((-1.0)*x4852))+(((-1.0)*cj5*r22))+x4846);
evalcond[2]=(((sj6*x4841))+((r11*x4838))+(((-1.0)*x4852))+(((-1.0)*cj6*x4842))+(((-1.0)*r10*x4837))+x4846);
evalcond[3]=(((cj5*r12*sj0))+((r10*sj5*x4838))+((cj0*cj5*r02))+((x4841*x4845))+((x4842*x4843))+((r11*sj5*x4837))+x4850+x4848);
evalcond[4]=((-0.1255)+(((-1.0)*cj2*x4847))+(((-0.0718)*x4846))+(((-0.21326)*cj2))+(((-0.0009)*sj2))+(((-0.02626)*x4850))+pz+(((0.0718)*x4851))+(((-1.0)*r21*x4840))+(((0.02626)*x4839)));
evalcond[5]=((-0.001)+(((-1.0)*sj2*x4847))+(((-1.0)*sj2*x4849))+(((-0.0718)*x4848))+((x4840*x4841))+(((-0.02626)*cj6*x4842))+(((0.02626)*x4846))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-1.0)*py*sj0))+(((0.02626)*r11*x4838))+(((-1.0)*cj0*px))+(((-0.02626)*r10*x4837)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4853=(cj5*cj6);
IkReal x4854=(cj0*sj6);
IkReal x4855=(r01*sj0);
IkReal x4856=((1.0)*sj0);
IkReal x4857=((1.0)*cj5);
IkReal x4858=(cj0*r12);
IkReal x4859=(r02*sj5);
IkReal x4860=((1.0)*sj5);
IkReal x4861=(cj5*sj6);
IkReal x4862=((1.0)*cj0);
IkReal x4863=(cj0*cj6*r10);
IkReal x4864=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x4853))+(((-1.0)*r22*x4860))+((r20*x4861)));
evalcond[2]=(x4864+(((-1.0)*cj6*r10*x4862))+(((-1.0)*sj6*x4855))+((r11*x4854)));
evalcond[3]=(((cj0*x4859))+(((-1.0)*r00*x4854*x4857))+(((-1.0)*r11*x4853*x4856))+((r12*sj0*sj5))+(((-1.0)*r01*x4853*x4862))+(((-1.0)*r10*x4856*x4861)));
evalcond[4]=((-1.0)+((x4853*x4855))+(((-1.0)*x4856*x4859))+(((-1.0)*r11*x4853*x4862))+((sj5*x4858))+((r00*sj0*x4861))+(((-1.0)*r10*x4854*x4857)));
evalcond[5]=((((-1.0)*cj5*r02*x4856))+(((-1.0)*cj6*x4855*x4860))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x4856))+((r10*sj5*x4854))+((cj5*x4858)));
evalcond[6]=((0.0001)+(((-0.02626)*sj6*x4855))+(((-0.02626)*x4863))+(((-1.0)*py*x4862))+(((0.02626)*x4864))+((px*sj0))+(((0.02626)*r11*x4854)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4865=(cj2*r21);
IkReal x4866=((1.0)*cj6);
IkReal x4867=((1.0)*cj2);
IkReal x4868=(cj5*r22);
IkReal x4869=(r20*sj2);
IkReal x4870=(sj5*sj6);
IkReal x4871=(r21*sj2);
if( IKabs((((sj6*x4865))+(((-1.0)*sj5*x4866*x4871))+(((-1.0)*cj2*r20*x4866))+(((-1.0)*x4869*x4870))+(((-1.0)*sj2*x4868)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x4865*x4866))+(((-1.0)*sj6*x4871))+((cj6*x4869))+(((-1.0)*x4867*x4868))+(((-1.0)*r20*x4867*x4870)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj6*x4865))+(((-1.0)*sj5*x4866*x4871))+(((-1.0)*cj2*r20*x4866))+(((-1.0)*x4869*x4870))+(((-1.0)*sj2*x4868))))+IKsqr(((((-1.0)*sj5*x4865*x4866))+(((-1.0)*sj6*x4871))+((cj6*x4869))+(((-1.0)*x4867*x4868))+(((-1.0)*r20*x4867*x4870))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj6*x4865))+(((-1.0)*sj5*x4866*x4871))+(((-1.0)*cj2*r20*x4866))+(((-1.0)*x4869*x4870))+(((-1.0)*sj2*x4868))), ((((-1.0)*sj5*x4865*x4866))+(((-1.0)*sj6*x4871))+((cj6*x4869))+(((-1.0)*x4867*x4868))+(((-1.0)*r20*x4867*x4870))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4872=IKcos(j4);
IkReal x4873=IKsin(j4);
IkReal x4874=(cj6*sj0);
IkReal x4875=(sj0*sj6);
IkReal x4876=((0.02626)*cj6);
IkReal x4877=(r21*sj6);
IkReal x4878=(cj0*r00);
IkReal x4879=(sj5*sj6);
IkReal x4880=((1.0)*cj6);
IkReal x4881=(cj2*x4873);
IkReal x4882=((0.02626)*x4873);
IkReal x4883=(cj2*x4872);
IkReal x4884=(sj2*x4873);
IkReal x4885=(sj2*x4872);
IkReal x4886=(cj0*r01*sj6);
IkReal x4887=((1.0)*x4885);
evalcond[0]=((((-1.0)*x4887))+((cj6*r20))+(((-1.0)*x4877))+x4881);
evalcond[1]=((((-1.0)*r21*sj5*x4880))+(((-1.0)*x4884))+(((-1.0)*x4883))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x4879)));
evalcond[2]=((((-1.0)*r10*x4874))+((r11*x4875))+(((-1.0)*x4878*x4880))+x4883+x4884+x4886);
evalcond[3]=(((cj5*r12*sj0))+((r11*sj5*x4874))+((cj0*cj5*r02))+(((-1.0)*x4887))+((cj0*cj6*r01*sj5))+((r10*sj5*x4875))+((x4878*x4879))+x4881);
evalcond[4]=((-0.1255)+((r20*x4876))+(((0.02626)*x4881))+(((-0.02626)*x4885))+(((-0.0009)*sj2))+pz+(((-0.02626)*x4877))+(((-0.01834)*cj2))+(((0.0718)*x4884))+(((0.0718)*x4883)));
evalcond[5]=((-0.001)+(((-1.0)*x4876*x4878))+((sj2*x4882))+(((0.02626)*x4886))+(((0.02626)*x4883))+(((-0.01834)*sj2))+(((0.02626)*r11*x4875))+(((-0.02626)*r10*x4874))+(((0.0009)*cj2))+(((-0.0718)*x4881))+(((-1.0)*py*sj0))+(((0.0718)*x4885))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4888=(cj0*sj5);
IkReal x4889=(cj5*cj6);
IkReal x4890=((1.0)*sj5);
IkReal x4891=((1.0)*cj0);
IkReal x4892=((1.0)*sj0);
IkReal x4893=(cj5*sj6);
IkReal x4894=(r10*x4893);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj3))+((r20*x4893))+(((-1.0)*r22*x4890))+((r21*x4889)));
evalcond[2]=((((-1.0)*r00*x4891*x4893))+((r02*x4888))+(((-1.0)*r11*x4889*x4892))+((r12*sj0*sj5))+(((-1.0)*x4892*x4894))+(((-1.0)*r01*x4889*x4891)));
evalcond[3]=(((r00*sj0*x4893))+((r12*x4888))+cj3+(((-1.0)*r11*x4889*x4891))+(((-1.0)*r02*sj0*x4890))+((r01*sj0*x4889))+(((-1.0)*x4891*x4894)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4895=((1.0)*sj6);
CheckValue<IkReal> x4896=IKPowWithIntegerCheck(cj3,-1);
if(!x4896.valid){
continue;
}
if( IKabs(((x4896.value)*(((((-1.0)*r21*x4895))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x4895))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x4895)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4896.value)*(((((-1.0)*r21*x4895))+((cj6*r20))))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x4895))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x4895))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x4896.value)*(((((-1.0)*r21*x4895))+((cj6*r20))))), (((cj6*r10*sj0))+(((-1.0)*cj0*r01*x4895))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x4895))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4897=IKcos(j4);
IkReal x4898=IKsin(j4);
IkReal x4899=(cj6*sj0);
IkReal x4900=((0.02626)*r10);
IkReal x4901=(sj0*sj6);
IkReal x4902=(r11*sj5);
IkReal x4903=(r10*sj5);
IkReal x4904=(cj0*cj6);
IkReal x4905=((0.02626)*r01);
IkReal x4906=(cj0*sj6);
IkReal x4907=(r21*sj6);
IkReal x4908=((1.0)*cj5);
IkReal x4909=(cj6*r20);
IkReal x4910=((1.0)*r10);
IkReal x4911=((1.0)*r01);
IkReal x4912=(r00*sj5);
IkReal x4913=((1.0)*py);
IkReal x4914=(cj5*r12);
IkReal x4915=((1.0)*sj5);
IkReal x4916=((0.02626)*r00);
IkReal x4917=((0.02626)*r11);
IkReal x4918=((1.0)*x4898);
IkReal x4919=((0.02626)*x4898);
IkReal x4920=(sj3*x4897);
IkReal x4921=(cj3*x4897);
evalcond[0]=(x4909+(((-1.0)*cj3*x4918))+(((-1.0)*x4907)));
evalcond[1]=(x4921+(((-1.0)*r22*x4908))+(((-1.0)*r20*sj6*x4915))+(((-1.0)*cj6*r21*x4915)));
evalcond[2]=((((-1.0)*r00*x4904))+(((-1.0)*x4899*x4910))+((r11*x4901))+((r01*x4906))+x4897);
evalcond[3]=((((-1.0)*sj3*x4918))+(((-1.0)*x4904*x4910))+((r11*x4906))+((r00*x4899))+(((-1.0)*x4901*x4911)));
evalcond[4]=((-0.2413)+(((-1.0)*cj3*x4919))+(((-0.0718)*x4921))+(((-0.02626)*x4907))+(((0.02626)*x4909))+pz+(((-0.09746)*cj3)));
evalcond[5]=(((cj0*cj5*r02))+((x4906*x4912))+((x4901*x4903))+((sj0*x4914))+((r01*sj5*x4904))+((x4899*x4902))+x4898);
evalcond[6]=(x4920+(((-1.0)*x4901*x4912))+(((-1.0)*r02*sj0*x4908))+((x4902*x4904))+((x4903*x4906))+(((-1.0)*sj5*x4899*x4911))+((cj0*x4914)));
evalcond[7]=((-0.0001)+(((-1.0)*x4899*x4900))+(((0.02626)*x4897))+((x4905*x4906))+((x4901*x4917))+(((-1.0)*x4904*x4916))+(((-0.0718)*x4898))+(((-1.0)*sj0*x4913))+(((-1.0)*cj0*px)));
evalcond[8]=((0.0001)+(((-0.0718)*x4920))+(((-1.0)*cj0*x4913))+(((-1.0)*sj3*x4919))+((x4906*x4917))+(((-1.0)*x4900*x4904))+((px*sj0))+(((-1.0)*x4901*x4905))+(((-0.09746)*sj3))+((x4899*x4916)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x4922 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x4922.valid){
continue;
}
CheckValue<IkReal> x4923=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x4923.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x4922.value)+(((1.5707963267949)*(x4923.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4924=IKcos(j4);
IkReal x4925=IKsin(j4);
IkReal x4926=(cj6*sj0);
IkReal x4927=((0.02626)*r10);
IkReal x4928=(sj0*sj6);
IkReal x4929=(r11*sj5);
IkReal x4930=(r10*sj5);
IkReal x4931=(cj0*cj6);
IkReal x4932=((0.02626)*r01);
IkReal x4933=(cj0*sj6);
IkReal x4934=(r21*sj6);
IkReal x4935=((1.0)*cj5);
IkReal x4936=(cj6*r20);
IkReal x4937=((1.0)*r10);
IkReal x4938=((1.0)*r01);
IkReal x4939=(r00*sj5);
IkReal x4940=((1.0)*py);
IkReal x4941=(cj5*r12);
IkReal x4942=((1.0)*sj5);
IkReal x4943=((0.02626)*r00);
IkReal x4944=((0.02626)*r11);
IkReal x4945=((1.0)*x4925);
IkReal x4946=((0.02626)*x4925);
IkReal x4947=(sj3*x4924);
IkReal x4948=(cj3*x4924);
evalcond[0]=(x4936+(((-1.0)*x4934))+(((-1.0)*cj3*x4945)));
evalcond[1]=(x4948+(((-1.0)*cj6*r21*x4942))+(((-1.0)*r20*sj6*x4942))+(((-1.0)*r22*x4935)));
evalcond[2]=(x4924+(((-1.0)*x4926*x4937))+((r01*x4933))+(((-1.0)*r00*x4931))+((r11*x4928)));
evalcond[3]=((((-1.0)*sj3*x4945))+(((-1.0)*x4931*x4937))+((r00*x4926))+((r11*x4933))+(((-1.0)*x4928*x4938)));
evalcond[4]=((-0.2413)+(((0.02626)*x4936))+(((-0.0718)*x4948))+pz+(((-0.09746)*cj3))+(((-1.0)*cj3*x4946))+(((-0.02626)*x4934)));
evalcond[5]=(x4925+((cj0*cj5*r02))+((x4926*x4929))+((x4933*x4939))+((sj0*x4941))+((x4928*x4930))+((r01*sj5*x4931)));
evalcond[6]=(x4947+((cj0*x4941))+(((-1.0)*x4928*x4939))+(((-1.0)*sj5*x4926*x4938))+((x4929*x4931))+((x4930*x4933))+(((-1.0)*r02*sj0*x4935)));
evalcond[7]=((-0.0001)+((x4932*x4933))+(((-0.0718)*x4925))+((x4928*x4944))+(((-1.0)*x4926*x4927))+(((-1.0)*x4931*x4943))+(((-1.0)*sj0*x4940))+(((-1.0)*cj0*px))+(((0.02626)*x4924)));
evalcond[8]=((0.0001)+(((-1.0)*sj3*x4946))+(((-0.0718)*x4947))+((x4926*x4943))+((px*sj0))+(((-1.0)*cj0*x4940))+(((-1.0)*x4927*x4931))+((x4933*x4944))+(((-0.09746)*sj3))+(((-1.0)*x4928*x4932)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4949=(cj0*sj5);
IkReal x4950=(cj5*cj6);
IkReal x4951=((1.0)*sj5);
IkReal x4952=((1.0)*cj0);
IkReal x4953=((1.0)*sj0);
IkReal x4954=(cj5*sj6);
IkReal x4955=(r10*x4954);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=(sj3+(((-1.0)*r22*x4951))+((r20*x4954))+((r21*x4950)));
evalcond[2]=((((-1.0)*r01*x4950*x4952))+((r02*x4949))+((r12*sj0*sj5))+(((-1.0)*r11*x4950*x4953))+(((-1.0)*r00*x4952*x4954))+(((-1.0)*x4953*x4955)));
evalcond[3]=(((r01*sj0*x4950))+cj3+(((-1.0)*r02*sj0*x4951))+((r12*x4949))+(((-1.0)*r11*x4950*x4952))+(((-1.0)*x4952*x4955))+((r00*sj0*x4954)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x4956=((1.0)*sj5);
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*cj6*r21*x4956))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x4956))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4957=((1.0)*cj6);
CheckValue<IkReal> x4958=IKPowWithIntegerCheck(cj3,-1);
if(!x4958.valid){
continue;
}
if( IKabs(((x4958.value)*(((((-1.0)*r20*x4957))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x4957))+(((-1.0)*r10*sj0*x4957)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4958.value)*(((((-1.0)*r20*x4957))+((r21*sj6))))))+IKsqr((((r11*sj0*sj6))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x4957))+(((-1.0)*r10*sj0*x4957))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x4958.value)*(((((-1.0)*r20*x4957))+((r21*sj6))))), (((r11*sj0*sj6))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x4957))+(((-1.0)*r10*sj0*x4957))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4959=IKcos(j4);
IkReal x4960=IKsin(j4);
IkReal x4961=(r10*sj0);
IkReal x4962=((0.02626)*cj6);
IkReal x4963=(sj0*sj6);
IkReal x4964=(cj5*r12);
IkReal x4965=(sj5*sj6);
IkReal x4966=(cj0*r10);
IkReal x4967=((0.02626)*r01);
IkReal x4968=(cj0*sj6);
IkReal x4969=(r21*sj6);
IkReal x4970=((1.0)*cj5);
IkReal x4971=((1.0)*cj6);
IkReal x4972=(cj0*r00);
IkReal x4973=((1.0)*py);
IkReal x4974=(cj6*sj0);
IkReal x4975=(r11*sj5);
IkReal x4976=((0.02626)*r11);
IkReal x4977=(r01*sj5);
IkReal x4978=(cj0*cj6);
IkReal x4979=((1.0)*x4959);
IkReal x4980=(sj3*x4960);
IkReal x4981=(sj3*x4959);
IkReal x4982=(cj3*x4960);
evalcond[0]=(x4982+(((-1.0)*x4969))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x4970))+(((-1.0)*cj3*x4979))+(((-1.0)*r20*x4965))+(((-1.0)*r21*sj5*x4971)));
evalcond[2]=((((-1.0)*x4979))+((r11*x4963))+(((-1.0)*x4961*x4971))+(((-1.0)*x4971*x4972))+((r01*x4968)));
evalcond[3]=((((-1.0)*r01*x4963))+((r11*x4968))+(((-1.0)*x4966*x4971))+(((-1.0)*x4980))+((r00*x4974)));
evalcond[4]=((-0.0097)+(((0.0718)*cj3*x4959))+(((-0.02626)*x4969))+pz+((r20*x4962))+(((0.09746)*cj3))+(((0.02626)*x4982)));
evalcond[5]=(((cj0*cj5*r02))+((x4961*x4965))+((x4977*x4978))+((x4965*x4972))+((sj0*x4964))+((x4974*x4975))+(((-1.0)*x4960)));
evalcond[6]=(x4981+((x4965*x4966))+(((-1.0)*r02*sj0*x4970))+(((-1.0)*sj0*x4971*x4977))+((x4975*x4978))+((cj0*x4964))+(((-1.0)*r00*sj5*x4963)));
evalcond[7]=((-0.0019)+(((-0.02626)*x4959))+((x4967*x4968))+(((-1.0)*x4962*x4972))+(((-1.0)*x4961*x4962))+(((-1.0)*sj0*x4973))+(((0.0718)*x4960))+(((-1.0)*cj0*px))+((x4963*x4976)));
evalcond[8]=((0.0001)+((r00*sj0*x4962))+(((-1.0)*x4963*x4967))+(((-0.0718)*x4981))+(((-1.0)*x4962*x4966))+(((-1.0)*cj0*x4973))+((x4968*x4976))+(((-0.02626)*x4980))+((px*sj0))+(((-0.09746)*sj3)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4983=((1.0)*sj5);
CheckValue<IkReal> x4984=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x4984.valid){
continue;
}
CheckValue<IkReal> x4985 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x4983))+(((-1.0)*r20*sj6*x4983))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x4985.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4984.value)))+(x4985.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x4986=IKcos(j4);
IkReal x4987=IKsin(j4);
IkReal x4988=(r10*sj0);
IkReal x4989=((0.02626)*cj6);
IkReal x4990=(sj0*sj6);
IkReal x4991=(cj5*r12);
IkReal x4992=(sj5*sj6);
IkReal x4993=(cj0*r10);
IkReal x4994=((0.02626)*r01);
IkReal x4995=(cj0*sj6);
IkReal x4996=(r21*sj6);
IkReal x4997=((1.0)*cj5);
IkReal x4998=((1.0)*cj6);
IkReal x4999=(cj0*r00);
IkReal x5000=((1.0)*py);
IkReal x5001=(cj6*sj0);
IkReal x5002=(r11*sj5);
IkReal x5003=((0.02626)*r11);
IkReal x5004=(r01*sj5);
IkReal x5005=(cj0*cj6);
IkReal x5006=((1.0)*x4986);
IkReal x5007=(sj3*x4987);
IkReal x5008=(sj3*x4986);
IkReal x5009=(cj3*x4987);
evalcond[0]=(x5009+((cj6*r20))+(((-1.0)*x4996)));
evalcond[1]=((((-1.0)*r20*x4992))+(((-1.0)*r22*x4997))+(((-1.0)*r21*sj5*x4998))+(((-1.0)*cj3*x5006)));
evalcond[2]=(((r11*x4990))+(((-1.0)*x4988*x4998))+((r01*x4995))+(((-1.0)*x5006))+(((-1.0)*x4998*x4999)));
evalcond[3]=((((-1.0)*x5007))+((r11*x4995))+(((-1.0)*x4993*x4998))+((r00*x5001))+(((-1.0)*r01*x4990)));
evalcond[4]=((-0.0097)+(((0.02626)*x5009))+(((-0.02626)*x4996))+pz+(((0.0718)*cj3*x4986))+(((0.09746)*cj3))+((r20*x4989)));
evalcond[5]=(((x5001*x5002))+((x4992*x4999))+((cj0*cj5*r02))+((sj0*x4991))+((x4988*x4992))+(((-1.0)*x4987))+((x5004*x5005)));
evalcond[6]=(((x4992*x4993))+((x5002*x5005))+(((-1.0)*r00*sj5*x4990))+(((-1.0)*r02*sj0*x4997))+x5008+(((-1.0)*sj0*x4998*x5004))+((cj0*x4991)));
evalcond[7]=((-0.0019)+((x4994*x4995))+(((-1.0)*sj0*x5000))+(((-1.0)*x4988*x4989))+((x4990*x5003))+(((-0.02626)*x4986))+(((0.0718)*x4987))+(((-1.0)*cj0*px))+(((-1.0)*x4989*x4999)));
evalcond[8]=((0.0001)+(((-0.02626)*x5007))+((r00*sj0*x4989))+(((-1.0)*x4990*x4994))+((x4995*x5003))+((px*sj0))+(((-0.09746)*sj3))+(((-0.0718)*x5008))+(((-1.0)*cj0*x5000))+(((-1.0)*x4989*x4993)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5010=(cj0*sj5);
IkReal x5011=(cj5*cj6);
IkReal x5012=((1.0)*sj5);
IkReal x5013=((1.0)*cj0);
IkReal x5014=((1.0)*sj0);
IkReal x5015=(cj5*sj6);
IkReal x5016=(r10*x5015);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r20*x5015))+(((-1.0)*r22*x5012))+((r21*x5011))+(((-1.0)*cj2)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r01*x5011*x5013))+(((-1.0)*r00*x5013*x5015))+((r02*x5010))+((r12*sj0*sj5))+(((-1.0)*x5014*x5016))+(((-1.0)*r11*x5011*x5014)));
evalcond[3]=(((r01*sj0*x5011))+(((-1.0)*x5013*x5016))+(((-1.0)*r11*x5011*x5013))+((r00*sj0*x5015))+((r12*x5010))+(((-1.0)*r02*sj0*x5012)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
IkReal x5017=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*sj5*x5017))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))))+(IKabs(((((-1.0)*sj6*x5017))+((cj6*r20))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=1.0;
j1=0;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5018=((1.0)*sj5);
IkReal x5019=((1.0)*sj6);
CheckValue<IkReal> x5020=IKPowWithIntegerCheck(sj2,-1);
if(!x5020.valid){
continue;
}
CheckValue<IkReal> x5021=IKPowWithIntegerCheck(cj2,-1);
if(!x5021.valid){
continue;
}
if( IKabs(((x5020.value)*(((((-1.0)*r20*sj6*x5018))+(((-1.0)*cj6*r21*x5018))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5021.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5019))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5019)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5020.value)*(((((-1.0)*r20*sj6*x5018))+(((-1.0)*cj6*r21*x5018))+(((-1.0)*cj5*r22))))))+IKsqr(((x5021.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5019))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5019))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5020.value)*(((((-1.0)*r20*sj6*x5018))+(((-1.0)*cj6*r21*x5018))+(((-1.0)*cj5*r22))))), ((x5021.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5019))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5019))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5022=IKcos(j4);
IkReal x5023=IKsin(j4);
IkReal x5024=(sj0*sj6);
IkReal x5025=((0.02626)*r01);
IkReal x5026=(cj5*r12);
IkReal x5027=(cj6*sj0);
IkReal x5028=(r11*sj5);
IkReal x5029=(r10*sj5);
IkReal x5030=(cj0*sj6);
IkReal x5031=((1.0)*cj5);
IkReal x5032=((0.02626)*cj6);
IkReal x5033=(r21*sj6);
IkReal x5034=((1.0)*r01);
IkReal x5035=(r00*sj5);
IkReal x5036=((1.0)*py);
IkReal x5037=((1.0)*sj5);
IkReal x5038=((1.0)*cj0);
IkReal x5039=((0.02626)*r11);
IkReal x5040=(cj0*cj6);
IkReal x5041=(r10*x5040);
IkReal x5042=(cj2*x5023);
IkReal x5043=(cj2*x5022);
IkReal x5044=((1.0)*x5023);
IkReal x5045=(sj2*x5022);
evalcond[0]=((((-1.0)*x5033))+(((-1.0)*x5045))+((cj6*r20)));
evalcond[1]=((((-1.0)*cj6*r21*x5037))+(((-1.0)*sj2*x5044))+(((-1.0)*r22*x5031))+(((-1.0)*r20*sj6*x5037)));
evalcond[2]=(((r11*x5024))+x5043+((r01*x5030))+(((-1.0)*r10*x5027))+(((-1.0)*cj6*r00*x5038)));
evalcond[3]=((((-1.0)*x5024*x5034))+(((-1.0)*x5044))+((r11*x5030))+((r00*x5027))+(((-1.0)*cj6*r10*x5038)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5033))+((r20*x5032))+(((-0.1158)*cj2))+(((-0.02626)*x5045))+(((-0.0009)*sj2))+pz+(((0.0718)*sj2*x5023)));
evalcond[5]=(((r01*sj5*x5040))+((cj0*cj5*r02))+((x5027*x5028))+((x5030*x5035))+((x5024*x5029))+x5042+((sj0*x5026)));
evalcond[6]=(((cj0*x5026))+(((-1.0)*r02*sj0*x5031))+(((-1.0)*sj5*x5027*x5034))+((x5028*x5040))+x5022+(((-1.0)*x5024*x5035))+((x5029*x5030)));
evalcond[7]=((-0.09736)+(((-0.02626)*x5023))+((x5030*x5039))+(((-1.0)*cj0*r10*x5032))+(((-0.0718)*x5022))+((px*sj0))+(((-1.0)*cj0*x5036))+(((-1.0)*x5024*x5025))+(((0.02626)*r00*x5027)));
evalcond[8]=((-0.001)+(((-1.0)*cj0*r00*x5032))+(((-0.1158)*sj2))+(((-1.0)*px*x5038))+(((-1.0)*sj0*x5036))+((x5024*x5039))+(((0.0009)*cj2))+(((-0.0718)*x5042))+(((-0.02626)*r10*x5027))+((x5025*x5030))+(((0.02626)*x5043)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5046=((1.0)*sj6);
CheckValue<IkReal> x5047=IKPowWithIntegerCheck(sj2,-1);
if(!x5047.valid){
continue;
}
if( IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x5046))+(((-1.0)*cj0*cj6*r10)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5047.value)*(((((-1.0)*r21*x5046))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x5046))+(((-1.0)*cj0*cj6*r10))))+IKsqr(((x5047.value)*(((((-1.0)*r21*x5046))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x5046))+(((-1.0)*cj0*cj6*r10))), ((x5047.value)*(((((-1.0)*r21*x5046))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5048=IKcos(j4);
IkReal x5049=IKsin(j4);
IkReal x5050=(sj0*sj6);
IkReal x5051=((0.02626)*r01);
IkReal x5052=(cj5*r12);
IkReal x5053=(cj6*sj0);
IkReal x5054=(r11*sj5);
IkReal x5055=(r10*sj5);
IkReal x5056=(cj0*sj6);
IkReal x5057=((1.0)*cj5);
IkReal x5058=((0.02626)*cj6);
IkReal x5059=(r21*sj6);
IkReal x5060=((1.0)*r01);
IkReal x5061=(r00*sj5);
IkReal x5062=((1.0)*py);
IkReal x5063=((1.0)*sj5);
IkReal x5064=((1.0)*cj0);
IkReal x5065=((0.02626)*r11);
IkReal x5066=(cj0*cj6);
IkReal x5067=(r10*x5066);
IkReal x5068=(cj2*x5049);
IkReal x5069=(cj2*x5048);
IkReal x5070=((1.0)*x5049);
IkReal x5071=(sj2*x5048);
evalcond[0]=((((-1.0)*x5071))+((cj6*r20))+(((-1.0)*x5059)));
evalcond[1]=((((-1.0)*cj6*r21*x5063))+(((-1.0)*r22*x5057))+(((-1.0)*sj2*x5070))+(((-1.0)*r20*sj6*x5063)));
evalcond[2]=(((r11*x5050))+((r01*x5056))+x5069+(((-1.0)*cj6*r00*x5064))+(((-1.0)*r10*x5053)));
evalcond[3]=((((-1.0)*x5070))+(((-1.0)*cj6*r10*x5064))+((r11*x5056))+((r00*x5053))+(((-1.0)*x5050*x5060)));
evalcond[4]=((-0.1255)+((r20*x5058))+(((-0.1158)*cj2))+(((-0.02626)*x5071))+(((-0.0009)*sj2))+pz+(((0.0718)*sj2*x5049))+(((-0.02626)*x5059)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x5066))+((x5053*x5054))+x5068+((x5050*x5055))+((x5056*x5061))+((sj0*x5052)));
evalcond[6]=(((x5055*x5056))+((x5054*x5066))+(((-1.0)*x5050*x5061))+x5048+(((-1.0)*r02*sj0*x5057))+((cj0*x5052))+(((-1.0)*sj5*x5053*x5060)));
evalcond[7]=((-0.09736)+(((-1.0)*cj0*r10*x5058))+(((-1.0)*cj0*x5062))+(((-0.02626)*x5049))+(((0.02626)*r00*x5053))+(((-0.0718)*x5048))+((px*sj0))+((x5056*x5065))+(((-1.0)*x5050*x5051)));
evalcond[8]=((-0.001)+(((-1.0)*sj0*x5062))+(((-0.1158)*sj2))+(((-0.02626)*r10*x5053))+(((-0.0718)*x5068))+(((0.0009)*cj2))+(((0.02626)*x5069))+(((-1.0)*cj0*r00*x5058))+((x5051*x5056))+(((-1.0)*px*x5064))+((x5050*x5065)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5072=((1.0)*r21);
CheckValue<IkReal> x5073=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x5073.valid){
continue;
}
CheckValue<IkReal> x5074 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x5072))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),(((cj6*r20))+(((-1.0)*sj6*x5072))),IKFAST_ATAN2_MAGTHRESH);
if(!x5074.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5073.value)))+(x5074.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5075=IKcos(j4);
IkReal x5076=IKsin(j4);
IkReal x5077=(sj0*sj6);
IkReal x5078=((0.02626)*r01);
IkReal x5079=(cj5*r12);
IkReal x5080=(cj6*sj0);
IkReal x5081=(r11*sj5);
IkReal x5082=(r10*sj5);
IkReal x5083=(cj0*sj6);
IkReal x5084=((1.0)*cj5);
IkReal x5085=((0.02626)*cj6);
IkReal x5086=(r21*sj6);
IkReal x5087=((1.0)*r01);
IkReal x5088=(r00*sj5);
IkReal x5089=((1.0)*py);
IkReal x5090=((1.0)*sj5);
IkReal x5091=((1.0)*cj0);
IkReal x5092=((0.02626)*r11);
IkReal x5093=(cj0*cj6);
IkReal x5094=(r10*x5093);
IkReal x5095=(cj2*x5076);
IkReal x5096=(cj2*x5075);
IkReal x5097=((1.0)*x5076);
IkReal x5098=(sj2*x5075);
evalcond[0]=((((-1.0)*x5098))+(((-1.0)*x5086))+((cj6*r20)));
evalcond[1]=((((-1.0)*sj2*x5097))+(((-1.0)*r20*sj6*x5090))+(((-1.0)*cj6*r21*x5090))+(((-1.0)*r22*x5084)));
evalcond[2]=((((-1.0)*r10*x5080))+(((-1.0)*cj6*r00*x5091))+((r01*x5083))+x5096+((r11*x5077)));
evalcond[3]=((((-1.0)*x5077*x5087))+((r11*x5083))+((r00*x5080))+(((-1.0)*x5097))+(((-1.0)*cj6*r10*x5091)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((-0.0009)*sj2))+(((0.0718)*sj2*x5076))+pz+((r20*x5085))+(((-0.02626)*x5086))+(((-0.02626)*x5098)));
evalcond[5]=(((x5077*x5082))+((cj0*cj5*r02))+((sj0*x5079))+((x5080*x5081))+x5095+((x5083*x5088))+((r01*sj5*x5093)));
evalcond[6]=(((cj0*x5079))+(((-1.0)*sj5*x5080*x5087))+(((-1.0)*x5077*x5088))+((x5082*x5083))+x5075+(((-1.0)*r02*sj0*x5084))+((x5081*x5093)));
evalcond[7]=((-0.09736)+(((-0.02626)*x5076))+(((-1.0)*cj0*r10*x5085))+((x5083*x5092))+(((-0.0718)*x5075))+(((0.02626)*r00*x5080))+(((-1.0)*x5077*x5078))+(((-1.0)*cj0*x5089))+((px*sj0)));
evalcond[8]=((-0.001)+(((0.02626)*x5096))+(((-0.02626)*r10*x5080))+(((-0.1158)*sj2))+(((-1.0)*cj0*r00*x5085))+(((-1.0)*px*x5091))+(((0.0009)*cj2))+((x5078*x5083))+(((-1.0)*sj0*x5089))+((x5077*x5092))+(((-0.0718)*x5095)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5099=(cj0*sj5);
IkReal x5100=(cj5*cj6);
IkReal x5101=((1.0)*sj5);
IkReal x5102=((1.0)*cj0);
IkReal x5103=((1.0)*sj0);
IkReal x5104=(cj5*sj6);
IkReal x5105=(r10*x5104);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r20*x5104))+cj2+(((-1.0)*r22*x5101))+((r21*x5100)));
evalcond[2]=(sj2+(((-1.0)*r11*x5100*x5103))+(((-1.0)*r01*x5100*x5102))+(((-1.0)*x5103*x5105))+((r12*sj0*sj5))+((r02*x5099))+(((-1.0)*r00*x5102*x5104)));
evalcond[3]=(((r00*sj0*x5104))+(((-1.0)*r11*x5100*x5102))+(((-1.0)*r02*sj0*x5101))+((r12*x5099))+(((-1.0)*x5102*x5105))+((r01*sj0*x5100)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
IkReal x5106=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*sj5*x5106))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))))+(IKabs((((cj6*r20))+(((-1.0)*sj6*x5106))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=1.0;
j1=0;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5107=((1.0)*sj5);
IkReal x5108=((1.0)*sj6);
CheckValue<IkReal> x5109=IKPowWithIntegerCheck(sj2,-1);
if(!x5109.valid){
continue;
}
CheckValue<IkReal> x5110=IKPowWithIntegerCheck(cj2,-1);
if(!x5110.valid){
continue;
}
if( IKabs(((x5109.value)*(((((-1.0)*cj6*r21*x5107))+(((-1.0)*r20*sj6*x5107))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5110.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5108))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5108)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5109.value)*(((((-1.0)*cj6*r21*x5107))+(((-1.0)*r20*sj6*x5107))+(((-1.0)*cj5*r22))))))+IKsqr(((x5110.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5108))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5108))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5109.value)*(((((-1.0)*cj6*r21*x5107))+(((-1.0)*r20*sj6*x5107))+(((-1.0)*cj5*r22))))), ((x5110.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5108))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5108))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5111=IKsin(j4);
IkReal x5112=IKcos(j4);
IkReal x5113=(sj0*sj6);
IkReal x5114=((0.02626)*r01);
IkReal x5115=(cj5*r12);
IkReal x5116=(cj6*sj0);
IkReal x5117=(r11*sj5);
IkReal x5118=(r10*sj5);
IkReal x5119=(cj0*sj6);
IkReal x5120=(r21*sj6);
IkReal x5121=((1.0)*cj5);
IkReal x5122=((0.02626)*cj6);
IkReal x5123=((1.0)*r01);
IkReal x5124=(r00*sj5);
IkReal x5125=((1.0)*py);
IkReal x5126=((1.0)*sj2);
IkReal x5127=((1.0)*sj5);
IkReal x5128=((1.0)*cj0);
IkReal x5129=((0.02626)*r11);
IkReal x5130=(cj0*cj6);
IkReal x5131=(r10*x5130);
IkReal x5132=(cj2*x5111);
IkReal x5133=(cj2*x5112);
evalcond[0]=((((-1.0)*x5112*x5126))+((cj6*r20))+(((-1.0)*x5120)));
evalcond[1]=((((-1.0)*r20*sj6*x5127))+(((-1.0)*cj6*r21*x5127))+(((-1.0)*x5111*x5126))+(((-1.0)*r22*x5121)));
evalcond[2]=(((r00*x5116))+(((-1.0)*x5113*x5123))+x5111+(((-1.0)*cj6*r10*x5128))+((r11*x5119)));
evalcond[3]=(((r01*x5119))+(((-1.0)*cj6*r00*x5128))+x5133+(((-1.0)*r10*x5116))+((r11*x5113)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((0.0718)*sj2*x5111))+(((-0.0009)*sj2))+pz+((r20*x5122))+(((-0.02626)*sj2*x5112))+(((-0.02626)*x5120)));
evalcond[5]=(((x5113*x5118))+((cj0*cj5*r02))+((x5116*x5117))+((x5119*x5124))+((sj0*x5115))+((r01*sj5*x5130))+x5132);
evalcond[6]=((((-1.0)*r02*sj0*x5121))+(((-1.0)*x5113*x5124))+((cj0*x5115))+(((-1.0)*x5112))+((x5118*x5119))+(((-1.0)*sj5*x5116*x5123))+((x5117*x5130)));
evalcond[7]=((0.09756)+((x5119*x5129))+(((0.02626)*x5111))+(((0.02626)*r00*x5116))+(((-1.0)*cj0*x5125))+(((-1.0)*x5113*x5114))+(((-1.0)*cj0*r10*x5122))+((px*sj0))+(((0.0718)*x5112)));
evalcond[8]=((-0.001)+(((-1.0)*cj0*r00*x5122))+(((-0.1158)*sj2))+(((-1.0)*px*x5128))+(((-0.0718)*x5132))+(((0.0009)*cj2))+((x5113*x5129))+(((-0.02626)*r10*x5116))+((x5114*x5119))+(((-1.0)*sj0*x5125))+(((0.02626)*x5133)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5134=((1.0)*sj6);
CheckValue<IkReal> x5135=IKPowWithIntegerCheck(sj2,-1);
if(!x5135.valid){
continue;
}
if( IKabs(((((-1.0)*cj0*r11*x5134))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5135.value)*(((((-1.0)*r21*x5134))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*r11*x5134))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))))+IKsqr(((x5135.value)*(((((-1.0)*r21*x5134))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*r11*x5134))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))), ((x5135.value)*(((((-1.0)*r21*x5134))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5136=IKsin(j4);
IkReal x5137=IKcos(j4);
IkReal x5138=(sj0*sj6);
IkReal x5139=((0.02626)*r01);
IkReal x5140=(cj5*r12);
IkReal x5141=(cj6*sj0);
IkReal x5142=(r11*sj5);
IkReal x5143=(r10*sj5);
IkReal x5144=(cj0*sj6);
IkReal x5145=(r21*sj6);
IkReal x5146=((1.0)*cj5);
IkReal x5147=((0.02626)*cj6);
IkReal x5148=((1.0)*r01);
IkReal x5149=(r00*sj5);
IkReal x5150=((1.0)*py);
IkReal x5151=((1.0)*sj2);
IkReal x5152=((1.0)*sj5);
IkReal x5153=((1.0)*cj0);
IkReal x5154=((0.02626)*r11);
IkReal x5155=(cj0*cj6);
IkReal x5156=(r10*x5155);
IkReal x5157=(cj2*x5136);
IkReal x5158=(cj2*x5137);
evalcond[0]=((((-1.0)*x5145))+((cj6*r20))+(((-1.0)*x5137*x5151)));
evalcond[1]=((((-1.0)*r20*sj6*x5152))+(((-1.0)*cj6*r21*x5152))+(((-1.0)*r22*x5146))+(((-1.0)*x5136*x5151)));
evalcond[2]=((((-1.0)*cj6*r10*x5153))+((r00*x5141))+x5136+((r11*x5144))+(((-1.0)*x5138*x5148)));
evalcond[3]=((((-1.0)*r10*x5141))+((r01*x5144))+((r11*x5138))+x5158+(((-1.0)*cj6*r00*x5153)));
evalcond[4]=((-0.1255)+(((0.0718)*sj2*x5136))+(((-0.02626)*sj2*x5137))+(((-0.1158)*cj2))+((r20*x5147))+(((-0.0009)*sj2))+(((-0.02626)*x5145))+pz);
evalcond[5]=(((x5144*x5149))+((cj0*cj5*r02))+x5157+((x5141*x5142))+((x5138*x5143))+((r01*sj5*x5155))+((sj0*x5140)));
evalcond[6]=(((x5143*x5144))+((cj0*x5140))+((x5142*x5155))+(((-1.0)*sj5*x5141*x5148))+(((-1.0)*x5137))+(((-1.0)*r02*sj0*x5146))+(((-1.0)*x5138*x5149)));
evalcond[7]=((0.09756)+(((-1.0)*cj0*r10*x5147))+(((0.0718)*x5137))+(((-1.0)*cj0*x5150))+(((0.02626)*r00*x5141))+(((-1.0)*x5138*x5139))+((px*sj0))+(((0.02626)*x5136))+((x5144*x5154)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-1.0)*sj0*x5150))+(((-1.0)*cj0*r00*x5147))+(((-0.0718)*x5157))+(((-1.0)*px*x5153))+(((0.0009)*cj2))+(((0.02626)*x5158))+((x5138*x5154))+((x5139*x5144))+(((-0.02626)*r10*x5141)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5159=((1.0)*r21);
CheckValue<IkReal> x5160=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x5160.valid){
continue;
}
CheckValue<IkReal> x5161 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x5159))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x5159))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x5161.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5160.value)))+(x5161.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5162=IKsin(j4);
IkReal x5163=IKcos(j4);
IkReal x5164=(sj0*sj6);
IkReal x5165=((0.02626)*r01);
IkReal x5166=(cj5*r12);
IkReal x5167=(cj6*sj0);
IkReal x5168=(r11*sj5);
IkReal x5169=(r10*sj5);
IkReal x5170=(cj0*sj6);
IkReal x5171=(r21*sj6);
IkReal x5172=((1.0)*cj5);
IkReal x5173=((0.02626)*cj6);
IkReal x5174=((1.0)*r01);
IkReal x5175=(r00*sj5);
IkReal x5176=((1.0)*py);
IkReal x5177=((1.0)*sj2);
IkReal x5178=((1.0)*sj5);
IkReal x5179=((1.0)*cj0);
IkReal x5180=((0.02626)*r11);
IkReal x5181=(cj0*cj6);
IkReal x5182=(r10*x5181);
IkReal x5183=(cj2*x5162);
IkReal x5184=(cj2*x5163);
evalcond[0]=((((-1.0)*x5171))+((cj6*r20))+(((-1.0)*x5163*x5177)));
evalcond[1]=((((-1.0)*x5162*x5177))+(((-1.0)*cj6*r21*x5178))+(((-1.0)*r20*sj6*x5178))+(((-1.0)*r22*x5172)));
evalcond[2]=(((r00*x5167))+x5162+(((-1.0)*x5164*x5174))+((r11*x5170))+(((-1.0)*cj6*r10*x5179)));
evalcond[3]=(((r01*x5170))+x5184+(((-1.0)*cj6*r00*x5179))+((r11*x5164))+(((-1.0)*r10*x5167)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((0.0718)*sj2*x5162))+((r20*x5173))+(((-0.0009)*sj2))+(((-0.02626)*x5171))+pz+(((-0.02626)*sj2*x5163)));
evalcond[5]=(((x5164*x5169))+((cj0*cj5*r02))+((x5167*x5168))+x5183+((r01*sj5*x5181))+((x5170*x5175))+((sj0*x5166)));
evalcond[6]=((((-1.0)*sj5*x5167*x5174))+((cj0*x5166))+(((-1.0)*x5164*x5175))+(((-1.0)*x5163))+(((-1.0)*r02*sj0*x5172))+((x5169*x5170))+((x5168*x5181)));
evalcond[7]=((0.09756)+(((-1.0)*cj0*x5176))+(((-1.0)*cj0*r10*x5173))+(((0.0718)*x5163))+(((0.02626)*r00*x5167))+(((-1.0)*x5164*x5165))+((px*sj0))+(((0.02626)*x5162))+((x5170*x5180)));
evalcond[8]=((-0.001)+(((-1.0)*sj0*x5176))+(((-0.02626)*r10*x5167))+(((-0.1158)*sj2))+(((-0.0718)*x5183))+(((-1.0)*cj0*r00*x5173))+(((-1.0)*px*x5179))+((x5164*x5180))+(((0.0009)*cj2))+(((0.02626)*x5184))+((x5165*x5170)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x5193=IKPowWithIntegerCheck(sj3,-1);
if(!x5193.valid){
continue;
}
IkReal x5185=x5193.value;
IkReal x5186=((1.0)*cj0);
IkReal x5187=(cj6*r10);
IkReal x5188=((1.0)*sj6);
IkReal x5189=(r01*sj0);
IkReal x5190=(cj2*cj3);
IkReal x5191=(sj6*x5190);
IkReal x5192=(cj6*r00*sj0);
CheckValue<IkReal> x5194=IKPowWithIntegerCheck(sj2,-1);
if(!x5194.valid){
continue;
}
if( IKabs((x5185*((((cj0*r11*sj6))+(((-1.0)*x5188*x5189))+x5192+(((-1.0)*x5186*x5187)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x5185*(x5194.value)*((((cj0*x5187*x5190))+(((-1.0)*r21*sj3*x5188))+(((-1.0)*x5190*x5192))+(((-1.0)*r11*x5186*x5191))+((cj6*r20*sj3))+((x5189*x5191)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x5185*((((cj0*r11*sj6))+(((-1.0)*x5188*x5189))+x5192+(((-1.0)*x5186*x5187))))))+IKsqr((x5185*(x5194.value)*((((cj0*x5187*x5190))+(((-1.0)*r21*sj3*x5188))+(((-1.0)*x5190*x5192))+(((-1.0)*r11*x5186*x5191))+((cj6*r20*sj3))+((x5189*x5191))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x5185*((((cj0*r11*sj6))+(((-1.0)*x5188*x5189))+x5192+(((-1.0)*x5186*x5187))))), (x5185*(x5194.value)*((((cj0*x5187*x5190))+(((-1.0)*r21*sj3*x5188))+(((-1.0)*x5190*x5192))+(((-1.0)*r11*x5186*x5191))+((cj6*r20*sj3))+((x5189*x5191))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5195=IKsin(j4);
IkReal x5196=IKcos(j4);
IkReal x5197=(sj0*sj6);
IkReal x5198=((0.02626)*r01);
IkReal x5199=(cj6*sj0);
IkReal x5200=((0.02626)*r10);
IkReal x5201=(cj0*sj6);
IkReal x5202=(r11*sj5);
IkReal x5203=(cj6*r20);
IkReal x5204=(cj0*cj6);
IkReal x5205=(cj5*r12);
IkReal x5206=((1.0)*cj5);
IkReal x5207=(cj2*cj3);
IkReal x5208=((0.02626)*r11);
IkReal x5209=((1.0)*r10);
IkReal x5210=(r21*sj6);
IkReal x5211=(r10*sj5);
IkReal x5212=(cj3*sj2);
IkReal x5213=((1.0)*r01);
IkReal x5214=(r00*sj5);
IkReal x5215=((1.0)*py);
IkReal x5216=((1.0)*sj5);
IkReal x5217=((0.02626)*r00);
IkReal x5218=((1.0)*x5195);
IkReal x5219=((0.02626)*x5195);
IkReal x5220=(cj2*x5195);
IkReal x5221=(sj3*x5196);
IkReal x5222=((0.0718)*x5196);
IkReal x5223=(cj2*x5196);
IkReal x5224=(sj2*x5196);
evalcond[0]=(x5203+(((-1.0)*x5224))+(((-1.0)*x5210))+(((-1.0)*x5207*x5218)));
evalcond[1]=((((-1.0)*sj3*x5218))+((r11*x5201))+(((-1.0)*x5197*x5213))+((r00*x5199))+(((-1.0)*x5204*x5209)));
evalcond[2]=((((-1.0)*sj2*x5218))+(((-1.0)*cj6*r21*x5216))+(((-1.0)*r22*x5206))+((x5196*x5207))+(((-1.0)*r20*sj6*x5216)));
evalcond[3]=((((-1.0)*x5199*x5209))+(((-1.0)*x5212*x5218))+((r01*x5201))+(((-1.0)*r00*x5204))+x5223+((r11*x5197)));
evalcond[4]=(((x5202*x5204))+x5221+((x5201*x5211))+(((-1.0)*x5197*x5214))+(((-1.0)*sj5*x5199*x5213))+(((-1.0)*r02*sj0*x5206))+((cj0*x5205)));
evalcond[5]=(((cj0*cj5*r02))+((x5197*x5211))+x5220+((r01*sj5*x5204))+((x5196*x5212))+((x5201*x5214))+((sj0*x5205))+((x5199*x5202)));
evalcond[6]=((0.0001)+(((-1.0)*sj3*x5219))+((x5199*x5217))+(((-1.0)*x5200*x5204))+(((-1.0)*cj0*x5215))+((x5201*x5208))+(((-0.0718)*x5221))+(((-1.0)*x5197*x5198))+((px*sj0))+(((-0.09746)*sj3)));
evalcond[7]=((-0.1255)+(((0.0718)*sj2*x5195))+(((-0.02626)*x5224))+(((-0.1158)*cj2))+(((-0.09746)*x5207))+(((-1.0)*x5207*x5222))+(((-0.02626)*x5210))+(((-0.0009)*sj2))+pz+(((0.02626)*x5203))+(((-1.0)*x5207*x5219)));
evalcond[8]=((-0.001)+(((-1.0)*x5199*x5200))+(((-1.0)*x5212*x5222))+(((-0.1158)*sj2))+(((-0.09746)*x5212))+(((-1.0)*x5212*x5219))+(((0.02626)*x5223))+(((-0.0718)*x5220))+((x5198*x5201))+((x5197*x5208))+(((0.0009)*cj2))+(((-1.0)*sj0*x5215))+(((-1.0)*x5204*x5217))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5225=(sj2*sj6);
IkReal x5226=(cj0*r01);
IkReal x5227=((1.0)*sj0);
IkReal x5228=(cj6*sj2);
IkReal x5229=(cj2*sj6);
IkReal x5230=((1.0)*r21);
IkReal x5231=(cj0*r00);
IkReal x5232=(cj2*cj6);
CheckValue<IkReal> x5233=IKPowWithIntegerCheck(cj3,-1);
if(!x5233.valid){
continue;
}
if( IKabs(((x5233.value)*((((x5225*x5226))+((r20*x5232))+(((-1.0)*x5229*x5230))+(((-1.0)*r10*x5227*x5228))+(((-1.0)*x5228*x5231))+((r11*sj0*x5225)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x5226*x5229))+((x5231*x5232))+((r20*x5228))+((r10*sj0*x5232))+(((-1.0)*r11*x5227*x5229))+(((-1.0)*x5225*x5230)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5233.value)*((((x5225*x5226))+((r20*x5232))+(((-1.0)*x5229*x5230))+(((-1.0)*r10*x5227*x5228))+(((-1.0)*x5228*x5231))+((r11*sj0*x5225))))))+IKsqr(((((-1.0)*x5226*x5229))+((x5231*x5232))+((r20*x5228))+((r10*sj0*x5232))+(((-1.0)*r11*x5227*x5229))+(((-1.0)*x5225*x5230))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5233.value)*((((x5225*x5226))+((r20*x5232))+(((-1.0)*x5229*x5230))+(((-1.0)*r10*x5227*x5228))+(((-1.0)*x5228*x5231))+((r11*sj0*x5225))))), ((((-1.0)*x5226*x5229))+((x5231*x5232))+((r20*x5228))+((r10*sj0*x5232))+(((-1.0)*r11*x5227*x5229))+(((-1.0)*x5225*x5230))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5234=IKsin(j4);
IkReal x5235=IKcos(j4);
IkReal x5236=(sj0*sj6);
IkReal x5237=((0.02626)*r01);
IkReal x5238=(cj6*sj0);
IkReal x5239=((0.02626)*r10);
IkReal x5240=(cj0*sj6);
IkReal x5241=(r11*sj5);
IkReal x5242=(cj6*r20);
IkReal x5243=(cj0*cj6);
IkReal x5244=(cj5*r12);
IkReal x5245=((1.0)*cj5);
IkReal x5246=(cj2*cj3);
IkReal x5247=((0.02626)*r11);
IkReal x5248=((1.0)*r10);
IkReal x5249=(r21*sj6);
IkReal x5250=(r10*sj5);
IkReal x5251=(cj3*sj2);
IkReal x5252=((1.0)*r01);
IkReal x5253=(r00*sj5);
IkReal x5254=((1.0)*py);
IkReal x5255=((1.0)*sj5);
IkReal x5256=((0.02626)*r00);
IkReal x5257=((1.0)*x5234);
IkReal x5258=((0.02626)*x5234);
IkReal x5259=(cj2*x5234);
IkReal x5260=(sj3*x5235);
IkReal x5261=((0.0718)*x5235);
IkReal x5262=(cj2*x5235);
IkReal x5263=(sj2*x5235);
evalcond[0]=((((-1.0)*x5263))+(((-1.0)*x5249))+x5242+(((-1.0)*x5246*x5257)));
evalcond[1]=(((r11*x5240))+(((-1.0)*x5243*x5248))+(((-1.0)*x5236*x5252))+(((-1.0)*sj3*x5257))+((r00*x5238)));
evalcond[2]=((((-1.0)*cj6*r21*x5255))+(((-1.0)*r20*sj6*x5255))+((x5235*x5246))+(((-1.0)*sj2*x5257))+(((-1.0)*r22*x5245)));
evalcond[3]=(((r11*x5236))+(((-1.0)*r00*x5243))+x5262+((r01*x5240))+(((-1.0)*x5251*x5257))+(((-1.0)*x5238*x5248)));
evalcond[4]=(((cj0*x5244))+((x5241*x5243))+((x5240*x5250))+x5260+(((-1.0)*sj5*x5238*x5252))+(((-1.0)*r02*sj0*x5245))+(((-1.0)*x5236*x5253)));
evalcond[5]=(((x5236*x5250))+((x5235*x5251))+((cj0*cj5*r02))+((x5238*x5241))+((x5240*x5253))+((r01*sj5*x5243))+x5259+((sj0*x5244)));
evalcond[6]=((0.0001)+((x5240*x5247))+(((-1.0)*x5236*x5237))+(((-1.0)*sj3*x5258))+((x5238*x5256))+(((-1.0)*cj0*x5254))+(((-1.0)*x5239*x5243))+((px*sj0))+(((-0.09746)*sj3))+(((-0.0718)*x5260)));
evalcond[7]=((-0.1255)+(((0.0718)*sj2*x5234))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+(((-1.0)*x5246*x5261))+pz+(((-0.09746)*x5246))+(((-1.0)*x5246*x5258))+(((-0.02626)*x5263))+(((-0.02626)*x5249))+(((0.02626)*x5242)));
evalcond[8]=((-0.001)+((x5237*x5240))+(((-0.1158)*sj2))+((x5236*x5247))+(((-1.0)*x5243*x5256))+(((-1.0)*sj0*x5254))+(((0.0009)*cj2))+(((-0.09746)*x5251))+(((-1.0)*x5251*x5261))+(((-1.0)*x5251*x5258))+(((-1.0)*x5238*x5239))+(((-1.0)*cj0*px))+(((0.02626)*x5262))+(((-0.0718)*x5259)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5264=cj2*cj2;
IkReal x5265=(cj2*cj3);
IkReal x5266=(cj6*r20);
IkReal x5267=(cj5*r22);
IkReal x5268=(r20*sj5);
IkReal x5269=((1.0)*sj2);
IkReal x5270=(sj6*x5269);
IkReal x5271=(cj6*r21*sj5);
CheckValue<IkReal> x5272=IKPowWithIntegerCheck(IKsign(((1.0)+(((-1.0)*x5264))+((x5264*(cj3*cj3))))),-1);
if(!x5272.valid){
continue;
}
CheckValue<IkReal> x5273 = IKatan2WithCheck(IkReal(((((-1.0)*r21*sj6*x5265))+(((-1.0)*x5267*x5269))+((x5265*x5266))+(((-1.0)*x5268*x5270))+(((-1.0)*x5269*x5271)))),(((sj2*x5266))+(((-1.0)*r21*x5270))+((x5265*x5267))+((x5265*x5271))+((sj6*x5265*x5268))),IKFAST_ATAN2_MAGTHRESH);
if(!x5273.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5272.value)))+(x5273.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5274=IKsin(j4);
IkReal x5275=IKcos(j4);
IkReal x5276=(sj0*sj6);
IkReal x5277=((0.02626)*r01);
IkReal x5278=(cj6*sj0);
IkReal x5279=((0.02626)*r10);
IkReal x5280=(cj0*sj6);
IkReal x5281=(r11*sj5);
IkReal x5282=(cj6*r20);
IkReal x5283=(cj0*cj6);
IkReal x5284=(cj5*r12);
IkReal x5285=((1.0)*cj5);
IkReal x5286=(cj2*cj3);
IkReal x5287=((0.02626)*r11);
IkReal x5288=((1.0)*r10);
IkReal x5289=(r21*sj6);
IkReal x5290=(r10*sj5);
IkReal x5291=(cj3*sj2);
IkReal x5292=((1.0)*r01);
IkReal x5293=(r00*sj5);
IkReal x5294=((1.0)*py);
IkReal x5295=((1.0)*sj5);
IkReal x5296=((0.02626)*r00);
IkReal x5297=((1.0)*x5274);
IkReal x5298=((0.02626)*x5274);
IkReal x5299=(cj2*x5274);
IkReal x5300=(sj3*x5275);
IkReal x5301=((0.0718)*x5275);
IkReal x5302=(cj2*x5275);
IkReal x5303=(sj2*x5275);
evalcond[0]=(x5282+(((-1.0)*x5286*x5297))+(((-1.0)*x5303))+(((-1.0)*x5289)));
evalcond[1]=((((-1.0)*sj3*x5297))+(((-1.0)*x5276*x5292))+((r00*x5278))+(((-1.0)*x5283*x5288))+((r11*x5280)));
evalcond[2]=((((-1.0)*r22*x5285))+(((-1.0)*r20*sj6*x5295))+(((-1.0)*sj2*x5297))+((x5275*x5286))+(((-1.0)*cj6*r21*x5295)));
evalcond[3]=(x5302+(((-1.0)*x5278*x5288))+(((-1.0)*r00*x5283))+((r01*x5280))+(((-1.0)*x5291*x5297))+((r11*x5276)));
evalcond[4]=((((-1.0)*r02*sj0*x5285))+x5300+(((-1.0)*sj5*x5278*x5292))+((cj0*x5284))+((x5280*x5290))+(((-1.0)*x5276*x5293))+((x5281*x5283)));
evalcond[5]=(((r01*sj5*x5283))+((sj0*x5284))+((cj0*cj5*r02))+((x5278*x5281))+x5299+((x5276*x5290))+((x5275*x5291))+((x5280*x5293)));
evalcond[6]=((0.0001)+((x5278*x5296))+(((-1.0)*x5279*x5283))+(((-1.0)*sj3*x5298))+(((-0.0718)*x5300))+(((-1.0)*x5276*x5277))+((x5280*x5287))+((px*sj0))+(((-0.09746)*sj3))+(((-1.0)*cj0*x5294)));
evalcond[7]=((-0.1255)+(((0.02626)*x5282))+(((-0.1158)*cj2))+(((-1.0)*x5286*x5298))+(((-1.0)*x5286*x5301))+(((-0.0009)*sj2))+pz+(((-0.02626)*x5303))+(((0.0718)*sj2*x5274))+(((-0.09746)*x5286))+(((-0.02626)*x5289)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-1.0)*x5278*x5279))+(((-1.0)*sj0*x5294))+((x5276*x5287))+(((-1.0)*x5291*x5301))+(((-0.0718)*x5299))+(((0.0009)*cj2))+(((0.02626)*x5302))+(((-1.0)*x5283*x5296))+((x5277*x5280))+(((-1.0)*x5291*x5298))+(((-0.09746)*x5291))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x5304=(cj5*cj6);
IkReal x5305=((1.0)*sj5);
IkReal x5306=((1.0)*sj0);
IkReal x5307=(cj5*sj6);
CheckValue<IkReal> x5308=IKPowWithIntegerCheck(cj2,-1);
if(!x5308.valid){
continue;
}
if( IKabs(((x5308.value)*(((((-1.0)*r22*x5305))+((r21*x5304))+((r20*x5307)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r02*sj0*sj5))+(((-1.0)*r00*x5306*x5307))+(((-1.0)*cj0*r12*x5305))+((cj0*r11*x5304))+(((-1.0)*r01*x5304*x5306))+((cj0*r10*x5307)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5308.value)*(((((-1.0)*r22*x5305))+((r21*x5304))+((r20*x5307))))))+IKsqr((((r02*sj0*sj5))+(((-1.0)*r00*x5306*x5307))+(((-1.0)*cj0*r12*x5305))+((cj0*r11*x5304))+(((-1.0)*r01*x5304*x5306))+((cj0*r10*x5307))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x5308.value)*(((((-1.0)*r22*x5305))+((r21*x5304))+((r20*x5307))))), (((r02*sj0*sj5))+(((-1.0)*r00*x5306*x5307))+(((-1.0)*cj0*r12*x5305))+((cj0*r11*x5304))+(((-1.0)*r01*x5304*x5306))+((cj0*r10*x5307))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x5309=IKsin(j3);
IkReal x5310=(cj5*cj6);
IkReal x5311=((1.0)*sj5);
IkReal x5312=((1.0)*cj0);
IkReal x5313=(cj0*sj5);
IkReal x5314=(cj5*sj6);
IkReal x5315=(r10*x5314);
IkReal x5316=((1.0)*x5309);
IkReal x5317=((1.0)*r11*x5310);
evalcond[0]=(((r21*x5310))+(((-1.0)*cj2*x5316))+((r20*x5314))+(((-1.0)*r22*x5311)));
evalcond[1]=((((-1.0)*x5312*x5315))+((r00*sj0*x5314))+(((-1.0)*r02*sj0*x5311))+(IKcos(j3))+((r01*sj0*x5310))+(((-1.0)*r11*x5310*x5312))+((r12*x5313)));
evalcond[2]=((((-1.0)*r00*x5312*x5314))+(((-1.0)*sj0*x5317))+(((-1.0)*sj0*x5315))+((r02*x5313))+((r12*sj0*sj5))+(((-1.0)*sj2*x5316))+(((-1.0)*r01*x5310*x5312)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
IkReal x5318=cj2*cj2;
IkReal x5319=(cj2*cj3);
IkReal x5320=(cj6*r20);
IkReal x5321=(cj6*r21);
IkReal x5322=(cj5*r22);
IkReal x5323=(r20*sj6);
IkReal x5324=((1.0)*sj2*sj5);
IkReal x5325=((1.0)*r21*sj6);
IkReal x5326=((1.0)+((x5318*(cj3*cj3)))+(((-1.0)*x5318)));
j4eval[0]=x5326;
j4eval[1]=IKsign(x5326);
j4eval[2]=((IKabs(((((-1.0)*x5321*x5324))+(((-1.0)*x5323*x5324))+(((-1.0)*sj2*x5322))+((x5319*x5320))+(((-1.0)*x5319*x5325)))))+(IKabs(((((-1.0)*sj2*x5325))+((sj2*x5320))+((x5319*x5322))+((sj5*x5319*x5321))+((sj5*x5319*x5323))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=1.0;
j1=0;
j4eval[0]=sj3;
j4eval[1]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x5327=(cj5*cj6);
IkReal x5328=(cj0*sj6);
IkReal x5329=(r01*sj0);
IkReal x5330=((1.0)*sj0);
IkReal x5331=((1.0)*cj5);
IkReal x5332=(cj0*r12);
IkReal x5333=(r02*sj5);
IkReal x5334=((1.0)*sj5);
IkReal x5335=(cj5*sj6);
IkReal x5336=((1.0)*cj0);
IkReal x5337=(cj0*cj6*r10);
IkReal x5338=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=(((r20*x5335))+(((-1.0)*r22*x5334))+((r21*x5327)));
evalcond[2]=(((r11*x5328))+(((-1.0)*cj6*r10*x5336))+x5338+(((-1.0)*sj6*x5329)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r01*x5327*x5336))+(((-1.0)*r11*x5327*x5330))+((cj0*x5333))+(((-1.0)*r00*x5328*x5331))+(((-1.0)*r10*x5330*x5335)));
evalcond[4]=((1.0)+(((-1.0)*x5330*x5333))+((x5327*x5329))+((sj5*x5332))+(((-1.0)*r11*x5327*x5336))+((r00*sj0*x5335))+(((-1.0)*r10*x5328*x5331)));
evalcond[5]=((((-1.0)*cj5*r02*x5330))+(((-1.0)*r00*sj5*sj6*x5330))+((cj5*x5332))+((r10*sj5*x5328))+(((-1.0)*cj6*x5329*x5334))+((cj0*cj6*r11*sj5)));
evalcond[6]=((0.0001)+(((0.02626)*x5338))+(((-0.02626)*x5337))+(((0.02626)*r11*x5328))+((px*sj0))+(((-1.0)*py*x5336))+(((-0.02626)*sj6*x5329)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5339=((1.0)*r21);
IkReal x5340=(cj2*sj6);
IkReal x5341=(cj5*r22);
IkReal x5342=(cj6*sj5);
IkReal x5343=(r20*sj2);
if( IKabs(((((-1.0)*sj2*x5341))+((cj2*cj6*r20))+(((-1.0)*sj2*x5339*x5342))+(((-1.0)*x5339*x5340))+(((-1.0)*sj5*sj6*x5343)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*x5343))+((cj2*x5341))+((cj2*r21*x5342))+(((-1.0)*sj2*sj6*x5339))+((r20*sj5*x5340)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj2*x5341))+((cj2*cj6*r20))+(((-1.0)*sj2*x5339*x5342))+(((-1.0)*x5339*x5340))+(((-1.0)*sj5*sj6*x5343))))+IKsqr((((cj6*x5343))+((cj2*x5341))+((cj2*r21*x5342))+(((-1.0)*sj2*sj6*x5339))+((r20*sj5*x5340))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj2*x5341))+((cj2*cj6*r20))+(((-1.0)*sj2*x5339*x5342))+(((-1.0)*x5339*x5340))+(((-1.0)*sj5*sj6*x5343))), (((cj6*x5343))+((cj2*x5341))+((cj2*r21*x5342))+(((-1.0)*sj2*sj6*x5339))+((r20*sj5*x5340))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5344=IKcos(j4);
IkReal x5345=IKsin(j4);
IkReal x5346=(cj6*sj0);
IkReal x5347=(sj0*sj6);
IkReal x5348=(cj6*r20);
IkReal x5349=((0.02626)*sj6);
IkReal x5350=(cj0*r01);
IkReal x5351=(cj0*r00);
IkReal x5352=(sj5*sj6);
IkReal x5353=((1.0)*r21);
IkReal x5354=(cj6*sj5);
IkReal x5355=(cj2*x5344);
IkReal x5356=((0.02626)*x5345);
IkReal x5357=(cj2*x5345);
IkReal x5358=((0.0718)*x5344);
IkReal x5359=(sj2*x5344);
IkReal x5360=(sj2*x5345);
IkReal x5361=((1.0)*x5360);
evalcond[0]=((((-1.0)*sj6*x5353))+x5348+(((-1.0)*x5359))+(((-1.0)*x5357)));
evalcond[1]=((((-1.0)*x5353*x5354))+x5355+(((-1.0)*r20*x5352))+(((-1.0)*cj5*r22))+(((-1.0)*x5361)));
evalcond[2]=(((sj6*x5350))+x5355+(((-1.0)*r10*x5346))+((r11*x5347))+(((-1.0)*cj6*x5351))+(((-1.0)*x5361)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+x5357+x5359+((x5351*x5352))+((x5350*x5354))+((r11*sj5*x5346))+((r10*sj5*x5347)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5359))+(((-1.0)*cj2*x5356))+(((-0.21326)*cj2))+(((-0.0009)*sj2))+pz+(((0.0718)*x5360))+(((0.02626)*x5348))+(((-1.0)*r21*x5349))+(((-0.0718)*x5355)));
evalcond[5]=((-0.001)+(((-0.02626)*r10*x5346))+(((-0.02626)*cj6*x5351))+(((0.02626)*r11*x5347))+(((0.0009)*cj2))+(((-0.21326)*sj2))+((x5349*x5350))+(((-1.0)*py*sj0))+(((0.02626)*x5355))+(((-1.0)*sj2*x5358))+(((-1.0)*sj2*x5356))+(((-1.0)*cj0*px))+(((-0.0718)*x5357)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5362=(cj5*cj6);
IkReal x5363=(cj0*sj6);
IkReal x5364=(r01*sj0);
IkReal x5365=((1.0)*sj0);
IkReal x5366=((1.0)*cj5);
IkReal x5367=(cj0*r12);
IkReal x5368=(r02*sj5);
IkReal x5369=((1.0)*sj5);
IkReal x5370=(cj5*sj6);
IkReal x5371=((1.0)*cj0);
IkReal x5372=(cj0*cj6*r10);
IkReal x5373=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x5369))+((r21*x5362))+((r20*x5370)));
evalcond[2]=(x5373+(((-1.0)*sj6*x5364))+(((-1.0)*cj6*r10*x5371))+((r11*x5363)));
evalcond[3]=((((-1.0)*r00*x5363*x5366))+(((-1.0)*r11*x5362*x5365))+(((-1.0)*r01*x5362*x5371))+((r12*sj0*sj5))+(((-1.0)*r10*x5365*x5370))+((cj0*x5368)));
evalcond[4]=((-1.0)+((r00*sj0*x5370))+(((-1.0)*x5365*x5368))+((x5362*x5364))+(((-1.0)*r11*x5362*x5371))+(((-1.0)*r10*x5363*x5366))+((sj5*x5367)));
evalcond[5]=((((-1.0)*cj5*r02*x5365))+(((-1.0)*r00*sj5*sj6*x5365))+((cj0*cj6*r11*sj5))+(((-1.0)*cj6*x5364*x5369))+((r10*sj5*x5363))+((cj5*x5367)));
evalcond[6]=((0.0001)+(((0.02626)*r11*x5363))+(((0.02626)*x5373))+((px*sj0))+(((-0.02626)*sj6*x5364))+(((-0.02626)*x5372))+(((-1.0)*py*x5371)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5374=(cj2*r21);
IkReal x5375=((1.0)*cj6);
IkReal x5376=((1.0)*cj2);
IkReal x5377=(cj5*r22);
IkReal x5378=(r20*sj2);
IkReal x5379=(sj5*sj6);
IkReal x5380=(r21*sj2);
if( IKabs(((((-1.0)*cj2*r20*x5375))+(((-1.0)*x5378*x5379))+(((-1.0)*sj2*x5377))+((sj6*x5374))+(((-1.0)*sj5*x5375*x5380)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x5376*x5377))+((cj6*x5378))+(((-1.0)*sj5*x5374*x5375))+(((-1.0)*sj6*x5380))+(((-1.0)*r20*x5376*x5379)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj2*r20*x5375))+(((-1.0)*x5378*x5379))+(((-1.0)*sj2*x5377))+((sj6*x5374))+(((-1.0)*sj5*x5375*x5380))))+IKsqr(((((-1.0)*x5376*x5377))+((cj6*x5378))+(((-1.0)*sj5*x5374*x5375))+(((-1.0)*sj6*x5380))+(((-1.0)*r20*x5376*x5379))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj2*r20*x5375))+(((-1.0)*x5378*x5379))+(((-1.0)*sj2*x5377))+((sj6*x5374))+(((-1.0)*sj5*x5375*x5380))), ((((-1.0)*x5376*x5377))+((cj6*x5378))+(((-1.0)*sj5*x5374*x5375))+(((-1.0)*sj6*x5380))+(((-1.0)*r20*x5376*x5379))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5381=IKcos(j4);
IkReal x5382=IKsin(j4);
IkReal x5383=(cj6*sj0);
IkReal x5384=(sj0*sj6);
IkReal x5385=((0.02626)*cj6);
IkReal x5386=(r21*sj6);
IkReal x5387=(cj0*r00);
IkReal x5388=(sj5*sj6);
IkReal x5389=((1.0)*cj6);
IkReal x5390=(cj2*x5382);
IkReal x5391=((0.02626)*x5382);
IkReal x5392=(cj2*x5381);
IkReal x5393=(sj2*x5382);
IkReal x5394=(sj2*x5381);
IkReal x5395=(cj0*r01*sj6);
IkReal x5396=((1.0)*x5394);
evalcond[0]=(x5390+((cj6*r20))+(((-1.0)*x5396))+(((-1.0)*x5386)));
evalcond[1]=((((-1.0)*r20*x5388))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x5389))+(((-1.0)*x5393))+(((-1.0)*x5392)));
evalcond[2]=(x5393+x5392+x5395+((r11*x5384))+(((-1.0)*x5387*x5389))+(((-1.0)*r10*x5383)));
evalcond[3]=(((cj5*r12*sj0))+((x5387*x5388))+((r11*sj5*x5383))+((cj0*cj5*r02))+x5390+((cj0*cj6*r01*sj5))+(((-1.0)*x5396))+((r10*sj5*x5384)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5394))+(((-0.02626)*x5386))+(((0.0718)*x5392))+(((0.0718)*x5393))+((r20*x5385))+(((-0.0009)*sj2))+pz+(((0.02626)*x5390))+(((-0.01834)*cj2)));
evalcond[5]=((-0.001)+(((-0.01834)*sj2))+(((-1.0)*x5385*x5387))+(((-0.0718)*x5390))+(((0.02626)*r11*x5384))+(((0.0718)*x5394))+(((0.0009)*cj2))+((sj2*x5391))+(((-1.0)*py*sj0))+(((0.02626)*x5392))+(((0.02626)*x5395))+(((-0.02626)*r10*x5383))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5397=(cj0*sj5);
IkReal x5398=(cj5*cj6);
IkReal x5399=((1.0)*sj5);
IkReal x5400=((1.0)*cj0);
IkReal x5401=((1.0)*sj0);
IkReal x5402=(cj5*sj6);
IkReal x5403=(r10*x5402);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj3))+((r20*x5402))+(((-1.0)*r22*x5399))+((r21*x5398)));
evalcond[2]=(((r02*x5397))+(((-1.0)*r01*x5398*x5400))+(((-1.0)*r11*x5398*x5401))+((r12*sj0*sj5))+(((-1.0)*r00*x5400*x5402))+(((-1.0)*x5401*x5403)));
evalcond[3]=((((-1.0)*x5400*x5403))+cj3+(((-1.0)*r11*x5398*x5400))+((r12*x5397))+((r00*sj0*x5402))+((r01*sj0*x5398))+(((-1.0)*r02*sj0*x5399)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5404=((1.0)*sj6);
CheckValue<IkReal> x5405=IKPowWithIntegerCheck(cj3,-1);
if(!x5405.valid){
continue;
}
if( IKabs(((x5405.value)*(((((-1.0)*r21*x5404))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5404))+(((-1.0)*r11*sj0*x5404))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5405.value)*(((((-1.0)*r21*x5404))+((cj6*r20))))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5404))+(((-1.0)*r11*sj0*x5404))+((cj0*cj6*r00))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5405.value)*(((((-1.0)*r21*x5404))+((cj6*r20))))), (((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5404))+(((-1.0)*r11*sj0*x5404))+((cj0*cj6*r00))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5406=IKcos(j4);
IkReal x5407=IKsin(j4);
IkReal x5408=(cj6*sj0);
IkReal x5409=((0.02626)*r10);
IkReal x5410=(sj0*sj6);
IkReal x5411=(r11*sj5);
IkReal x5412=(r10*sj5);
IkReal x5413=(cj0*cj6);
IkReal x5414=((0.02626)*r01);
IkReal x5415=(cj0*sj6);
IkReal x5416=(r21*sj6);
IkReal x5417=((1.0)*cj5);
IkReal x5418=(cj6*r20);
IkReal x5419=((1.0)*r10);
IkReal x5420=((1.0)*r01);
IkReal x5421=(r00*sj5);
IkReal x5422=((1.0)*py);
IkReal x5423=(cj5*r12);
IkReal x5424=((1.0)*sj5);
IkReal x5425=((0.02626)*r00);
IkReal x5426=((0.02626)*r11);
IkReal x5427=((1.0)*x5407);
IkReal x5428=((0.02626)*x5407);
IkReal x5429=(sj3*x5406);
IkReal x5430=(cj3*x5406);
evalcond[0]=((((-1.0)*x5416))+x5418+(((-1.0)*cj3*x5427)));
evalcond[1]=(x5430+(((-1.0)*cj6*r21*x5424))+(((-1.0)*r20*sj6*x5424))+(((-1.0)*r22*x5417)));
evalcond[2]=(((r11*x5410))+x5406+(((-1.0)*r00*x5413))+((r01*x5415))+(((-1.0)*x5408*x5419)));
evalcond[3]=(((r11*x5415))+(((-1.0)*sj3*x5427))+(((-1.0)*x5410*x5420))+((r00*x5408))+(((-1.0)*x5413*x5419)));
evalcond[4]=((-0.2413)+(((-0.02626)*x5416))+(((0.02626)*x5418))+pz+(((-0.09746)*cj3))+(((-1.0)*cj3*x5428))+(((-0.0718)*x5430)));
evalcond[5]=(((x5410*x5412))+((cj0*cj5*r02))+x5407+((x5408*x5411))+((x5415*x5421))+((sj0*x5423))+((r01*sj5*x5413)));
evalcond[6]=(x5429+(((-1.0)*r02*sj0*x5417))+((x5412*x5415))+((cj0*x5423))+((x5411*x5413))+(((-1.0)*sj5*x5408*x5420))+(((-1.0)*x5410*x5421)));
evalcond[7]=((-0.0001)+(((0.02626)*x5406))+((x5414*x5415))+((x5410*x5426))+(((-1.0)*sj0*x5422))+(((-1.0)*x5413*x5425))+(((-1.0)*x5408*x5409))+(((-0.0718)*x5407))+(((-1.0)*cj0*px)));
evalcond[8]=((0.0001)+(((-1.0)*sj3*x5428))+((x5415*x5426))+((x5408*x5425))+(((-1.0)*x5410*x5414))+((px*sj0))+(((-0.09746)*sj3))+(((-1.0)*cj0*x5422))+(((-1.0)*x5409*x5413))+(((-0.0718)*x5429)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x5431 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x5431.valid){
continue;
}
CheckValue<IkReal> x5432=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x5432.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x5431.value)+(((1.5707963267949)*(x5432.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5433=IKcos(j4);
IkReal x5434=IKsin(j4);
IkReal x5435=(cj6*sj0);
IkReal x5436=((0.02626)*r10);
IkReal x5437=(sj0*sj6);
IkReal x5438=(r11*sj5);
IkReal x5439=(r10*sj5);
IkReal x5440=(cj0*cj6);
IkReal x5441=((0.02626)*r01);
IkReal x5442=(cj0*sj6);
IkReal x5443=(r21*sj6);
IkReal x5444=((1.0)*cj5);
IkReal x5445=(cj6*r20);
IkReal x5446=((1.0)*r10);
IkReal x5447=((1.0)*r01);
IkReal x5448=(r00*sj5);
IkReal x5449=((1.0)*py);
IkReal x5450=(cj5*r12);
IkReal x5451=((1.0)*sj5);
IkReal x5452=((0.02626)*r00);
IkReal x5453=((0.02626)*r11);
IkReal x5454=((1.0)*x5434);
IkReal x5455=((0.02626)*x5434);
IkReal x5456=(sj3*x5433);
IkReal x5457=(cj3*x5433);
evalcond[0]=((((-1.0)*x5443))+x5445+(((-1.0)*cj3*x5454)));
evalcond[1]=(x5457+(((-1.0)*cj6*r21*x5451))+(((-1.0)*r22*x5444))+(((-1.0)*r20*sj6*x5451)));
evalcond[2]=((((-1.0)*x5435*x5446))+x5433+((r01*x5442))+(((-1.0)*r00*x5440))+((r11*x5437)));
evalcond[3]=((((-1.0)*x5437*x5447))+(((-1.0)*sj3*x5454))+(((-1.0)*x5440*x5446))+((r11*x5442))+((r00*x5435)));
evalcond[4]=((-0.2413)+(((-0.02626)*x5443))+(((-0.0718)*x5457))+(((0.02626)*x5445))+pz+(((-0.09746)*cj3))+(((-1.0)*cj3*x5455)));
evalcond[5]=(((cj0*cj5*r02))+x5434+((r01*sj5*x5440))+((x5435*x5438))+((sj0*x5450))+((x5442*x5448))+((x5437*x5439)));
evalcond[6]=(x5456+(((-1.0)*r02*sj0*x5444))+((cj0*x5450))+((x5438*x5440))+((x5439*x5442))+(((-1.0)*x5437*x5448))+(((-1.0)*sj5*x5435*x5447)));
evalcond[7]=((-0.0001)+(((0.02626)*x5433))+(((-1.0)*sj0*x5449))+((x5441*x5442))+((x5437*x5453))+(((-1.0)*x5435*x5436))+(((-1.0)*cj0*px))+(((-0.0718)*x5434))+(((-1.0)*x5440*x5452)));
evalcond[8]=((0.0001)+(((-0.0718)*x5456))+(((-1.0)*x5437*x5441))+(((-1.0)*x5436*x5440))+(((-1.0)*sj3*x5455))+((x5442*x5453))+((px*sj0))+((x5435*x5452))+(((-0.09746)*sj3))+(((-1.0)*cj0*x5449)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5458=(cj0*sj5);
IkReal x5459=(cj5*cj6);
IkReal x5460=((1.0)*sj5);
IkReal x5461=((1.0)*cj0);
IkReal x5462=((1.0)*sj0);
IkReal x5463=(cj5*sj6);
IkReal x5464=(r10*x5463);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=(sj3+((r21*x5459))+((r20*x5463))+(((-1.0)*r22*x5460)));
evalcond[2]=((((-1.0)*r01*x5459*x5461))+(((-1.0)*r11*x5459*x5462))+(((-1.0)*r00*x5461*x5463))+((r12*sj0*sj5))+((r02*x5458))+(((-1.0)*x5462*x5464)));
evalcond[3]=(((r12*x5458))+(((-1.0)*r11*x5459*x5461))+cj3+(((-1.0)*x5461*x5464))+((r01*sj0*x5459))+(((-1.0)*r02*sj0*x5460))+((r00*sj0*x5463)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x5465=((1.0)*sj5);
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*r20*sj6*x5465))+(((-1.0)*cj6*r21*x5465))+(((-1.0)*cj5*r22))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5466=((1.0)*cj6);
CheckValue<IkReal> x5467=IKPowWithIntegerCheck(cj3,-1);
if(!x5467.valid){
continue;
}
if( IKabs(((x5467.value)*((((r21*sj6))+(((-1.0)*r20*x5466)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x5466))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x5466)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5467.value)*((((r21*sj6))+(((-1.0)*r20*x5466))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x5466))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x5466))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5467.value)*((((r21*sj6))+(((-1.0)*r20*x5466))))), (((r11*sj0*sj6))+(((-1.0)*r10*sj0*x5466))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x5466))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5468=IKcos(j4);
IkReal x5469=IKsin(j4);
IkReal x5470=(r10*sj0);
IkReal x5471=((0.02626)*cj6);
IkReal x5472=(sj0*sj6);
IkReal x5473=(cj5*r12);
IkReal x5474=(sj5*sj6);
IkReal x5475=(cj0*r10);
IkReal x5476=((0.02626)*r01);
IkReal x5477=(cj0*sj6);
IkReal x5478=(r21*sj6);
IkReal x5479=((1.0)*cj5);
IkReal x5480=((1.0)*cj6);
IkReal x5481=(cj0*r00);
IkReal x5482=((1.0)*py);
IkReal x5483=(cj6*sj0);
IkReal x5484=(r11*sj5);
IkReal x5485=((0.02626)*r11);
IkReal x5486=(r01*sj5);
IkReal x5487=(cj0*cj6);
IkReal x5488=((1.0)*x5468);
IkReal x5489=(sj3*x5469);
IkReal x5490=(sj3*x5468);
IkReal x5491=(cj3*x5469);
evalcond[0]=((((-1.0)*x5478))+x5491+((cj6*r20)));
evalcond[1]=((((-1.0)*cj3*x5488))+(((-1.0)*r20*x5474))+(((-1.0)*r21*sj5*x5480))+(((-1.0)*r22*x5479)));
evalcond[2]=((((-1.0)*x5470*x5480))+(((-1.0)*x5488))+((r01*x5477))+((r11*x5472))+(((-1.0)*x5480*x5481)));
evalcond[3]=(((r00*x5483))+(((-1.0)*x5475*x5480))+(((-1.0)*x5489))+((r11*x5477))+(((-1.0)*r01*x5472)));
evalcond[4]=((-0.0097)+(((-0.02626)*x5478))+((r20*x5471))+pz+(((0.02626)*x5491))+(((0.09746)*cj3))+(((0.0718)*cj3*x5468)));
evalcond[5]=(((x5483*x5484))+((cj0*cj5*r02))+((sj0*x5473))+(((-1.0)*x5469))+((x5486*x5487))+((x5470*x5474))+((x5474*x5481)));
evalcond[6]=((((-1.0)*r02*sj0*x5479))+x5490+((x5484*x5487))+(((-1.0)*r00*sj5*x5472))+((cj0*x5473))+((x5474*x5475))+(((-1.0)*sj0*x5480*x5486)));
evalcond[7]=((-0.0019)+((x5472*x5485))+(((-1.0)*sj0*x5482))+(((-1.0)*x5470*x5471))+(((0.0718)*x5469))+(((-0.02626)*x5468))+(((-1.0)*cj0*px))+((x5476*x5477))+(((-1.0)*x5471*x5481)));
evalcond[8]=((0.0001)+((x5477*x5485))+((r00*sj0*x5471))+(((-1.0)*cj0*x5482))+(((-0.0718)*x5490))+(((-1.0)*x5472*x5476))+(((-1.0)*x5471*x5475))+((px*sj0))+(((-0.09746)*sj3))+(((-0.02626)*x5489)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5492=((1.0)*sj5);
CheckValue<IkReal> x5493=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x5493.valid){
continue;
}
CheckValue<IkReal> x5494 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x5492))+(((-1.0)*cj6*r21*x5492))),IKFAST_ATAN2_MAGTHRESH);
if(!x5494.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5493.value)))+(x5494.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5495=IKcos(j4);
IkReal x5496=IKsin(j4);
IkReal x5497=(r10*sj0);
IkReal x5498=((0.02626)*cj6);
IkReal x5499=(sj0*sj6);
IkReal x5500=(cj5*r12);
IkReal x5501=(sj5*sj6);
IkReal x5502=(cj0*r10);
IkReal x5503=((0.02626)*r01);
IkReal x5504=(cj0*sj6);
IkReal x5505=(r21*sj6);
IkReal x5506=((1.0)*cj5);
IkReal x5507=((1.0)*cj6);
IkReal x5508=(cj0*r00);
IkReal x5509=((1.0)*py);
IkReal x5510=(cj6*sj0);
IkReal x5511=(r11*sj5);
IkReal x5512=((0.02626)*r11);
IkReal x5513=(r01*sj5);
IkReal x5514=(cj0*cj6);
IkReal x5515=((1.0)*x5495);
IkReal x5516=(sj3*x5496);
IkReal x5517=(sj3*x5495);
IkReal x5518=(cj3*x5496);
evalcond[0]=(x5518+(((-1.0)*x5505))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x5506))+(((-1.0)*r21*sj5*x5507))+(((-1.0)*cj3*x5515))+(((-1.0)*r20*x5501)));
evalcond[2]=((((-1.0)*x5497*x5507))+((r11*x5499))+(((-1.0)*x5507*x5508))+(((-1.0)*x5515))+((r01*x5504)));
evalcond[3]=((((-1.0)*x5502*x5507))+((r11*x5504))+(((-1.0)*x5516))+((r00*x5510))+(((-1.0)*r01*x5499)));
evalcond[4]=((-0.0097)+((r20*x5498))+(((0.0718)*cj3*x5495))+pz+(((0.09746)*cj3))+(((0.02626)*x5518))+(((-0.02626)*x5505)));
evalcond[5]=(((x5513*x5514))+((cj0*cj5*r02))+((sj0*x5500))+((x5501*x5508))+(((-1.0)*x5496))+((x5497*x5501))+((x5510*x5511)));
evalcond[6]=((((-1.0)*r00*sj5*x5499))+x5517+(((-1.0)*sj0*x5507*x5513))+((x5511*x5514))+((x5501*x5502))+(((-1.0)*r02*sj0*x5506))+((cj0*x5500)));
evalcond[7]=((-0.0019)+(((-1.0)*sj0*x5509))+(((-1.0)*x5498*x5508))+((x5503*x5504))+(((-1.0)*x5497*x5498))+((x5499*x5512))+(((-0.02626)*x5495))+(((0.0718)*x5496))+(((-1.0)*cj0*px)));
evalcond[8]=((0.0001)+((r00*sj0*x5498))+(((-1.0)*x5498*x5502))+(((-1.0)*cj0*x5509))+((px*sj0))+(((-0.09746)*sj3))+(((-0.02626)*x5516))+(((-1.0)*x5499*x5503))+((x5504*x5512))+(((-0.0718)*x5517)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5519=(cj0*sj5);
IkReal x5520=(cj5*cj6);
IkReal x5521=((1.0)*sj5);
IkReal x5522=((1.0)*cj0);
IkReal x5523=((1.0)*sj0);
IkReal x5524=(cj5*sj6);
IkReal x5525=(r10*x5524);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x5521))+((r21*x5520))+((r20*x5524))+(((-1.0)*cj2)));
evalcond[2]=((((-1.0)*r01*x5520*x5522))+(((-1.0)*sj2))+(((-1.0)*x5523*x5525))+((r02*x5519))+((r12*sj0*sj5))+(((-1.0)*r00*x5522*x5524))+(((-1.0)*r11*x5520*x5523)));
evalcond[3]=(((r01*sj0*x5520))+((r12*x5519))+(((-1.0)*r02*sj0*x5521))+(((-1.0)*r11*x5520*x5522))+(((-1.0)*x5522*x5525))+((r00*sj0*x5524)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
IkReal x5526=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x5526))+(((-1.0)*r20*sj5*sj6)))))+(IKabs((((cj6*r20))+(((-1.0)*sj6*x5526))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=1.0;
j1=0;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5527=((1.0)*sj5);
IkReal x5528=((1.0)*sj6);
CheckValue<IkReal> x5529=IKPowWithIntegerCheck(sj2,-1);
if(!x5529.valid){
continue;
}
CheckValue<IkReal> x5530=IKPowWithIntegerCheck(cj2,-1);
if(!x5530.valid){
continue;
}
if( IKabs(((x5529.value)*(((((-1.0)*r20*sj6*x5527))+(((-1.0)*cj6*r21*x5527))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5530.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5528))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5528)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5529.value)*(((((-1.0)*r20*sj6*x5527))+(((-1.0)*cj6*r21*x5527))+(((-1.0)*cj5*r22))))))+IKsqr(((x5530.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5528))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5528))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5529.value)*(((((-1.0)*r20*sj6*x5527))+(((-1.0)*cj6*r21*x5527))+(((-1.0)*cj5*r22))))), ((x5530.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x5528))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x5528))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5531=IKcos(j4);
IkReal x5532=IKsin(j4);
IkReal x5533=(sj0*sj6);
IkReal x5534=((0.02626)*r01);
IkReal x5535=(cj5*r12);
IkReal x5536=(cj6*sj0);
IkReal x5537=(r11*sj5);
IkReal x5538=(r10*sj5);
IkReal x5539=(cj0*sj6);
IkReal x5540=((1.0)*cj5);
IkReal x5541=((0.02626)*cj6);
IkReal x5542=(r21*sj6);
IkReal x5543=((1.0)*r01);
IkReal x5544=(r00*sj5);
IkReal x5545=((1.0)*py);
IkReal x5546=((1.0)*sj5);
IkReal x5547=((1.0)*cj0);
IkReal x5548=((0.02626)*r11);
IkReal x5549=(cj0*cj6);
IkReal x5550=(r10*x5549);
IkReal x5551=(cj2*x5532);
IkReal x5552=(cj2*x5531);
IkReal x5553=((1.0)*x5532);
IkReal x5554=(sj2*x5531);
evalcond[0]=((((-1.0)*x5554))+((cj6*r20))+(((-1.0)*x5542)));
evalcond[1]=((((-1.0)*sj2*x5553))+(((-1.0)*r20*sj6*x5546))+(((-1.0)*cj6*r21*x5546))+(((-1.0)*r22*x5540)));
evalcond[2]=(x5552+((r01*x5539))+((r11*x5533))+(((-1.0)*cj6*r00*x5547))+(((-1.0)*r10*x5536)));
evalcond[3]=((((-1.0)*cj6*r10*x5547))+(((-1.0)*x5533*x5543))+((r00*x5536))+(((-1.0)*x5553))+((r11*x5539)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5542))+(((-0.1158)*cj2))+(((-0.02626)*x5554))+((r20*x5541))+(((-0.0009)*sj2))+(((0.0718)*sj2*x5532))+pz);
evalcond[5]=(((x5536*x5537))+((x5539*x5544))+x5551+((cj0*cj5*r02))+((sj0*x5535))+((r01*sj5*x5549))+((x5533*x5538)));
evalcond[6]=((((-1.0)*r02*sj0*x5540))+x5531+(((-1.0)*x5533*x5544))+(((-1.0)*sj5*x5536*x5543))+((x5538*x5539))+((x5537*x5549))+((cj0*x5535)));
evalcond[7]=((-0.09736)+((x5539*x5548))+(((-0.0718)*x5531))+(((-1.0)*cj0*r10*x5541))+(((-1.0)*cj0*x5545))+(((0.02626)*r00*x5536))+((px*sj0))+(((-0.02626)*x5532))+(((-1.0)*x5533*x5534)));
evalcond[8]=((-0.001)+(((0.02626)*x5552))+(((-0.1158)*sj2))+(((-1.0)*cj0*r00*x5541))+((x5534*x5539))+(((-0.02626)*r10*x5536))+((x5533*x5548))+(((-0.0718)*x5551))+(((0.0009)*cj2))+(((-1.0)*sj0*x5545))+(((-1.0)*px*x5547)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5555=((1.0)*sj6);
CheckValue<IkReal> x5556=IKPowWithIntegerCheck(sj2,-1);
if(!x5556.valid){
continue;
}
if( IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x5555)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5556.value)*(((((-1.0)*r21*x5555))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x5555))))+IKsqr(((x5556.value)*(((((-1.0)*r21*x5555))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x5555))), ((x5556.value)*(((((-1.0)*r21*x5555))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5557=IKcos(j4);
IkReal x5558=IKsin(j4);
IkReal x5559=(sj0*sj6);
IkReal x5560=((0.02626)*r01);
IkReal x5561=(cj5*r12);
IkReal x5562=(cj6*sj0);
IkReal x5563=(r11*sj5);
IkReal x5564=(r10*sj5);
IkReal x5565=(cj0*sj6);
IkReal x5566=((1.0)*cj5);
IkReal x5567=((0.02626)*cj6);
IkReal x5568=(r21*sj6);
IkReal x5569=((1.0)*r01);
IkReal x5570=(r00*sj5);
IkReal x5571=((1.0)*py);
IkReal x5572=((1.0)*sj5);
IkReal x5573=((1.0)*cj0);
IkReal x5574=((0.02626)*r11);
IkReal x5575=(cj0*cj6);
IkReal x5576=(r10*x5575);
IkReal x5577=(cj2*x5558);
IkReal x5578=(cj2*x5557);
IkReal x5579=((1.0)*x5558);
IkReal x5580=(sj2*x5557);
evalcond[0]=((((-1.0)*x5580))+((cj6*r20))+(((-1.0)*x5568)));
evalcond[1]=((((-1.0)*r22*x5566))+(((-1.0)*r20*sj6*x5572))+(((-1.0)*cj6*r21*x5572))+(((-1.0)*sj2*x5579)));
evalcond[2]=(x5578+((r11*x5559))+(((-1.0)*r10*x5562))+((r01*x5565))+(((-1.0)*cj6*r00*x5573)));
evalcond[3]=((((-1.0)*cj6*r10*x5573))+(((-1.0)*x5579))+((r11*x5565))+(((-1.0)*x5559*x5569))+((r00*x5562)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5568))+((r20*x5567))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+(((-0.02626)*x5580))+pz+(((0.0718)*sj2*x5558)));
evalcond[5]=(x5577+((cj0*cj5*r02))+((x5565*x5570))+((x5562*x5563))+((r01*sj5*x5575))+((sj0*x5561))+((x5559*x5564)));
evalcond[6]=(x5557+((x5564*x5565))+((cj0*x5561))+((x5563*x5575))+(((-1.0)*x5559*x5570))+(((-1.0)*sj5*x5562*x5569))+(((-1.0)*r02*sj0*x5566)));
evalcond[7]=((-0.09736)+((x5565*x5574))+(((-1.0)*cj0*r10*x5567))+(((-0.02626)*x5558))+(((-1.0)*cj0*x5571))+(((-0.0718)*x5557))+(((0.02626)*r00*x5562))+((px*sj0))+(((-1.0)*x5559*x5560)));
evalcond[8]=((-0.001)+((x5560*x5565))+(((-0.1158)*sj2))+(((-1.0)*sj0*x5571))+(((-1.0)*cj0*r00*x5567))+(((-0.02626)*r10*x5562))+(((0.0009)*cj2))+(((0.02626)*x5578))+(((-0.0718)*x5577))+((x5559*x5574))+(((-1.0)*px*x5573)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5581=((1.0)*r21);
CheckValue<IkReal> x5582=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x5582.valid){
continue;
}
CheckValue<IkReal> x5583 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x5581))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x5581))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x5583.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5582.value)))+(x5583.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5584=IKcos(j4);
IkReal x5585=IKsin(j4);
IkReal x5586=(sj0*sj6);
IkReal x5587=((0.02626)*r01);
IkReal x5588=(cj5*r12);
IkReal x5589=(cj6*sj0);
IkReal x5590=(r11*sj5);
IkReal x5591=(r10*sj5);
IkReal x5592=(cj0*sj6);
IkReal x5593=((1.0)*cj5);
IkReal x5594=((0.02626)*cj6);
IkReal x5595=(r21*sj6);
IkReal x5596=((1.0)*r01);
IkReal x5597=(r00*sj5);
IkReal x5598=((1.0)*py);
IkReal x5599=((1.0)*sj5);
IkReal x5600=((1.0)*cj0);
IkReal x5601=((0.02626)*r11);
IkReal x5602=(cj0*cj6);
IkReal x5603=(r10*x5602);
IkReal x5604=(cj2*x5585);
IkReal x5605=(cj2*x5584);
IkReal x5606=((1.0)*x5585);
IkReal x5607=(sj2*x5584);
evalcond[0]=((((-1.0)*x5607))+(((-1.0)*x5595))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj6*x5599))+(((-1.0)*cj6*r21*x5599))+(((-1.0)*sj2*x5606))+(((-1.0)*r22*x5593)));
evalcond[2]=(x5605+((r11*x5586))+(((-1.0)*cj6*r00*x5600))+((r01*x5592))+(((-1.0)*r10*x5589)));
evalcond[3]=((((-1.0)*x5586*x5596))+((r11*x5592))+((r00*x5589))+(((-1.0)*x5606))+(((-1.0)*cj6*r10*x5600)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5607))+((r20*x5594))+(((-0.1158)*cj2))+(((0.0718)*sj2*x5585))+(((-0.02626)*x5595))+(((-0.0009)*sj2))+pz);
evalcond[5]=(x5604+((cj0*cj5*r02))+((x5592*x5597))+((x5586*x5591))+((r01*sj5*x5602))+((sj0*x5588))+((x5589*x5590)));
evalcond[6]=(x5584+((x5590*x5602))+(((-1.0)*sj5*x5589*x5596))+((cj0*x5588))+(((-1.0)*r02*sj0*x5593))+(((-1.0)*x5586*x5597))+((x5591*x5592)));
evalcond[7]=((-0.09736)+(((-1.0)*x5586*x5587))+(((-1.0)*cj0*x5598))+((x5592*x5601))+(((-1.0)*cj0*r10*x5594))+(((0.02626)*r00*x5589))+(((-0.0718)*x5584))+(((-0.02626)*x5585))+((px*sj0)));
evalcond[8]=((-0.001)+(((-1.0)*px*x5600))+(((-0.1158)*sj2))+(((-0.0718)*x5604))+(((-0.02626)*r10*x5589))+((x5586*x5601))+(((-1.0)*cj0*r00*x5594))+((x5587*x5592))+(((0.0009)*cj2))+(((0.02626)*x5605))+(((-1.0)*sj0*x5598)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5608=(cj0*sj5);
IkReal x5609=(cj5*cj6);
IkReal x5610=((1.0)*sj5);
IkReal x5611=((1.0)*cj0);
IkReal x5612=((1.0)*sj0);
IkReal x5613=(cj5*sj6);
IkReal x5614=(r10*x5613);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(cj2+(((-1.0)*r22*x5610))+((r20*x5613))+((r21*x5609)));
evalcond[2]=((((-1.0)*r00*x5611*x5613))+(((-1.0)*x5612*x5614))+sj2+((r02*x5608))+(((-1.0)*r01*x5609*x5611))+((r12*sj0*sj5))+(((-1.0)*r11*x5609*x5612)));
evalcond[3]=((((-1.0)*r02*sj0*x5610))+((r00*sj0*x5613))+((r12*x5608))+(((-1.0)*r11*x5609*x5611))+(((-1.0)*x5611*x5614))+((r01*sj0*x5609)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=1.0;
j1=0;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
IkReal x5615=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*sj6*x5615))+((cj6*r20)))))+(IKabs(((((-1.0)*cj6*sj5*x5615))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=1.0;
j1=0;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=1.0;
j1=0;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5616=((1.0)*sj5);
IkReal x5617=((1.0)*sj6);
CheckValue<IkReal> x5618=IKPowWithIntegerCheck(sj2,-1);
if(!x5618.valid){
continue;
}
CheckValue<IkReal> x5619=IKPowWithIntegerCheck(cj2,-1);
if(!x5619.valid){
continue;
}
if( IKabs(((x5618.value)*(((((-1.0)*r20*sj6*x5616))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x5616)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5619.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x5617))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x5617)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5618.value)*(((((-1.0)*r20*sj6*x5616))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x5616))))))+IKsqr(((x5619.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x5617))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x5617))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5618.value)*(((((-1.0)*r20*sj6*x5616))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x5616))))), ((x5619.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x5617))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x5617))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5620=IKsin(j4);
IkReal x5621=IKcos(j4);
IkReal x5622=(sj0*sj6);
IkReal x5623=((0.02626)*r01);
IkReal x5624=(cj5*r12);
IkReal x5625=(cj6*sj0);
IkReal x5626=(r11*sj5);
IkReal x5627=(r10*sj5);
IkReal x5628=(cj0*sj6);
IkReal x5629=(r21*sj6);
IkReal x5630=((1.0)*cj5);
IkReal x5631=((0.02626)*cj6);
IkReal x5632=((1.0)*r01);
IkReal x5633=(r00*sj5);
IkReal x5634=((1.0)*py);
IkReal x5635=((1.0)*sj2);
IkReal x5636=((1.0)*sj5);
IkReal x5637=((1.0)*cj0);
IkReal x5638=((0.02626)*r11);
IkReal x5639=(cj0*cj6);
IkReal x5640=(r10*x5639);
IkReal x5641=(cj2*x5620);
IkReal x5642=(cj2*x5621);
evalcond[0]=((((-1.0)*x5621*x5635))+((cj6*r20))+(((-1.0)*x5629)));
evalcond[1]=((((-1.0)*r20*sj6*x5636))+(((-1.0)*x5620*x5635))+(((-1.0)*cj6*r21*x5636))+(((-1.0)*r22*x5630)));
evalcond[2]=(x5620+(((-1.0)*x5622*x5632))+(((-1.0)*cj6*r10*x5637))+((r00*x5625))+((r11*x5628)));
evalcond[3]=(x5642+(((-1.0)*r10*x5625))+((r01*x5628))+((r11*x5622))+(((-1.0)*cj6*r00*x5637)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5629))+(((-0.1158)*cj2))+(((0.0718)*sj2*x5620))+(((-0.0009)*sj2))+pz+(((-0.02626)*sj2*x5621))+((r20*x5631)));
evalcond[5]=(((x5625*x5626))+x5641+((cj0*cj5*r02))+((sj0*x5624))+((x5628*x5633))+((x5622*x5627))+((r01*sj5*x5639)));
evalcond[6]=(((cj0*x5624))+(((-1.0)*sj5*x5625*x5632))+((x5626*x5639))+(((-1.0)*r02*sj0*x5630))+((x5627*x5628))+(((-1.0)*x5622*x5633))+(((-1.0)*x5621)));
evalcond[7]=((0.09756)+((x5628*x5638))+(((0.02626)*r00*x5625))+(((-1.0)*x5622*x5623))+(((0.02626)*x5620))+((px*sj0))+(((-1.0)*cj0*r10*x5631))+(((-1.0)*cj0*x5634))+(((0.0718)*x5621)));
evalcond[8]=((-0.001)+((x5622*x5638))+(((-0.0718)*x5641))+(((-1.0)*sj0*x5634))+(((-0.1158)*sj2))+(((-0.02626)*r10*x5625))+((x5623*x5628))+(((0.0009)*cj2))+(((-1.0)*px*x5637))+(((-1.0)*cj0*r00*x5631))+(((0.02626)*x5642)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5643=((1.0)*sj6);
CheckValue<IkReal> x5644=IKPowWithIntegerCheck(sj2,-1);
if(!x5644.valid){
continue;
}
if( IKabs(((((-1.0)*cj0*r11*x5643))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5644.value)*(((((-1.0)*r21*x5643))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*r11*x5643))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))))+IKsqr(((x5644.value)*(((((-1.0)*r21*x5643))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*r11*x5643))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))), ((x5644.value)*(((((-1.0)*r21*x5643))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5645=IKsin(j4);
IkReal x5646=IKcos(j4);
IkReal x5647=(sj0*sj6);
IkReal x5648=((0.02626)*r01);
IkReal x5649=(cj5*r12);
IkReal x5650=(cj6*sj0);
IkReal x5651=(r11*sj5);
IkReal x5652=(r10*sj5);
IkReal x5653=(cj0*sj6);
IkReal x5654=(r21*sj6);
IkReal x5655=((1.0)*cj5);
IkReal x5656=((0.02626)*cj6);
IkReal x5657=((1.0)*r01);
IkReal x5658=(r00*sj5);
IkReal x5659=((1.0)*py);
IkReal x5660=((1.0)*sj2);
IkReal x5661=((1.0)*sj5);
IkReal x5662=((1.0)*cj0);
IkReal x5663=((0.02626)*r11);
IkReal x5664=(cj0*cj6);
IkReal x5665=(r10*x5664);
IkReal x5666=(cj2*x5645);
IkReal x5667=(cj2*x5646);
evalcond[0]=((((-1.0)*x5646*x5660))+((cj6*r20))+(((-1.0)*x5654)));
evalcond[1]=((((-1.0)*r20*sj6*x5661))+(((-1.0)*r22*x5655))+(((-1.0)*x5645*x5660))+(((-1.0)*cj6*r21*x5661)));
evalcond[2]=(x5645+((r00*x5650))+(((-1.0)*x5647*x5657))+((r11*x5653))+(((-1.0)*cj6*r10*x5662)));
evalcond[3]=(x5667+((r01*x5653))+((r11*x5647))+(((-1.0)*r10*x5650))+(((-1.0)*cj6*r00*x5662)));
evalcond[4]=((-0.1255)+(((-0.02626)*x5654))+((r20*x5656))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+pz+(((0.0718)*sj2*x5645))+(((-0.02626)*sj2*x5646)));
evalcond[5]=(x5666+((cj0*cj5*r02))+((r01*sj5*x5664))+((sj0*x5649))+((x5647*x5652))+((x5653*x5658))+((x5650*x5651)));
evalcond[6]=((((-1.0)*r02*sj0*x5655))+((cj0*x5649))+(((-1.0)*sj5*x5650*x5657))+((x5652*x5653))+((x5651*x5664))+(((-1.0)*x5647*x5658))+(((-1.0)*x5646)));
evalcond[7]=((0.09756)+(((-1.0)*cj0*r10*x5656))+(((-1.0)*x5647*x5648))+(((0.02626)*r00*x5650))+(((0.02626)*x5645))+(((0.0718)*x5646))+(((-1.0)*cj0*x5659))+((px*sj0))+((x5653*x5663)));
evalcond[8]=((-0.001)+(((-1.0)*cj0*r00*x5656))+(((-1.0)*px*x5662))+(((-0.1158)*sj2))+(((-0.0718)*x5666))+(((-1.0)*sj0*x5659))+(((0.02626)*x5667))+((x5648*x5653))+(((0.0009)*cj2))+(((-0.02626)*r10*x5650))+((x5647*x5663)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5668=((1.0)*r21);
CheckValue<IkReal> x5669 = IKatan2WithCheck(IkReal(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x5668))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x5668))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x5669.valid){
continue;
}
CheckValue<IkReal> x5670=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x5670.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x5669.value)+(((1.5707963267949)*(x5670.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5671=IKsin(j4);
IkReal x5672=IKcos(j4);
IkReal x5673=(sj0*sj6);
IkReal x5674=((0.02626)*r01);
IkReal x5675=(cj5*r12);
IkReal x5676=(cj6*sj0);
IkReal x5677=(r11*sj5);
IkReal x5678=(r10*sj5);
IkReal x5679=(cj0*sj6);
IkReal x5680=(r21*sj6);
IkReal x5681=((1.0)*cj5);
IkReal x5682=((0.02626)*cj6);
IkReal x5683=((1.0)*r01);
IkReal x5684=(r00*sj5);
IkReal x5685=((1.0)*py);
IkReal x5686=((1.0)*sj2);
IkReal x5687=((1.0)*sj5);
IkReal x5688=((1.0)*cj0);
IkReal x5689=((0.02626)*r11);
IkReal x5690=(cj0*cj6);
IkReal x5691=(r10*x5690);
IkReal x5692=(cj2*x5671);
IkReal x5693=(cj2*x5672);
evalcond[0]=(((cj6*r20))+(((-1.0)*x5680))+(((-1.0)*x5672*x5686)));
evalcond[1]=((((-1.0)*x5671*x5686))+(((-1.0)*r20*sj6*x5687))+(((-1.0)*r22*x5681))+(((-1.0)*cj6*r21*x5687)));
evalcond[2]=((((-1.0)*cj6*r10*x5688))+x5671+(((-1.0)*x5673*x5683))+((r11*x5679))+((r00*x5676)));
evalcond[3]=(x5693+(((-1.0)*cj6*r00*x5688))+(((-1.0)*r10*x5676))+((r11*x5673))+((r01*x5679)));
evalcond[4]=((-0.1255)+(((0.0718)*sj2*x5671))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+pz+((r20*x5682))+(((-0.02626)*x5680))+(((-0.02626)*sj2*x5672)));
evalcond[5]=(x5692+((cj0*cj5*r02))+((x5676*x5677))+((sj0*x5675))+((x5673*x5678))+((x5679*x5684))+((r01*sj5*x5690)));
evalcond[6]=(((x5677*x5690))+(((-1.0)*x5672))+((cj0*x5675))+(((-1.0)*r02*sj0*x5681))+((x5678*x5679))+(((-1.0)*sj5*x5676*x5683))+(((-1.0)*x5673*x5684)));
evalcond[7]=((0.09756)+(((-1.0)*cj0*x5685))+(((0.02626)*x5671))+((x5679*x5689))+(((0.02626)*r00*x5676))+((px*sj0))+(((-1.0)*x5673*x5674))+(((0.0718)*x5672))+(((-1.0)*cj0*r10*x5682)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-0.02626)*r10*x5676))+(((-1.0)*px*x5688))+(((-0.0718)*x5692))+((x5673*x5689))+(((-1.0)*cj0*r00*x5682))+(((-1.0)*sj0*x5685))+(((0.02626)*x5693))+(((0.0009)*cj2))+((x5674*x5679)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x5702=IKPowWithIntegerCheck(sj3,-1);
if(!x5702.valid){
continue;
}
IkReal x5694=x5702.value;
IkReal x5695=((1.0)*cj0);
IkReal x5696=(cj6*r10);
IkReal x5697=((1.0)*sj6);
IkReal x5698=(r01*sj0);
IkReal x5699=(cj2*cj3);
IkReal x5700=(sj6*x5699);
IkReal x5701=(cj6*r00*sj0);
CheckValue<IkReal> x5703=IKPowWithIntegerCheck(sj2,-1);
if(!x5703.valid){
continue;
}
if( IKabs((x5694*((((cj0*r11*sj6))+(((-1.0)*x5697*x5698))+(((-1.0)*x5695*x5696))+x5701)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x5694*(x5703.value)*(((((-1.0)*r21*sj3*x5697))+(((-1.0)*r11*x5695*x5700))+(((-1.0)*x5699*x5701))+((cj0*x5696*x5699))+((cj6*r20*sj3))+((x5698*x5700)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x5694*((((cj0*r11*sj6))+(((-1.0)*x5697*x5698))+(((-1.0)*x5695*x5696))+x5701))))+IKsqr((x5694*(x5703.value)*(((((-1.0)*r21*sj3*x5697))+(((-1.0)*r11*x5695*x5700))+(((-1.0)*x5699*x5701))+((cj0*x5696*x5699))+((cj6*r20*sj3))+((x5698*x5700))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x5694*((((cj0*r11*sj6))+(((-1.0)*x5697*x5698))+(((-1.0)*x5695*x5696))+x5701))), (x5694*(x5703.value)*(((((-1.0)*r21*sj3*x5697))+(((-1.0)*r11*x5695*x5700))+(((-1.0)*x5699*x5701))+((cj0*x5696*x5699))+((cj6*r20*sj3))+((x5698*x5700))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5704=IKsin(j4);
IkReal x5705=IKcos(j4);
IkReal x5706=(sj0*sj6);
IkReal x5707=((0.02626)*r01);
IkReal x5708=(cj6*sj0);
IkReal x5709=((0.02626)*r10);
IkReal x5710=(cj0*sj6);
IkReal x5711=(r11*sj5);
IkReal x5712=(cj6*r20);
IkReal x5713=(cj0*cj6);
IkReal x5714=(cj5*r12);
IkReal x5715=((1.0)*cj5);
IkReal x5716=(cj2*cj3);
IkReal x5717=((0.02626)*r11);
IkReal x5718=((1.0)*r10);
IkReal x5719=(r21*sj6);
IkReal x5720=(r10*sj5);
IkReal x5721=(cj3*sj2);
IkReal x5722=((1.0)*r01);
IkReal x5723=(r00*sj5);
IkReal x5724=((1.0)*py);
IkReal x5725=((1.0)*sj5);
IkReal x5726=((0.02626)*r00);
IkReal x5727=((1.0)*x5704);
IkReal x5728=((0.02626)*x5704);
IkReal x5729=(cj2*x5704);
IkReal x5730=(sj3*x5705);
IkReal x5731=((0.0718)*x5705);
IkReal x5732=(cj2*x5705);
IkReal x5733=(sj2*x5705);
evalcond[0]=((((-1.0)*x5719))+(((-1.0)*x5716*x5727))+(((-1.0)*x5733))+x5712);
evalcond[1]=((((-1.0)*x5706*x5722))+(((-1.0)*x5713*x5718))+((r11*x5710))+(((-1.0)*sj3*x5727))+((r00*x5708)));
evalcond[2]=((((-1.0)*cj6*r21*x5725))+(((-1.0)*r22*x5715))+(((-1.0)*sj2*x5727))+(((-1.0)*r20*sj6*x5725))+((x5705*x5716)));
evalcond[3]=((((-1.0)*x5708*x5718))+(((-1.0)*r00*x5713))+((r11*x5706))+((r01*x5710))+(((-1.0)*x5721*x5727))+x5732);
evalcond[4]=((((-1.0)*x5706*x5723))+((cj0*x5714))+((x5711*x5713))+(((-1.0)*r02*sj0*x5715))+((x5710*x5720))+(((-1.0)*sj5*x5708*x5722))+x5730);
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x5713))+((x5706*x5720))+((x5705*x5721))+((sj0*x5714))+((x5710*x5723))+x5729+((x5708*x5711)));
evalcond[6]=((0.0001)+(((-1.0)*x5709*x5713))+((x5710*x5717))+(((-1.0)*cj0*x5724))+((x5708*x5726))+(((-1.0)*sj3*x5728))+((px*sj0))+(((-0.0718)*x5730))+(((-0.09746)*sj3))+(((-1.0)*x5706*x5707)));
evalcond[7]=((-0.1255)+(((-0.09746)*x5716))+(((-0.02626)*x5733))+(((-0.1158)*cj2))+(((0.0718)*sj2*x5704))+(((-0.0009)*sj2))+(((-1.0)*x5716*x5728))+(((0.02626)*x5712))+pz+(((-0.02626)*x5719))+(((-1.0)*x5716*x5731)));
evalcond[8]=((-0.001)+((x5707*x5710))+(((-0.1158)*sj2))+(((-1.0)*x5708*x5709))+(((-1.0)*x5713*x5726))+(((0.0009)*cj2))+(((-1.0)*sj0*x5724))+(((-0.0718)*x5729))+(((-0.09746)*x5721))+(((-1.0)*x5721*x5731))+(((0.02626)*x5732))+(((-1.0)*x5721*x5728))+(((-1.0)*cj0*px))+((x5706*x5717)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5734=(sj2*sj6);
IkReal x5735=(cj0*r01);
IkReal x5736=((1.0)*sj0);
IkReal x5737=(cj6*sj2);
IkReal x5738=(cj2*sj6);
IkReal x5739=((1.0)*r21);
IkReal x5740=(cj0*r00);
IkReal x5741=(cj2*cj6);
CheckValue<IkReal> x5742=IKPowWithIntegerCheck(cj3,-1);
if(!x5742.valid){
continue;
}
if( IKabs(((x5742.value)*(((((-1.0)*x5737*x5740))+((x5734*x5735))+((r11*sj0*x5734))+(((-1.0)*x5738*x5739))+((r20*x5741))+(((-1.0)*r10*x5736*x5737)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*sj0*x5741))+(((-1.0)*x5735*x5738))+((r20*x5737))+(((-1.0)*x5734*x5739))+(((-1.0)*r11*x5736*x5738))+((x5740*x5741)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5742.value)*(((((-1.0)*x5737*x5740))+((x5734*x5735))+((r11*sj0*x5734))+(((-1.0)*x5738*x5739))+((r20*x5741))+(((-1.0)*r10*x5736*x5737))))))+IKsqr((((r10*sj0*x5741))+(((-1.0)*x5735*x5738))+((r20*x5737))+(((-1.0)*x5734*x5739))+(((-1.0)*r11*x5736*x5738))+((x5740*x5741))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5742.value)*(((((-1.0)*x5737*x5740))+((x5734*x5735))+((r11*sj0*x5734))+(((-1.0)*x5738*x5739))+((r20*x5741))+(((-1.0)*r10*x5736*x5737))))), (((r10*sj0*x5741))+(((-1.0)*x5735*x5738))+((r20*x5737))+(((-1.0)*x5734*x5739))+(((-1.0)*r11*x5736*x5738))+((x5740*x5741))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5743=IKsin(j4);
IkReal x5744=IKcos(j4);
IkReal x5745=(sj0*sj6);
IkReal x5746=((0.02626)*r01);
IkReal x5747=(cj6*sj0);
IkReal x5748=((0.02626)*r10);
IkReal x5749=(cj0*sj6);
IkReal x5750=(r11*sj5);
IkReal x5751=(cj6*r20);
IkReal x5752=(cj0*cj6);
IkReal x5753=(cj5*r12);
IkReal x5754=((1.0)*cj5);
IkReal x5755=(cj2*cj3);
IkReal x5756=((0.02626)*r11);
IkReal x5757=((1.0)*r10);
IkReal x5758=(r21*sj6);
IkReal x5759=(r10*sj5);
IkReal x5760=(cj3*sj2);
IkReal x5761=((1.0)*r01);
IkReal x5762=(r00*sj5);
IkReal x5763=((1.0)*py);
IkReal x5764=((1.0)*sj5);
IkReal x5765=((0.02626)*r00);
IkReal x5766=((1.0)*x5743);
IkReal x5767=((0.02626)*x5743);
IkReal x5768=(cj2*x5743);
IkReal x5769=(sj3*x5744);
IkReal x5770=((0.0718)*x5744);
IkReal x5771=(cj2*x5744);
IkReal x5772=(sj2*x5744);
evalcond[0]=((((-1.0)*x5755*x5766))+(((-1.0)*x5772))+(((-1.0)*x5758))+x5751);
evalcond[1]=(((r11*x5749))+(((-1.0)*x5752*x5757))+(((-1.0)*x5745*x5761))+(((-1.0)*sj3*x5766))+((r00*x5747)));
evalcond[2]=((((-1.0)*sj2*x5766))+(((-1.0)*r20*sj6*x5764))+((x5744*x5755))+(((-1.0)*r22*x5754))+(((-1.0)*cj6*r21*x5764)));
evalcond[3]=(((r11*x5745))+(((-1.0)*x5760*x5766))+(((-1.0)*x5747*x5757))+(((-1.0)*r00*x5752))+((r01*x5749))+x5771);
evalcond[4]=(((x5750*x5752))+(((-1.0)*r02*sj0*x5754))+(((-1.0)*x5745*x5762))+(((-1.0)*sj5*x5747*x5761))+((x5749*x5759))+((cj0*x5753))+x5769);
evalcond[5]=(((cj0*cj5*r02))+((x5744*x5760))+((r01*sj5*x5752))+((x5749*x5762))+((x5747*x5750))+((sj0*x5753))+((x5745*x5759))+x5768);
evalcond[6]=((0.0001)+(((-0.0718)*x5769))+(((-1.0)*x5745*x5746))+(((-1.0)*sj3*x5767))+(((-1.0)*cj0*x5763))+((x5749*x5756))+((x5747*x5765))+((px*sj0))+(((-1.0)*x5748*x5752))+(((-0.09746)*sj3)));
evalcond[7]=((-0.1255)+(((-0.02626)*x5772))+(((-0.1158)*cj2))+(((0.02626)*x5751))+(((-0.02626)*x5758))+(((-0.0009)*sj2))+pz+(((0.0718)*sj2*x5743))+(((-1.0)*x5755*x5767))+(((-1.0)*x5755*x5770))+(((-0.09746)*x5755)));
evalcond[8]=((-0.001)+((x5746*x5749))+(((-0.0718)*x5768))+(((-0.1158)*sj2))+(((-1.0)*x5760*x5770))+(((-0.09746)*x5760))+(((-1.0)*sj0*x5763))+(((-1.0)*x5760*x5767))+(((-1.0)*x5752*x5765))+(((-1.0)*x5747*x5748))+(((0.0009)*cj2))+(((0.02626)*x5771))+(((-1.0)*cj0*px))+((x5745*x5756)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5773=cj2*cj2;
IkReal x5774=(cj2*cj3);
IkReal x5775=(cj6*r20);
IkReal x5776=(cj5*r22);
IkReal x5777=(r20*sj5);
IkReal x5778=((1.0)*sj2);
IkReal x5779=(sj6*x5778);
IkReal x5780=(cj6*r21*sj5);
CheckValue<IkReal> x5781=IKPowWithIntegerCheck(IKsign(((1.0)+((x5773*(cj3*cj3)))+(((-1.0)*x5773)))),-1);
if(!x5781.valid){
continue;
}
CheckValue<IkReal> x5782 = IKatan2WithCheck(IkReal(((((-1.0)*x5776*x5778))+(((-1.0)*x5777*x5779))+((x5774*x5775))+(((-1.0)*x5778*x5780))+(((-1.0)*r21*sj6*x5774)))),((((-1.0)*r21*x5779))+((sj2*x5775))+((x5774*x5776))+((x5774*x5780))+((sj6*x5774*x5777))),IKFAST_ATAN2_MAGTHRESH);
if(!x5782.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5781.value)))+(x5782.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x5783=IKsin(j4);
IkReal x5784=IKcos(j4);
IkReal x5785=(sj0*sj6);
IkReal x5786=((0.02626)*r01);
IkReal x5787=(cj6*sj0);
IkReal x5788=((0.02626)*r10);
IkReal x5789=(cj0*sj6);
IkReal x5790=(r11*sj5);
IkReal x5791=(cj6*r20);
IkReal x5792=(cj0*cj6);
IkReal x5793=(cj5*r12);
IkReal x5794=((1.0)*cj5);
IkReal x5795=(cj2*cj3);
IkReal x5796=((0.02626)*r11);
IkReal x5797=((1.0)*r10);
IkReal x5798=(r21*sj6);
IkReal x5799=(r10*sj5);
IkReal x5800=(cj3*sj2);
IkReal x5801=((1.0)*r01);
IkReal x5802=(r00*sj5);
IkReal x5803=((1.0)*py);
IkReal x5804=((1.0)*sj5);
IkReal x5805=((0.02626)*r00);
IkReal x5806=((1.0)*x5783);
IkReal x5807=((0.02626)*x5783);
IkReal x5808=(cj2*x5783);
IkReal x5809=(sj3*x5784);
IkReal x5810=((0.0718)*x5784);
IkReal x5811=(cj2*x5784);
IkReal x5812=(sj2*x5784);
evalcond[0]=((((-1.0)*x5812))+(((-1.0)*x5795*x5806))+(((-1.0)*x5798))+x5791);
evalcond[1]=((((-1.0)*x5792*x5797))+((r00*x5787))+((r11*x5789))+(((-1.0)*sj3*x5806))+(((-1.0)*x5785*x5801)));
evalcond[2]=(((x5784*x5795))+(((-1.0)*cj6*r21*x5804))+(((-1.0)*r20*sj6*x5804))+(((-1.0)*sj2*x5806))+(((-1.0)*r22*x5794)));
evalcond[3]=((((-1.0)*x5800*x5806))+((r01*x5789))+((r11*x5785))+(((-1.0)*r00*x5792))+(((-1.0)*x5787*x5797))+x5811);
evalcond[4]=((((-1.0)*sj5*x5787*x5801))+(((-1.0)*x5785*x5802))+((x5789*x5799))+((cj0*x5793))+((x5790*x5792))+x5809+(((-1.0)*r02*sj0*x5794)));
evalcond[5]=(((x5784*x5800))+((x5789*x5802))+((cj0*cj5*r02))+((r01*sj5*x5792))+((x5785*x5799))+((sj0*x5793))+((x5787*x5790))+x5808);
evalcond[6]=((0.0001)+(((-1.0)*x5785*x5786))+((x5787*x5805))+(((-0.0718)*x5809))+(((-1.0)*cj0*x5803))+((x5789*x5796))+(((-1.0)*sj3*x5807))+((px*sj0))+(((-1.0)*x5788*x5792))+(((-0.09746)*sj3)));
evalcond[7]=((-0.1255)+(((-1.0)*x5795*x5810))+(((-0.02626)*x5798))+(((-0.09746)*x5795))+(((-0.1158)*cj2))+(((0.02626)*x5791))+(((-0.0009)*sj2))+(((-0.02626)*x5812))+pz+(((-1.0)*x5795*x5807))+(((0.0718)*sj2*x5783)));
evalcond[8]=((-0.001)+(((-1.0)*x5800*x5807))+(((-0.1158)*sj2))+(((-0.0718)*x5808))+(((-1.0)*x5800*x5810))+((x5785*x5796))+(((0.0009)*cj2))+(((-1.0)*x5787*x5788))+(((0.02626)*x5811))+(((-1.0)*x5792*x5805))+((x5786*x5789))+(((-1.0)*sj0*x5803))+(((-1.0)*cj0*px))+(((-0.09746)*x5800)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j1)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
j3eval[0]=cj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
j3eval[0]=sj2;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
bool bgotonextstatement = true;
do
{
IkReal x5813=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj6*r11*sj0*x5813))+((r12*sj0*sj5))+(((-1.0)*cj0*cj6*r01*x5813))+(((-1.0)*cj0*r00*sj6*x5813))+((cj0*r02*sj5))+(((-1.0)*r10*sj0*sj6*x5813)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5814=((1.0)*sj6);
if( IKabs(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x5814))+(((-1.0)*cj0*r01*x5814))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x5814))+(((-1.0)*cj0*r01*x5814))+((cj0*cj6*r00))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-0.00139275766016713)+(((-13.9275766016713)*cj0*px))+(((-13.9275766016713)*py*sj0))), (((cj6*r10*sj0))+(((-1.0)*r11*sj0*x5814))+(((-1.0)*cj0*r01*x5814))+((cj0*cj6*r00))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x5815=IKcos(j4);
IkReal x5816=IKsin(j4);
IkReal x5817=((0.02626)*cj0);
IkReal x5818=(r01*sj6);
IkReal x5819=(r11*sj0);
IkReal x5820=(cj6*sj5);
IkReal x5821=((1.0)*cj0);
IkReal x5822=(sj5*sj6);
IkReal x5823=(cj6*r00);
IkReal x5824=(cj6*r10*sj0);
evalcond[0]=(((sj6*x5819))+(((-1.0)*x5821*x5823))+((cj0*x5818))+x5815+(((-1.0)*x5824)));
evalcond[1]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((r10*sj0*x5822))+((cj0*r01*x5820))+((cj0*r00*x5822))+((x5819*x5820))+x5816);
evalcond[2]=((-0.0001)+(((-0.0718)*x5816))+(((-1.0)*px*x5821))+(((-1.0)*x5817*x5823))+(((-0.02626)*x5824))+(((0.02626)*sj6*x5819))+(((-1.0)*py*sj0))+(((0.02626)*x5815))+((x5817*x5818)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x5825=((1.0)*cj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*r20*x5825))+((r21*sj6)))))+(IKabs(((((-1.0)*r00*sj0*x5825))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x5826=((1.0)*sj5);
IkReal x5827=(cj6*r21);
IkReal x5828=(r20*sj6);
IkReal x5829=((1.0)*cj5);
CheckValue<IkReal> x5830=IKPowWithIntegerCheck(cj4,-1);
if(!x5830.valid){
continue;
}
if( IKabs((((r22*sj5))+(((-1.0)*x5828*x5829))+(((-1.0)*x5827*x5829)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5830.value)*(((((-1.0)*r22*x5829))+(((-1.0)*x5826*x5827))+(((-1.0)*x5826*x5828)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*sj5))+(((-1.0)*x5828*x5829))+(((-1.0)*x5827*x5829))))+IKsqr(((x5830.value)*(((((-1.0)*r22*x5829))+(((-1.0)*x5826*x5827))+(((-1.0)*x5826*x5828))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((r22*sj5))+(((-1.0)*x5828*x5829))+(((-1.0)*x5827*x5829))), ((x5830.value)*(((((-1.0)*r22*x5829))+(((-1.0)*x5826*x5827))+(((-1.0)*x5826*x5828))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x5831=IKcos(j3);
IkReal x5832=IKsin(j3);
IkReal x5833=(cj5*cj6);
IkReal x5834=(cj0*cj5);
IkReal x5835=(cj0*r11);
IkReal x5836=(r01*sj0);
IkReal x5837=(r10*sj6);
IkReal x5838=((0.02626)*sj6);
IkReal x5839=((0.02626)*cj6);
IkReal x5840=(cj0*r10);
IkReal x5841=((1.0)*cj5);
IkReal x5842=(r02*sj0);
IkReal x5843=((1.0)*sj5);
IkReal x5844=(cj0*sj5);
IkReal x5845=((1.0)*sj6);
IkReal x5846=(r20*sj6);
IkReal x5847=(r00*sj0);
IkReal x5848=(sj4*x5832);
IkReal x5849=(cj4*x5832);
IkReal x5850=(sj4*x5831);
IkReal x5851=((1.0)*x5831);
evalcond[0]=((((-1.0)*r21*x5845))+((cj6*r20))+x5850);
evalcond[1]=(((r21*x5833))+(((-1.0)*r22*x5843))+((cj5*x5846))+x5832);
evalcond[2]=((((-1.0)*x5843*x5846))+(((-1.0)*r22*x5841))+(((-1.0)*cj4*x5851))+(((-1.0)*cj6*r21*x5843)));
evalcond[3]=(((cj6*x5847))+(((-1.0)*cj6*x5840))+((sj6*x5835))+(((-1.0)*x5836*x5845))+x5848);
evalcond[4]=((0.2413)+(((0.02626)*x5850))+(((-1.0)*r21*x5838))+(((0.09746)*x5831))+((r20*x5839))+pz+(((0.0718)*cj4*x5831)));
evalcond[5]=((((-1.0)*x5834*x5837))+(((-1.0)*x5833*x5835))+((x5833*x5836))+((r12*x5844))+((cj5*sj6*x5847))+(((-1.0)*x5851))+(((-1.0)*x5842*x5843)));
evalcond[6]=((((-1.0)*x5849))+((x5837*x5844))+(((-1.0)*sj6*x5843*x5847))+((r12*x5834))+(((-1.0)*cj6*x5836*x5843))+(((-1.0)*x5841*x5842))+((cj6*sj5*x5835)));
evalcond[7]=((-0.0001)+((x5835*x5838))+(((0.09746)*x5832))+(((0.0718)*x5849))+(((-1.0)*x5839*x5840))+((px*sj0))+(((0.02626)*x5848))+((x5839*x5847))+(((-1.0)*cj0*py))+(((-1.0)*x5836*x5838)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x5852=((1.0)*cj5);
CheckValue<IkReal> x5853=IKPowWithIntegerCheck(sj4,-1);
if(!x5853.valid){
continue;
}
if( IKabs(((((-1.0)*r20*sj6*x5852))+((r22*sj5))+(((-1.0)*cj6*r21*x5852)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5853.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r20*sj6*x5852))+((r22*sj5))+(((-1.0)*cj6*r21*x5852))))+IKsqr(((x5853.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*r20*sj6*x5852))+((r22*sj5))+(((-1.0)*cj6*r21*x5852))), ((x5853.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x5854=IKcos(j3);
IkReal x5855=IKsin(j3);
IkReal x5856=(cj5*cj6);
IkReal x5857=(cj0*cj5);
IkReal x5858=(cj0*r11);
IkReal x5859=(r01*sj0);
IkReal x5860=(r10*sj6);
IkReal x5861=((0.02626)*sj6);
IkReal x5862=((0.02626)*cj6);
IkReal x5863=(cj0*r10);
IkReal x5864=((1.0)*cj5);
IkReal x5865=(r02*sj0);
IkReal x5866=((1.0)*sj5);
IkReal x5867=(cj0*sj5);
IkReal x5868=((1.0)*sj6);
IkReal x5869=(r20*sj6);
IkReal x5870=(r00*sj0);
IkReal x5871=(sj4*x5855);
IkReal x5872=(cj4*x5855);
IkReal x5873=(sj4*x5854);
IkReal x5874=((1.0)*x5854);
evalcond[0]=(((cj6*r20))+(((-1.0)*r21*x5868))+x5873);
evalcond[1]=((((-1.0)*r22*x5866))+((cj5*x5869))+((r21*x5856))+x5855);
evalcond[2]=((((-1.0)*r22*x5864))+(((-1.0)*x5866*x5869))+(((-1.0)*cj4*x5874))+(((-1.0)*cj6*r21*x5866)));
evalcond[3]=((((-1.0)*cj6*x5863))+(((-1.0)*x5859*x5868))+((cj6*x5870))+((sj6*x5858))+x5871);
evalcond[4]=((0.2413)+(((0.0718)*cj4*x5854))+(((0.09746)*x5854))+pz+((r20*x5862))+(((-1.0)*r21*x5861))+(((0.02626)*x5873)));
evalcond[5]=(((cj5*sj6*x5870))+((x5856*x5859))+(((-1.0)*x5856*x5858))+(((-1.0)*x5874))+(((-1.0)*x5857*x5860))+((r12*x5867))+(((-1.0)*x5865*x5866)));
evalcond[6]=(((x5860*x5867))+(((-1.0)*sj6*x5866*x5870))+((r12*x5857))+(((-1.0)*cj6*x5859*x5866))+((cj6*sj5*x5858))+(((-1.0)*x5864*x5865))+(((-1.0)*x5872)));
evalcond[7]=((-0.0001)+(((-1.0)*x5862*x5863))+(((-1.0)*x5859*x5861))+(((0.09746)*x5855))+((x5862*x5870))+((x5858*x5861))+((px*sj0))+(((0.0718)*x5872))+(((0.02626)*x5871))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x5875=((1.0)*cj6);
CheckValue<IkReal> x5876=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x5876.valid){
continue;
}
CheckValue<IkReal> x5877 = IKatan2WithCheck(IkReal(((((-1.0)*r00*sj0*x5875))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))),(((r21*sj6))+(((-1.0)*r20*x5875))),IKFAST_ATAN2_MAGTHRESH);
if(!x5877.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5876.value)))+(x5877.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x5878=IKcos(j3);
IkReal x5879=IKsin(j3);
IkReal x5880=(cj5*cj6);
IkReal x5881=(cj0*cj5);
IkReal x5882=(cj0*r11);
IkReal x5883=(r01*sj0);
IkReal x5884=(r10*sj6);
IkReal x5885=((0.02626)*sj6);
IkReal x5886=((0.02626)*cj6);
IkReal x5887=(cj0*r10);
IkReal x5888=((1.0)*cj5);
IkReal x5889=(r02*sj0);
IkReal x5890=((1.0)*sj5);
IkReal x5891=(cj0*sj5);
IkReal x5892=((1.0)*sj6);
IkReal x5893=(r20*sj6);
IkReal x5894=(r00*sj0);
IkReal x5895=(sj4*x5879);
IkReal x5896=(cj4*x5879);
IkReal x5897=(sj4*x5878);
IkReal x5898=((1.0)*x5878);
evalcond[0]=((((-1.0)*r21*x5892))+((cj6*r20))+x5897);
evalcond[1]=((((-1.0)*r22*x5890))+((cj5*x5893))+((r21*x5880))+x5879);
evalcond[2]=((((-1.0)*x5890*x5893))+(((-1.0)*cj6*r21*x5890))+(((-1.0)*cj4*x5898))+(((-1.0)*r22*x5888)));
evalcond[3]=(((sj6*x5882))+(((-1.0)*cj6*x5887))+((cj6*x5894))+(((-1.0)*x5883*x5892))+x5895);
evalcond[4]=((0.2413)+(((0.09746)*x5878))+((r20*x5886))+(((0.02626)*x5897))+pz+(((0.0718)*cj4*x5878))+(((-1.0)*r21*x5885)));
evalcond[5]=((((-1.0)*x5889*x5890))+((x5880*x5883))+((cj5*sj6*x5894))+(((-1.0)*x5880*x5882))+(((-1.0)*x5881*x5884))+(((-1.0)*x5898))+((r12*x5891)));
evalcond[6]=((((-1.0)*x5896))+((r12*x5881))+(((-1.0)*sj6*x5890*x5894))+(((-1.0)*cj6*x5883*x5890))+((cj6*sj5*x5882))+(((-1.0)*x5888*x5889))+((x5884*x5891)));
evalcond[7]=((-0.0001)+(((0.0718)*x5896))+(((-1.0)*x5883*x5885))+(((0.09746)*x5879))+(((-1.0)*x5886*x5887))+(((0.02626)*x5895))+((x5886*x5894))+((px*sj0))+((x5882*x5885))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5899=((1.0)*cj5);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj6*r11*sj0*x5899))+(((-1.0)*r10*sj0*sj6*x5899))+((r12*sj0*sj5))+(((-1.0)*cj0*cj6*r01*x5899))+((cj0*r02*sj5))+(((-1.0)*cj0*r00*sj6*x5899)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5900=((1.0)*cj6);
if( IKabs(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x5900))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x5900)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x5900))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x5900))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((0.0264623955431755)+(((13.9275766016713)*py*sj0))+(((13.9275766016713)*cj0*px))), (((r11*sj0*sj6))+(((-1.0)*cj0*r00*x5900))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x5900))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x5901=IKsin(j4);
IkReal x5902=IKcos(j4);
IkReal x5903=((0.02626)*cj0);
IkReal x5904=(r01*sj6);
IkReal x5905=(r11*sj0);
IkReal x5906=(cj6*sj5);
IkReal x5907=((1.0)*cj0);
IkReal x5908=(sj5*sj6);
IkReal x5909=(cj6*r00);
IkReal x5910=(cj6*r10*sj0);
evalcond[0]=((((-1.0)*x5907*x5909))+((sj6*x5905))+((cj0*x5904))+(((-1.0)*x5910))+(((-1.0)*x5902)));
evalcond[1]=(((cj5*r12*sj0))+((r10*sj0*x5908))+((cj0*cj5*r02))+((x5905*x5906))+((cj0*r00*x5908))+((cj0*r01*x5906))+(((-1.0)*x5901)));
evalcond[2]=((-0.0019)+((x5903*x5904))+(((0.02626)*sj6*x5905))+(((-1.0)*x5903*x5909))+(((0.0718)*x5901))+(((-1.0)*px*x5907))+(((-1.0)*py*sj0))+(((-0.02626)*x5910))+(((-0.02626)*x5902)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x5911=((1.0)*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*cj0*r11*x5911))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))))+(IKabs(((((-1.0)*r21*x5911))+((cj6*r20))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j3eval[0]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x5912=(cj6*r21);
IkReal x5913=(r20*sj6);
CheckValue<IkReal> x5914=IKPowWithIntegerCheck(cj4,-1);
if(!x5914.valid){
continue;
}
if( IKabs(((((-1.0)*r22*sj5))+((cj5*x5912))+((cj5*x5913)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5914.value)*((((cj5*r22))+((sj5*x5912))+((sj5*x5913)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r22*sj5))+((cj5*x5912))+((cj5*x5913))))+IKsqr(((x5914.value)*((((cj5*r22))+((sj5*x5912))+((sj5*x5913))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*r22*sj5))+((cj5*x5912))+((cj5*x5913))), ((x5914.value)*((((cj5*r22))+((sj5*x5912))+((sj5*x5913))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x5915=IKcos(j3);
IkReal x5916=IKsin(j3);
IkReal x5917=(cj5*cj6);
IkReal x5918=(cj0*cj5);
IkReal x5919=(cj0*r11);
IkReal x5920=(r01*sj0);
IkReal x5921=(r10*sj6);
IkReal x5922=((0.02626)*sj6);
IkReal x5923=((0.02626)*cj6);
IkReal x5924=(cj0*r10);
IkReal x5925=((1.0)*cj5);
IkReal x5926=(r02*sj0);
IkReal x5927=((1.0)*sj5);
IkReal x5928=(cj0*sj5);
IkReal x5929=((1.0)*sj6);
IkReal x5930=(r20*sj6);
IkReal x5931=(r00*sj0);
IkReal x5932=(sj4*x5916);
IkReal x5933=((1.0)*x5915);
IkReal x5934=(cj4*x5916);
IkReal x5935=(cj4*x5915);
evalcond[0]=(((cj6*r20))+(((-1.0)*sj4*x5933))+(((-1.0)*r21*x5929)));
evalcond[1]=((((-1.0)*r22*x5927))+((cj5*x5930))+((r21*x5917))+(((-1.0)*x5916)));
evalcond[2]=((((-1.0)*r22*x5925))+(((-1.0)*cj6*r21*x5927))+x5935+(((-1.0)*x5927*x5930)));
evalcond[3]=((((-1.0)*cj6*x5924))+(((-1.0)*x5920*x5929))+x5932+((sj6*x5919))+((cj6*x5931)));
evalcond[4]=((0.0097)+((r20*x5923))+(((-0.02626)*sj4*x5915))+(((-0.0718)*x5935))+pz+(((-1.0)*r21*x5922))+(((-0.09746)*x5915)));
evalcond[5]=((((-1.0)*x5917*x5919))+((cj5*sj6*x5931))+((x5917*x5920))+(((-1.0)*x5933))+((r12*x5928))+(((-1.0)*x5918*x5921))+(((-1.0)*x5926*x5927)));
evalcond[6]=(((r12*x5918))+((cj6*sj5*x5919))+((x5921*x5928))+(((-1.0)*x5925*x5926))+(((-1.0)*x5934))+(((-1.0)*sj6*x5927*x5931))+(((-1.0)*cj6*x5920*x5927)));
evalcond[7]=((-0.0001)+(((0.02626)*x5932))+((x5923*x5931))+((x5919*x5922))+(((-1.0)*x5920*x5922))+(((0.09746)*x5916))+(((-1.0)*x5923*x5924))+((px*sj0))+(((-1.0)*cj0*py))+(((0.0718)*x5934)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x5936=IKPowWithIntegerCheck(sj4,-1);
if(!x5936.valid){
continue;
}
if( IKabs((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5936.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))+IKsqr(((x5936.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))), ((x5936.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x5937=IKcos(j3);
IkReal x5938=IKsin(j3);
IkReal x5939=(cj5*cj6);
IkReal x5940=(cj0*cj5);
IkReal x5941=(cj0*r11);
IkReal x5942=(r01*sj0);
IkReal x5943=(r10*sj6);
IkReal x5944=((0.02626)*sj6);
IkReal x5945=((0.02626)*cj6);
IkReal x5946=(cj0*r10);
IkReal x5947=((1.0)*cj5);
IkReal x5948=(r02*sj0);
IkReal x5949=((1.0)*sj5);
IkReal x5950=(cj0*sj5);
IkReal x5951=((1.0)*sj6);
IkReal x5952=(r20*sj6);
IkReal x5953=(r00*sj0);
IkReal x5954=(sj4*x5938);
IkReal x5955=((1.0)*x5937);
IkReal x5956=(cj4*x5938);
IkReal x5957=(cj4*x5937);
evalcond[0]=(((cj6*r20))+(((-1.0)*r21*x5951))+(((-1.0)*sj4*x5955)));
evalcond[1]=((((-1.0)*r22*x5949))+(((-1.0)*x5938))+((r21*x5939))+((cj5*x5952)));
evalcond[2]=((((-1.0)*r22*x5947))+(((-1.0)*cj6*r21*x5949))+(((-1.0)*x5949*x5952))+x5957);
evalcond[3]=((((-1.0)*cj6*x5946))+((cj6*x5953))+((sj6*x5941))+(((-1.0)*x5942*x5951))+x5954);
evalcond[4]=((0.0097)+(((-0.09746)*x5937))+(((-0.0718)*x5957))+(((-1.0)*r21*x5944))+pz+((r20*x5945))+(((-0.02626)*sj4*x5937)));
evalcond[5]=(((x5939*x5942))+(((-1.0)*x5940*x5943))+(((-1.0)*x5948*x5949))+((r12*x5950))+(((-1.0)*x5939*x5941))+(((-1.0)*x5955))+((cj5*sj6*x5953)));
evalcond[6]=((((-1.0)*cj6*x5942*x5949))+(((-1.0)*sj6*x5949*x5953))+(((-1.0)*x5947*x5948))+((x5943*x5950))+(((-1.0)*x5956))+((r12*x5940))+((cj6*sj5*x5941)));
evalcond[7]=((-0.0001)+(((-1.0)*x5942*x5944))+(((-1.0)*x5945*x5946))+(((0.02626)*x5954))+((x5941*x5944))+((px*sj0))+(((0.0718)*x5956))+((x5945*x5953))+(((-1.0)*cj0*py))+(((0.09746)*x5938)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x5958=((1.0)*sj6);
CheckValue<IkReal> x5959=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x5959.valid){
continue;
}
CheckValue<IkReal> x5960 = IKatan2WithCheck(IkReal(((((-1.0)*cj0*r11*x5958))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))),(((cj6*r20))+(((-1.0)*r21*x5958))),IKFAST_ATAN2_MAGTHRESH);
if(!x5960.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5959.value)))+(x5960.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x5961=IKcos(j3);
IkReal x5962=IKsin(j3);
IkReal x5963=(cj5*cj6);
IkReal x5964=(cj0*cj5);
IkReal x5965=(cj0*r11);
IkReal x5966=(r01*sj0);
IkReal x5967=(r10*sj6);
IkReal x5968=((0.02626)*sj6);
IkReal x5969=((0.02626)*cj6);
IkReal x5970=(cj0*r10);
IkReal x5971=((1.0)*cj5);
IkReal x5972=(r02*sj0);
IkReal x5973=((1.0)*sj5);
IkReal x5974=(cj0*sj5);
IkReal x5975=((1.0)*sj6);
IkReal x5976=(r20*sj6);
IkReal x5977=(r00*sj0);
IkReal x5978=(sj4*x5962);
IkReal x5979=((1.0)*x5961);
IkReal x5980=(cj4*x5962);
IkReal x5981=(cj4*x5961);
evalcond[0]=((((-1.0)*r21*x5975))+(((-1.0)*sj4*x5979))+((cj6*r20)));
evalcond[1]=((((-1.0)*x5962))+(((-1.0)*r22*x5973))+((cj5*x5976))+((r21*x5963)));
evalcond[2]=((((-1.0)*cj6*r21*x5973))+(((-1.0)*r22*x5971))+x5981+(((-1.0)*x5973*x5976)));
evalcond[3]=((((-1.0)*cj6*x5970))+(((-1.0)*x5966*x5975))+((sj6*x5965))+x5978+((cj6*x5977)));
evalcond[4]=((0.0097)+(((-0.02626)*sj4*x5961))+(((-0.0718)*x5981))+(((-1.0)*r21*x5968))+pz+((r20*x5969))+(((-0.09746)*x5961)));
evalcond[5]=((((-1.0)*x5979))+((cj5*sj6*x5977))+((x5963*x5966))+(((-1.0)*x5972*x5973))+(((-1.0)*x5963*x5965))+(((-1.0)*x5964*x5967))+((r12*x5974)));
evalcond[6]=((((-1.0)*x5980))+(((-1.0)*cj6*x5966*x5973))+(((-1.0)*x5971*x5972))+((cj6*sj5*x5965))+((r12*x5964))+((x5967*x5974))+(((-1.0)*sj6*x5973*x5977)));
evalcond[7]=((-0.0001)+((x5969*x5977))+((x5965*x5968))+(((0.09746)*x5962))+(((-1.0)*x5966*x5968))+((px*sj0))+(((0.02626)*x5978))+(((0.0718)*x5980))+(((-1.0)*x5969*x5970))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x5982=IKcos(j4);
IkReal x5983=IKsin(j4);
IkReal x5984=((1.0)*r21);
IkReal x5985=(cj6*r20);
evalcond[0]=((((-1.0)*sj6*x5984))+x5982+x5985);
evalcond[1]=((((-1.0)*cj6*sj5*x5984))+(((-1.0)*cj5*r22))+x5983+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.1264)+(((-0.02626)*r21*sj6))+(((-0.0718)*x5983))+pz+(((0.02626)*x5985))+(((0.02626)*x5982)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x5986=(sj0*sj6);
IkReal x5987=(cj6*r10);
IkReal x5988=((1.0)*sj0);
IkReal x5989=(cj6*r00);
IkReal x5990=(cj0*sj6);
j3eval[0]=sj4;
j3eval[1]=((IKabs(((((-1.0)*cj0*x5989))+(((-1.0)*x5987*x5988))+((r11*x5986))+((r01*x5990)))))+(IKabs(((((-1.0)*r11*x5990))+(((-1.0)*x5988*x5989))+((cj0*x5987))+((r01*x5986))))));
j3eval[2]=IKsign(sj4);
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=sj4;
j3eval[1]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x5991=(sj0*sj6);
IkReal x5992=((1.0)*cj5);
IkReal x5993=((1.0)*sj5);
IkReal x5994=(cj6*sj0);
IkReal x5995=(cj0*x5993);
CheckValue<IkReal> x5996=IKPowWithIntegerCheck(sj4,-1);
if(!x5996.valid){
continue;
}
CheckValue<IkReal> x5997=IKPowWithIntegerCheck(cj4,-1);
if(!x5997.valid){
continue;
}
if( IKabs(((x5996.value)*(((((-1.0)*r00*x5994))+((cj0*cj6*r10))+((r01*x5991))+(((-1.0)*cj0*r11*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5997.value)*(((((-1.0)*r00*sj6*x5995))+(((-1.0)*cj0*r02*x5992))+(((-1.0)*r10*x5991*x5993))+(((-1.0)*cj6*r01*x5995))+(((-1.0)*r12*sj0*x5992))+(((-1.0)*r11*x5993*x5994)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5996.value)*(((((-1.0)*r00*x5994))+((cj0*cj6*r10))+((r01*x5991))+(((-1.0)*cj0*r11*sj6))))))+IKsqr(((x5997.value)*(((((-1.0)*r00*sj6*x5995))+(((-1.0)*cj0*r02*x5992))+(((-1.0)*r10*x5991*x5993))+(((-1.0)*cj6*r01*x5995))+(((-1.0)*r12*sj0*x5992))+(((-1.0)*r11*x5993*x5994))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x5996.value)*(((((-1.0)*r00*x5994))+((cj0*cj6*r10))+((r01*x5991))+(((-1.0)*cj0*r11*sj6))))), ((x5997.value)*(((((-1.0)*r00*sj6*x5995))+(((-1.0)*cj0*r02*x5992))+(((-1.0)*r10*x5991*x5993))+(((-1.0)*cj6*r01*x5995))+(((-1.0)*r12*sj0*x5992))+(((-1.0)*r11*x5993*x5994))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x5998=IKcos(j3);
IkReal x5999=IKsin(j3);
IkReal x6000=(r11*sj0);
IkReal x6001=(cj0*cj5);
IkReal x6002=(cj6*sj5);
IkReal x6003=((1.0)*cj6);
IkReal x6004=(r10*sj6);
IkReal x6005=(sj0*sj5);
IkReal x6006=(cj0*r10);
IkReal x6007=((0.02626)*cj6);
IkReal x6008=((1.0)*sj6);
IkReal x6009=((1.0)*sj0);
IkReal x6010=(cj0*sj5);
IkReal x6011=(r10*sj0);
IkReal x6012=(r01*sj0);
IkReal x6013=(r00*sj6);
IkReal x6014=(r00*sj0);
IkReal x6015=(cj5*sj0);
IkReal x6016=((1.0)*cj0);
IkReal x6017=(cj0*r00);
IkReal x6018=(cj0*r01);
IkReal x6019=(sj4*x5999);
IkReal x6020=(cj4*x5999);
IkReal x6021=((0.02626)*r01*sj6);
IkReal x6022=(cj0*r11*sj6);
IkReal x6023=(sj4*x5998);
IkReal x6024=(cj4*x5998);
evalcond[0]=((((-1.0)*x6008*x6012))+x6019+x6022+(((-1.0)*x6003*x6006))+((cj6*x6014)));
evalcond[1]=(((sj6*x6000))+(((-1.0)*x6023))+(((-1.0)*x6003*x6011))+(((-1.0)*x6003*x6017))+((sj6*x6018)));
evalcond[2]=(x6024+((r12*x6015))+((r02*x6001))+((x6010*x6013))+((x6004*x6005))+((x6000*x6002))+((x6002*x6018)));
evalcond[3]=((((-1.0)*x6001*x6004))+(((-1.0)*r02*x6005))+((r12*x6010))+(((-1.0)*x5998))+((cj5*cj6*x6012))+((x6013*x6015))+(((-1.0)*r11*x6001*x6003)));
evalcond[4]=(((r12*x6005))+((r02*x6010))+(((-1.0)*x5999))+(((-1.0)*r01*x6001*x6003))+(((-1.0)*r00*x6001*x6008))+(((-1.0)*cj5*x6000*x6003))+(((-1.0)*cj5*x6004*x6009)));
evalcond[5]=((((-1.0)*r01*x6002*x6009))+((r12*x6001))+((cj0*r11*x6002))+(((-1.0)*x6020))+(((-1.0)*r00*x6005*x6008))+(((-1.0)*cj5*r02*x6009))+((x6004*x6010)));
evalcond[6]=((-0.0001)+(((0.0718)*x6020))+(((0.09746)*x5999))+(((-1.0)*x6006*x6007))+(((-0.02626)*sj6*x6012))+(((0.02626)*x6019))+((px*sj0))+((x6007*x6014))+(((-1.0)*py*x6016))+(((0.02626)*x6022)));
evalcond[7]=((-0.1168)+(((0.02626)*sj6*x6018))+(((0.02626)*sj6*x6000))+(((-1.0)*px*x6016))+(((-0.09746)*x5998))+(((-0.0718)*x6024))+(((-0.02626)*x6023))+(((-1.0)*x6007*x6011))+(((-1.0)*x6007*x6017))+(((-1.0)*py*x6009)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x6025=(cj0*cj6);
IkReal x6026=((1.0)*cj5);
IkReal x6027=(r01*sj0);
IkReal x6028=(cj0*sj6);
IkReal x6029=(r00*sj0);
CheckValue<IkReal> x6030=IKPowWithIntegerCheck(sj4,-1);
if(!x6030.valid){
continue;
}
if( IKabs(((x6030.value)*(((((-1.0)*cj6*x6029))+((sj6*x6027))+(((-1.0)*r11*x6028))+((r10*x6025)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x6025*x6026))+(((-1.0)*r10*x6026*x6028))+((cj5*cj6*x6027))+((cj5*sj6*x6029))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6030.value)*(((((-1.0)*cj6*x6029))+((sj6*x6027))+(((-1.0)*r11*x6028))+((r10*x6025))))))+IKsqr(((((-1.0)*r11*x6025*x6026))+(((-1.0)*r10*x6026*x6028))+((cj5*cj6*x6027))+((cj5*sj6*x6029))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x6030.value)*(((((-1.0)*cj6*x6029))+((sj6*x6027))+(((-1.0)*r11*x6028))+((r10*x6025))))), ((((-1.0)*r11*x6025*x6026))+(((-1.0)*r10*x6026*x6028))+((cj5*cj6*x6027))+((cj5*sj6*x6029))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x6031=IKcos(j3);
IkReal x6032=IKsin(j3);
IkReal x6033=(r11*sj0);
IkReal x6034=(cj0*cj5);
IkReal x6035=(cj6*sj5);
IkReal x6036=((1.0)*cj6);
IkReal x6037=(r10*sj6);
IkReal x6038=(sj0*sj5);
IkReal x6039=(cj0*r10);
IkReal x6040=((0.02626)*cj6);
IkReal x6041=((1.0)*sj6);
IkReal x6042=((1.0)*sj0);
IkReal x6043=(cj0*sj5);
IkReal x6044=(r10*sj0);
IkReal x6045=(r01*sj0);
IkReal x6046=(r00*sj6);
IkReal x6047=(r00*sj0);
IkReal x6048=(cj5*sj0);
IkReal x6049=((1.0)*cj0);
IkReal x6050=(cj0*r00);
IkReal x6051=(cj0*r01);
IkReal x6052=(sj4*x6032);
IkReal x6053=(cj4*x6032);
IkReal x6054=((0.02626)*r01*sj6);
IkReal x6055=(cj0*r11*sj6);
IkReal x6056=(sj4*x6031);
IkReal x6057=(cj4*x6031);
evalcond[0]=(x6055+x6052+(((-1.0)*x6036*x6039))+((cj6*x6047))+(((-1.0)*x6041*x6045)));
evalcond[1]=(((sj6*x6033))+(((-1.0)*x6056))+(((-1.0)*x6036*x6044))+((sj6*x6051))+(((-1.0)*x6036*x6050)));
evalcond[2]=(x6057+((x6035*x6051))+((x6043*x6046))+((x6033*x6035))+((r02*x6034))+((r12*x6048))+((x6037*x6038)));
evalcond[3]=(((cj5*cj6*x6045))+((x6046*x6048))+(((-1.0)*x6034*x6037))+(((-1.0)*r02*x6038))+(((-1.0)*r11*x6034*x6036))+((r12*x6043))+(((-1.0)*x6031)));
evalcond[4]=((((-1.0)*cj5*x6033*x6036))+(((-1.0)*r00*x6034*x6041))+(((-1.0)*r01*x6034*x6036))+((r12*x6038))+(((-1.0)*cj5*x6037*x6042))+((r02*x6043))+(((-1.0)*x6032)));
evalcond[5]=(((x6037*x6043))+(((-1.0)*r01*x6035*x6042))+(((-1.0)*cj5*r02*x6042))+(((-1.0)*r00*x6038*x6041))+((r12*x6034))+(((-1.0)*x6053))+((cj0*r11*x6035)));
evalcond[6]=((-0.0001)+((x6040*x6047))+(((0.0718)*x6053))+(((0.09746)*x6032))+(((0.02626)*x6052))+(((0.02626)*x6055))+(((-1.0)*x6039*x6040))+((px*sj0))+(((-1.0)*py*x6049))+(((-0.02626)*sj6*x6045)));
evalcond[7]=((-0.1168)+(((-1.0)*px*x6049))+(((0.02626)*sj6*x6033))+(((-0.09746)*x6031))+(((-0.02626)*x6056))+(((-1.0)*x6040*x6044))+(((-0.0718)*x6057))+(((0.02626)*sj6*x6051))+(((-1.0)*x6040*x6050))+(((-1.0)*py*x6042)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x6058=(sj0*sj6);
IkReal x6059=(cj6*r10);
IkReal x6060=((1.0)*sj0);
IkReal x6061=(cj6*r00);
IkReal x6062=(cj0*sj6);
CheckValue<IkReal> x6063 = IKatan2WithCheck(IkReal((((r01*x6058))+((cj0*x6059))+(((-1.0)*x6060*x6061))+(((-1.0)*r11*x6062)))),((((-1.0)*x6059*x6060))+(((-1.0)*cj0*x6061))+((r01*x6062))+((r11*x6058))),IKFAST_ATAN2_MAGTHRESH);
if(!x6063.valid){
continue;
}
CheckValue<IkReal> x6064=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x6064.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x6063.value)+(((1.5707963267949)*(x6064.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x6065=IKcos(j3);
IkReal x6066=IKsin(j3);
IkReal x6067=(r11*sj0);
IkReal x6068=(cj0*cj5);
IkReal x6069=(cj6*sj5);
IkReal x6070=((1.0)*cj6);
IkReal x6071=(r10*sj6);
IkReal x6072=(sj0*sj5);
IkReal x6073=(cj0*r10);
IkReal x6074=((0.02626)*cj6);
IkReal x6075=((1.0)*sj6);
IkReal x6076=((1.0)*sj0);
IkReal x6077=(cj0*sj5);
IkReal x6078=(r10*sj0);
IkReal x6079=(r01*sj0);
IkReal x6080=(r00*sj6);
IkReal x6081=(r00*sj0);
IkReal x6082=(cj5*sj0);
IkReal x6083=((1.0)*cj0);
IkReal x6084=(cj0*r00);
IkReal x6085=(cj0*r01);
IkReal x6086=(sj4*x6066);
IkReal x6087=(cj4*x6066);
IkReal x6088=((0.02626)*r01*sj6);
IkReal x6089=(cj0*r11*sj6);
IkReal x6090=(sj4*x6065);
IkReal x6091=(cj4*x6065);
evalcond[0]=(x6089+x6086+((cj6*x6081))+(((-1.0)*x6075*x6079))+(((-1.0)*x6070*x6073)));
evalcond[1]=((((-1.0)*x6070*x6084))+((sj6*x6067))+((sj6*x6085))+(((-1.0)*x6090))+(((-1.0)*x6070*x6078)));
evalcond[2]=(x6091+((x6067*x6069))+((x6071*x6072))+((x6069*x6085))+((r12*x6082))+((x6077*x6080))+((r02*x6068)));
evalcond[3]=((((-1.0)*x6068*x6071))+((cj5*cj6*x6079))+(((-1.0)*r11*x6068*x6070))+(((-1.0)*r02*x6072))+(((-1.0)*x6065))+((x6080*x6082))+((r12*x6077)));
evalcond[4]=((((-1.0)*cj5*x6067*x6070))+(((-1.0)*x6066))+(((-1.0)*r00*x6068*x6075))+(((-1.0)*r01*x6068*x6070))+(((-1.0)*cj5*x6071*x6076))+((r02*x6077))+((r12*x6072)));
evalcond[5]=((((-1.0)*cj5*r02*x6076))+((x6071*x6077))+(((-1.0)*x6087))+((cj0*r11*x6069))+((r12*x6068))+(((-1.0)*r00*x6072*x6075))+(((-1.0)*r01*x6069*x6076)));
evalcond[6]=((-0.0001)+(((0.09746)*x6066))+(((-1.0)*x6073*x6074))+(((-1.0)*py*x6083))+((px*sj0))+(((0.02626)*x6089))+(((0.02626)*x6086))+(((-0.02626)*sj6*x6079))+((x6074*x6081))+(((0.0718)*x6087)));
evalcond[7]=((-0.1168)+(((-1.0)*x6074*x6078))+(((0.02626)*sj6*x6067))+(((-0.0718)*x6091))+(((0.02626)*sj6*x6085))+(((-1.0)*px*x6083))+(((-0.02626)*x6090))+(((-1.0)*py*x6076))+(((-0.09746)*x6065))+(((-1.0)*x6074*x6084)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x6092=IKsin(j4);
IkReal x6093=IKcos(j4);
IkReal x6094=((1.0)*r21);
IkReal x6095=(cj6*r20);
evalcond[0]=(x6095+(((-1.0)*sj6*x6094))+(((-1.0)*x6093)));
evalcond[1]=((((-1.0)*cj6*sj5*x6094))+(((-1.0)*x6092))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((0.1246)+(((-0.02626)*r21*sj6))+pz+(((0.02626)*x6095))+(((-0.02626)*x6093))+(((0.0718)*x6092)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x6096=(cj0*cj6);
IkReal x6097=(sj0*sj6);
IkReal x6098=((1.0)*r11);
IkReal x6099=(cj6*sj0);
IkReal x6100=(cj0*sj6);
j3eval[0]=sj4;
j3eval[1]=IKsign(sj4);
j3eval[2]=((IKabs(((((-1.0)*r00*x6099))+((r10*x6096))+(((-1.0)*x6098*x6100))+((r01*x6097)))))+(IKabs(((((-1.0)*r01*x6100))+((r10*x6099))+((r00*x6096))+(((-1.0)*x6097*x6098))))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=sj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=sj4;
j3eval[1]=cj4;
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x6101=(sj0*sj6);
IkReal x6102=(cj0*cj6);
IkReal x6103=(cj6*sj0);
IkReal x6104=(cj0*sj6);
CheckValue<IkReal> x6105=IKPowWithIntegerCheck(sj4,-1);
if(!x6105.valid){
continue;
}
CheckValue<IkReal> x6106=IKPowWithIntegerCheck(cj4,-1);
if(!x6106.valid){
continue;
}
if( IKabs(((x6105.value)*(((((-1.0)*r11*x6104))+((r10*x6102))+((r01*x6101))+(((-1.0)*r00*x6103)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6106.value)*((((r00*sj5*x6104))+((cj5*r12*sj0))+((cj0*cj5*r02))+((r11*sj5*x6103))+((r10*sj5*x6101))+((r01*sj5*x6102)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6105.value)*(((((-1.0)*r11*x6104))+((r10*x6102))+((r01*x6101))+(((-1.0)*r00*x6103))))))+IKsqr(((x6106.value)*((((r00*sj5*x6104))+((cj5*r12*sj0))+((cj0*cj5*r02))+((r11*sj5*x6103))+((r10*sj5*x6101))+((r01*sj5*x6102))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x6105.value)*(((((-1.0)*r11*x6104))+((r10*x6102))+((r01*x6101))+(((-1.0)*r00*x6103))))), ((x6106.value)*((((r00*sj5*x6104))+((cj5*r12*sj0))+((cj0*cj5*r02))+((r11*sj5*x6103))+((r10*sj5*x6101))+((r01*sj5*x6102))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x6107=IKcos(j3);
IkReal x6108=IKsin(j3);
IkReal x6109=(r11*sj0);
IkReal x6110=(cj0*cj5);
IkReal x6111=(cj6*sj5);
IkReal x6112=((1.0)*cj6);
IkReal x6113=(r10*sj6);
IkReal x6114=(sj0*sj5);
IkReal x6115=(cj0*r10);
IkReal x6116=((0.02626)*cj6);
IkReal x6117=((1.0)*sj6);
IkReal x6118=((1.0)*sj0);
IkReal x6119=(cj0*sj5);
IkReal x6120=(r10*sj0);
IkReal x6121=(r01*sj0);
IkReal x6122=((1.0)*cj0);
IkReal x6123=(r00*sj6);
IkReal x6124=(r00*sj0);
IkReal x6125=(cj5*sj0);
IkReal x6126=(cj0*r00);
IkReal x6127=(cj0*r01);
IkReal x6128=(sj4*x6108);
IkReal x6129=(cj4*x6108);
IkReal x6130=((0.02626)*r01*sj6);
IkReal x6131=(cj0*r11*sj6);
IkReal x6132=(sj4*x6107);
IkReal x6133=((1.0)*x6107);
evalcond[0]=((((-1.0)*x6112*x6120))+(((-1.0)*x6112*x6126))+x6132+((sj6*x6127))+((sj6*x6109)));
evalcond[1]=((((-1.0)*x6117*x6121))+(((-1.0)*x6112*x6115))+x6131+x6128+((cj6*x6124)));
evalcond[2]=(((x6113*x6114))+((r02*x6110))+((r12*x6125))+((x6119*x6123))+((x6111*x6127))+((x6109*x6111))+(((-1.0)*cj4*x6133)));
evalcond[3]=(((r02*x6119))+x6108+(((-1.0)*cj5*x6109*x6112))+(((-1.0)*r00*x6110*x6117))+((r12*x6114))+(((-1.0)*r01*x6110*x6112))+(((-1.0)*cj5*x6113*x6118)));
evalcond[4]=((((-1.0)*x6110*x6113))+((cj5*cj6*x6121))+((x6123*x6125))+((r12*x6119))+(((-1.0)*x6133))+(((-1.0)*r11*x6110*x6112))+(((-1.0)*r02*x6114)));
evalcond[5]=((((-1.0)*r00*x6114*x6117))+((x6113*x6119))+((cj0*r11*x6111))+((r12*x6110))+(((-1.0)*cj5*r02*x6118))+(((-1.0)*r01*x6111*x6118))+(((-1.0)*x6129)));
evalcond[6]=((-0.0001)+(((-0.02626)*sj6*x6121))+(((-1.0)*x6115*x6116))+(((0.09746)*x6108))+((x6116*x6124))+(((-1.0)*py*x6122))+(((0.02626)*x6128))+(((0.02626)*x6131))+((px*sj0))+(((0.0718)*x6129)));
evalcond[7]=((0.1148)+(((0.09746)*x6107))+(((0.02626)*sj6*x6127))+(((0.0718)*cj4*x6107))+(((0.02626)*sj6*x6109))+(((-1.0)*x6116*x6126))+(((-1.0)*x6116*x6120))+(((0.02626)*x6132))+(((-1.0)*px*x6122))+(((-1.0)*py*x6118)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x6134=(cj0*r00);
IkReal x6135=(cj5*sj6);
IkReal x6136=((1.0)*sj5);
IkReal x6137=(cj5*cj6);
IkReal x6138=(cj0*r01);
IkReal x6139=(r11*sj0);
IkReal x6140=((1.0)*sj6);
IkReal x6141=(r10*sj0);
CheckValue<IkReal> x6142=IKPowWithIntegerCheck(sj4,-1);
if(!x6142.valid){
continue;
}
if( IKabs((((x6137*x6139))+((x6137*x6138))+((x6134*x6135))+(((-1.0)*r12*sj0*x6136))+((x6135*x6141))+(((-1.0)*cj0*r02*x6136)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6142.value)*(((((-1.0)*x6139*x6140))+(((-1.0)*x6138*x6140))+((cj6*x6141))+((cj6*x6134)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x6137*x6139))+((x6137*x6138))+((x6134*x6135))+(((-1.0)*r12*sj0*x6136))+((x6135*x6141))+(((-1.0)*cj0*r02*x6136))))+IKsqr(((x6142.value)*(((((-1.0)*x6139*x6140))+(((-1.0)*x6138*x6140))+((cj6*x6141))+((cj6*x6134))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((x6137*x6139))+((x6137*x6138))+((x6134*x6135))+(((-1.0)*r12*sj0*x6136))+((x6135*x6141))+(((-1.0)*cj0*r02*x6136))), ((x6142.value)*(((((-1.0)*x6139*x6140))+(((-1.0)*x6138*x6140))+((cj6*x6141))+((cj6*x6134))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x6143=IKcos(j3);
IkReal x6144=IKsin(j3);
IkReal x6145=(r11*sj0);
IkReal x6146=(cj0*cj5);
IkReal x6147=(cj6*sj5);
IkReal x6148=((1.0)*cj6);
IkReal x6149=(r10*sj6);
IkReal x6150=(sj0*sj5);
IkReal x6151=(cj0*r10);
IkReal x6152=((0.02626)*cj6);
IkReal x6153=((1.0)*sj6);
IkReal x6154=((1.0)*sj0);
IkReal x6155=(cj0*sj5);
IkReal x6156=(r10*sj0);
IkReal x6157=(r01*sj0);
IkReal x6158=((1.0)*cj0);
IkReal x6159=(r00*sj6);
IkReal x6160=(r00*sj0);
IkReal x6161=(cj5*sj0);
IkReal x6162=(cj0*r00);
IkReal x6163=(cj0*r01);
IkReal x6164=(sj4*x6144);
IkReal x6165=(cj4*x6144);
IkReal x6166=((0.02626)*r01*sj6);
IkReal x6167=(cj0*r11*sj6);
IkReal x6168=(sj4*x6143);
IkReal x6169=((1.0)*x6143);
evalcond[0]=(x6168+(((-1.0)*x6148*x6162))+((sj6*x6163))+((sj6*x6145))+(((-1.0)*x6148*x6156)));
evalcond[1]=(((cj6*x6160))+x6164+x6167+(((-1.0)*x6153*x6157))+(((-1.0)*x6148*x6151)));
evalcond[2]=(((x6155*x6159))+((x6149*x6150))+((r12*x6161))+((x6145*x6147))+((x6147*x6163))+((r02*x6146))+(((-1.0)*cj4*x6169)));
evalcond[3]=(((r12*x6150))+x6144+(((-1.0)*cj5*x6149*x6154))+((r02*x6155))+(((-1.0)*r00*x6146*x6153))+(((-1.0)*cj5*x6145*x6148))+(((-1.0)*r01*x6146*x6148)));
evalcond[4]=(((r12*x6155))+((x6159*x6161))+(((-1.0)*x6169))+((cj5*cj6*x6157))+(((-1.0)*r02*x6150))+(((-1.0)*x6146*x6149))+(((-1.0)*r11*x6146*x6148)));
evalcond[5]=(((x6149*x6155))+(((-1.0)*x6165))+(((-1.0)*r00*x6150*x6153))+(((-1.0)*cj5*r02*x6154))+((r12*x6146))+(((-1.0)*r01*x6147*x6154))+((cj0*r11*x6147)));
evalcond[6]=((-0.0001)+(((-0.02626)*sj6*x6157))+(((-1.0)*x6151*x6152))+(((0.0718)*x6165))+((x6152*x6160))+(((0.02626)*x6167))+(((0.02626)*x6164))+(((-1.0)*py*x6158))+((px*sj0))+(((0.09746)*x6144)));
evalcond[7]=((0.1148)+(((0.02626)*sj6*x6163))+(((0.02626)*sj6*x6145))+(((-1.0)*x6152*x6156))+(((0.02626)*x6168))+(((-1.0)*py*x6154))+(((-1.0)*px*x6158))+(((-1.0)*x6152*x6162))+(((0.0718)*cj4*x6143))+(((0.09746)*x6143)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x6170=(cj0*cj6);
IkReal x6171=(sj0*sj6);
IkReal x6172=((1.0)*r11);
IkReal x6173=(cj6*sj0);
IkReal x6174=(cj0*sj6);
CheckValue<IkReal> x6175=IKPowWithIntegerCheck(IKsign(sj4),-1);
if(!x6175.valid){
continue;
}
CheckValue<IkReal> x6176 = IKatan2WithCheck(IkReal((((r10*x6170))+(((-1.0)*x6172*x6174))+((r01*x6171))+(((-1.0)*r00*x6173)))),(((r10*x6173))+((r00*x6170))+(((-1.0)*x6171*x6172))+(((-1.0)*r01*x6174))),IKFAST_ATAN2_MAGTHRESH);
if(!x6176.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6175.value)))+(x6176.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x6177=IKcos(j3);
IkReal x6178=IKsin(j3);
IkReal x6179=(r11*sj0);
IkReal x6180=(cj0*cj5);
IkReal x6181=(cj6*sj5);
IkReal x6182=((1.0)*cj6);
IkReal x6183=(r10*sj6);
IkReal x6184=(sj0*sj5);
IkReal x6185=(cj0*r10);
IkReal x6186=((0.02626)*cj6);
IkReal x6187=((1.0)*sj6);
IkReal x6188=((1.0)*sj0);
IkReal x6189=(cj0*sj5);
IkReal x6190=(r10*sj0);
IkReal x6191=(r01*sj0);
IkReal x6192=((1.0)*cj0);
IkReal x6193=(r00*sj6);
IkReal x6194=(r00*sj0);
IkReal x6195=(cj5*sj0);
IkReal x6196=(cj0*r00);
IkReal x6197=(cj0*r01);
IkReal x6198=(sj4*x6178);
IkReal x6199=(cj4*x6178);
IkReal x6200=((0.02626)*r01*sj6);
IkReal x6201=(cj0*r11*sj6);
IkReal x6202=(sj4*x6177);
IkReal x6203=((1.0)*x6177);
evalcond[0]=(x6202+(((-1.0)*x6182*x6196))+(((-1.0)*x6182*x6190))+((sj6*x6197))+((sj6*x6179)));
evalcond[1]=(x6201+(((-1.0)*x6182*x6185))+((cj6*x6194))+x6198+(((-1.0)*x6187*x6191)));
evalcond[2]=(((x6181*x6197))+((r12*x6195))+((x6183*x6184))+(((-1.0)*cj4*x6203))+((r02*x6180))+((x6179*x6181))+((x6189*x6193)));
evalcond[3]=((((-1.0)*r00*x6180*x6187))+(((-1.0)*r01*x6180*x6182))+x6178+((r02*x6189))+(((-1.0)*cj5*x6183*x6188))+(((-1.0)*cj5*x6179*x6182))+((r12*x6184)));
evalcond[4]=(((cj5*cj6*x6191))+(((-1.0)*r11*x6180*x6182))+(((-1.0)*x6203))+(((-1.0)*r02*x6184))+(((-1.0)*x6180*x6183))+((x6193*x6195))+((r12*x6189)));
evalcond[5]=(((cj0*r11*x6181))+((x6183*x6189))+(((-1.0)*cj5*r02*x6188))+(((-1.0)*x6199))+(((-1.0)*r00*x6184*x6187))+(((-1.0)*r01*x6181*x6188))+((r12*x6180)));
evalcond[6]=((-0.0001)+(((0.09746)*x6178))+(((-1.0)*x6185*x6186))+(((0.0718)*x6199))+(((0.02626)*x6198))+(((-0.02626)*sj6*x6191))+(((0.02626)*x6201))+((x6186*x6194))+((px*sj0))+(((-1.0)*py*x6192)));
evalcond[7]=((0.1148)+(((-1.0)*x6186*x6190))+(((-1.0)*x6186*x6196))+(((-1.0)*px*x6192))+(((0.09746)*x6177))+(((-1.0)*py*x6188))+(((0.02626)*x6202))+(((0.02626)*sj6*x6197))+(((0.0718)*cj4*x6177))+(((0.02626)*sj6*x6179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3, j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x6204=(cj0*sj5);
IkReal x6205=((1.0)*cj5);
IkReal x6206=(cj0*cj6);
IkReal x6207=(r10*sj6);
IkReal x6208=(cj6*sj0);
IkReal x6209=(r00*sj6);
IkReal x6210=(sj0*sj5);
CheckValue<IkReal> x6211=IKPowWithIntegerCheck(sj2,-1);
if(!x6211.valid){
continue;
}
if( IKabs(((x6211.value)*((((r12*x6210))+(((-1.0)*r01*x6205*x6206))+(((-1.0)*cj0*x6205*x6209))+(((-1.0)*r11*x6205*x6208))+(((-1.0)*sj0*x6205*x6207))+((r02*x6204)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*sj0*x6209))+(((-1.0)*cj0*x6205*x6207))+((cj5*r01*x6208))+(((-1.0)*r11*x6205*x6206))+(((-1.0)*r02*x6210))+((r12*x6204)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6211.value)*((((r12*x6210))+(((-1.0)*r01*x6205*x6206))+(((-1.0)*cj0*x6205*x6209))+(((-1.0)*r11*x6205*x6208))+(((-1.0)*sj0*x6205*x6207))+((r02*x6204))))))+IKsqr((((cj5*sj0*x6209))+(((-1.0)*cj0*x6205*x6207))+((cj5*r01*x6208))+(((-1.0)*r11*x6205*x6206))+(((-1.0)*r02*x6210))+((r12*x6204))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x6211.value)*((((r12*x6210))+(((-1.0)*r01*x6205*x6206))+(((-1.0)*cj0*x6205*x6209))+(((-1.0)*r11*x6205*x6208))+(((-1.0)*sj0*x6205*x6207))+((r02*x6204))))), (((cj5*sj0*x6209))+(((-1.0)*cj0*x6205*x6207))+((cj5*r01*x6208))+(((-1.0)*r11*x6205*x6206))+(((-1.0)*r02*x6210))+((r12*x6204))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x6212=IKsin(j3);
IkReal x6213=(cj5*cj6);
IkReal x6214=((1.0)*sj5);
IkReal x6215=((1.0)*cj0);
IkReal x6216=(cj0*sj5);
IkReal x6217=(cj5*sj6);
IkReal x6218=(r10*x6217);
IkReal x6219=((1.0)*r11*x6213);
evalcond[0]=(((r20*x6217))+((cj2*x6212))+((r21*x6213))+(((-1.0)*r22*x6214)));
evalcond[1]=(((r12*x6216))+(((-1.0)*r11*x6213*x6215))+((r01*sj0*x6213))+(((-1.0)*x6215*x6218))+(((-1.0)*(IKcos(j3))))+((r00*sj0*x6217))+(((-1.0)*r02*sj0*x6214)));
evalcond[2]=(((r02*x6216))+(((-1.0)*r00*x6215*x6217))+(((-1.0)*sj0*x6219))+((r12*sj0*sj5))+(((-1.0)*sj0*x6218))+(((-1.0)*sj2*x6212))+(((-1.0)*r01*x6213*x6215)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
IkReal x6220=cj2*cj2;
IkReal x6221=(cj2*cj3);
IkReal x6222=(cj6*r20);
IkReal x6223=(cj6*r21);
IkReal x6224=(cj5*r22);
IkReal x6225=(r20*sj6);
IkReal x6226=((1.0)*sj2*sj5);
IkReal x6227=((1.0)*r21*sj6);
IkReal x6228=((-1.0)+x6220+(((-1.0)*x6220*(cj3*cj3))));
j4eval[0]=x6228;
j4eval[1]=((IKabs(((((-1.0)*sj2*x6227))+((x6221*x6224))+((sj2*x6222))+((sj5*x6221*x6223))+((sj5*x6221*x6225)))))+(IKabs((((x6221*x6222))+(((-1.0)*x6223*x6226))+(((-1.0)*sj2*x6224))+(((-1.0)*x6225*x6226))+(((-1.0)*x6221*x6227))))));
j4eval[2]=IKsign(x6228);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
j4eval[0]=sj3;
j4eval[1]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x6229=(cj5*cj6);
IkReal x6230=(cj0*sj6);
IkReal x6231=(r01*sj0);
IkReal x6232=((1.0)*sj0);
IkReal x6233=((1.0)*cj5);
IkReal x6234=(cj0*r12);
IkReal x6235=(r02*sj5);
IkReal x6236=((1.0)*sj5);
IkReal x6237=(cj5*sj6);
IkReal x6238=((1.0)*cj0);
IkReal x6239=(cj0*cj6*r10);
IkReal x6240=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=(((r20*x6237))+((r21*x6229))+(((-1.0)*r22*x6236)));
evalcond[2]=(x6240+(((-1.0)*cj6*r10*x6238))+(((-1.0)*sj6*x6231))+((r11*x6230)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r10*x6232*x6237))+(((-1.0)*r11*x6229*x6232))+(((-1.0)*r01*x6229*x6238))+((cj0*x6235))+(((-1.0)*r00*x6230*x6233)));
evalcond[4]=((-1.0)+((r00*sj0*x6237))+(((-1.0)*x6232*x6235))+(((-1.0)*r10*x6230*x6233))+((x6229*x6231))+(((-1.0)*r11*x6229*x6238))+((sj5*x6234)));
evalcond[5]=((((-1.0)*cj5*r02*x6232))+(((-1.0)*r00*sj5*sj6*x6232))+((cj0*cj6*r11*sj5))+((cj5*x6234))+(((-1.0)*cj6*x6231*x6236))+((r10*sj5*x6230)));
evalcond[6]=((-0.0001)+(((0.02626)*x6240))+(((-1.0)*py*x6238))+(((0.02626)*r11*x6230))+(((-0.02626)*x6239))+((px*sj0))+(((-0.02626)*sj6*x6231)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6241=(cj2*r21);
IkReal x6242=(cj6*sj5);
IkReal x6243=(cj5*r22);
IkReal x6244=(r21*sj2);
IkReal x6245=((1.0)*cj2);
IkReal x6246=(cj6*r20);
IkReal x6247=(r20*sj5*sj6);
if( IKabs((((sj2*x6243))+((sj2*x6247))+((sj6*x6241))+((x6242*x6244))+(((-1.0)*x6245*x6246)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj6*x6244))+(((-1.0)*x6245*x6247))+(((-1.0)*sj2*x6246))+(((-1.0)*x6241*x6242))+(((-1.0)*x6243*x6245)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj2*x6243))+((sj2*x6247))+((sj6*x6241))+((x6242*x6244))+(((-1.0)*x6245*x6246))))+IKsqr((((sj6*x6244))+(((-1.0)*x6245*x6247))+(((-1.0)*sj2*x6246))+(((-1.0)*x6241*x6242))+(((-1.0)*x6243*x6245))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj2*x6243))+((sj2*x6247))+((sj6*x6241))+((x6242*x6244))+(((-1.0)*x6245*x6246))), (((sj6*x6244))+(((-1.0)*x6245*x6247))+(((-1.0)*sj2*x6246))+(((-1.0)*x6241*x6242))+(((-1.0)*x6243*x6245))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x6248=IKsin(j4);
IkReal x6249=IKcos(j4);
IkReal x6250=(cj6*sj0);
IkReal x6251=(sj0*sj6);
IkReal x6252=((0.02626)*cj6);
IkReal x6253=(r21*sj6);
IkReal x6254=(cj0*r00);
IkReal x6255=(sj5*sj6);
IkReal x6256=((1.0)*cj6);
IkReal x6257=(sj2*x6249);
IkReal x6258=(cj2*x6248);
IkReal x6259=((0.02626)*x6248);
IkReal x6260=(cj2*x6249);
IkReal x6261=(sj2*x6248);
IkReal x6262=(cj0*r01*sj6);
IkReal x6263=(x6258+x6257);
evalcond[0]=(x6263+(((-1.0)*x6253))+((cj6*r20)));
evalcond[1]=(x6261+(((-1.0)*x6260))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x6256))+(((-1.0)*r20*x6255)));
evalcond[2]=((((-1.0)*x6254*x6256))+(((-1.0)*r10*x6250))+x6262+x6260+(((-1.0)*x6261))+((r11*x6251)));
evalcond[3]=(((cj5*r12*sj0))+x6263+((cj0*cj5*r02))+((x6254*x6255))+((r11*sj5*x6250))+((cj0*cj6*r01*sj5))+((r10*sj5*x6251)));
evalcond[4]=((0.1255)+(((-0.0718)*x6261))+(((-0.02626)*x6253))+pz+(((0.21326)*cj2))+(((0.02626)*x6258))+(((0.02626)*x6257))+((r20*x6252))+(((0.0718)*x6260))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-0.02626)*r10*x6250))+(((-1.0)*x6252*x6254))+(((-1.0)*sj2*x6259))+(((-0.0718)*x6257))+(((-0.0718)*x6258))+(((0.02626)*r11*x6251))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((0.02626)*x6262))+(((0.02626)*x6260))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6264=(cj5*cj6);
IkReal x6265=(cj0*sj6);
IkReal x6266=(r01*sj0);
IkReal x6267=((1.0)*sj0);
IkReal x6268=((1.0)*cj5);
IkReal x6269=(cj0*r12);
IkReal x6270=(r02*sj5);
IkReal x6271=((1.0)*sj5);
IkReal x6272=(cj5*sj6);
IkReal x6273=((1.0)*cj0);
IkReal x6274=(cj0*cj6*r10);
IkReal x6275=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x6264))+(((-1.0)*r22*x6271))+((r20*x6272)));
evalcond[2]=((((-1.0)*cj6*r10*x6273))+x6275+(((-1.0)*sj6*x6266))+((r11*x6265)));
evalcond[3]=((((-1.0)*r11*x6264*x6267))+(((-1.0)*r00*x6265*x6268))+((r12*sj0*sj5))+(((-1.0)*r01*x6264*x6273))+(((-1.0)*r10*x6267*x6272))+((cj0*x6270)));
evalcond[4]=((1.0)+(((-1.0)*x6267*x6270))+(((-1.0)*r11*x6264*x6273))+((sj5*x6269))+((x6264*x6266))+((r00*sj0*x6272))+(((-1.0)*r10*x6265*x6268)));
evalcond[5]=(((cj5*x6269))+(((-1.0)*cj5*r02*x6267))+(((-1.0)*cj6*x6266*x6271))+((cj0*cj6*r11*sj5))+((r10*sj5*x6265))+(((-1.0)*r00*sj5*sj6*x6267)));
evalcond[6]=((-0.0001)+(((-1.0)*py*x6273))+(((-0.02626)*sj6*x6266))+(((0.02626)*r11*x6265))+(((-0.02626)*x6274))+(((0.02626)*x6275))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6276=(cj5*r22);
IkReal x6277=(cj6*sj2);
IkReal x6278=(r21*sj5);
IkReal x6279=(r21*sj6);
IkReal x6280=(cj2*cj6);
IkReal x6281=(r20*sj5*sj6);
if( IKabs((((sj2*x6281))+((sj2*x6276))+(((-1.0)*cj2*x6279))+((r20*x6280))+((x6277*x6278)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj2*x6279))+((cj2*x6276))+((cj2*x6281))+((x6278*x6280))+(((-1.0)*r20*x6277)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj2*x6281))+((sj2*x6276))+(((-1.0)*cj2*x6279))+((r20*x6280))+((x6277*x6278))))+IKsqr((((sj2*x6279))+((cj2*x6276))+((cj2*x6281))+((x6278*x6280))+(((-1.0)*r20*x6277))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj2*x6281))+((sj2*x6276))+(((-1.0)*cj2*x6279))+((r20*x6280))+((x6277*x6278))), (((sj2*x6279))+((cj2*x6276))+((cj2*x6281))+((x6278*x6280))+(((-1.0)*r20*x6277))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x6282=IKcos(j4);
IkReal x6283=IKsin(j4);
IkReal x6284=(r11*sj0);
IkReal x6285=(cj6*sj5);
IkReal x6286=(r10*sj0);
IkReal x6287=(sj5*sj6);
IkReal x6288=(cj6*r20);
IkReal x6289=((1.0)*cj6);
IkReal x6290=((0.02626)*sj6);
IkReal x6291=(cj0*r00);
IkReal x6292=((0.02626)*cj6);
IkReal x6293=((1.0)*r21);
IkReal x6294=(cj0*r01);
IkReal x6295=(cj2*x6282);
IkReal x6296=(sj2*x6283);
IkReal x6297=((0.02626)*x6283);
IkReal x6298=(cj2*x6283);
IkReal x6299=((0.0718)*x6282);
IkReal x6300=(sj2*x6282);
IkReal x6301=(x6296+x6295);
evalcond[0]=((((-1.0)*x6298))+x6288+x6300+(((-1.0)*sj6*x6293)));
evalcond[1]=((((-1.0)*r20*x6287))+x6301+(((-1.0)*cj5*r22))+(((-1.0)*x6285*x6293)));
evalcond[2]=(x6301+((sj6*x6294))+(((-1.0)*x6289*x6291))+((sj6*x6284))+(((-1.0)*x6286*x6289)));
evalcond[3]=(((x6284*x6285))+((cj5*r12*sj0))+x6298+((cj0*cj5*r02))+(((-1.0)*x6300))+((x6286*x6287))+((x6285*x6294))+((x6287*x6291)));
evalcond[4]=((0.1255)+(((0.02626)*x6288))+(((-1.0)*r21*x6290))+pz+(((0.01834)*cj2))+(((0.02626)*x6300))+(((-0.0718)*x6296))+(((-0.0718)*x6295))+(((0.0009)*sj2))+(((-1.0)*cj2*x6297)));
evalcond[5]=((-0.001)+(((0.02626)*x6296))+(((0.02626)*x6295))+((x6284*x6290))+(((-0.01834)*sj2))+((sj2*x6299))+(((0.0009)*cj2))+(((-1.0)*x6291*x6292))+(((-1.0)*py*sj0))+(((-1.0)*x6286*x6292))+(((-0.0718)*x6298))+((x6290*x6294))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6302=(cj0*sj5);
IkReal x6303=(cj5*cj6);
IkReal x6304=((1.0)*sj5);
IkReal x6305=((1.0)*cj0);
IkReal x6306=((1.0)*sj0);
IkReal x6307=(cj5*sj6);
IkReal x6308=(r10*x6307);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=(sj3+((r21*x6303))+(((-1.0)*r22*x6304))+((r20*x6307)));
evalcond[2]=((((-1.0)*r11*x6303*x6306))+((r02*x6302))+((r12*sj0*sj5))+(((-1.0)*r00*x6305*x6307))+(((-1.0)*r01*x6303*x6305))+(((-1.0)*x6306*x6308)));
evalcond[3]=((((-1.0)*x6305*x6308))+(((-1.0)*r02*sj0*x6304))+((r00*sj0*x6307))+(((-1.0)*r11*x6303*x6305))+((r01*sj0*x6303))+((r12*x6302))+(((-1.0)*cj3)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x6309=((1.0)*sj5);
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*r20*sj6*x6309))+(((-1.0)*cj6*r21*x6309))+(((-1.0)*cj5*r22))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=sj3;
j4eval[1]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6310=((1.0)*sj5);
CheckValue<IkReal> x6311=IKPowWithIntegerCheck(sj3,-1);
if(!x6311.valid){
continue;
}
CheckValue<IkReal> x6312=IKPowWithIntegerCheck(cj3,-1);
if(!x6312.valid){
continue;
}
if( IKabs(((x6311.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6312.value)*(((((-1.0)*r20*sj6*x6310))+(((-1.0)*cj6*r21*x6310))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6311.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))+IKsqr(((x6312.value)*(((((-1.0)*r20*sj6*x6310))+(((-1.0)*cj6*r21*x6310))+(((-1.0)*cj5*r22))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6311.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))), ((x6312.value)*(((((-1.0)*r20*sj6*x6310))+(((-1.0)*cj6*r21*x6310))+(((-1.0)*cj5*r22))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6313=IKcos(j4);
IkReal x6314=IKsin(j4);
IkReal x6315=(r10*sj0);
IkReal x6316=((0.02626)*cj6);
IkReal x6317=(sj0*sj6);
IkReal x6318=(cj5*r12);
IkReal x6319=(sj5*sj6);
IkReal x6320=((0.02626)*r01);
IkReal x6321=(cj0*sj6);
IkReal x6322=(cj0*r10);
IkReal x6323=(r21*sj6);
IkReal x6324=((1.0)*cj5);
IkReal x6325=((1.0)*cj6);
IkReal x6326=(cj0*r00);
IkReal x6327=((1.0)*py);
IkReal x6328=(cj6*sj0);
IkReal x6329=(r11*sj5);
IkReal x6330=((0.02626)*r11);
IkReal x6331=(r01*sj5);
IkReal x6332=(cj0*cj6);
IkReal x6333=(cj3*x6313);
IkReal x6334=((0.02626)*x6314);
IkReal x6335=(sj3*x6313);
evalcond[0]=((((-1.0)*x6323))+((cj3*x6314))+((cj6*r20)));
evalcond[1]=((((-1.0)*r21*sj5*x6325))+(((-1.0)*r20*x6319))+(((-1.0)*r22*x6324))+(((-1.0)*x6333)));
evalcond[2]=((((-1.0)*x6325*x6326))+x6313+(((-1.0)*x6315*x6325))+((r11*x6317))+((r01*x6321)));
evalcond[3]=(((r11*x6321))+(((-1.0)*r01*x6317))+((sj3*x6314))+((r00*x6328))+(((-1.0)*x6322*x6325)));
evalcond[4]=((0.2413)+((r20*x6316))+(((0.0718)*x6333))+((cj3*x6334))+pz+(((-0.02626)*x6323))+(((0.09746)*cj3)));
evalcond[5]=(x6314+((cj0*cj5*r02))+((x6331*x6332))+((x6315*x6319))+((x6319*x6326))+((x6328*x6329))+((sj0*x6318)));
evalcond[6]=((((-1.0)*r00*sj5*x6317))+((x6319*x6322))+(((-1.0)*sj0*x6325*x6331))+((x6329*x6332))+((cj0*x6318))+(((-1.0)*r02*sj0*x6324))+(((-1.0)*x6335)));
evalcond[7]=((-0.0001)+(((-0.0718)*x6314))+(((-1.0)*sj0*x6327))+((x6317*x6330))+(((-1.0)*x6316*x6326))+((x6320*x6321))+(((-1.0)*x6315*x6316))+(((-1.0)*cj0*px))+(((0.02626)*x6313)));
evalcond[8]=((-0.0001)+(((0.0718)*x6335))+((sj3*x6334))+((r00*sj0*x6316))+(((-1.0)*cj0*x6327))+(((-1.0)*x6316*x6322))+(((-1.0)*x6317*x6320))+((x6321*x6330))+((px*sj0))+(((0.09746)*sj3)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6336=((1.0)*sj6);
CheckValue<IkReal> x6337=IKPowWithIntegerCheck(cj3,-1);
if(!x6337.valid){
continue;
}
if( IKabs(((x6337.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x6336))+(((-1.0)*cj0*r01*x6336))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6337.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x6336))+(((-1.0)*cj0*r01*x6336))+((cj0*cj6*r00))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6337.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))), (((cj6*r10*sj0))+(((-1.0)*r11*sj0*x6336))+(((-1.0)*cj0*r01*x6336))+((cj0*cj6*r00))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6338=IKcos(j4);
IkReal x6339=IKsin(j4);
IkReal x6340=(r10*sj0);
IkReal x6341=((0.02626)*cj6);
IkReal x6342=(sj0*sj6);
IkReal x6343=(cj5*r12);
IkReal x6344=(sj5*sj6);
IkReal x6345=((0.02626)*r01);
IkReal x6346=(cj0*sj6);
IkReal x6347=(cj0*r10);
IkReal x6348=(r21*sj6);
IkReal x6349=((1.0)*cj5);
IkReal x6350=((1.0)*cj6);
IkReal x6351=(cj0*r00);
IkReal x6352=((1.0)*py);
IkReal x6353=(cj6*sj0);
IkReal x6354=(r11*sj5);
IkReal x6355=((0.02626)*r11);
IkReal x6356=(r01*sj5);
IkReal x6357=(cj0*cj6);
IkReal x6358=(cj3*x6338);
IkReal x6359=((0.02626)*x6339);
IkReal x6360=(sj3*x6338);
evalcond[0]=(((cj3*x6339))+(((-1.0)*x6348))+((cj6*r20)));
evalcond[1]=((((-1.0)*r21*sj5*x6350))+(((-1.0)*r22*x6349))+(((-1.0)*x6358))+(((-1.0)*r20*x6344)));
evalcond[2]=(x6338+(((-1.0)*x6350*x6351))+(((-1.0)*x6340*x6350))+((r01*x6346))+((r11*x6342)));
evalcond[3]=((((-1.0)*x6347*x6350))+((sj3*x6339))+((r00*x6353))+(((-1.0)*r01*x6342))+((r11*x6346)));
evalcond[4]=((0.2413)+(((-0.02626)*x6348))+(((0.0718)*x6358))+((cj3*x6359))+pz+((r20*x6341))+(((0.09746)*cj3)));
evalcond[5]=(((sj0*x6343))+((x6353*x6354))+x6339+((cj0*cj5*r02))+((x6356*x6357))+((x6344*x6351))+((x6340*x6344)));
evalcond[6]=(((x6344*x6347))+((cj0*x6343))+(((-1.0)*r02*sj0*x6349))+(((-1.0)*r00*sj5*x6342))+(((-1.0)*sj0*x6350*x6356))+(((-1.0)*x6360))+((x6354*x6357)));
evalcond[7]=((-0.0001)+(((-1.0)*x6340*x6341))+((x6342*x6355))+((x6345*x6346))+(((-1.0)*sj0*x6352))+(((0.02626)*x6338))+(((-1.0)*x6341*x6351))+(((-0.0718)*x6339))+(((-1.0)*cj0*px)));
evalcond[8]=((-0.0001)+(((-1.0)*x6341*x6347))+((r00*sj0*x6341))+(((-1.0)*cj0*x6352))+((x6346*x6355))+(((0.0718)*x6360))+(((-1.0)*x6342*x6345))+((sj3*x6359))+((px*sj0))+(((0.09746)*sj3)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6361=((1.0)*sj5);
CheckValue<IkReal> x6362 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x6361))+(((-1.0)*r20*sj6*x6361))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x6362.valid){
continue;
}
CheckValue<IkReal> x6363=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x6363.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x6362.value)+(((1.5707963267949)*(x6363.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6364=IKcos(j4);
IkReal x6365=IKsin(j4);
IkReal x6366=(r10*sj0);
IkReal x6367=((0.02626)*cj6);
IkReal x6368=(sj0*sj6);
IkReal x6369=(cj5*r12);
IkReal x6370=(sj5*sj6);
IkReal x6371=((0.02626)*r01);
IkReal x6372=(cj0*sj6);
IkReal x6373=(cj0*r10);
IkReal x6374=(r21*sj6);
IkReal x6375=((1.0)*cj5);
IkReal x6376=((1.0)*cj6);
IkReal x6377=(cj0*r00);
IkReal x6378=((1.0)*py);
IkReal x6379=(cj6*sj0);
IkReal x6380=(r11*sj5);
IkReal x6381=((0.02626)*r11);
IkReal x6382=(r01*sj5);
IkReal x6383=(cj0*cj6);
IkReal x6384=(cj3*x6364);
IkReal x6385=((0.02626)*x6365);
IkReal x6386=(sj3*x6364);
evalcond[0]=((((-1.0)*x6374))+((cj3*x6365))+((cj6*r20)));
evalcond[1]=((((-1.0)*x6384))+(((-1.0)*r21*sj5*x6376))+(((-1.0)*r20*x6370))+(((-1.0)*r22*x6375)));
evalcond[2]=((((-1.0)*x6366*x6376))+x6364+((r01*x6372))+((r11*x6368))+(((-1.0)*x6376*x6377)));
evalcond[3]=(((r00*x6379))+((r11*x6372))+(((-1.0)*x6373*x6376))+(((-1.0)*r01*x6368))+((sj3*x6365)));
evalcond[4]=((0.2413)+(((-0.02626)*x6374))+((r20*x6367))+pz+(((0.09746)*cj3))+(((0.0718)*x6384))+((cj3*x6385)));
evalcond[5]=(x6365+((cj0*cj5*r02))+((sj0*x6369))+((x6366*x6370))+((x6370*x6377))+((x6379*x6380))+((x6382*x6383)));
evalcond[6]=((((-1.0)*x6386))+((x6380*x6383))+(((-1.0)*r00*sj5*x6368))+((x6370*x6373))+(((-1.0)*sj0*x6376*x6382))+((cj0*x6369))+(((-1.0)*r02*sj0*x6375)));
evalcond[7]=((-0.0001)+((x6368*x6381))+(((-1.0)*x6366*x6367))+(((-1.0)*sj0*x6378))+(((0.02626)*x6364))+(((-1.0)*x6367*x6377))+((x6371*x6372))+(((-1.0)*cj0*px))+(((-0.0718)*x6365)));
evalcond[8]=((-0.0001)+(((-1.0)*x6368*x6371))+((sj3*x6385))+((r00*sj0*x6367))+(((-1.0)*x6367*x6373))+((px*sj0))+(((0.09746)*sj3))+((x6372*x6381))+(((0.0718)*x6386))+(((-1.0)*cj0*x6378)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6387=(cj0*sj5);
IkReal x6388=(cj5*cj6);
IkReal x6389=((1.0)*sj5);
IkReal x6390=((1.0)*cj0);
IkReal x6391=((1.0)*sj0);
IkReal x6392=(cj5*sj6);
IkReal x6393=(r10*x6392);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj3))+((r20*x6392))+(((-1.0)*r22*x6389))+((r21*x6388)));
evalcond[2]=((((-1.0)*r00*x6390*x6392))+((r12*sj0*sj5))+(((-1.0)*r11*x6388*x6391))+((r02*x6387))+(((-1.0)*r01*x6388*x6390))+(((-1.0)*x6391*x6393)));
evalcond[3]=((((-1.0)*r02*sj0*x6389))+((r01*sj0*x6388))+(((-1.0)*r11*x6388*x6390))+(((-1.0)*x6390*x6393))+((r12*x6387))+((r00*sj0*x6392))+(((-1.0)*cj3)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=sj3;
j4eval[1]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x6394=IKPowWithIntegerCheck(sj3,-1);
if(!x6394.valid){
continue;
}
CheckValue<IkReal> x6395=IKPowWithIntegerCheck(cj3,-1);
if(!x6395.valid){
continue;
}
if( IKabs(((x6394.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6395.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6394.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))+IKsqr(((x6395.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6394.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))), ((x6395.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6396=IKcos(j4);
IkReal x6397=IKsin(j4);
IkReal x6398=(cj6*sj0);
IkReal x6399=((0.02626)*r10);
IkReal x6400=(sj0*sj6);
IkReal x6401=(r11*sj5);
IkReal x6402=(r10*sj5);
IkReal x6403=((0.02626)*r01);
IkReal x6404=(cj0*sj6);
IkReal x6405=(cj0*cj6);
IkReal x6406=(r21*sj6);
IkReal x6407=((1.0)*cj5);
IkReal x6408=(cj6*r20);
IkReal x6409=((1.0)*r10);
IkReal x6410=((1.0)*r01);
IkReal x6411=(r00*sj5);
IkReal x6412=((1.0)*py);
IkReal x6413=(cj5*r12);
IkReal x6414=((1.0)*sj5);
IkReal x6415=((0.02626)*r00);
IkReal x6416=((0.02626)*r11);
IkReal x6417=(cj3*x6397);
IkReal x6418=(sj3*x6397);
IkReal x6419=(cj3*x6396);
IkReal x6420=((1.0)*x6396);
evalcond[0]=(x6408+(((-1.0)*x6406))+(((-1.0)*x6417)));
evalcond[1]=((((-1.0)*cj6*r21*x6414))+x6419+(((-1.0)*r20*sj6*x6414))+(((-1.0)*r22*x6407)));
evalcond[2]=((((-1.0)*r00*x6405))+((r01*x6404))+(((-1.0)*x6420))+((r11*x6400))+(((-1.0)*x6398*x6409)));
evalcond[3]=((((-1.0)*x6400*x6410))+x6418+((r00*x6398))+((r11*x6404))+(((-1.0)*x6405*x6409)));
evalcond[4]=((0.0097)+(((0.02626)*x6408))+pz+(((-0.02626)*x6417))+(((-0.09746)*cj3))+(((-0.02626)*x6406))+(((-0.0718)*x6419)));
evalcond[5]=((((-1.0)*x6397))+((sj0*x6413))+((cj0*cj5*r02))+((x6404*x6411))+((x6398*x6401))+((x6400*x6402))+((r01*sj5*x6405)));
evalcond[6]=((((-1.0)*sj5*x6398*x6410))+(((-1.0)*x6400*x6411))+((cj0*x6413))+((x6401*x6405))+(((-1.0)*sj3*x6420))+((x6402*x6404))+(((-1.0)*r02*sj0*x6407)));
evalcond[7]=((-0.0019)+(((0.0718)*x6397))+(((-1.0)*x6405*x6415))+(((-1.0)*x6398*x6399))+(((-0.02626)*x6396))+(((-1.0)*sj0*x6412))+((x6403*x6404))+((x6400*x6416))+(((-1.0)*cj0*px)));
evalcond[8]=((-0.0001)+(((-1.0)*x6400*x6403))+((x6404*x6416))+((x6398*x6415))+((px*sj0))+(((0.09746)*sj3))+(((0.0718)*sj3*x6396))+(((-1.0)*cj0*x6412))+(((-1.0)*x6399*x6405))+(((0.02626)*x6418)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6421=((1.0)*cj6);
CheckValue<IkReal> x6422=IKPowWithIntegerCheck(cj3,-1);
if(!x6422.valid){
continue;
}
if( IKabs(((x6422.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x6421))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x6421)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6422.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x6421))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x6421))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6422.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))), (((r11*sj0*sj6))+(((-1.0)*r10*sj0*x6421))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x6421))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6423=IKcos(j4);
IkReal x6424=IKsin(j4);
IkReal x6425=(cj6*sj0);
IkReal x6426=((0.02626)*r10);
IkReal x6427=(sj0*sj6);
IkReal x6428=(r11*sj5);
IkReal x6429=(r10*sj5);
IkReal x6430=((0.02626)*r01);
IkReal x6431=(cj0*sj6);
IkReal x6432=(cj0*cj6);
IkReal x6433=(r21*sj6);
IkReal x6434=((1.0)*cj5);
IkReal x6435=(cj6*r20);
IkReal x6436=((1.0)*r10);
IkReal x6437=((1.0)*r01);
IkReal x6438=(r00*sj5);
IkReal x6439=((1.0)*py);
IkReal x6440=(cj5*r12);
IkReal x6441=((1.0)*sj5);
IkReal x6442=((0.02626)*r00);
IkReal x6443=((0.02626)*r11);
IkReal x6444=(cj3*x6424);
IkReal x6445=(sj3*x6424);
IkReal x6446=(cj3*x6423);
IkReal x6447=((1.0)*x6423);
evalcond[0]=((((-1.0)*x6444))+x6435+(((-1.0)*x6433)));
evalcond[1]=((((-1.0)*r20*sj6*x6441))+(((-1.0)*cj6*r21*x6441))+(((-1.0)*r22*x6434))+x6446);
evalcond[2]=(((r01*x6431))+(((-1.0)*x6425*x6436))+(((-1.0)*x6447))+((r11*x6427))+(((-1.0)*r00*x6432)));
evalcond[3]=(((r11*x6431))+(((-1.0)*x6427*x6437))+x6445+(((-1.0)*x6432*x6436))+((r00*x6425)));
evalcond[4]=((0.0097)+(((-0.02626)*x6444))+pz+(((-0.09746)*cj3))+(((0.02626)*x6435))+(((-0.0718)*x6446))+(((-0.02626)*x6433)));
evalcond[5]=((((-1.0)*x6424))+((x6425*x6428))+((cj0*cj5*r02))+((r01*sj5*x6432))+((sj0*x6440))+((x6427*x6429))+((x6431*x6438)));
evalcond[6]=(((x6429*x6431))+(((-1.0)*x6427*x6438))+(((-1.0)*r02*sj0*x6434))+((cj0*x6440))+(((-1.0)*sj3*x6447))+(((-1.0)*sj5*x6425*x6437))+((x6428*x6432)));
evalcond[7]=((-0.0019)+(((-0.02626)*x6423))+(((-1.0)*sj0*x6439))+(((-1.0)*x6432*x6442))+(((0.0718)*x6424))+((x6430*x6431))+(((-1.0)*x6425*x6426))+((x6427*x6443))+(((-1.0)*cj0*px)));
evalcond[8]=((-0.0001)+((x6431*x6443))+(((-1.0)*x6426*x6432))+(((-1.0)*x6427*x6430))+(((-1.0)*cj0*x6439))+(((0.0718)*sj3*x6423))+((x6425*x6442))+((px*sj0))+(((0.09746)*sj3))+(((0.02626)*x6445)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x6448 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x6448.valid){
continue;
}
CheckValue<IkReal> x6449=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x6449.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x6448.value)+(((1.5707963267949)*(x6449.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6450=IKcos(j4);
IkReal x6451=IKsin(j4);
IkReal x6452=(cj6*sj0);
IkReal x6453=((0.02626)*r10);
IkReal x6454=(sj0*sj6);
IkReal x6455=(r11*sj5);
IkReal x6456=(r10*sj5);
IkReal x6457=((0.02626)*r01);
IkReal x6458=(cj0*sj6);
IkReal x6459=(cj0*cj6);
IkReal x6460=(r21*sj6);
IkReal x6461=((1.0)*cj5);
IkReal x6462=(cj6*r20);
IkReal x6463=((1.0)*r10);
IkReal x6464=((1.0)*r01);
IkReal x6465=(r00*sj5);
IkReal x6466=((1.0)*py);
IkReal x6467=(cj5*r12);
IkReal x6468=((1.0)*sj5);
IkReal x6469=((0.02626)*r00);
IkReal x6470=((0.02626)*r11);
IkReal x6471=(cj3*x6451);
IkReal x6472=(sj3*x6451);
IkReal x6473=(cj3*x6450);
IkReal x6474=((1.0)*x6450);
evalcond[0]=(x6462+(((-1.0)*x6460))+(((-1.0)*x6471)));
evalcond[1]=((((-1.0)*cj6*r21*x6468))+x6473+(((-1.0)*r20*sj6*x6468))+(((-1.0)*r22*x6461)));
evalcond[2]=(((r01*x6458))+((r11*x6454))+(((-1.0)*x6452*x6463))+(((-1.0)*r00*x6459))+(((-1.0)*x6474)));
evalcond[3]=(((r00*x6452))+((r11*x6458))+x6472+(((-1.0)*x6454*x6464))+(((-1.0)*x6459*x6463)));
evalcond[4]=((0.0097)+(((-0.0718)*x6473))+pz+(((-0.09746)*cj3))+(((-0.02626)*x6460))+(((0.02626)*x6462))+(((-0.02626)*x6471)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x6459))+((sj0*x6467))+(((-1.0)*x6451))+((x6454*x6456))+((x6452*x6455))+((x6458*x6465)));
evalcond[6]=(((x6456*x6458))+(((-1.0)*sj5*x6452*x6464))+(((-1.0)*x6454*x6465))+((x6455*x6459))+((cj0*x6467))+(((-1.0)*r02*sj0*x6461))+(((-1.0)*sj3*x6474)));
evalcond[7]=((-0.0019)+(((0.0718)*x6451))+((x6457*x6458))+(((-1.0)*x6452*x6453))+(((-0.02626)*x6450))+(((-1.0)*x6459*x6469))+(((-1.0)*sj0*x6466))+(((-1.0)*cj0*px))+((x6454*x6470)));
evalcond[8]=((-0.0001)+(((0.0718)*sj3*x6450))+((x6458*x6470))+(((-1.0)*x6453*x6459))+(((0.02626)*x6472))+(((-1.0)*x6454*x6457))+((x6452*x6469))+((px*sj0))+(((0.09746)*sj3))+(((-1.0)*cj0*x6466)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6475=(cj0*sj5);
IkReal x6476=(cj5*cj6);
IkReal x6477=((1.0)*sj5);
IkReal x6478=((1.0)*cj0);
IkReal x6479=((1.0)*sj0);
IkReal x6480=(cj5*sj6);
IkReal x6481=(r10*x6480);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(cj2+(((-1.0)*r22*x6477))+((r20*x6480))+((r21*x6476)));
evalcond[2]=((((-1.0)*sj2))+((r12*sj0*sj5))+((r02*x6475))+(((-1.0)*r11*x6476*x6479))+(((-1.0)*x6479*x6481))+(((-1.0)*r01*x6476*x6478))+(((-1.0)*r00*x6478*x6480)));
evalcond[3]=((((-1.0)*x6478*x6481))+(((-1.0)*r02*sj0*x6477))+(((-1.0)*r11*x6476*x6478))+((r12*x6475))+((r00*sj0*x6480))+((r01*sj0*x6476)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6482=((1.0)*sj6);
CheckValue<IkReal> x6483=IKPowWithIntegerCheck(sj2,-1);
if(!x6483.valid){
continue;
}
CheckValue<IkReal> x6484=IKPowWithIntegerCheck(cj2,-1);
if(!x6484.valid){
continue;
}
if( IKabs(((x6483.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6484.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x6482))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x6482)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6483.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x6484.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x6482))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x6482))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6483.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x6484.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x6482))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x6482))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6485=IKsin(j4);
IkReal x6486=IKcos(j4);
IkReal x6487=((0.02626)*sj0);
IkReal x6488=(cj6*r10);
IkReal x6489=(r01*sj6);
IkReal x6490=(r11*sj0);
IkReal x6491=(cj0*cj5);
IkReal x6492=(cj6*sj5);
IkReal x6493=((0.02626)*cj0);
IkReal x6494=(cj0*sj6);
IkReal x6495=(r21*sj6);
IkReal x6496=((1.0)*sj0);
IkReal x6497=(cj6*r20);
IkReal x6498=(r00*sj5);
IkReal x6499=(cj6*r00);
IkReal x6500=((1.0)*cj0);
IkReal x6501=(r11*sj6);
IkReal x6502=(r10*sj5*sj6);
IkReal x6503=(cj2*x6485);
IkReal x6504=(cj2*x6486);
IkReal x6505=(sj2*x6485);
IkReal x6506=(sj2*x6486);
evalcond[0]=((((-1.0)*x6495))+x6497+x6506);
evalcond[1]=(x6505+(((-1.0)*cj5*r22))+(((-1.0)*r21*x6492))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((r11*x6494))+(((-1.0)*x6489*x6496))+(((-1.0)*x6488*x6500))+x6485+((sj0*x6499)));
evalcond[3]=((((-1.0)*x6488*x6496))+((cj0*x6489))+((sj6*x6490))+x6504+(((-1.0)*x6499*x6500)));
evalcond[4]=((0.1255)+(((-0.02626)*x6495))+(((0.1158)*cj2))+(((-0.0718)*x6505))+(((0.02626)*x6497))+pz+(((0.0009)*sj2))+(((0.02626)*x6506)));
evalcond[5]=(((cj5*r12*sj0))+((sj0*x6502))+((x6494*x6498))+((r02*x6491))+((cj0*r01*x6492))+x6503+((x6490*x6492)));
evalcond[6]=((((-1.0)*sj6*x6496*x6498))+(((-1.0)*x6486))+(((-1.0)*cj5*r02*x6496))+((r12*x6491))+(((-1.0)*r01*x6492*x6496))+((r10*sj5*x6494))+((cj0*r11*x6492)));
evalcond[7]=((0.09736)+(((-1.0)*x6487*x6489))+(((-1.0)*x6488*x6493))+(((0.0718)*x6486))+((x6487*x6499))+(((-1.0)*py*x6500))+(((0.02626)*x6485))+((x6493*x6501))+((px*sj0)));
evalcond[8]=((-0.001)+(((-1.0)*py*x6496))+(((-1.0)*x6487*x6488))+(((-0.1158)*sj2))+((x6489*x6493))+(((0.0009)*cj2))+(((-0.0718)*x6503))+((x6487*x6501))+(((-1.0)*x6493*x6499))+(((-1.0)*px*x6500))+(((0.02626)*x6504)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6507=((1.0)*cj6);
CheckValue<IkReal> x6508=IKPowWithIntegerCheck(sj2,-1);
if(!x6508.valid){
continue;
}
if( IKabs((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*r00*sj0*x6507)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6508.value)*((((r21*sj6))+(((-1.0)*r20*x6507)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*r00*sj0*x6507))))+IKsqr(((x6508.value)*((((r21*sj6))+(((-1.0)*r20*x6507))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*r00*sj0*x6507))), ((x6508.value)*((((r21*sj6))+(((-1.0)*r20*x6507))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6509=IKsin(j4);
IkReal x6510=IKcos(j4);
IkReal x6511=((0.02626)*sj0);
IkReal x6512=(cj6*r10);
IkReal x6513=(r01*sj6);
IkReal x6514=(r11*sj0);
IkReal x6515=(cj0*cj5);
IkReal x6516=(cj6*sj5);
IkReal x6517=((0.02626)*cj0);
IkReal x6518=(cj0*sj6);
IkReal x6519=(r21*sj6);
IkReal x6520=((1.0)*sj0);
IkReal x6521=(cj6*r20);
IkReal x6522=(r00*sj5);
IkReal x6523=(cj6*r00);
IkReal x6524=((1.0)*cj0);
IkReal x6525=(r11*sj6);
IkReal x6526=(r10*sj5*sj6);
IkReal x6527=(cj2*x6509);
IkReal x6528=(cj2*x6510);
IkReal x6529=(sj2*x6509);
IkReal x6530=(sj2*x6510);
evalcond[0]=(x6530+x6521+(((-1.0)*x6519)));
evalcond[1]=((((-1.0)*r21*x6516))+x6529+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((r11*x6518))+x6509+(((-1.0)*x6512*x6524))+((sj0*x6523))+(((-1.0)*x6513*x6520)));
evalcond[3]=(((cj0*x6513))+((sj6*x6514))+x6528+(((-1.0)*x6512*x6520))+(((-1.0)*x6523*x6524)));
evalcond[4]=((0.1255)+(((-0.02626)*x6519))+(((0.1158)*cj2))+(((0.02626)*x6521))+(((-0.0718)*x6529))+pz+(((0.0009)*sj2))+(((0.02626)*x6530)));
evalcond[5]=(((cj5*r12*sj0))+((x6514*x6516))+x6527+((sj0*x6526))+((r02*x6515))+((x6518*x6522))+((cj0*r01*x6516)));
evalcond[6]=(((r10*sj5*x6518))+(((-1.0)*r01*x6516*x6520))+(((-1.0)*cj5*r02*x6520))+((r12*x6515))+((cj0*r11*x6516))+(((-1.0)*sj6*x6520*x6522))+(((-1.0)*x6510)));
evalcond[7]=((0.09736)+(((-1.0)*x6512*x6517))+(((-1.0)*py*x6524))+((x6517*x6525))+((x6511*x6523))+(((0.0718)*x6510))+((px*sj0))+(((0.02626)*x6509))+(((-1.0)*x6511*x6513)));
evalcond[8]=((-0.001)+(((-1.0)*py*x6520))+((x6513*x6517))+(((-0.1158)*sj2))+(((0.02626)*x6528))+((x6511*x6525))+(((-0.0718)*x6527))+(((0.0009)*cj2))+(((-1.0)*px*x6524))+(((-1.0)*x6517*x6523))+(((-1.0)*x6511*x6512)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x6531=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x6531.valid){
continue;
}
CheckValue<IkReal> x6532 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x6532.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6531.value)))+(x6532.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6533=IKsin(j4);
IkReal x6534=IKcos(j4);
IkReal x6535=((0.02626)*sj0);
IkReal x6536=(cj6*r10);
IkReal x6537=(r01*sj6);
IkReal x6538=(r11*sj0);
IkReal x6539=(cj0*cj5);
IkReal x6540=(cj6*sj5);
IkReal x6541=((0.02626)*cj0);
IkReal x6542=(cj0*sj6);
IkReal x6543=(r21*sj6);
IkReal x6544=((1.0)*sj0);
IkReal x6545=(cj6*r20);
IkReal x6546=(r00*sj5);
IkReal x6547=(cj6*r00);
IkReal x6548=((1.0)*cj0);
IkReal x6549=(r11*sj6);
IkReal x6550=(r10*sj5*sj6);
IkReal x6551=(cj2*x6533);
IkReal x6552=(cj2*x6534);
IkReal x6553=(sj2*x6533);
IkReal x6554=(sj2*x6534);
evalcond[0]=(x6554+x6545+(((-1.0)*x6543)));
evalcond[1]=((((-1.0)*r21*x6540))+x6553+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x6533+(((-1.0)*x6537*x6544))+(((-1.0)*x6536*x6548))+((r11*x6542))+((sj0*x6547)));
evalcond[3]=(x6552+(((-1.0)*x6536*x6544))+((cj0*x6537))+(((-1.0)*x6547*x6548))+((sj6*x6538)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((0.02626)*x6554))+(((0.02626)*x6545))+(((-0.0718)*x6553))+pz+(((-0.02626)*x6543))+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x6539))+((x6538*x6540))+x6551+((x6542*x6546))+((cj0*r01*x6540))+((sj0*x6550)));
evalcond[6]=((((-1.0)*x6534))+(((-1.0)*cj5*r02*x6544))+((cj0*r11*x6540))+(((-1.0)*sj6*x6544*x6546))+(((-1.0)*r01*x6540*x6544))+((r12*x6539))+((r10*sj5*x6542)));
evalcond[7]=((0.09736)+(((-1.0)*x6535*x6537))+(((0.0718)*x6534))+((x6541*x6549))+((x6535*x6547))+(((-1.0)*x6536*x6541))+((px*sj0))+(((0.02626)*x6533))+(((-1.0)*py*x6548)));
evalcond[8]=((-0.001)+(((-1.0)*x6535*x6536))+(((-0.1158)*sj2))+(((0.02626)*x6552))+(((-1.0)*x6541*x6547))+((x6537*x6541))+(((-0.0718)*x6551))+(((-1.0)*px*x6548))+((x6535*x6549))+(((0.0009)*cj2))+(((-1.0)*py*x6544)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6555=(cj0*sj5);
IkReal x6556=(cj5*cj6);
IkReal x6557=((1.0)*sj5);
IkReal x6558=((1.0)*cj0);
IkReal x6559=((1.0)*sj0);
IkReal x6560=(cj5*sj6);
IkReal x6561=(r10*x6560);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x6557))+((r20*x6560))+((r21*x6556))+(((-1.0)*cj2)));
evalcond[2]=(sj2+(((-1.0)*r01*x6556*x6558))+((r02*x6555))+((r12*sj0*sj5))+(((-1.0)*r00*x6558*x6560))+(((-1.0)*x6559*x6561))+(((-1.0)*r11*x6556*x6559)));
evalcond[3]=(((r01*sj0*x6556))+((r00*sj0*x6560))+((r12*x6555))+(((-1.0)*x6558*x6561))+(((-1.0)*r02*sj0*x6557))+(((-1.0)*r11*x6556*x6558)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6562=((1.0)*sj6);
CheckValue<IkReal> x6563=IKPowWithIntegerCheck(sj2,-1);
if(!x6563.valid){
continue;
}
CheckValue<IkReal> x6564=IKPowWithIntegerCheck(cj2,-1);
if(!x6564.valid){
continue;
}
if( IKabs(((x6563.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6564.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x6562))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x6562)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6563.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x6564.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x6562))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x6562))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6563.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x6564.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x6562))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x6562))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6565=IKcos(j4);
IkReal x6566=IKsin(j4);
IkReal x6567=((0.02626)*sj0);
IkReal x6568=(cj6*r10);
IkReal x6569=(r01*sj6);
IkReal x6570=(r11*sj0);
IkReal x6571=(cj0*cj5);
IkReal x6572=(cj6*sj5);
IkReal x6573=(cj0*sj6);
IkReal x6574=((0.02626)*cj0);
IkReal x6575=((1.0)*cj5);
IkReal x6576=(cj6*r20);
IkReal x6577=((1.0)*sj0);
IkReal x6578=(r21*sj6);
IkReal x6579=(r00*sj5);
IkReal x6580=(cj6*r00);
IkReal x6581=((1.0)*cj0);
IkReal x6582=(r10*sj5*sj6);
IkReal x6583=(cj2*x6566);
IkReal x6584=(cj2*x6565);
IkReal x6585=(sj2*x6566);
IkReal x6586=(sj2*x6565);
evalcond[0]=(x6586+x6576+(((-1.0)*x6578)));
evalcond[1]=((((-1.0)*r22*x6575))+(((-1.0)*r21*x6572))+x6585+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((sj6*x6570))+x6584+(((-1.0)*x6568*x6577))+((cj0*x6569))+(((-1.0)*x6580*x6581)));
evalcond[3]=((((-1.0)*x6568*x6581))+((sj0*x6580))+((r11*x6573))+(((-1.0)*x6569*x6577))+(((-1.0)*x6566)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+pz+(((0.02626)*x6576))+(((0.02626)*x6586))+(((0.0009)*sj2))+(((-0.02626)*x6578))+(((-0.0718)*x6585)));
evalcond[5]=(((cj5*r12*sj0))+((cj0*r01*x6572))+((sj0*x6582))+((x6573*x6579))+x6583+((x6570*x6572))+((r02*x6571)));
evalcond[6]=(((r10*sj5*x6573))+(((-1.0)*r02*sj0*x6575))+(((-1.0)*sj6*x6577*x6579))+((r12*x6571))+x6565+(((-1.0)*r01*x6572*x6577))+((cj0*r11*x6572)));
evalcond[7]=((-0.09756)+(((-0.0718)*x6565))+(((-1.0)*x6567*x6569))+(((-1.0)*py*x6581))+((x6567*x6580))+((px*sj0))+(((-1.0)*x6568*x6574))+(((-0.02626)*x6566))+(((0.02626)*r11*x6573)));
evalcond[8]=((-0.001)+((r11*sj6*x6567))+(((-1.0)*py*x6577))+(((-0.1158)*sj2))+(((-1.0)*x6567*x6568))+(((-1.0)*x6574*x6580))+(((0.0009)*cj2))+(((-1.0)*px*x6581))+(((0.02626)*x6584))+((x6569*x6574))+(((-0.0718)*x6583)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6587=((1.0)*cj6);
CheckValue<IkReal> x6588=IKPowWithIntegerCheck(sj2,-1);
if(!x6588.valid){
continue;
}
if( IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x6587))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6588.value)*((((r21*sj6))+(((-1.0)*r20*x6587)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x6587))+(((-1.0)*r01*sj0*sj6))))+IKsqr(((x6588.value)*((((r21*sj6))+(((-1.0)*r20*x6587))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x6587))+(((-1.0)*r01*sj0*sj6))), ((x6588.value)*((((r21*sj6))+(((-1.0)*r20*x6587))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6589=IKcos(j4);
IkReal x6590=IKsin(j4);
IkReal x6591=((0.02626)*sj0);
IkReal x6592=(cj6*r10);
IkReal x6593=(r01*sj6);
IkReal x6594=(r11*sj0);
IkReal x6595=(cj0*cj5);
IkReal x6596=(cj6*sj5);
IkReal x6597=(cj0*sj6);
IkReal x6598=((0.02626)*cj0);
IkReal x6599=((1.0)*cj5);
IkReal x6600=(cj6*r20);
IkReal x6601=((1.0)*sj0);
IkReal x6602=(r21*sj6);
IkReal x6603=(r00*sj5);
IkReal x6604=(cj6*r00);
IkReal x6605=((1.0)*cj0);
IkReal x6606=(r10*sj5*sj6);
IkReal x6607=(cj2*x6590);
IkReal x6608=(cj2*x6589);
IkReal x6609=(sj2*x6590);
IkReal x6610=(sj2*x6589);
evalcond[0]=(x6600+x6610+(((-1.0)*x6602)));
evalcond[1]=(x6609+(((-1.0)*r22*x6599))+(((-1.0)*r21*x6596))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x6608+((sj6*x6594))+((cj0*x6593))+(((-1.0)*x6604*x6605))+(((-1.0)*x6592*x6601)));
evalcond[3]=((((-1.0)*x6593*x6601))+((sj0*x6604))+((r11*x6597))+(((-1.0)*x6592*x6605))+(((-1.0)*x6590)));
evalcond[4]=((0.1255)+(((0.02626)*x6610))+(((0.1158)*cj2))+(((-0.02626)*x6602))+(((-0.0718)*x6609))+pz+(((0.02626)*x6600))+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+((x6594*x6596))+((r02*x6595))+((sj0*x6606))+((x6597*x6603))+x6607+((cj0*r01*x6596)));
evalcond[6]=((((-1.0)*r02*sj0*x6599))+((cj0*r11*x6596))+((r12*x6595))+x6589+(((-1.0)*r01*x6596*x6601))+(((-1.0)*sj6*x6601*x6603))+((r10*sj5*x6597)));
evalcond[7]=((-0.09756)+(((-0.02626)*x6590))+(((-1.0)*x6591*x6593))+(((0.02626)*r11*x6597))+(((-1.0)*x6592*x6598))+((x6591*x6604))+(((-1.0)*py*x6605))+((px*sj0))+(((-0.0718)*x6589)));
evalcond[8]=((-0.001)+((x6593*x6598))+(((-1.0)*px*x6605))+(((-0.1158)*sj2))+(((-1.0)*x6591*x6592))+(((-1.0)*x6598*x6604))+(((0.0009)*cj2))+(((-0.0718)*x6607))+((r11*sj6*x6591))+(((-1.0)*py*x6601))+(((0.02626)*x6608)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x6611=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x6611.valid){
continue;
}
CheckValue<IkReal> x6612 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x6612.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6611.value)))+(x6612.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6613=IKcos(j4);
IkReal x6614=IKsin(j4);
IkReal x6615=((0.02626)*sj0);
IkReal x6616=(cj6*r10);
IkReal x6617=(r01*sj6);
IkReal x6618=(r11*sj0);
IkReal x6619=(cj0*cj5);
IkReal x6620=(cj6*sj5);
IkReal x6621=(cj0*sj6);
IkReal x6622=((0.02626)*cj0);
IkReal x6623=((1.0)*cj5);
IkReal x6624=(cj6*r20);
IkReal x6625=((1.0)*sj0);
IkReal x6626=(r21*sj6);
IkReal x6627=(r00*sj5);
IkReal x6628=(cj6*r00);
IkReal x6629=((1.0)*cj0);
IkReal x6630=(r10*sj5*sj6);
IkReal x6631=(cj2*x6614);
IkReal x6632=(cj2*x6613);
IkReal x6633=(sj2*x6614);
IkReal x6634=(sj2*x6613);
evalcond[0]=((((-1.0)*x6626))+x6624+x6634);
evalcond[1]=((((-1.0)*r22*x6623))+x6633+(((-1.0)*r21*x6620))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x6632+(((-1.0)*x6628*x6629))+((sj6*x6618))+(((-1.0)*x6616*x6625))+((cj0*x6617)));
evalcond[3]=((((-1.0)*x6614))+(((-1.0)*x6617*x6625))+(((-1.0)*x6616*x6629))+((r11*x6621))+((sj0*x6628)));
evalcond[4]=((0.1255)+(((0.02626)*x6624))+(((0.1158)*cj2))+(((-0.0718)*x6633))+(((-0.02626)*x6626))+pz+(((0.0009)*sj2))+(((0.02626)*x6634)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x6619))+x6631+((x6618*x6620))+((x6621*x6627))+((sj0*x6630))+((cj0*r01*x6620)));
evalcond[6]=((((-1.0)*sj6*x6625*x6627))+x6613+(((-1.0)*r02*sj0*x6623))+((r12*x6619))+((r10*sj5*x6621))+(((-1.0)*r01*x6620*x6625))+((cj0*r11*x6620)));
evalcond[7]=((-0.09756)+(((-0.0718)*x6613))+(((-1.0)*x6616*x6622))+(((-0.02626)*x6614))+(((-1.0)*py*x6629))+((px*sj0))+((x6615*x6628))+(((0.02626)*r11*x6621))+(((-1.0)*x6615*x6617)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+((r11*sj6*x6615))+(((-0.0718)*x6631))+(((0.0009)*cj2))+((x6617*x6622))+(((-1.0)*py*x6625))+(((-1.0)*x6622*x6628))+(((-1.0)*x6615*x6616))+(((-1.0)*px*x6629))+(((0.02626)*x6632)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x6642=IKPowWithIntegerCheck(sj3,-1);
if(!x6642.valid){
continue;
}
IkReal x6635=x6642.value;
IkReal x6636=((1.0)*cj6);
IkReal x6637=(cj0*r10);
IkReal x6638=(cj2*cj3);
IkReal x6639=(r00*sj0);
IkReal x6640=(r01*sj0*sj6);
IkReal x6641=(cj0*r11*sj6);
CheckValue<IkReal> x6643=IKPowWithIntegerCheck(sj2,-1);
if(!x6643.valid){
continue;
}
if( IKabs((x6635*((((cj6*x6637))+(((-1.0)*x6641))+x6640+(((-1.0)*x6636*x6639)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x6635*(x6643.value)*(((((-1.0)*x6638*x6640))+(((-1.0)*x6636*x6637*x6638))+((x6638*x6641))+(((-1.0)*r20*sj3*x6636))+((cj6*x6638*x6639))+((r21*sj3*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x6635*((((cj6*x6637))+(((-1.0)*x6641))+x6640+(((-1.0)*x6636*x6639))))))+IKsqr((x6635*(x6643.value)*(((((-1.0)*x6638*x6640))+(((-1.0)*x6636*x6637*x6638))+((x6638*x6641))+(((-1.0)*r20*sj3*x6636))+((cj6*x6638*x6639))+((r21*sj3*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x6635*((((cj6*x6637))+(((-1.0)*x6641))+x6640+(((-1.0)*x6636*x6639))))), (x6635*(x6643.value)*(((((-1.0)*x6638*x6640))+(((-1.0)*x6636*x6637*x6638))+((x6638*x6641))+(((-1.0)*r20*sj3*x6636))+((cj6*x6638*x6639))+((r21*sj3*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6644=IKsin(j4);
IkReal x6645=IKcos(j4);
IkReal x6646=((0.02626)*sj0);
IkReal x6647=(cj6*r10);
IkReal x6648=(r01*sj6);
IkReal x6649=(r11*sj6);
IkReal x6650=(sj0*sj5);
IkReal x6651=(cj6*r11);
IkReal x6652=(r10*sj6);
IkReal x6653=(cj0*cj5);
IkReal x6654=((0.02626)*cj0);
IkReal x6655=((1.0)*cj5);
IkReal x6656=(cj2*cj3);
IkReal x6657=((1.0)*sj0);
IkReal x6658=((1.0)*sj5);
IkReal x6659=((1.0)*cj3);
IkReal x6660=(cj0*sj5);
IkReal x6661=(r00*sj6);
IkReal x6662=((0.0718)*cj3);
IkReal x6663=(cj6*r00);
IkReal x6664=((1.0)*cj0);
IkReal x6665=(cj3*sj2);
IkReal x6666=(r21*sj6);
IkReal x6667=(cj6*r20);
IkReal x6668=(cj6*r01);
IkReal x6669=((0.02626)*x6644);
IkReal x6670=(cj2*x6644);
IkReal x6671=(cj2*x6645);
IkReal x6672=(sj2*x6644);
IkReal x6673=(sj3*x6645);
IkReal x6674=(sj2*x6645);
evalcond[0]=(x6667+x6674+(((-1.0)*x6666))+((x6644*x6656)));
evalcond[1]=((((-1.0)*x6648*x6657))+((sj3*x6644))+(((-1.0)*x6647*x6664))+((sj0*x6663))+((cj0*x6649)));
evalcond[2]=((((-1.0)*r22*x6655))+x6672+(((-1.0)*cj6*r21*x6658))+(((-1.0)*x6645*x6656))+(((-1.0)*r20*sj6*x6658)));
evalcond[3]=(x6671+(((-1.0)*x6647*x6657))+(((-1.0)*x6659*x6672))+((cj0*x6648))+(((-1.0)*x6663*x6664))+((sj0*x6649)));
evalcond[4]=(((r12*x6653))+((x6652*x6660))+(((-1.0)*x6673))+(((-1.0)*x6650*x6661))+(((-1.0)*x6650*x6668))+(((-1.0)*r02*sj0*x6655))+((x6651*x6660)));
evalcond[5]=(((cj5*r12*sj0))+((x6660*x6668))+((x6660*x6661))+x6670+((r02*x6653))+((x6645*x6665))+((x6650*x6652))+((x6650*x6651)));
evalcond[6]=((-0.0001)+((x6646*x6663))+(((0.0718)*x6673))+(((-1.0)*x6646*x6648))+(((-1.0)*py*x6664))+(((-1.0)*x6647*x6654))+((px*sj0))+(((0.09746)*sj3))+((x6649*x6654))+((sj3*x6669)));
evalcond[7]=((0.1255)+((x6656*x6669))+(((0.02626)*x6674))+(((0.1158)*cj2))+(((0.02626)*x6667))+(((0.0718)*x6645*x6656))+pz+(((0.09746)*x6656))+(((-0.02626)*x6666))+(((0.0009)*sj2))+(((-0.0718)*x6672)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((0.02626)*x6671))+(((-0.09746)*x6665))+(((-1.0)*x6646*x6647))+(((-1.0)*py*x6657))+(((-1.0)*x6654*x6663))+(((0.0009)*cj2))+((x6646*x6649))+(((-1.0)*px*x6664))+(((-1.0)*x6665*x6669))+(((-1.0)*x6662*x6674))+((x6648*x6654))+(((-0.0718)*x6670)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6675=(sj2*sj6);
IkReal x6676=(cj0*r01);
IkReal x6677=((1.0)*sj0);
IkReal x6678=(cj6*sj2);
IkReal x6679=(cj2*sj6);
IkReal x6680=((1.0)*r20);
IkReal x6681=(cj0*r00);
IkReal x6682=(cj2*cj6);
CheckValue<IkReal> x6683=IKPowWithIntegerCheck(cj3,-1);
if(!x6683.valid){
continue;
}
if( IKabs(((x6683.value)*(((((-1.0)*r10*x6677*x6678))+(((-1.0)*x6680*x6682))+(((-1.0)*x6678*x6681))+((r11*sj0*x6675))+((x6675*x6676))+((r21*x6679)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x6677*x6679))+(((-1.0)*x6678*x6680))+((x6681*x6682))+((r10*sj0*x6682))+(((-1.0)*x6676*x6679))+((r21*x6675)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6683.value)*(((((-1.0)*r10*x6677*x6678))+(((-1.0)*x6680*x6682))+(((-1.0)*x6678*x6681))+((r11*sj0*x6675))+((x6675*x6676))+((r21*x6679))))))+IKsqr(((((-1.0)*r11*x6677*x6679))+(((-1.0)*x6678*x6680))+((x6681*x6682))+((r10*sj0*x6682))+(((-1.0)*x6676*x6679))+((r21*x6675))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6683.value)*(((((-1.0)*r10*x6677*x6678))+(((-1.0)*x6680*x6682))+(((-1.0)*x6678*x6681))+((r11*sj0*x6675))+((x6675*x6676))+((r21*x6679))))), ((((-1.0)*r11*x6677*x6679))+(((-1.0)*x6678*x6680))+((x6681*x6682))+((r10*sj0*x6682))+(((-1.0)*x6676*x6679))+((r21*x6675))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6684=IKsin(j4);
IkReal x6685=IKcos(j4);
IkReal x6686=((0.02626)*sj0);
IkReal x6687=(cj6*r10);
IkReal x6688=(r01*sj6);
IkReal x6689=(r11*sj6);
IkReal x6690=(sj0*sj5);
IkReal x6691=(cj6*r11);
IkReal x6692=(r10*sj6);
IkReal x6693=(cj0*cj5);
IkReal x6694=((0.02626)*cj0);
IkReal x6695=((1.0)*cj5);
IkReal x6696=(cj2*cj3);
IkReal x6697=((1.0)*sj0);
IkReal x6698=((1.0)*sj5);
IkReal x6699=((1.0)*cj3);
IkReal x6700=(cj0*sj5);
IkReal x6701=(r00*sj6);
IkReal x6702=((0.0718)*cj3);
IkReal x6703=(cj6*r00);
IkReal x6704=((1.0)*cj0);
IkReal x6705=(cj3*sj2);
IkReal x6706=(r21*sj6);
IkReal x6707=(cj6*r20);
IkReal x6708=(cj6*r01);
IkReal x6709=((0.02626)*x6684);
IkReal x6710=(cj2*x6684);
IkReal x6711=(cj2*x6685);
IkReal x6712=(sj2*x6684);
IkReal x6713=(sj3*x6685);
IkReal x6714=(sj2*x6685);
evalcond[0]=(((x6684*x6696))+x6707+x6714+(((-1.0)*x6706)));
evalcond[1]=((((-1.0)*x6687*x6704))+(((-1.0)*x6688*x6697))+((sj0*x6703))+((sj3*x6684))+((cj0*x6689)));
evalcond[2]=(x6712+(((-1.0)*cj6*r21*x6698))+(((-1.0)*r20*sj6*x6698))+(((-1.0)*x6685*x6696))+(((-1.0)*r22*x6695)));
evalcond[3]=(((sj0*x6689))+(((-1.0)*x6699*x6712))+x6711+(((-1.0)*x6687*x6697))+(((-1.0)*x6703*x6704))+((cj0*x6688)));
evalcond[4]=(((x6692*x6700))+((x6691*x6700))+(((-1.0)*x6713))+(((-1.0)*x6690*x6708))+(((-1.0)*x6690*x6701))+((r12*x6693))+(((-1.0)*r02*sj0*x6695)));
evalcond[5]=(((cj5*r12*sj0))+((x6685*x6705))+x6710+((x6690*x6691))+((x6690*x6692))+((x6700*x6701))+((x6700*x6708))+((r02*x6693)));
evalcond[6]=((-0.0001)+((x6686*x6703))+((x6689*x6694))+(((-1.0)*py*x6704))+(((-1.0)*x6687*x6694))+((sj3*x6709))+((px*sj0))+(((0.09746)*sj3))+(((0.0718)*x6713))+(((-1.0)*x6686*x6688)));
evalcond[7]=((0.1255)+(((0.0718)*x6685*x6696))+(((0.1158)*cj2))+(((-0.02626)*x6706))+(((-0.0718)*x6712))+((x6696*x6709))+pz+(((0.02626)*x6714))+(((0.0009)*sj2))+(((0.09746)*x6696))+(((0.02626)*x6707)));
evalcond[8]=((-0.001)+(((-1.0)*x6705*x6709))+(((-1.0)*x6702*x6714))+(((-0.1158)*sj2))+(((-0.0718)*x6710))+(((-1.0)*x6694*x6703))+(((0.0009)*cj2))+((x6688*x6694))+(((0.02626)*x6711))+((x6686*x6689))+(((-1.0)*px*x6704))+(((-1.0)*py*x6697))+(((-1.0)*x6686*x6687))+(((-0.09746)*x6705)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6715=cj2*cj2;
IkReal x6716=(cj2*cj3);
IkReal x6717=(cj6*r20);
IkReal x6718=(cj5*r22);
IkReal x6719=(r20*sj5);
IkReal x6720=((1.0)*sj2);
IkReal x6721=(sj6*x6720);
IkReal x6722=(cj6*r21*sj5);
CheckValue<IkReal> x6723=IKPowWithIntegerCheck(IKsign(((-1.0)+x6715+(((-1.0)*x6715*(cj3*cj3))))),-1);
if(!x6723.valid){
continue;
}
CheckValue<IkReal> x6724 = IKatan2WithCheck(IkReal(((((-1.0)*x6718*x6720))+(((-1.0)*r21*sj6*x6716))+((x6716*x6717))+(((-1.0)*x6719*x6721))+(((-1.0)*x6720*x6722)))),((((-1.0)*r21*x6721))+((sj6*x6716*x6719))+((x6716*x6718))+((x6716*x6722))+((sj2*x6717))),IKFAST_ATAN2_MAGTHRESH);
if(!x6724.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6723.value)))+(x6724.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6725=IKsin(j4);
IkReal x6726=IKcos(j4);
IkReal x6727=((0.02626)*sj0);
IkReal x6728=(cj6*r10);
IkReal x6729=(r01*sj6);
IkReal x6730=(r11*sj6);
IkReal x6731=(sj0*sj5);
IkReal x6732=(cj6*r11);
IkReal x6733=(r10*sj6);
IkReal x6734=(cj0*cj5);
IkReal x6735=((0.02626)*cj0);
IkReal x6736=((1.0)*cj5);
IkReal x6737=(cj2*cj3);
IkReal x6738=((1.0)*sj0);
IkReal x6739=((1.0)*sj5);
IkReal x6740=((1.0)*cj3);
IkReal x6741=(cj0*sj5);
IkReal x6742=(r00*sj6);
IkReal x6743=((0.0718)*cj3);
IkReal x6744=(cj6*r00);
IkReal x6745=((1.0)*cj0);
IkReal x6746=(cj3*sj2);
IkReal x6747=(r21*sj6);
IkReal x6748=(cj6*r20);
IkReal x6749=(cj6*r01);
IkReal x6750=((0.02626)*x6725);
IkReal x6751=(cj2*x6725);
IkReal x6752=(cj2*x6726);
IkReal x6753=(sj2*x6725);
IkReal x6754=(sj3*x6726);
IkReal x6755=(sj2*x6726);
evalcond[0]=((((-1.0)*x6747))+x6748+x6755+((x6725*x6737)));
evalcond[1]=(((sj3*x6725))+((sj0*x6744))+(((-1.0)*x6728*x6745))+(((-1.0)*x6729*x6738))+((cj0*x6730)));
evalcond[2]=((((-1.0)*r22*x6736))+(((-1.0)*cj6*r21*x6739))+(((-1.0)*r20*sj6*x6739))+(((-1.0)*x6726*x6737))+x6753);
evalcond[3]=((((-1.0)*x6744*x6745))+((cj0*x6729))+((sj0*x6730))+(((-1.0)*x6728*x6738))+x6752+(((-1.0)*x6740*x6753)));
evalcond[4]=(((x6732*x6741))+((x6733*x6741))+(((-1.0)*x6754))+((r12*x6734))+(((-1.0)*r02*sj0*x6736))+(((-1.0)*x6731*x6742))+(((-1.0)*x6731*x6749)));
evalcond[5]=(((cj5*r12*sj0))+((x6726*x6746))+((x6731*x6732))+((x6731*x6733))+((x6741*x6749))+((x6741*x6742))+x6751+((r02*x6734)));
evalcond[6]=((-0.0001)+(((-1.0)*py*x6745))+((x6730*x6735))+(((-1.0)*x6728*x6735))+((x6727*x6744))+((px*sj0))+(((0.09746)*sj3))+((sj3*x6750))+(((0.0718)*x6754))+(((-1.0)*x6727*x6729)));
evalcond[7]=((0.1255)+(((0.09746)*x6737))+(((0.1158)*cj2))+(((0.02626)*x6748))+(((0.0718)*x6726*x6737))+(((-0.02626)*x6747))+((x6737*x6750))+(((-0.0718)*x6753))+pz+(((0.02626)*x6755))+(((0.0009)*sj2)));
evalcond[8]=((-0.001)+(((-1.0)*py*x6738))+(((-0.09746)*x6746))+((x6729*x6735))+(((-0.1158)*sj2))+(((-1.0)*x6746*x6750))+((x6727*x6730))+(((-0.0718)*x6751))+(((0.0009)*cj2))+(((0.02626)*x6752))+(((-1.0)*x6743*x6755))+(((-1.0)*px*x6745))+(((-1.0)*x6727*x6728))+(((-1.0)*x6735*x6744)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x6756=(cj5*sj0);
IkReal x6757=((1.0)*cj5*cj6);
IkReal x6758=((1.0)*cj5*sj6);
CheckValue<IkReal> x6759=IKPowWithIntegerCheck(cj2,-1);
if(!x6759.valid){
continue;
}
if( IKabs(((x6759.value)*(((((-1.0)*r20*x6758))+((r22*sj5))+(((-1.0)*r21*x6757)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r01*x6756))+(((-1.0)*cj0*r10*x6758))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))+(((-1.0)*cj0*r11*x6757))+((r00*sj6*x6756)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6759.value)*(((((-1.0)*r20*x6758))+((r22*sj5))+(((-1.0)*r21*x6757))))))+IKsqr((((cj6*r01*x6756))+(((-1.0)*cj0*r10*x6758))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))+(((-1.0)*cj0*r11*x6757))+((r00*sj6*x6756))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x6759.value)*(((((-1.0)*r20*x6758))+((r22*sj5))+(((-1.0)*r21*x6757))))), (((cj6*r01*x6756))+(((-1.0)*cj0*r10*x6758))+((cj0*r12*sj5))+(((-1.0)*r02*sj0*sj5))+(((-1.0)*cj0*r11*x6757))+((r00*sj6*x6756))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x6760=IKsin(j3);
IkReal x6761=(cj5*cj6);
IkReal x6762=((1.0)*sj5);
IkReal x6763=((1.0)*cj0);
IkReal x6764=(cj0*sj5);
IkReal x6765=(cj5*sj6);
IkReal x6766=(r10*x6765);
IkReal x6767=((1.0)*r11*x6761);
evalcond[0]=((((-1.0)*r22*x6762))+((r20*x6765))+((cj2*x6760))+((r21*x6761)));
evalcond[1]=(((r01*sj0*x6761))+((r12*x6764))+(((-1.0)*r02*sj0*x6762))+((r00*sj0*x6765))+(((-1.0)*r11*x6761*x6763))+(((-1.0)*(IKcos(j3))))+(((-1.0)*x6763*x6766)));
evalcond[2]=((((-1.0)*sj0*x6767))+(((-1.0)*sj0*x6766))+((r12*sj0*sj5))+(((-1.0)*sj2*x6760))+(((-1.0)*r00*x6763*x6765))+(((-1.0)*r01*x6761*x6763))+((r02*x6764)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
IkReal x6768=cj2*cj2;
IkReal x6769=(cj2*cj3);
IkReal x6770=(cj6*r20);
IkReal x6771=(cj6*r21);
IkReal x6772=(cj5*r22);
IkReal x6773=(r20*sj6);
IkReal x6774=((1.0)*sj2*sj5);
IkReal x6775=((1.0)*r21*sj6);
IkReal x6776=((-1.0)+x6768+(((-1.0)*x6768*(cj3*cj3))));
j4eval[0]=x6776;
j4eval[1]=((IKabs(((((-1.0)*x6769*x6775))+((x6769*x6770))+(((-1.0)*x6773*x6774))+(((-1.0)*x6771*x6774))+(((-1.0)*sj2*x6772)))))+(IKabs(((((-1.0)*sj2*x6775))+((sj2*x6770))+((x6769*x6772))+((sj5*x6769*x6773))+((sj5*x6769*x6771))))));
j4eval[2]=IKsign(x6776);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
j4eval[0]=sj3;
j4eval[1]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x6777=(cj5*cj6);
IkReal x6778=(cj0*sj6);
IkReal x6779=(r01*sj0);
IkReal x6780=((1.0)*sj0);
IkReal x6781=((1.0)*cj5);
IkReal x6782=(cj0*r12);
IkReal x6783=(r02*sj5);
IkReal x6784=((1.0)*sj5);
IkReal x6785=(cj5*sj6);
IkReal x6786=((1.0)*cj0);
IkReal x6787=(cj0*cj6*r10);
IkReal x6788=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=(((r20*x6785))+((r21*x6777))+(((-1.0)*r22*x6784)));
evalcond[2]=(((r11*x6778))+x6788+(((-1.0)*cj6*r10*x6786))+(((-1.0)*sj6*x6779)));
evalcond[3]=(((cj0*x6783))+(((-1.0)*r01*x6777*x6786))+(((-1.0)*r00*x6778*x6781))+(((-1.0)*r11*x6777*x6780))+((r12*sj0*sj5))+(((-1.0)*r10*x6780*x6785)));
evalcond[4]=((-1.0)+((sj5*x6782))+((x6777*x6779))+(((-1.0)*r11*x6777*x6786))+((r00*sj0*x6785))+(((-1.0)*r10*x6778*x6781))+(((-1.0)*x6780*x6783)));
evalcond[5]=((((-1.0)*cj6*x6779*x6784))+(((-1.0)*cj5*r02*x6780))+((cj5*x6782))+((cj0*cj6*r11*sj5))+((r10*sj5*x6778))+(((-1.0)*r00*sj5*sj6*x6780)));
evalcond[6]=((-0.0001)+(((-1.0)*py*x6786))+(((0.02626)*r11*x6778))+(((0.02626)*x6788))+(((-0.02626)*x6787))+(((-0.02626)*sj6*x6779))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6789=(cj2*r21);
IkReal x6790=(cj6*sj5);
IkReal x6791=(cj5*r22);
IkReal x6792=(r21*sj2);
IkReal x6793=((1.0)*cj2);
IkReal x6794=(cj6*r20);
IkReal x6795=(r20*sj5*sj6);
if( IKabs(((((-1.0)*x6793*x6794))+((sj6*x6789))+((sj2*x6795))+((sj2*x6791))+((x6790*x6792)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj2*x6794))+(((-1.0)*x6793*x6795))+(((-1.0)*x6789*x6790))+(((-1.0)*x6791*x6793))+((sj6*x6792)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x6793*x6794))+((sj6*x6789))+((sj2*x6795))+((sj2*x6791))+((x6790*x6792))))+IKsqr(((((-1.0)*sj2*x6794))+(((-1.0)*x6793*x6795))+(((-1.0)*x6789*x6790))+(((-1.0)*x6791*x6793))+((sj6*x6792))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x6793*x6794))+((sj6*x6789))+((sj2*x6795))+((sj2*x6791))+((x6790*x6792))), ((((-1.0)*sj2*x6794))+(((-1.0)*x6793*x6795))+(((-1.0)*x6789*x6790))+(((-1.0)*x6791*x6793))+((sj6*x6792))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x6796=IKsin(j4);
IkReal x6797=IKcos(j4);
IkReal x6798=(cj6*sj0);
IkReal x6799=(sj0*sj6);
IkReal x6800=((0.02626)*cj6);
IkReal x6801=(r21*sj6);
IkReal x6802=(cj0*r00);
IkReal x6803=(sj5*sj6);
IkReal x6804=((1.0)*cj6);
IkReal x6805=(sj2*x6797);
IkReal x6806=(cj2*x6796);
IkReal x6807=((0.02626)*x6796);
IkReal x6808=(cj2*x6797);
IkReal x6809=(sj2*x6796);
IkReal x6810=(cj0*r01*sj6);
IkReal x6811=(x6806+x6805);
evalcond[0]=((((-1.0)*x6801))+x6811+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x6803))+(((-1.0)*x6808))+x6809+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x6804)));
evalcond[2]=((((-1.0)*r10*x6798))+(((-1.0)*x6802*x6804))+(((-1.0)*x6809))+x6810+x6808+((r11*x6799)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((r11*sj5*x6798))+x6811+((cj0*cj6*r01*sj5))+((x6802*x6803))+((r10*sj5*x6799)));
evalcond[4]=((0.1255)+(((0.02626)*x6806))+(((0.02626)*x6805))+((r20*x6800))+pz+(((0.0718)*x6808))+(((0.21326)*cj2))+(((-0.0718)*x6809))+(((0.0009)*sj2))+(((-0.02626)*x6801)));
evalcond[5]=((-0.001)+(((0.02626)*r11*x6799))+(((-0.02626)*r10*x6798))+(((0.02626)*x6808))+(((-1.0)*sj2*x6807))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((0.02626)*x6810))+(((-1.0)*py*sj0))+(((-0.0718)*x6805))+(((-0.0718)*x6806))+(((-1.0)*x6800*x6802))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6812=(cj5*cj6);
IkReal x6813=(cj0*sj6);
IkReal x6814=(r01*sj0);
IkReal x6815=((1.0)*sj0);
IkReal x6816=((1.0)*cj5);
IkReal x6817=(cj0*r12);
IkReal x6818=(r02*sj5);
IkReal x6819=((1.0)*sj5);
IkReal x6820=(cj5*sj6);
IkReal x6821=((1.0)*cj0);
IkReal x6822=(cj0*cj6*r10);
IkReal x6823=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(((r20*x6820))+((r21*x6812))+(((-1.0)*r22*x6819)));
evalcond[2]=(((r11*x6813))+(((-1.0)*cj6*r10*x6821))+x6823+(((-1.0)*sj6*x6814)));
evalcond[3]=((((-1.0)*r10*x6815*x6820))+(((-1.0)*r01*x6812*x6821))+((cj0*x6818))+((r12*sj0*sj5))+(((-1.0)*r00*x6813*x6816))+(((-1.0)*r11*x6812*x6815)));
evalcond[4]=((1.0)+((x6812*x6814))+((r00*sj0*x6820))+(((-1.0)*x6815*x6818))+(((-1.0)*r11*x6812*x6821))+((sj5*x6817))+(((-1.0)*r10*x6813*x6816)));
evalcond[5]=((((-1.0)*cj6*x6814*x6819))+(((-1.0)*r00*sj5*sj6*x6815))+((cj0*cj6*r11*sj5))+((cj5*x6817))+((r10*sj5*x6813))+(((-1.0)*cj5*r02*x6815)));
evalcond[6]=((-0.0001)+(((0.02626)*x6823))+(((-1.0)*py*x6821))+((px*sj0))+(((-0.02626)*sj6*x6814))+(((0.02626)*r11*x6813))+(((-0.02626)*x6822)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6824=(cj5*r22);
IkReal x6825=(cj6*sj2);
IkReal x6826=(r21*sj5);
IkReal x6827=(r21*sj6);
IkReal x6828=(cj2*cj6);
IkReal x6829=(r20*sj5*sj6);
if( IKabs((((x6825*x6826))+(((-1.0)*cj2*x6827))+((sj2*x6829))+((sj2*x6824))+((r20*x6828)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj2*x6827))+(((-1.0)*r20*x6825))+((x6826*x6828))+((cj2*x6829))+((cj2*x6824)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x6825*x6826))+(((-1.0)*cj2*x6827))+((sj2*x6829))+((sj2*x6824))+((r20*x6828))))+IKsqr((((sj2*x6827))+(((-1.0)*r20*x6825))+((x6826*x6828))+((cj2*x6829))+((cj2*x6824))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x6825*x6826))+(((-1.0)*cj2*x6827))+((sj2*x6829))+((sj2*x6824))+((r20*x6828))), (((sj2*x6827))+(((-1.0)*r20*x6825))+((x6826*x6828))+((cj2*x6829))+((cj2*x6824))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x6830=IKcos(j4);
IkReal x6831=IKsin(j4);
IkReal x6832=(r11*sj0);
IkReal x6833=(cj6*sj5);
IkReal x6834=(r10*sj0);
IkReal x6835=(sj5*sj6);
IkReal x6836=(cj6*r20);
IkReal x6837=((1.0)*cj6);
IkReal x6838=((0.02626)*sj6);
IkReal x6839=(cj0*r00);
IkReal x6840=((0.02626)*cj6);
IkReal x6841=((1.0)*r21);
IkReal x6842=(cj0*r01);
IkReal x6843=(cj2*x6830);
IkReal x6844=(sj2*x6831);
IkReal x6845=((0.02626)*x6831);
IkReal x6846=(cj2*x6831);
IkReal x6847=((0.0718)*x6830);
IkReal x6848=(sj2*x6830);
IkReal x6849=(x6843+x6844);
evalcond[0]=((((-1.0)*sj6*x6841))+x6836+x6848+(((-1.0)*x6846)));
evalcond[1]=((((-1.0)*r20*x6835))+x6849+(((-1.0)*cj5*r22))+(((-1.0)*x6833*x6841)));
evalcond[2]=(((sj6*x6842))+x6849+(((-1.0)*x6834*x6837))+(((-1.0)*x6837*x6839))+((sj6*x6832)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x6832*x6833))+((x6834*x6835))+x6846+(((-1.0)*x6848))+((x6833*x6842))+((x6835*x6839)));
evalcond[4]=((0.1255)+(((0.02626)*x6836))+(((0.02626)*x6848))+(((-0.0718)*x6844))+(((-0.0718)*x6843))+pz+(((0.01834)*cj2))+(((0.0009)*sj2))+(((-1.0)*r21*x6838))+(((-1.0)*cj2*x6845)));
evalcond[5]=((-0.001)+((x6838*x6842))+(((-0.01834)*sj2))+(((-1.0)*x6839*x6840))+((x6832*x6838))+(((-1.0)*x6834*x6840))+(((0.0009)*cj2))+(((0.02626)*x6843))+(((0.02626)*x6844))+(((-0.0718)*x6846))+((sj2*x6847))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6850=(cj0*sj5);
IkReal x6851=(cj5*cj6);
IkReal x6852=((1.0)*sj5);
IkReal x6853=((1.0)*cj0);
IkReal x6854=((1.0)*sj0);
IkReal x6855=(cj5*sj6);
IkReal x6856=(r10*x6855);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=(sj3+((r21*x6851))+((r20*x6855))+(((-1.0)*r22*x6852)));
evalcond[2]=((((-1.0)*r00*x6853*x6855))+((r02*x6850))+((r12*sj0*sj5))+(((-1.0)*r11*x6851*x6854))+(((-1.0)*x6854*x6856))+(((-1.0)*r01*x6851*x6853)));
evalcond[3]=(((r01*sj0*x6851))+((r12*x6850))+(((-1.0)*r11*x6851*x6853))+((r00*sj0*x6855))+(((-1.0)*r02*sj0*x6852))+(((-1.0)*cj3))+(((-1.0)*x6853*x6856)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x6857=((1.0)*sj5);
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*cj6*r21*x6857))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x6857))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
j4eval[0]=sj3;
j4eval[1]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6858=((1.0)*sj5);
CheckValue<IkReal> x6859=IKPowWithIntegerCheck(sj3,-1);
if(!x6859.valid){
continue;
}
CheckValue<IkReal> x6860=IKPowWithIntegerCheck(cj3,-1);
if(!x6860.valid){
continue;
}
if( IKabs(((x6859.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6860.value)*(((((-1.0)*cj6*r21*x6858))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x6858)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6859.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))+IKsqr(((x6860.value)*(((((-1.0)*cj6*r21*x6858))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x6858))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6859.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))), ((x6860.value)*(((((-1.0)*cj6*r21*x6858))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x6858))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6861=IKcos(j4);
IkReal x6862=IKsin(j4);
IkReal x6863=(r10*sj0);
IkReal x6864=((0.02626)*cj6);
IkReal x6865=(sj0*sj6);
IkReal x6866=(cj5*r12);
IkReal x6867=(sj5*sj6);
IkReal x6868=((0.02626)*r01);
IkReal x6869=(cj0*sj6);
IkReal x6870=(cj0*r10);
IkReal x6871=(r21*sj6);
IkReal x6872=((1.0)*cj5);
IkReal x6873=((1.0)*cj6);
IkReal x6874=(cj0*r00);
IkReal x6875=((1.0)*py);
IkReal x6876=(cj6*sj0);
IkReal x6877=(r11*sj5);
IkReal x6878=((0.02626)*r11);
IkReal x6879=(r01*sj5);
IkReal x6880=(cj0*cj6);
IkReal x6881=(cj3*x6861);
IkReal x6882=((0.02626)*x6862);
IkReal x6883=(sj3*x6861);
evalcond[0]=(((cj3*x6862))+(((-1.0)*x6871))+((cj6*r20)));
evalcond[1]=((((-1.0)*r21*sj5*x6873))+(((-1.0)*r22*x6872))+(((-1.0)*r20*x6867))+(((-1.0)*x6881)));
evalcond[2]=(((r11*x6865))+(((-1.0)*x6863*x6873))+x6861+(((-1.0)*x6873*x6874))+((r01*x6869)));
evalcond[3]=(((r11*x6869))+(((-1.0)*x6870*x6873))+((sj3*x6862))+(((-1.0)*r01*x6865))+((r00*x6876)));
evalcond[4]=((0.2413)+(((-0.02626)*x6871))+((cj3*x6882))+(((0.0718)*x6881))+pz+(((0.09746)*cj3))+((r20*x6864)));
evalcond[5]=(((sj0*x6866))+((cj0*cj5*r02))+((x6879*x6880))+((x6876*x6877))+x6862+((x6863*x6867))+((x6867*x6874)));
evalcond[6]=(((x6877*x6880))+(((-1.0)*r00*sj5*x6865))+((cj0*x6866))+(((-1.0)*r02*sj0*x6872))+(((-1.0)*sj0*x6873*x6879))+(((-1.0)*x6883))+((x6867*x6870)));
evalcond[7]=((-0.0001)+((x6865*x6878))+(((-1.0)*x6864*x6874))+(((-1.0)*x6863*x6864))+(((-0.0718)*x6862))+((x6868*x6869))+(((0.02626)*x6861))+(((-1.0)*sj0*x6875))+(((-1.0)*cj0*px)));
evalcond[8]=((-0.0001)+(((-1.0)*x6865*x6868))+((r00*sj0*x6864))+(((-1.0)*x6864*x6870))+(((0.0718)*x6883))+((x6869*x6878))+((px*sj0))+(((0.09746)*sj3))+((sj3*x6882))+(((-1.0)*cj0*x6875)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6884=((1.0)*sj6);
CheckValue<IkReal> x6885=IKPowWithIntegerCheck(cj3,-1);
if(!x6885.valid){
continue;
}
if( IKabs(((x6885.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x6884))+(((-1.0)*r11*sj0*x6884))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6885.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))+IKsqr((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x6884))+(((-1.0)*r11*sj0*x6884))+((cj0*cj6*r00))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6885.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))), (((cj6*r10*sj0))+(((-1.0)*cj0*r01*x6884))+(((-1.0)*r11*sj0*x6884))+((cj0*cj6*r00))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6886=IKcos(j4);
IkReal x6887=IKsin(j4);
IkReal x6888=(r10*sj0);
IkReal x6889=((0.02626)*cj6);
IkReal x6890=(sj0*sj6);
IkReal x6891=(cj5*r12);
IkReal x6892=(sj5*sj6);
IkReal x6893=((0.02626)*r01);
IkReal x6894=(cj0*sj6);
IkReal x6895=(cj0*r10);
IkReal x6896=(r21*sj6);
IkReal x6897=((1.0)*cj5);
IkReal x6898=((1.0)*cj6);
IkReal x6899=(cj0*r00);
IkReal x6900=((1.0)*py);
IkReal x6901=(cj6*sj0);
IkReal x6902=(r11*sj5);
IkReal x6903=((0.02626)*r11);
IkReal x6904=(r01*sj5);
IkReal x6905=(cj0*cj6);
IkReal x6906=(cj3*x6886);
IkReal x6907=((0.02626)*x6887);
IkReal x6908=(sj3*x6886);
evalcond[0]=((((-1.0)*x6896))+((cj3*x6887))+((cj6*r20)));
evalcond[1]=((((-1.0)*r21*sj5*x6898))+(((-1.0)*x6906))+(((-1.0)*r20*x6892))+(((-1.0)*r22*x6897)));
evalcond[2]=((((-1.0)*x6888*x6898))+x6886+(((-1.0)*x6898*x6899))+((r11*x6890))+((r01*x6894)));
evalcond[3]=(((r00*x6901))+(((-1.0)*x6895*x6898))+(((-1.0)*r01*x6890))+((sj3*x6887))+((r11*x6894)));
evalcond[4]=((0.2413)+((r20*x6889))+((cj3*x6907))+(((-0.02626)*x6896))+pz+(((0.0718)*x6906))+(((0.09746)*cj3)));
evalcond[5]=(((cj0*cj5*r02))+((x6892*x6899))+((x6888*x6892))+x6887+((x6901*x6902))+((sj0*x6891))+((x6904*x6905)));
evalcond[6]=((((-1.0)*sj0*x6898*x6904))+((x6892*x6895))+(((-1.0)*r02*sj0*x6897))+((cj0*x6891))+(((-1.0)*x6908))+(((-1.0)*r00*sj5*x6890))+((x6902*x6905)));
evalcond[7]=((-0.0001)+(((-1.0)*x6889*x6899))+((x6890*x6903))+((x6893*x6894))+(((-1.0)*x6888*x6889))+(((-0.0718)*x6887))+(((-1.0)*sj0*x6900))+(((0.02626)*x6886))+(((-1.0)*cj0*px)));
evalcond[8]=((-0.0001)+((r00*sj0*x6889))+(((-1.0)*x6889*x6895))+(((-1.0)*x6890*x6893))+((x6894*x6903))+(((-1.0)*cj0*x6900))+(((0.0718)*x6908))+((px*sj0))+(((0.09746)*sj3))+((sj3*x6907)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6909=((1.0)*sj5);
CheckValue<IkReal> x6910=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x6910.valid){
continue;
}
CheckValue<IkReal> x6911 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x6909))+(((-1.0)*r20*sj6*x6909))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x6911.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6910.value)))+(x6911.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6912=IKcos(j4);
IkReal x6913=IKsin(j4);
IkReal x6914=(r10*sj0);
IkReal x6915=((0.02626)*cj6);
IkReal x6916=(sj0*sj6);
IkReal x6917=(cj5*r12);
IkReal x6918=(sj5*sj6);
IkReal x6919=((0.02626)*r01);
IkReal x6920=(cj0*sj6);
IkReal x6921=(cj0*r10);
IkReal x6922=(r21*sj6);
IkReal x6923=((1.0)*cj5);
IkReal x6924=((1.0)*cj6);
IkReal x6925=(cj0*r00);
IkReal x6926=((1.0)*py);
IkReal x6927=(cj6*sj0);
IkReal x6928=(r11*sj5);
IkReal x6929=((0.02626)*r11);
IkReal x6930=(r01*sj5);
IkReal x6931=(cj0*cj6);
IkReal x6932=(cj3*x6912);
IkReal x6933=((0.02626)*x6913);
IkReal x6934=(sj3*x6912);
evalcond[0]=((((-1.0)*x6922))+((cj3*x6913))+((cj6*r20)));
evalcond[1]=((((-1.0)*x6932))+(((-1.0)*r22*x6923))+(((-1.0)*r20*x6918))+(((-1.0)*r21*sj5*x6924)));
evalcond[2]=(((r01*x6920))+(((-1.0)*x6924*x6925))+((r11*x6916))+x6912+(((-1.0)*x6914*x6924)));
evalcond[3]=(((sj3*x6913))+((r00*x6927))+((r11*x6920))+(((-1.0)*r01*x6916))+(((-1.0)*x6921*x6924)));
evalcond[4]=((0.2413)+((cj3*x6933))+pz+(((0.09746)*cj3))+(((0.0718)*x6932))+((r20*x6915))+(((-0.02626)*x6922)));
evalcond[5]=(((cj0*cj5*r02))+((x6927*x6928))+((x6914*x6918))+((sj0*x6917))+((x6930*x6931))+x6913+((x6918*x6925)));
evalcond[6]=((((-1.0)*r00*sj5*x6916))+(((-1.0)*x6934))+(((-1.0)*sj0*x6924*x6930))+((x6928*x6931))+((cj0*x6917))+(((-1.0)*r02*sj0*x6923))+((x6918*x6921)));
evalcond[7]=((-0.0001)+((x6919*x6920))+(((0.02626)*x6912))+(((-1.0)*sj0*x6926))+(((-0.0718)*x6913))+((x6916*x6929))+(((-1.0)*x6915*x6925))+(((-1.0)*cj0*px))+(((-1.0)*x6914*x6915)));
evalcond[8]=((-0.0001)+((r00*sj0*x6915))+((sj3*x6933))+(((-1.0)*x6916*x6919))+(((-1.0)*cj0*x6926))+((px*sj0))+(((0.09746)*sj3))+(((-1.0)*x6915*x6921))+(((0.0718)*x6934))+((x6920*x6929)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6935=(cj0*sj5);
IkReal x6936=(cj5*cj6);
IkReal x6937=((1.0)*sj5);
IkReal x6938=((1.0)*cj0);
IkReal x6939=((1.0)*sj0);
IkReal x6940=(cj5*sj6);
IkReal x6941=(r10*x6940);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj3))+(((-1.0)*r22*x6937))+((r20*x6940))+((r21*x6936)));
evalcond[2]=((((-1.0)*r11*x6936*x6939))+((r12*sj0*sj5))+((r02*x6935))+(((-1.0)*x6939*x6941))+(((-1.0)*r01*x6936*x6938))+(((-1.0)*r00*x6938*x6940)));
evalcond[3]=((((-1.0)*r02*sj0*x6937))+(((-1.0)*r11*x6936*x6938))+((r01*sj0*x6936))+(((-1.0)*x6938*x6941))+((r12*x6935))+((r00*sj0*x6940))+(((-1.0)*cj3)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=cj3;
j4eval[1]=IKsign(cj3);
j4eval[2]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=sj3;
j4eval[1]=cj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x6942=IKPowWithIntegerCheck(sj3,-1);
if(!x6942.valid){
continue;
}
CheckValue<IkReal> x6943=IKPowWithIntegerCheck(cj3,-1);
if(!x6943.valid){
continue;
}
if( IKabs(((x6942.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6943.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6942.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))+IKsqr(((x6943.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6942.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))), ((x6943.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6944=IKcos(j4);
IkReal x6945=IKsin(j4);
IkReal x6946=(cj6*sj0);
IkReal x6947=((0.02626)*r10);
IkReal x6948=(sj0*sj6);
IkReal x6949=(r11*sj5);
IkReal x6950=(r10*sj5);
IkReal x6951=((0.02626)*r01);
IkReal x6952=(cj0*sj6);
IkReal x6953=(cj0*cj6);
IkReal x6954=(r21*sj6);
IkReal x6955=((1.0)*cj5);
IkReal x6956=(cj6*r20);
IkReal x6957=((1.0)*r10);
IkReal x6958=((1.0)*r01);
IkReal x6959=(r00*sj5);
IkReal x6960=((1.0)*py);
IkReal x6961=(cj5*r12);
IkReal x6962=((1.0)*sj5);
IkReal x6963=((0.02626)*r00);
IkReal x6964=((0.02626)*r11);
IkReal x6965=(cj3*x6945);
IkReal x6966=(sj3*x6945);
IkReal x6967=(cj3*x6944);
IkReal x6968=((1.0)*x6944);
evalcond[0]=((((-1.0)*x6965))+(((-1.0)*x6954))+x6956);
evalcond[1]=((((-1.0)*r20*sj6*x6962))+(((-1.0)*cj6*r21*x6962))+(((-1.0)*r22*x6955))+x6967);
evalcond[2]=((((-1.0)*r00*x6953))+(((-1.0)*x6968))+((r01*x6952))+(((-1.0)*x6946*x6957))+((r11*x6948)));
evalcond[3]=((((-1.0)*x6948*x6958))+x6966+((r00*x6946))+((r11*x6952))+(((-1.0)*x6953*x6957)));
evalcond[4]=((0.0097)+(((0.02626)*x6956))+(((-0.02626)*x6965))+pz+(((-0.09746)*cj3))+(((-0.02626)*x6954))+(((-0.0718)*x6967)));
evalcond[5]=(((x6952*x6959))+((cj0*cj5*r02))+(((-1.0)*x6945))+((sj0*x6961))+((x6946*x6949))+((r01*sj5*x6953))+((x6948*x6950)));
evalcond[6]=(((x6949*x6953))+(((-1.0)*sj5*x6946*x6958))+(((-1.0)*r02*sj0*x6955))+((cj0*x6961))+((x6950*x6952))+(((-1.0)*sj3*x6968))+(((-1.0)*x6948*x6959)));
evalcond[7]=((-0.0019)+(((-1.0)*x6953*x6963))+(((0.0718)*x6945))+((x6948*x6964))+((x6951*x6952))+(((-1.0)*sj0*x6960))+(((-0.02626)*x6944))+(((-1.0)*x6946*x6947))+(((-1.0)*cj0*px)));
evalcond[8]=((-0.0001)+(((-1.0)*x6948*x6951))+(((-1.0)*cj0*x6960))+(((0.0718)*sj3*x6944))+(((-1.0)*x6947*x6953))+((x6952*x6964))+((px*sj0))+(((0.09746)*sj3))+(((0.02626)*x6966))+((x6946*x6963)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6969=((1.0)*cj6);
CheckValue<IkReal> x6970=IKPowWithIntegerCheck(cj3,-1);
if(!x6970.valid){
continue;
}
if( IKabs(((x6970.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x6969))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x6969)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6970.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x6969))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x6969))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6970.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))), (((r11*sj0*sj6))+(((-1.0)*r10*sj0*x6969))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x6969))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6971=IKcos(j4);
IkReal x6972=IKsin(j4);
IkReal x6973=(cj6*sj0);
IkReal x6974=((0.02626)*r10);
IkReal x6975=(sj0*sj6);
IkReal x6976=(r11*sj5);
IkReal x6977=(r10*sj5);
IkReal x6978=((0.02626)*r01);
IkReal x6979=(cj0*sj6);
IkReal x6980=(cj0*cj6);
IkReal x6981=(r21*sj6);
IkReal x6982=((1.0)*cj5);
IkReal x6983=(cj6*r20);
IkReal x6984=((1.0)*r10);
IkReal x6985=((1.0)*r01);
IkReal x6986=(r00*sj5);
IkReal x6987=((1.0)*py);
IkReal x6988=(cj5*r12);
IkReal x6989=((1.0)*sj5);
IkReal x6990=((0.02626)*r00);
IkReal x6991=((0.02626)*r11);
IkReal x6992=(cj3*x6972);
IkReal x6993=(sj3*x6972);
IkReal x6994=(cj3*x6971);
IkReal x6995=((1.0)*x6971);
evalcond[0]=((((-1.0)*x6992))+(((-1.0)*x6981))+x6983);
evalcond[1]=((((-1.0)*r20*sj6*x6989))+(((-1.0)*r22*x6982))+x6994+(((-1.0)*cj6*r21*x6989)));
evalcond[2]=(((r01*x6979))+(((-1.0)*x6973*x6984))+((r11*x6975))+(((-1.0)*r00*x6980))+(((-1.0)*x6995)));
evalcond[3]=((((-1.0)*x6975*x6985))+((r00*x6973))+x6993+((r11*x6979))+(((-1.0)*x6980*x6984)));
evalcond[4]=((0.0097)+(((-0.02626)*x6981))+(((0.02626)*x6983))+pz+(((-0.09746)*cj3))+(((-0.0718)*x6994))+(((-0.02626)*x6992)));
evalcond[5]=((((-1.0)*x6972))+((x6975*x6977))+((cj0*cj5*r02))+((r01*sj5*x6980))+((x6979*x6986))+((sj0*x6988))+((x6973*x6976)));
evalcond[6]=((((-1.0)*sj5*x6973*x6985))+((x6976*x6980))+(((-1.0)*sj3*x6995))+(((-1.0)*x6975*x6986))+((cj0*x6988))+((x6977*x6979))+(((-1.0)*r02*sj0*x6982)));
evalcond[7]=((-0.0019)+(((-1.0)*sj0*x6987))+(((0.0718)*x6972))+((x6978*x6979))+(((-1.0)*x6980*x6990))+(((-0.02626)*x6971))+(((-1.0)*x6973*x6974))+(((-1.0)*cj0*px))+((x6975*x6991)));
evalcond[8]=((-0.0001)+(((0.0718)*sj3*x6971))+(((-1.0)*x6975*x6978))+((x6973*x6990))+(((-1.0)*cj0*x6987))+((px*sj0))+(((0.09746)*sj3))+(((-1.0)*x6974*x6980))+((x6979*x6991))+(((0.02626)*x6993)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x6996 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x6996.valid){
continue;
}
CheckValue<IkReal> x6997=IKPowWithIntegerCheck(IKsign(cj3),-1);
if(!x6997.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x6996.value)+(((1.5707963267949)*(x6997.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x6998=IKcos(j4);
IkReal x6999=IKsin(j4);
IkReal x7000=(cj6*sj0);
IkReal x7001=((0.02626)*r10);
IkReal x7002=(sj0*sj6);
IkReal x7003=(r11*sj5);
IkReal x7004=(r10*sj5);
IkReal x7005=((0.02626)*r01);
IkReal x7006=(cj0*sj6);
IkReal x7007=(cj0*cj6);
IkReal x7008=(r21*sj6);
IkReal x7009=((1.0)*cj5);
IkReal x7010=(cj6*r20);
IkReal x7011=((1.0)*r10);
IkReal x7012=((1.0)*r01);
IkReal x7013=(r00*sj5);
IkReal x7014=((1.0)*py);
IkReal x7015=(cj5*r12);
IkReal x7016=((1.0)*sj5);
IkReal x7017=((0.02626)*r00);
IkReal x7018=((0.02626)*r11);
IkReal x7019=(cj3*x6999);
IkReal x7020=(sj3*x6999);
IkReal x7021=(cj3*x6998);
IkReal x7022=((1.0)*x6998);
evalcond[0]=((((-1.0)*x7008))+x7010+(((-1.0)*x7019)));
evalcond[1]=((((-1.0)*r22*x7009))+x7021+(((-1.0)*r20*sj6*x7016))+(((-1.0)*cj6*r21*x7016)));
evalcond[2]=(((r11*x7002))+(((-1.0)*r00*x7007))+((r01*x7006))+(((-1.0)*x7022))+(((-1.0)*x7000*x7011)));
evalcond[3]=(x7020+((r11*x7006))+((r00*x7000))+(((-1.0)*x7007*x7011))+(((-1.0)*x7002*x7012)));
evalcond[4]=((0.0097)+(((-0.02626)*x7019))+(((-0.02626)*x7008))+pz+(((-0.09746)*cj3))+(((0.02626)*x7010))+(((-0.0718)*x7021)));
evalcond[5]=(((r01*sj5*x7007))+((x7000*x7003))+(((-1.0)*x6999))+((cj0*cj5*r02))+((x7006*x7013))+((x7002*x7004))+((sj0*x7015)));
evalcond[6]=((((-1.0)*sj3*x7022))+((cj0*x7015))+(((-1.0)*r02*sj0*x7009))+((x7003*x7007))+(((-1.0)*sj5*x7000*x7012))+((x7004*x7006))+(((-1.0)*x7002*x7013)));
evalcond[7]=((-0.0019)+(((0.0718)*x6999))+((x7005*x7006))+(((-1.0)*sj0*x7014))+((x7002*x7018))+(((-1.0)*x7007*x7017))+(((-1.0)*x7000*x7001))+(((-0.02626)*x6998))+(((-1.0)*cj0*px)));
evalcond[8]=((-0.0001)+(((0.0718)*sj3*x6998))+(((-1.0)*x7002*x7005))+((x7006*x7018))+(((0.02626)*x7020))+((x7000*x7017))+(((-1.0)*cj0*x7014))+((px*sj0))+(((-1.0)*x7001*x7007))+(((0.09746)*sj3)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7023=(cj0*sj5);
IkReal x7024=(cj5*cj6);
IkReal x7025=((1.0)*sj5);
IkReal x7026=((1.0)*cj0);
IkReal x7027=((1.0)*sj0);
IkReal x7028=(cj5*sj6);
IkReal x7029=(r10*x7028);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x7025))+cj2+((r20*x7028))+((r21*x7024)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*x7027*x7029))+((r12*sj0*sj5))+((r02*x7023))+(((-1.0)*r00*x7026*x7028))+(((-1.0)*r11*x7024*x7027))+(((-1.0)*r01*x7024*x7026)));
evalcond[3]=(((r12*x7023))+(((-1.0)*x7026*x7029))+(((-1.0)*r02*sj0*x7025))+(((-1.0)*r11*x7024*x7026))+((r01*sj0*x7024))+((r00*sj0*x7028)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=1.0;
cj3=0;
j3=1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7030=((1.0)*sj6);
CheckValue<IkReal> x7031=IKPowWithIntegerCheck(sj2,-1);
if(!x7031.valid){
continue;
}
CheckValue<IkReal> x7032=IKPowWithIntegerCheck(cj2,-1);
if(!x7032.valid){
continue;
}
if( IKabs(((x7031.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7032.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x7030))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x7030)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7031.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x7032.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x7030))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x7030))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7031.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x7032.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x7030))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x7030))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7033=IKsin(j4);
IkReal x7034=IKcos(j4);
IkReal x7035=((0.02626)*sj0);
IkReal x7036=(cj6*r10);
IkReal x7037=(r01*sj6);
IkReal x7038=(r11*sj0);
IkReal x7039=(cj0*cj5);
IkReal x7040=(cj6*sj5);
IkReal x7041=((0.02626)*cj0);
IkReal x7042=(cj0*sj6);
IkReal x7043=(r21*sj6);
IkReal x7044=((1.0)*sj0);
IkReal x7045=(cj6*r20);
IkReal x7046=(r00*sj5);
IkReal x7047=(cj6*r00);
IkReal x7048=((1.0)*cj0);
IkReal x7049=(r11*sj6);
IkReal x7050=(r10*sj5*sj6);
IkReal x7051=(cj2*x7033);
IkReal x7052=(cj2*x7034);
IkReal x7053=(sj2*x7033);
IkReal x7054=(sj2*x7034);
evalcond[0]=(x7054+x7045+(((-1.0)*x7043)));
evalcond[1]=(x7053+(((-1.0)*r21*x7040))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x7033+((sj0*x7047))+((r11*x7042))+(((-1.0)*x7036*x7048))+(((-1.0)*x7037*x7044)));
evalcond[3]=(x7052+(((-1.0)*x7036*x7044))+((sj6*x7038))+(((-1.0)*x7047*x7048))+((cj0*x7037)));
evalcond[4]=((0.1255)+(((0.02626)*x7054))+(((-0.0718)*x7053))+(((0.1158)*cj2))+(((0.02626)*x7045))+pz+(((-0.02626)*x7043))+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+x7051+((sj0*x7050))+((cj0*r01*x7040))+((r02*x7039))+((x7042*x7046))+((x7038*x7040)));
evalcond[6]=((((-1.0)*r01*x7040*x7044))+(((-1.0)*cj5*r02*x7044))+((r12*x7039))+(((-1.0)*x7034))+((r10*sj5*x7042))+((cj0*r11*x7040))+(((-1.0)*sj6*x7044*x7046)));
evalcond[7]=((0.09736)+(((0.0718)*x7034))+((x7041*x7049))+(((-1.0)*py*x7048))+(((-1.0)*x7035*x7037))+(((-1.0)*x7036*x7041))+((x7035*x7047))+(((0.02626)*x7033))+((px*sj0)));
evalcond[8]=((-0.001)+(((0.02626)*x7052))+(((-0.1158)*sj2))+(((-0.0718)*x7051))+(((-1.0)*py*x7044))+(((-1.0)*x7035*x7036))+((x7035*x7049))+((x7037*x7041))+(((0.0009)*cj2))+(((-1.0)*x7041*x7047))+(((-1.0)*px*x7048)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7055=((1.0)*cj6);
CheckValue<IkReal> x7056=IKPowWithIntegerCheck(sj2,-1);
if(!x7056.valid){
continue;
}
if( IKabs((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*r00*sj0*x7055)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7056.value)*((((r21*sj6))+(((-1.0)*r20*x7055)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*r00*sj0*x7055))))+IKsqr(((x7056.value)*((((r21*sj6))+(((-1.0)*r20*x7055))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*r00*sj0*x7055))), ((x7056.value)*((((r21*sj6))+(((-1.0)*r20*x7055))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7057=IKsin(j4);
IkReal x7058=IKcos(j4);
IkReal x7059=((0.02626)*sj0);
IkReal x7060=(cj6*r10);
IkReal x7061=(r01*sj6);
IkReal x7062=(r11*sj0);
IkReal x7063=(cj0*cj5);
IkReal x7064=(cj6*sj5);
IkReal x7065=((0.02626)*cj0);
IkReal x7066=(cj0*sj6);
IkReal x7067=(r21*sj6);
IkReal x7068=((1.0)*sj0);
IkReal x7069=(cj6*r20);
IkReal x7070=(r00*sj5);
IkReal x7071=(cj6*r00);
IkReal x7072=((1.0)*cj0);
IkReal x7073=(r11*sj6);
IkReal x7074=(r10*sj5*sj6);
IkReal x7075=(cj2*x7057);
IkReal x7076=(cj2*x7058);
IkReal x7077=(sj2*x7057);
IkReal x7078=(sj2*x7058);
evalcond[0]=(x7078+x7069+(((-1.0)*x7067)));
evalcond[1]=(x7077+(((-1.0)*cj5*r22))+(((-1.0)*r21*x7064))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x7057+(((-1.0)*x7060*x7072))+(((-1.0)*x7061*x7068))+((sj0*x7071))+((r11*x7066)));
evalcond[3]=(x7076+((cj0*x7061))+(((-1.0)*x7071*x7072))+(((-1.0)*x7060*x7068))+((sj6*x7062)));
evalcond[4]=((0.1255)+(((-0.02626)*x7067))+(((0.1158)*cj2))+pz+(((0.02626)*x7069))+(((-0.0718)*x7077))+(((0.02626)*x7078))+(((0.0009)*sj2)));
evalcond[5]=(((x7062*x7064))+((cj5*r12*sj0))+x7075+((r02*x7063))+((cj0*r01*x7064))+((x7066*x7070))+((sj0*x7074)));
evalcond[6]=(((r12*x7063))+((r10*sj5*x7066))+((cj0*r11*x7064))+(((-1.0)*x7058))+(((-1.0)*cj5*r02*x7068))+(((-1.0)*r01*x7064*x7068))+(((-1.0)*sj6*x7068*x7070)));
evalcond[7]=((0.09736)+(((0.02626)*x7057))+(((-1.0)*x7059*x7061))+(((0.0718)*x7058))+((x7059*x7071))+(((-1.0)*x7060*x7065))+((x7065*x7073))+((px*sj0))+(((-1.0)*py*x7072)));
evalcond[8]=((-0.001)+(((-1.0)*x7059*x7060))+(((-0.1158)*sj2))+((x7059*x7073))+(((-1.0)*x7065*x7071))+((x7061*x7065))+(((0.0009)*cj2))+(((-1.0)*px*x7072))+(((-1.0)*py*x7068))+(((-0.0718)*x7075))+(((0.02626)*x7076)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x7079=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x7079.valid){
continue;
}
CheckValue<IkReal> x7080 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x7080.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7079.value)))+(x7080.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7081=IKsin(j4);
IkReal x7082=IKcos(j4);
IkReal x7083=((0.02626)*sj0);
IkReal x7084=(cj6*r10);
IkReal x7085=(r01*sj6);
IkReal x7086=(r11*sj0);
IkReal x7087=(cj0*cj5);
IkReal x7088=(cj6*sj5);
IkReal x7089=((0.02626)*cj0);
IkReal x7090=(cj0*sj6);
IkReal x7091=(r21*sj6);
IkReal x7092=((1.0)*sj0);
IkReal x7093=(cj6*r20);
IkReal x7094=(r00*sj5);
IkReal x7095=(cj6*r00);
IkReal x7096=((1.0)*cj0);
IkReal x7097=(r11*sj6);
IkReal x7098=(r10*sj5*sj6);
IkReal x7099=(cj2*x7081);
IkReal x7100=(cj2*x7082);
IkReal x7101=(sj2*x7081);
IkReal x7102=(sj2*x7082);
evalcond[0]=(x7102+(((-1.0)*x7091))+x7093);
evalcond[1]=(x7101+(((-1.0)*r21*x7088))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((r11*x7090))+x7081+(((-1.0)*x7084*x7096))+(((-1.0)*x7085*x7092))+((sj0*x7095)));
evalcond[3]=(x7100+((sj6*x7086))+(((-1.0)*x7084*x7092))+(((-1.0)*x7095*x7096))+((cj0*x7085)));
evalcond[4]=((0.1255)+(((0.02626)*x7093))+(((0.1158)*cj2))+(((-0.02626)*x7091))+(((0.02626)*x7102))+pz+(((-0.0718)*x7101))+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+x7099+((r02*x7087))+((x7090*x7094))+((x7086*x7088))+((cj0*r01*x7088))+((sj0*x7098)));
evalcond[6]=((((-1.0)*x7082))+((r10*sj5*x7090))+((r12*x7087))+((cj0*r11*x7088))+(((-1.0)*cj5*r02*x7092))+(((-1.0)*r01*x7088*x7092))+(((-1.0)*sj6*x7092*x7094)));
evalcond[7]=((0.09736)+(((-1.0)*x7084*x7089))+(((0.02626)*x7081))+(((-1.0)*x7083*x7085))+(((-1.0)*py*x7096))+((px*sj0))+((x7083*x7095))+(((0.0718)*x7082))+((x7089*x7097)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-1.0)*px*x7096))+(((-1.0)*x7089*x7095))+((x7085*x7089))+(((0.0009)*cj2))+(((0.02626)*x7100))+(((-1.0)*x7083*x7084))+(((-1.0)*py*x7092))+(((-0.0718)*x7099))+((x7083*x7097)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7103=(cj0*sj5);
IkReal x7104=(cj5*cj6);
IkReal x7105=((1.0)*sj5);
IkReal x7106=((1.0)*cj0);
IkReal x7107=((1.0)*sj0);
IkReal x7108=(cj5*sj6);
IkReal x7109=(r10*x7108);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x7104))+(((-1.0)*r22*x7105))+((r20*x7108))+(((-1.0)*cj2)));
evalcond[2]=(sj2+(((-1.0)*r00*x7106*x7108))+((r02*x7103))+((r12*sj0*sj5))+(((-1.0)*r01*x7104*x7106))+(((-1.0)*x7107*x7109))+(((-1.0)*r11*x7104*x7107)));
evalcond[3]=(((r12*x7103))+((r01*sj0*x7104))+((r00*sj0*x7108))+(((-1.0)*r02*sj0*x7105))+(((-1.0)*x7106*x7109))+(((-1.0)*r11*x7104*x7106)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj1=0;
cj1=-1.0;
j1=3.14159265358979;
sj3=-1.0;
cj3=0;
j3=-1.5707963267949;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7110=((1.0)*sj6);
CheckValue<IkReal> x7111=IKPowWithIntegerCheck(sj2,-1);
if(!x7111.valid){
continue;
}
CheckValue<IkReal> x7112=IKPowWithIntegerCheck(cj2,-1);
if(!x7112.valid){
continue;
}
if( IKabs(((x7111.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7112.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x7110))+(((-1.0)*cj0*r01*x7110))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7111.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x7112.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x7110))+(((-1.0)*cj0*r01*x7110))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7111.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x7112.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x7110))+(((-1.0)*cj0*r01*x7110))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7113=IKcos(j4);
IkReal x7114=IKsin(j4);
IkReal x7115=((0.02626)*sj0);
IkReal x7116=(cj6*r10);
IkReal x7117=(r01*sj6);
IkReal x7118=(r11*sj0);
IkReal x7119=(cj0*cj5);
IkReal x7120=(cj6*sj5);
IkReal x7121=(cj0*sj6);
IkReal x7122=((0.02626)*cj0);
IkReal x7123=((1.0)*cj5);
IkReal x7124=(cj6*r20);
IkReal x7125=((1.0)*sj0);
IkReal x7126=(r21*sj6);
IkReal x7127=(r00*sj5);
IkReal x7128=(cj6*r00);
IkReal x7129=((1.0)*cj0);
IkReal x7130=(r10*sj5*sj6);
IkReal x7131=(cj2*x7114);
IkReal x7132=(cj2*x7113);
IkReal x7133=(sj2*x7114);
IkReal x7134=(sj2*x7113);
evalcond[0]=(x7134+x7124+(((-1.0)*x7126)));
evalcond[1]=(x7133+(((-1.0)*r22*x7123))+(((-1.0)*r21*x7120))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x7132+(((-1.0)*x7116*x7125))+((cj0*x7117))+((sj6*x7118))+(((-1.0)*x7128*x7129)));
evalcond[3]=((((-1.0)*x7116*x7129))+(((-1.0)*x7114))+((r11*x7121))+(((-1.0)*x7117*x7125))+((sj0*x7128)));
evalcond[4]=((0.1255)+(((-0.02626)*x7126))+(((0.1158)*cj2))+pz+(((0.02626)*x7134))+(((-0.0718)*x7133))+(((0.0009)*sj2))+(((0.02626)*x7124)));
evalcond[5]=(x7131+((cj5*r12*sj0))+((sj0*x7130))+((r02*x7119))+((x7121*x7127))+((cj0*r01*x7120))+((x7118*x7120)));
evalcond[6]=(x7113+((r12*x7119))+(((-1.0)*sj6*x7125*x7127))+(((-1.0)*r01*x7120*x7125))+((r10*sj5*x7121))+((cj0*r11*x7120))+(((-1.0)*r02*sj0*x7123)));
evalcond[7]=((-0.09756)+(((-1.0)*x7116*x7122))+(((-1.0)*x7115*x7117))+(((-1.0)*py*x7129))+((x7115*x7128))+((px*sj0))+(((-0.0718)*x7113))+(((0.02626)*r11*x7121))+(((-0.02626)*x7114)));
evalcond[8]=((-0.001)+(((-1.0)*x7115*x7116))+(((-0.1158)*sj2))+(((-1.0)*py*x7125))+(((-1.0)*x7122*x7128))+((x7117*x7122))+(((0.0009)*cj2))+(((-1.0)*px*x7129))+(((0.02626)*x7132))+(((-0.0718)*x7131))+((r11*sj6*x7115)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7135=((1.0)*cj6);
CheckValue<IkReal> x7136=IKPowWithIntegerCheck(sj2,-1);
if(!x7136.valid){
continue;
}
if( IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x7135))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7136.value)*((((r21*sj6))+(((-1.0)*r20*x7135)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x7135))+(((-1.0)*r01*sj0*sj6))))+IKsqr(((x7136.value)*((((r21*sj6))+(((-1.0)*r20*x7135))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x7135))+(((-1.0)*r01*sj0*sj6))), ((x7136.value)*((((r21*sj6))+(((-1.0)*r20*x7135))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7137=IKcos(j4);
IkReal x7138=IKsin(j4);
IkReal x7139=((0.02626)*sj0);
IkReal x7140=(cj6*r10);
IkReal x7141=(r01*sj6);
IkReal x7142=(r11*sj0);
IkReal x7143=(cj0*cj5);
IkReal x7144=(cj6*sj5);
IkReal x7145=(cj0*sj6);
IkReal x7146=((0.02626)*cj0);
IkReal x7147=((1.0)*cj5);
IkReal x7148=(cj6*r20);
IkReal x7149=((1.0)*sj0);
IkReal x7150=(r21*sj6);
IkReal x7151=(r00*sj5);
IkReal x7152=(cj6*r00);
IkReal x7153=((1.0)*cj0);
IkReal x7154=(r10*sj5*sj6);
IkReal x7155=(cj2*x7138);
IkReal x7156=(cj2*x7137);
IkReal x7157=(sj2*x7138);
IkReal x7158=(sj2*x7137);
evalcond[0]=(x7148+x7158+(((-1.0)*x7150)));
evalcond[1]=(x7157+(((-1.0)*r22*x7147))+(((-1.0)*r21*x7144))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x7156+(((-1.0)*x7152*x7153))+((cj0*x7141))+(((-1.0)*x7140*x7149))+((sj6*x7142)));
evalcond[3]=((((-1.0)*x7140*x7153))+(((-1.0)*x7141*x7149))+((sj0*x7152))+((r11*x7145))+(((-1.0)*x7138)));
evalcond[4]=((0.1255)+(((0.02626)*x7158))+(((0.1158)*cj2))+(((-0.02626)*x7150))+(((-0.0718)*x7157))+pz+(((0.02626)*x7148))+(((0.0009)*sj2)));
evalcond[5]=(x7155+((cj5*r12*sj0))+((cj0*r01*x7144))+((x7145*x7151))+((r02*x7143))+((sj0*x7154))+((x7142*x7144)));
evalcond[6]=(x7137+(((-1.0)*sj6*x7149*x7151))+((r10*sj5*x7145))+(((-1.0)*r01*x7144*x7149))+((cj0*r11*x7144))+(((-1.0)*r02*sj0*x7147))+((r12*x7143)));
evalcond[7]=((-0.09756)+(((-1.0)*py*x7153))+((x7139*x7152))+(((-1.0)*x7140*x7146))+(((-1.0)*x7139*x7141))+(((0.02626)*r11*x7145))+((px*sj0))+(((-0.02626)*x7138))+(((-0.0718)*x7137)));
evalcond[8]=((-0.001)+(((-1.0)*x7146*x7152))+((x7141*x7146))+(((0.02626)*x7156))+(((-1.0)*py*x7149))+(((-0.1158)*sj2))+((r11*sj6*x7139))+(((-0.0718)*x7155))+(((-1.0)*px*x7153))+(((0.0009)*cj2))+(((-1.0)*x7139*x7140)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x7159=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x7159.valid){
continue;
}
CheckValue<IkReal> x7160 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x7160.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7159.value)))+(x7160.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7161=IKcos(j4);
IkReal x7162=IKsin(j4);
IkReal x7163=((0.02626)*sj0);
IkReal x7164=(cj6*r10);
IkReal x7165=(r01*sj6);
IkReal x7166=(r11*sj0);
IkReal x7167=(cj0*cj5);
IkReal x7168=(cj6*sj5);
IkReal x7169=(cj0*sj6);
IkReal x7170=((0.02626)*cj0);
IkReal x7171=((1.0)*cj5);
IkReal x7172=(cj6*r20);
IkReal x7173=((1.0)*sj0);
IkReal x7174=(r21*sj6);
IkReal x7175=(r00*sj5);
IkReal x7176=(cj6*r00);
IkReal x7177=((1.0)*cj0);
IkReal x7178=(r10*sj5*sj6);
IkReal x7179=(cj2*x7162);
IkReal x7180=(cj2*x7161);
IkReal x7181=(sj2*x7162);
IkReal x7182=(sj2*x7161);
evalcond[0]=(x7182+x7172+(((-1.0)*x7174)));
evalcond[1]=(x7181+(((-1.0)*r22*x7171))+(((-1.0)*r21*x7168))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x7180+((sj6*x7166))+((cj0*x7165))+(((-1.0)*x7164*x7173))+(((-1.0)*x7176*x7177)));
evalcond[3]=(((sj0*x7176))+((r11*x7169))+(((-1.0)*x7165*x7173))+(((-1.0)*x7164*x7177))+(((-1.0)*x7162)));
evalcond[4]=((0.1255)+(((-0.0718)*x7181))+(((0.1158)*cj2))+(((0.02626)*x7182))+pz+(((0.02626)*x7172))+(((-0.02626)*x7174))+(((0.0009)*sj2)));
evalcond[5]=(x7179+((cj5*r12*sj0))+((sj0*x7178))+((x7169*x7175))+((cj0*r01*x7168))+((x7166*x7168))+((r02*x7167)));
evalcond[6]=(x7161+(((-1.0)*sj6*x7173*x7175))+(((-1.0)*r01*x7168*x7173))+((r10*sj5*x7169))+(((-1.0)*r02*sj0*x7171))+((r12*x7167))+((cj0*r11*x7168)));
evalcond[7]=((-0.09756)+(((-0.0718)*x7161))+(((-1.0)*x7163*x7165))+(((-0.02626)*x7162))+(((-1.0)*py*x7177))+(((-1.0)*x7164*x7170))+((px*sj0))+((x7163*x7176))+(((0.02626)*r11*x7169)));
evalcond[8]=((-0.001)+(((-1.0)*x7170*x7176))+(((-0.1158)*sj2))+(((-1.0)*x7163*x7164))+((r11*sj6*x7163))+(((0.02626)*x7180))+(((0.0009)*cj2))+(((-1.0)*py*x7173))+((x7165*x7170))+(((-0.0718)*x7179))+(((-1.0)*px*x7177)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x7190=IKPowWithIntegerCheck(sj3,-1);
if(!x7190.valid){
continue;
}
IkReal x7183=x7190.value;
IkReal x7184=((1.0)*cj6);
IkReal x7185=(cj0*r10);
IkReal x7186=(cj2*cj3);
IkReal x7187=(r00*sj0);
IkReal x7188=(r01*sj0*sj6);
IkReal x7189=(cj0*r11*sj6);
CheckValue<IkReal> x7191=IKPowWithIntegerCheck(sj2,-1);
if(!x7191.valid){
continue;
}
if( IKabs((x7183*((x7188+((cj6*x7185))+(((-1.0)*x7184*x7187))+(((-1.0)*x7189)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x7183*(x7191.value)*((((x7186*x7189))+(((-1.0)*x7184*x7185*x7186))+(((-1.0)*r20*sj3*x7184))+((r21*sj3*sj6))+((cj6*x7186*x7187))+(((-1.0)*x7186*x7188)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x7183*((x7188+((cj6*x7185))+(((-1.0)*x7184*x7187))+(((-1.0)*x7189))))))+IKsqr((x7183*(x7191.value)*((((x7186*x7189))+(((-1.0)*x7184*x7185*x7186))+(((-1.0)*r20*sj3*x7184))+((r21*sj3*sj6))+((cj6*x7186*x7187))+(((-1.0)*x7186*x7188))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x7183*((x7188+((cj6*x7185))+(((-1.0)*x7184*x7187))+(((-1.0)*x7189))))), (x7183*(x7191.value)*((((x7186*x7189))+(((-1.0)*x7184*x7185*x7186))+(((-1.0)*r20*sj3*x7184))+((r21*sj3*sj6))+((cj6*x7186*x7187))+(((-1.0)*x7186*x7188))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7192=IKsin(j4);
IkReal x7193=IKcos(j4);
IkReal x7194=((0.02626)*sj0);
IkReal x7195=(cj6*r10);
IkReal x7196=(r01*sj6);
IkReal x7197=(r11*sj6);
IkReal x7198=(sj0*sj5);
IkReal x7199=(cj6*r11);
IkReal x7200=(r10*sj6);
IkReal x7201=(cj0*cj5);
IkReal x7202=((0.02626)*cj0);
IkReal x7203=((1.0)*cj5);
IkReal x7204=(cj2*cj3);
IkReal x7205=((1.0)*sj0);
IkReal x7206=((1.0)*sj5);
IkReal x7207=((1.0)*cj3);
IkReal x7208=(cj0*sj5);
IkReal x7209=(r00*sj6);
IkReal x7210=((0.0718)*cj3);
IkReal x7211=(cj6*r00);
IkReal x7212=((1.0)*cj0);
IkReal x7213=(cj3*sj2);
IkReal x7214=(r21*sj6);
IkReal x7215=(cj6*r20);
IkReal x7216=(cj6*r01);
IkReal x7217=((0.02626)*x7192);
IkReal x7218=(cj2*x7192);
IkReal x7219=(cj2*x7193);
IkReal x7220=(sj2*x7192);
IkReal x7221=(sj3*x7193);
IkReal x7222=(sj2*x7193);
evalcond[0]=(x7215+x7222+((x7192*x7204))+(((-1.0)*x7214)));
evalcond[1]=(((sj0*x7211))+((sj3*x7192))+(((-1.0)*x7195*x7212))+(((-1.0)*x7196*x7205))+((cj0*x7197)));
evalcond[2]=((((-1.0)*x7193*x7204))+x7220+(((-1.0)*cj6*r21*x7206))+(((-1.0)*r20*sj6*x7206))+(((-1.0)*r22*x7203)));
evalcond[3]=(x7219+(((-1.0)*x7195*x7205))+(((-1.0)*x7207*x7220))+((sj0*x7197))+(((-1.0)*x7211*x7212))+((cj0*x7196)));
evalcond[4]=(((x7199*x7208))+((x7200*x7208))+(((-1.0)*x7198*x7216))+((r12*x7201))+(((-1.0)*x7198*x7209))+(((-1.0)*r02*sj0*x7203))+(((-1.0)*x7221)));
evalcond[5]=(((x7198*x7200))+((cj5*r12*sj0))+x7218+((x7208*x7216))+((x7193*x7213))+((r02*x7201))+((x7198*x7199))+((x7208*x7209)));
evalcond[6]=((-0.0001)+(((-1.0)*py*x7212))+(((0.0718)*x7221))+(((-1.0)*x7195*x7202))+(((-1.0)*x7194*x7196))+((x7197*x7202))+((px*sj0))+(((0.09746)*sj3))+((x7194*x7211))+((sj3*x7217)));
evalcond[7]=((0.1255)+(((0.1158)*cj2))+(((0.0718)*x7193*x7204))+((x7204*x7217))+(((0.02626)*x7215))+pz+(((0.09746)*x7204))+(((-0.02626)*x7214))+(((-0.0718)*x7220))+(((0.0009)*sj2))+(((0.02626)*x7222)));
evalcond[8]=((-0.001)+(((-1.0)*x7213*x7217))+(((-0.1158)*sj2))+(((-1.0)*x7202*x7211))+(((-1.0)*x7210*x7222))+(((-1.0)*px*x7212))+(((0.0009)*cj2))+(((-1.0)*x7194*x7195))+(((0.02626)*x7219))+((x7196*x7202))+((x7194*x7197))+(((-1.0)*py*x7205))+(((-0.09746)*x7213))+(((-0.0718)*x7218)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7223=(sj2*sj6);
IkReal x7224=(cj0*r01);
IkReal x7225=((1.0)*sj0);
IkReal x7226=(cj6*sj2);
IkReal x7227=(cj2*sj6);
IkReal x7228=((1.0)*r20);
IkReal x7229=(cj0*r00);
IkReal x7230=(cj2*cj6);
CheckValue<IkReal> x7231=IKPowWithIntegerCheck(cj3,-1);
if(!x7231.valid){
continue;
}
if( IKabs(((x7231.value)*((((r21*x7227))+(((-1.0)*x7228*x7230))+(((-1.0)*r10*x7225*x7226))+((x7223*x7224))+((r11*sj0*x7223))+(((-1.0)*x7226*x7229)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x7229*x7230))+((r21*x7223))+(((-1.0)*r11*x7225*x7227))+(((-1.0)*x7224*x7227))+((r10*sj0*x7230))+(((-1.0)*x7226*x7228)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7231.value)*((((r21*x7227))+(((-1.0)*x7228*x7230))+(((-1.0)*r10*x7225*x7226))+((x7223*x7224))+((r11*sj0*x7223))+(((-1.0)*x7226*x7229))))))+IKsqr((((x7229*x7230))+((r21*x7223))+(((-1.0)*r11*x7225*x7227))+(((-1.0)*x7224*x7227))+((r10*sj0*x7230))+(((-1.0)*x7226*x7228))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7231.value)*((((r21*x7227))+(((-1.0)*x7228*x7230))+(((-1.0)*r10*x7225*x7226))+((x7223*x7224))+((r11*sj0*x7223))+(((-1.0)*x7226*x7229))))), (((x7229*x7230))+((r21*x7223))+(((-1.0)*r11*x7225*x7227))+(((-1.0)*x7224*x7227))+((r10*sj0*x7230))+(((-1.0)*x7226*x7228))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7232=IKsin(j4);
IkReal x7233=IKcos(j4);
IkReal x7234=((0.02626)*sj0);
IkReal x7235=(cj6*r10);
IkReal x7236=(r01*sj6);
IkReal x7237=(r11*sj6);
IkReal x7238=(sj0*sj5);
IkReal x7239=(cj6*r11);
IkReal x7240=(r10*sj6);
IkReal x7241=(cj0*cj5);
IkReal x7242=((0.02626)*cj0);
IkReal x7243=((1.0)*cj5);
IkReal x7244=(cj2*cj3);
IkReal x7245=((1.0)*sj0);
IkReal x7246=((1.0)*sj5);
IkReal x7247=((1.0)*cj3);
IkReal x7248=(cj0*sj5);
IkReal x7249=(r00*sj6);
IkReal x7250=((0.0718)*cj3);
IkReal x7251=(cj6*r00);
IkReal x7252=((1.0)*cj0);
IkReal x7253=(cj3*sj2);
IkReal x7254=(r21*sj6);
IkReal x7255=(cj6*r20);
IkReal x7256=(cj6*r01);
IkReal x7257=((0.02626)*x7232);
IkReal x7258=(cj2*x7232);
IkReal x7259=(cj2*x7233);
IkReal x7260=(sj2*x7232);
IkReal x7261=(sj3*x7233);
IkReal x7262=(sj2*x7233);
evalcond[0]=(x7255+x7262+((x7232*x7244))+(((-1.0)*x7254)));
evalcond[1]=((((-1.0)*x7236*x7245))+((sj3*x7232))+((cj0*x7237))+((sj0*x7251))+(((-1.0)*x7235*x7252)));
evalcond[2]=(x7260+(((-1.0)*cj6*r21*x7246))+(((-1.0)*r22*x7243))+(((-1.0)*x7233*x7244))+(((-1.0)*r20*sj6*x7246)));
evalcond[3]=((((-1.0)*x7251*x7252))+x7259+(((-1.0)*x7247*x7260))+((cj0*x7236))+((sj0*x7237))+(((-1.0)*x7235*x7245)));
evalcond[4]=(((x7240*x7248))+(((-1.0)*x7261))+(((-1.0)*r02*sj0*x7243))+(((-1.0)*x7238*x7256))+(((-1.0)*x7238*x7249))+((r12*x7241))+((x7239*x7248)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x7241))+((x7238*x7239))+x7258+((x7238*x7240))+((x7233*x7253))+((x7248*x7256))+((x7248*x7249)));
evalcond[6]=((-0.0001)+((sj3*x7257))+(((-1.0)*x7234*x7236))+(((-1.0)*py*x7252))+((x7234*x7251))+((px*sj0))+(((0.09746)*sj3))+((x7237*x7242))+(((-1.0)*x7235*x7242))+(((0.0718)*x7261)));
evalcond[7]=((0.1255)+(((-0.02626)*x7254))+(((0.09746)*x7244))+((x7244*x7257))+(((0.1158)*cj2))+(((0.02626)*x7255))+(((-0.0718)*x7260))+(((0.02626)*x7262))+(((0.0718)*x7233*x7244))+pz+(((0.0009)*sj2)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-0.09746)*x7253))+(((0.02626)*x7259))+(((-1.0)*x7242*x7251))+(((-1.0)*x7250*x7262))+(((-1.0)*py*x7245))+((x7236*x7242))+(((-1.0)*x7234*x7235))+(((0.0009)*cj2))+(((-0.0718)*x7258))+(((-1.0)*x7253*x7257))+((x7234*x7237))+(((-1.0)*px*x7252)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7263=cj2*cj2;
IkReal x7264=(cj2*cj3);
IkReal x7265=(cj6*r20);
IkReal x7266=(cj5*r22);
IkReal x7267=(r20*sj5);
IkReal x7268=((1.0)*sj2);
IkReal x7269=(sj6*x7268);
IkReal x7270=(cj6*r21*sj5);
CheckValue<IkReal> x7271 = IKatan2WithCheck(IkReal(((((-1.0)*x7267*x7269))+(((-1.0)*x7266*x7268))+((x7264*x7265))+(((-1.0)*x7268*x7270))+(((-1.0)*r21*sj6*x7264)))),((((-1.0)*r21*x7269))+((x7264*x7266))+((sj2*x7265))+((sj6*x7264*x7267))+((x7264*x7270))),IKFAST_ATAN2_MAGTHRESH);
if(!x7271.valid){
continue;
}
CheckValue<IkReal> x7272=IKPowWithIntegerCheck(IKsign(((-1.0)+x7263+(((-1.0)*x7263*(cj3*cj3))))),-1);
if(!x7272.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x7271.value)+(((1.5707963267949)*(x7272.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7273=IKsin(j4);
IkReal x7274=IKcos(j4);
IkReal x7275=((0.02626)*sj0);
IkReal x7276=(cj6*r10);
IkReal x7277=(r01*sj6);
IkReal x7278=(r11*sj6);
IkReal x7279=(sj0*sj5);
IkReal x7280=(cj6*r11);
IkReal x7281=(r10*sj6);
IkReal x7282=(cj0*cj5);
IkReal x7283=((0.02626)*cj0);
IkReal x7284=((1.0)*cj5);
IkReal x7285=(cj2*cj3);
IkReal x7286=((1.0)*sj0);
IkReal x7287=((1.0)*sj5);
IkReal x7288=((1.0)*cj3);
IkReal x7289=(cj0*sj5);
IkReal x7290=(r00*sj6);
IkReal x7291=((0.0718)*cj3);
IkReal x7292=(cj6*r00);
IkReal x7293=((1.0)*cj0);
IkReal x7294=(cj3*sj2);
IkReal x7295=(r21*sj6);
IkReal x7296=(cj6*r20);
IkReal x7297=(cj6*r01);
IkReal x7298=((0.02626)*x7273);
IkReal x7299=(cj2*x7273);
IkReal x7300=(cj2*x7274);
IkReal x7301=(sj2*x7273);
IkReal x7302=(sj3*x7274);
IkReal x7303=(sj2*x7274);
evalcond[0]=(x7303+x7296+(((-1.0)*x7295))+((x7273*x7285)));
evalcond[1]=((((-1.0)*x7277*x7286))+(((-1.0)*x7276*x7293))+((sj0*x7292))+((sj3*x7273))+((cj0*x7278)));
evalcond[2]=(x7301+(((-1.0)*x7274*x7285))+(((-1.0)*r20*sj6*x7287))+(((-1.0)*cj6*r21*x7287))+(((-1.0)*r22*x7284)));
evalcond[3]=(x7300+(((-1.0)*x7288*x7301))+(((-1.0)*x7276*x7286))+((sj0*x7278))+(((-1.0)*x7292*x7293))+((cj0*x7277)));
evalcond[4]=(((x7280*x7289))+((x7281*x7289))+(((-1.0)*x7302))+((r12*x7282))+(((-1.0)*r02*sj0*x7284))+(((-1.0)*x7279*x7297))+(((-1.0)*x7279*x7290)));
evalcond[5]=(((cj5*r12*sj0))+x7299+((r02*x7282))+((x7279*x7280))+((x7279*x7281))+((x7289*x7290))+((x7289*x7297))+((x7274*x7294)));
evalcond[6]=((-0.0001)+(((-1.0)*py*x7293))+((x7278*x7283))+(((0.0718)*x7302))+(((-1.0)*x7276*x7283))+((x7275*x7292))+((px*sj0))+(((0.09746)*sj3))+((sj3*x7298))+(((-1.0)*x7275*x7277)));
evalcond[7]=((0.1255)+(((-0.02626)*x7295))+(((0.1158)*cj2))+(((-0.0718)*x7301))+(((0.02626)*x7303))+(((0.0718)*x7274*x7285))+(((0.09746)*x7285))+((x7285*x7298))+(((0.02626)*x7296))+pz+(((0.0009)*sj2)));
evalcond[8]=((-0.001)+(((-1.0)*py*x7286))+((x7277*x7283))+(((-0.1158)*sj2))+((x7275*x7278))+(((0.02626)*x7300))+(((-1.0)*x7294*x7298))+(((-0.0718)*x7299))+(((0.0009)*cj2))+(((-1.0)*px*x7293))+(((-0.09746)*x7294))+(((-1.0)*x7283*x7292))+(((-1.0)*x7291*x7303))+(((-1.0)*x7275*x7276)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=sj1;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j3eval[0]=cj1;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j3, j4]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x7304=((1.0)*cj5);
IkReal x7305=(sj0*sj6);
IkReal x7306=(r02*sj5);
IkReal x7307=(cj6*r01);
IkReal x7308=(cj6*r11);
IkReal x7309=(r12*sj5);
IkReal x7310=(cj0*sj6);
CheckValue<IkReal> x7311=IKPowWithIntegerCheck(cj1,-1);
if(!x7311.valid){
continue;
}
if( IKabs(((((-1.0)*r10*x7304*x7305))+(((-1.0)*cj0*x7304*x7307))+((sj0*x7309))+(((-1.0)*r00*x7304*x7310))+(((-1.0)*sj0*x7304*x7308))+((cj0*x7306)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7311.value)*(((((-1.0)*cj0*x7309))+((cj5*r10*x7310))+((sj0*x7306))+((cj0*cj5*x7308))+(((-1.0)*r00*x7304*x7305))+(((-1.0)*sj0*x7304*x7307)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x7304*x7305))+(((-1.0)*cj0*x7304*x7307))+((sj0*x7309))+(((-1.0)*r00*x7304*x7310))+(((-1.0)*sj0*x7304*x7308))+((cj0*x7306))))+IKsqr(((x7311.value)*(((((-1.0)*cj0*x7309))+((cj5*r10*x7310))+((sj0*x7306))+((cj0*cj5*x7308))+(((-1.0)*r00*x7304*x7305))+(((-1.0)*sj0*x7304*x7307))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*r10*x7304*x7305))+(((-1.0)*cj0*x7304*x7307))+((sj0*x7309))+(((-1.0)*r00*x7304*x7310))+(((-1.0)*sj0*x7304*x7308))+((cj0*x7306))), ((x7311.value)*(((((-1.0)*cj0*x7309))+((cj5*r10*x7310))+((sj0*x7306))+((cj0*cj5*x7308))+(((-1.0)*r00*x7304*x7305))+(((-1.0)*sj0*x7304*x7307))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x7312=IKcos(j3);
IkReal x7313=(cj5*cj6);
IkReal x7314=((1.0)*cj0);
IkReal x7315=((1.0)*sj5);
IkReal x7316=(cj0*sj5);
IkReal x7317=((1.0)*sj0);
IkReal x7318=(cj5*sj6);
IkReal x7319=(r10*x7318);
evalcond[0]=(((r21*x7313))+((r20*x7318))+(((-1.0)*r22*x7315))+(((-1.0)*sj1*x7312)));
evalcond[1]=(((r12*x7316))+(((-1.0)*r02*sj0*x7315))+((cj1*x7312))+((r01*sj0*x7313))+(((-1.0)*x7314*x7319))+(((-1.0)*r11*x7313*x7314))+((r00*sj0*x7318)));
evalcond[2]=(((r02*x7316))+((r12*sj0*sj5))+(((-1.0)*(IKsin(j3))))+(((-1.0)*x7317*x7319))+(((-1.0)*r01*x7313*x7314))+(((-1.0)*r11*x7313*x7317))+(((-1.0)*r00*x7314*x7318)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7320=cj3*cj3;
IkReal x7321=((1.0)+(((-1.0)*x7320))+((x7320*(cj1*cj1))));
j4eval[0]=x7321;
j4eval[1]=IKsign(x7321);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j4eval[0]=cj3;
j4eval[1]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x7322=(cj5*cj6);
IkReal x7323=(r11*sj0);
IkReal x7324=(cj6*sj5);
IkReal x7325=((1.0)*cj0);
IkReal x7326=(r10*sj6);
IkReal x7327=(sj0*sj5);
IkReal x7328=(r00*sj6);
IkReal x7329=(cj0*sj5);
IkReal x7330=((0.02626)*cj0);
IkReal x7331=(r01*sj6);
IkReal x7332=((1.0)*sj0);
IkReal x7333=(cj6*r10);
IkReal x7334=(cj5*sj0);
IkReal x7335=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x7322))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x7325*x7335))+((sj6*x7323))+(((-1.0)*x7332*x7333))+((cj0*x7331)));
evalcond[3]=((-1.0)+(((-1.0)*r01*x7322*x7325))+(((-1.0)*cj5*x7326*x7332))+(((-1.0)*x7322*x7323))+((r12*x7327))+(((-1.0)*cj5*x7325*x7328))+((r02*x7329)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x7334))+((x7326*x7327))+((x7323*x7324))+((cj0*r01*x7324))+((x7328*x7329)));
evalcond[5]=(((x7328*x7334))+(((-1.0)*r02*x7327))+((r12*x7329))+(((-1.0)*cj5*x7325*x7326))+(((-1.0)*r11*x7322*x7325))+((r01*sj0*x7322)));
evalcond[6]=((-0.1168)+(((0.02626)*sj6*x7323))+(((-0.02626)*sj0*x7333))+(((-1.0)*px*x7325))+((x7330*x7331))+(((-1.0)*x7330*x7335))+(((-1.0)*py*x7332)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7336=(cj1*r20);
IkReal x7337=((1.0)*sj6);
IkReal x7338=(r20*sj1);
IkReal x7339=((1.0)*cj5*r22);
IkReal x7340=((1.0)*cj6*r21*sj5);
if( IKabs(((((-1.0)*sj5*x7336*x7337))+(((-1.0)*cj1*x7340))+((r21*sj1*sj6))+(((-1.0)*cj1*x7339))+(((-1.0)*cj6*x7338)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x7340))+(((-1.0)*sj5*x7337*x7338))+(((-1.0)*sj1*x7339))+((cj6*x7336))+(((-1.0)*cj1*r21*x7337)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x7336*x7337))+(((-1.0)*cj1*x7340))+((r21*sj1*sj6))+(((-1.0)*cj1*x7339))+(((-1.0)*cj6*x7338))))+IKsqr(((((-1.0)*sj1*x7340))+(((-1.0)*sj5*x7337*x7338))+(((-1.0)*sj1*x7339))+((cj6*x7336))+(((-1.0)*cj1*r21*x7337))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj5*x7336*x7337))+(((-1.0)*cj1*x7340))+((r21*sj1*sj6))+(((-1.0)*cj1*x7339))+(((-1.0)*cj6*x7338))), ((((-1.0)*sj1*x7340))+(((-1.0)*sj5*x7337*x7338))+(((-1.0)*sj1*x7339))+((cj6*x7336))+(((-1.0)*cj1*r21*x7337))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x7341=IKcos(j4);
IkReal x7342=IKsin(j4);
IkReal x7343=((1.0)*cj1);
IkReal x7344=((0.02626)*sj6);
IkReal x7345=(r01*sj0);
IkReal x7346=(cj0*sj6);
IkReal x7347=((0.02626)*cj6);
IkReal x7348=(cj0*r10);
IkReal x7349=((1.0)*cj5);
IkReal x7350=((1.0)*cj6);
IkReal x7351=((1.0)*sj6);
IkReal x7352=(r00*sj0);
IkReal x7353=(cj0*r11);
IkReal x7354=(sj1*x7341);
IkReal x7355=(cj1*x7342);
IkReal x7356=(sj1*x7342);
IkReal x7357=(cj1*x7341);
IkReal x7358=((1.0)*x7354);
IkReal x7359=(x7342*x7343);
IkReal x7360=(x7359+x7358);
evalcond[0]=(x7356+(((-1.0)*x7341*x7343))+((cj6*r20))+(((-1.0)*r21*x7351)));
evalcond[1]=((((-1.0)*r22*x7349))+(((-1.0)*x7360))+(((-1.0)*r20*sj5*x7351))+(((-1.0)*r21*sj5*x7350)));
evalcond[2]=(((r11*x7346))+(((-1.0)*x7360))+(((-1.0)*x7348*x7350))+(((-1.0)*x7345*x7351))+((cj6*x7352)));
evalcond[3]=((((0.09736)*sj1))+(((0.0718)*x7354))+(((0.0718)*x7355))+(((-0.1264)*cj1))+((r20*x7347))+pz+(((-1.0)*r21*x7344))+(((-0.02626)*x7357))+(((0.02626)*x7356)));
evalcond[4]=(x7357+((cj0*cj5*r12))+(((-1.0)*sj5*x7351*x7352))+(((-1.0)*sj5*x7345*x7350))+((r10*sj5*x7346))+((cj6*sj5*x7353))+(((-1.0)*x7356))+(((-1.0)*r02*sj0*x7349)));
evalcond[5]=((((-0.1264)*sj1))+(((-0.09736)*cj1))+((x7347*x7352))+((x7344*x7353))+(((0.0718)*x7356))+(((-1.0)*x7344*x7345))+(((-0.0718)*x7357))+((px*sj0))+(((-1.0)*x7347*x7348))+(((-1.0)*cj0*py))+(((-0.02626)*x7354))+(((-0.02626)*x7355)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7361=(cj5*cj6);
IkReal x7362=(r11*sj0);
IkReal x7363=(cj6*sj5);
IkReal x7364=((1.0)*cj0);
IkReal x7365=(r10*sj6);
IkReal x7366=(sj0*sj5);
IkReal x7367=(r00*sj6);
IkReal x7368=(cj0*sj5);
IkReal x7369=((0.02626)*cj0);
IkReal x7370=(r01*sj6);
IkReal x7371=((1.0)*sj0);
IkReal x7372=(cj6*r10);
IkReal x7373=(cj5*sj0);
IkReal x7374=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x7361))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x7370))+(((-1.0)*x7364*x7374))+((sj6*x7362))+(((-1.0)*x7371*x7372)));
evalcond[3]=((1.0)+((r12*x7366))+(((-1.0)*cj5*x7365*x7371))+(((-1.0)*cj5*x7364*x7367))+(((-1.0)*r01*x7361*x7364))+((r02*x7368))+(((-1.0)*x7361*x7362)));
evalcond[4]=(((cj0*cj5*r02))+((x7367*x7368))+((r12*x7373))+((cj0*r01*x7363))+((x7365*x7366))+((x7362*x7363)));
evalcond[5]=((((-1.0)*r02*x7366))+((r12*x7368))+(((-1.0)*cj5*x7364*x7365))+((r01*sj0*x7361))+(((-1.0)*r11*x7361*x7364))+((x7367*x7373)));
evalcond[6]=((-0.1168)+(((-0.02626)*sj0*x7372))+(((0.02626)*sj6*x7362))+(((-1.0)*py*x7371))+((x7369*x7370))+(((-1.0)*x7369*x7374))+(((-1.0)*px*x7364)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7375=(sj1*sj6);
IkReal x7376=(r20*sj5);
IkReal x7377=(cj1*cj6);
IkReal x7378=((1.0)*r21);
IkReal x7379=(cj5*r22);
IkReal x7380=(cj1*sj6);
IkReal x7381=(cj6*sj1);
if( IKabs(((((-1.0)*sj5*x7377*x7378))+(((-1.0)*cj1*x7379))+((r20*x7381))+(((-1.0)*x7375*x7378))+(((-1.0)*x7376*x7380)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x7378*x7380))+((x7375*x7376))+((r20*x7377))+((sj1*x7379))+((r21*sj5*x7381)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x7377*x7378))+(((-1.0)*cj1*x7379))+((r20*x7381))+(((-1.0)*x7375*x7378))+(((-1.0)*x7376*x7380))))+IKsqr(((((-1.0)*x7378*x7380))+((x7375*x7376))+((r20*x7377))+((sj1*x7379))+((r21*sj5*x7381))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj5*x7377*x7378))+(((-1.0)*cj1*x7379))+((r20*x7381))+(((-1.0)*x7375*x7378))+(((-1.0)*x7376*x7380))), ((((-1.0)*x7378*x7380))+((x7375*x7376))+((r20*x7377))+((sj1*x7379))+((r21*sj5*x7381))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x7382=IKcos(j4);
IkReal x7383=IKsin(j4);
IkReal x7384=((1.0)*cj1);
IkReal x7385=((0.02626)*sj6);
IkReal x7386=(r01*sj0);
IkReal x7387=(cj0*sj6);
IkReal x7388=((0.02626)*cj6);
IkReal x7389=(cj0*r10);
IkReal x7390=((1.0)*cj5);
IkReal x7391=((1.0)*sj6);
IkReal x7392=(r00*sj0);
IkReal x7393=((1.0)*cj6);
IkReal x7394=(cj0*r11);
IkReal x7395=(sj1*x7382);
IkReal x7396=(cj1*x7383);
IkReal x7397=(sj1*x7383);
IkReal x7398=(cj1*x7382);
IkReal x7399=((1.0)*x7397);
IkReal x7400=(x7382*x7384);
IkReal x7401=(x7399+x7400);
evalcond[0]=((((-1.0)*x7401))+((cj6*r20))+(((-1.0)*r21*x7391)));
evalcond[1]=(x7395+(((-1.0)*r22*x7390))+(((-1.0)*r20*sj5*x7391))+(((-1.0)*x7383*x7384))+(((-1.0)*r21*sj5*x7393)));
evalcond[2]=(x7396+((cj6*x7392))+(((-1.0)*x7395))+(((-1.0)*x7386*x7391))+(((-1.0)*x7389*x7393))+((r11*x7387)));
evalcond[3]=((((-0.0718)*x7395))+((r20*x7388))+(((-0.1264)*cj1))+(((-1.0)*r21*x7385))+(((-0.09756)*sj1))+(((-0.02626)*x7397))+(((-0.02626)*x7398))+pz+(((0.0718)*x7396)));
evalcond[4]=(((cj6*sj5*x7394))+((cj0*cj5*r12))+(((-1.0)*x7401))+(((-1.0)*r02*sj0*x7390))+(((-1.0)*sj5*x7391*x7392))+(((-1.0)*sj5*x7386*x7393))+((r10*sj5*x7387)));
evalcond[5]=((((-0.1264)*sj1))+((x7385*x7394))+((x7388*x7392))+(((-1.0)*x7385*x7386))+(((0.09756)*cj1))+(((-0.02626)*x7395))+(((0.02626)*x7396))+(((-1.0)*x7388*x7389))+((px*sj0))+(((-1.0)*cj0*py))+(((0.0718)*x7398))+(((0.0718)*x7397)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7402=(cj0*sj5);
IkReal x7403=(cj5*cj6);
IkReal x7404=((1.0)*sj5);
IkReal x7405=((1.0)*sj0);
IkReal x7406=((1.0)*cj0);
IkReal x7407=(cj5*sj6);
IkReal x7408=(r10*x7407);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj1))+((r20*x7407))+((r21*x7403))+(((-1.0)*r22*x7404)));
evalcond[2]=(((r02*x7402))+(((-1.0)*r11*x7403*x7405))+(((-1.0)*x7405*x7408))+((r12*sj0*sj5))+(((-1.0)*r01*x7403*x7406))+(((-1.0)*r00*x7406*x7407)));
evalcond[3]=(cj1+(((-1.0)*r11*x7403*x7406))+((r12*x7402))+(((-1.0)*x7406*x7408))+(((-1.0)*r02*sj0*x7404))+((r01*sj0*x7403))+((r00*sj0*x7407)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
IkReal x7409=((1.0)*r21);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*sj6*x7409))+((cj6*r20)))))+(IKabs(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x7409))+(((-1.0)*r20*sj5*sj6))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7410=((1.0)*cj6);
IkReal x7411=((1.0)*sj6);
CheckValue<IkReal> x7412=IKPowWithIntegerCheck(cj1,-1);
if(!x7412.valid){
continue;
}
CheckValue<IkReal> x7413=IKPowWithIntegerCheck(sj1,-1);
if(!x7413.valid){
continue;
}
if( IKabs(((x7412.value)*(((((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*x7411))+(((-1.0)*r21*sj5*x7410)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7413.value)*(((((-1.0)*r01*sj0*x7411))+(((-1.0)*cj0*r10*x7410))+((cj6*r00*sj0))+((cj0*r11*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7412.value)*(((((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*x7411))+(((-1.0)*r21*sj5*x7410))))))+IKsqr(((x7413.value)*(((((-1.0)*r01*sj0*x7411))+(((-1.0)*cj0*r10*x7410))+((cj6*r00*sj0))+((cj0*r11*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7412.value)*(((((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*x7411))+(((-1.0)*r21*sj5*x7410))))), ((x7413.value)*(((((-1.0)*r01*sj0*x7411))+(((-1.0)*cj0*r10*x7410))+((cj6*r00*sj0))+((cj0*r11*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7414=IKsin(j4);
IkReal x7415=IKcos(j4);
IkReal x7416=(cj6*sj0);
IkReal x7417=((0.02626)*r10);
IkReal x7418=(sj0*sj6);
IkReal x7419=((1.0)*cj1);
IkReal x7420=(r11*sj5);
IkReal x7421=(r10*sj5);
IkReal x7422=(cj0*cj6);
IkReal x7423=((0.02626)*r01);
IkReal x7424=(cj0*sj6);
IkReal x7425=((1.0)*cj5);
IkReal x7426=(cj6*r20);
IkReal x7427=((1.0)*r10);
IkReal x7428=(r21*sj6);
IkReal x7429=((1.0)*r01);
IkReal x7430=(r00*sj5);
IkReal x7431=((1.0)*py);
IkReal x7432=(cj5*r12);
IkReal x7433=((1.0)*sj5);
IkReal x7434=((0.02626)*r00);
IkReal x7435=((0.02626)*r11);
IkReal x7436=(sj1*x7415);
IkReal x7437=((0.0718)*x7414);
IkReal x7438=((1.0)*x7414);
evalcond[0]=((((-1.0)*x7428))+(((-1.0)*x7415*x7419))+x7426);
evalcond[1]=((((-1.0)*x7414*x7419))+(((-1.0)*r22*x7425))+(((-1.0)*r20*sj6*x7433))+(((-1.0)*cj6*r21*x7433)));
evalcond[2]=(((r01*x7424))+(((-1.0)*x7416*x7427))+(((-1.0)*x7438))+(((-1.0)*r00*x7422))+((r11*x7418)));
evalcond[3]=((((-1.0)*x7436))+(((-1.0)*x7422*x7427))+((r11*x7424))+((r00*x7416))+(((-1.0)*x7418*x7429)));
evalcond[4]=((((-0.02626)*x7428))+(((-0.0001)*sj1))+(((-0.1264)*cj1))+pz+(((0.02626)*x7426))+(((-0.02626)*cj1*x7415))+((cj1*x7437)));
evalcond[5]=(((r01*sj5*x7422))+((cj0*cj5*r02))+((x7424*x7430))+((x7418*x7421))+x7415+((sj0*x7432))+((x7416*x7420)));
evalcond[6]=((((-1.0)*x7418*x7430))+(((-1.0)*sj5*x7416*x7429))+((cj0*x7432))+((x7420*x7422))+(((-1.0)*sj1*x7438))+((x7421*x7424))+(((-1.0)*r02*sj0*x7425)));
evalcond[7]=((-0.21426)+(((-1.0)*x7422*x7434))+((x7418*x7435))+(((-1.0)*sj0*x7431))+(((-1.0)*x7416*x7417))+(((-0.02626)*x7414))+((x7423*x7424))+(((-0.0718)*x7415))+(((-1.0)*cj0*px)));
evalcond[8]=((((-0.02626)*x7436))+(((-1.0)*cj0*x7431))+(((-0.1264)*sj1))+((x7424*x7435))+(((-1.0)*x7418*x7423))+(((0.0001)*cj1))+((px*sj0))+((sj1*x7437))+(((-1.0)*x7417*x7422))+((x7416*x7434)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7439=((1.0)*cj6);
CheckValue<IkReal> x7440=IKPowWithIntegerCheck(cj1,-1);
if(!x7440.valid){
continue;
}
if( IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x7439))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x7439)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7440.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x7439))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x7439))))+IKsqr(((x7440.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x7439))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x7439))), ((x7440.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7441=IKsin(j4);
IkReal x7442=IKcos(j4);
IkReal x7443=(cj6*sj0);
IkReal x7444=((0.02626)*r10);
IkReal x7445=(sj0*sj6);
IkReal x7446=((1.0)*cj1);
IkReal x7447=(r11*sj5);
IkReal x7448=(r10*sj5);
IkReal x7449=(cj0*cj6);
IkReal x7450=((0.02626)*r01);
IkReal x7451=(cj0*sj6);
IkReal x7452=((1.0)*cj5);
IkReal x7453=(cj6*r20);
IkReal x7454=((1.0)*r10);
IkReal x7455=(r21*sj6);
IkReal x7456=((1.0)*r01);
IkReal x7457=(r00*sj5);
IkReal x7458=((1.0)*py);
IkReal x7459=(cj5*r12);
IkReal x7460=((1.0)*sj5);
IkReal x7461=((0.02626)*r00);
IkReal x7462=((0.02626)*r11);
IkReal x7463=(sj1*x7442);
IkReal x7464=((0.0718)*x7441);
IkReal x7465=((1.0)*x7441);
evalcond[0]=((((-1.0)*x7442*x7446))+(((-1.0)*x7455))+x7453);
evalcond[1]=((((-1.0)*cj6*r21*x7460))+(((-1.0)*r22*x7452))+(((-1.0)*r20*sj6*x7460))+(((-1.0)*x7441*x7446)));
evalcond[2]=((((-1.0)*x7443*x7454))+(((-1.0)*r00*x7449))+((r11*x7445))+((r01*x7451))+(((-1.0)*x7465)));
evalcond[3]=(((r11*x7451))+((r00*x7443))+(((-1.0)*x7445*x7456))+(((-1.0)*x7449*x7454))+(((-1.0)*x7463)));
evalcond[4]=((((-0.0001)*sj1))+(((-0.02626)*cj1*x7442))+(((-0.1264)*cj1))+(((-0.02626)*x7455))+(((0.02626)*x7453))+pz+((cj1*x7464)));
evalcond[5]=(((cj0*cj5*r02))+((sj0*x7459))+((x7445*x7448))+((r01*sj5*x7449))+((x7443*x7447))+x7442+((x7451*x7457)));
evalcond[6]=((((-1.0)*x7445*x7457))+(((-1.0)*sj5*x7443*x7456))+((x7448*x7451))+(((-1.0)*sj1*x7465))+((x7447*x7449))+((cj0*x7459))+(((-1.0)*r02*sj0*x7452)));
evalcond[7]=((-0.21426)+(((-1.0)*x7449*x7461))+(((-0.0718)*x7442))+((x7450*x7451))+(((-0.02626)*x7441))+((x7445*x7462))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x7458))+(((-1.0)*x7443*x7444)));
evalcond[8]=((((-0.02626)*x7463))+((x7443*x7461))+(((-0.1264)*sj1))+((x7451*x7462))+(((-1.0)*cj0*x7458))+(((-1.0)*x7445*x7450))+((sj1*x7464))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x7444*x7449)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7466=((1.0)*r21);
CheckValue<IkReal> x7467=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x7467.valid){
continue;
}
CheckValue<IkReal> x7468 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x7466))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x7466))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x7468.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7467.value)))+(x7468.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7469=IKsin(j4);
IkReal x7470=IKcos(j4);
IkReal x7471=(cj6*sj0);
IkReal x7472=((0.02626)*r10);
IkReal x7473=(sj0*sj6);
IkReal x7474=((1.0)*cj1);
IkReal x7475=(r11*sj5);
IkReal x7476=(r10*sj5);
IkReal x7477=(cj0*cj6);
IkReal x7478=((0.02626)*r01);
IkReal x7479=(cj0*sj6);
IkReal x7480=((1.0)*cj5);
IkReal x7481=(cj6*r20);
IkReal x7482=((1.0)*r10);
IkReal x7483=(r21*sj6);
IkReal x7484=((1.0)*r01);
IkReal x7485=(r00*sj5);
IkReal x7486=((1.0)*py);
IkReal x7487=(cj5*r12);
IkReal x7488=((1.0)*sj5);
IkReal x7489=((0.02626)*r00);
IkReal x7490=((0.02626)*r11);
IkReal x7491=(sj1*x7470);
IkReal x7492=((0.0718)*x7469);
IkReal x7493=((1.0)*x7469);
evalcond[0]=((((-1.0)*x7483))+x7481+(((-1.0)*x7470*x7474)));
evalcond[1]=((((-1.0)*cj6*r21*x7488))+(((-1.0)*r20*sj6*x7488))+(((-1.0)*r22*x7480))+(((-1.0)*x7469*x7474)));
evalcond[2]=((((-1.0)*r00*x7477))+(((-1.0)*x7471*x7482))+(((-1.0)*x7493))+((r11*x7473))+((r01*x7479)));
evalcond[3]=((((-1.0)*x7491))+(((-1.0)*x7473*x7484))+((r00*x7471))+((r11*x7479))+(((-1.0)*x7477*x7482)));
evalcond[4]=(((cj1*x7492))+(((-0.0001)*sj1))+(((-0.02626)*x7483))+(((-0.1264)*cj1))+pz+(((-0.02626)*cj1*x7470))+(((0.02626)*x7481)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x7477))+((x7471*x7475))+((sj0*x7487))+x7470+((x7473*x7476))+((x7479*x7485)));
evalcond[6]=((((-1.0)*sj1*x7493))+(((-1.0)*x7473*x7485))+((cj0*x7487))+(((-1.0)*r02*sj0*x7480))+(((-1.0)*sj5*x7471*x7484))+((x7476*x7479))+((x7475*x7477)));
evalcond[7]=((-0.21426)+(((-0.02626)*x7469))+((x7473*x7490))+(((-1.0)*sj0*x7486))+((x7478*x7479))+(((-0.0718)*x7470))+(((-1.0)*x7471*x7472))+(((-1.0)*x7477*x7489))+(((-1.0)*cj0*px)));
evalcond[8]=((((-0.1264)*sj1))+(((-0.02626)*x7491))+((sj1*x7492))+(((-1.0)*x7473*x7478))+(((-1.0)*cj0*x7486))+(((0.0001)*cj1))+((px*sj0))+((x7471*x7489))+(((-1.0)*x7472*x7477))+((x7479*x7490)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7494=(cj0*sj5);
IkReal x7495=(cj5*cj6);
IkReal x7496=((1.0)*sj5);
IkReal x7497=((1.0)*cj0);
IkReal x7498=((1.0)*sj0);
IkReal x7499=(cj5*sj6);
IkReal x7500=(r10*x7499);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(sj1+((r20*x7499))+(((-1.0)*r22*x7496))+((r21*x7495)));
evalcond[2]=((((-1.0)*r01*x7495*x7497))+(((-1.0)*x7498*x7500))+((r12*sj0*sj5))+(((-1.0)*r11*x7495*x7498))+((r02*x7494))+(((-1.0)*r00*x7497*x7499)));
evalcond[3]=((((-1.0)*x7497*x7500))+((r01*sj0*x7495))+((r00*sj0*x7499))+((r12*x7494))+(((-1.0)*r11*x7495*x7497))+(((-1.0)*r02*sj0*x7496))+(((-1.0)*cj1)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x7501=((1.0)*r21);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x7501))+(((-1.0)*r20*sj5*sj6)))))+(IKabs(((((-1.0)*sj6*x7501))+((cj6*r20))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7502=((1.0)*cj6);
IkReal x7503=((1.0)*sj6);
CheckValue<IkReal> x7504=IKPowWithIntegerCheck(cj1,-1);
if(!x7504.valid){
continue;
}
CheckValue<IkReal> x7505=IKPowWithIntegerCheck(sj1,-1);
if(!x7505.valid){
continue;
}
if( IKabs(((x7504.value)*(((((-1.0)*r20*sj5*x7503))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7502)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7505.value)*(((((-1.0)*cj0*r10*x7502))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x7503)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7504.value)*(((((-1.0)*r20*sj5*x7503))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7502))))))+IKsqr(((x7505.value)*(((((-1.0)*cj0*r10*x7502))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x7503))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7504.value)*(((((-1.0)*r20*sj5*x7503))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7502))))), ((x7505.value)*(((((-1.0)*cj0*r10*x7502))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x7503))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7506=IKsin(j4);
IkReal x7507=IKcos(j4);
IkReal x7508=(cj6*sj0);
IkReal x7509=((0.02626)*r10);
IkReal x7510=(sj0*sj6);
IkReal x7511=((1.0)*cj1);
IkReal x7512=(r11*sj5);
IkReal x7513=(r10*sj5);
IkReal x7514=(cj0*cj6);
IkReal x7515=((0.02626)*r01);
IkReal x7516=(cj0*sj6);
IkReal x7517=(r21*sj6);
IkReal x7518=((1.0)*cj5);
IkReal x7519=(cj6*r20);
IkReal x7520=((1.0)*r10);
IkReal x7521=((1.0)*r01);
IkReal x7522=(r00*sj5);
IkReal x7523=((1.0)*py);
IkReal x7524=(cj5*r12);
IkReal x7525=((1.0)*sj5);
IkReal x7526=((0.02626)*r00);
IkReal x7527=((0.02626)*r11);
IkReal x7528=(sj1*x7507);
IkReal x7529=((0.0718)*x7506);
evalcond[0]=((((-1.0)*x7507*x7511))+x7519+(((-1.0)*x7517)));
evalcond[1]=((((-1.0)*cj6*r21*x7525))+(((-1.0)*x7506*x7511))+(((-1.0)*r20*sj6*x7525))+(((-1.0)*r22*x7518)));
evalcond[2]=(((r01*x7516))+((r11*x7510))+(((-1.0)*r00*x7514))+(((-1.0)*x7508*x7520))+x7506);
evalcond[3]=(((r00*x7508))+((r11*x7516))+(((-1.0)*x7510*x7521))+(((-1.0)*x7528))+(((-1.0)*x7514*x7520)));
evalcond[4]=(((cj1*x7529))+(((-0.0001)*sj1))+(((-0.1264)*cj1))+(((-0.02626)*cj1*x7507))+(((-0.02626)*x7517))+pz+(((0.02626)*x7519)));
evalcond[5]=(((x7516*x7522))+((cj0*cj5*r02))+((sj0*x7524))+((x7510*x7513))+(((-1.0)*x7507))+((x7508*x7512))+((r01*sj5*x7514)));
evalcond[6]=((((-1.0)*sj1*x7506))+(((-1.0)*x7510*x7522))+(((-1.0)*r02*sj0*x7518))+((cj0*x7524))+((x7512*x7514))+(((-1.0)*sj5*x7508*x7521))+((x7513*x7516)));
evalcond[7]=((-0.01934)+((x7515*x7516))+(((-1.0)*sj0*x7523))+(((0.0718)*x7507))+(((-1.0)*x7508*x7509))+((x7510*x7527))+(((0.02626)*x7506))+(((-1.0)*x7514*x7526))+(((-1.0)*cj0*px)));
evalcond[8]=(((x7516*x7527))+((x7508*x7526))+(((-0.1264)*sj1))+((sj1*x7529))+(((-1.0)*x7510*x7515))+(((-1.0)*x7509*x7514))+(((-0.02626)*x7528))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*cj0*x7523)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7530=((1.0)*sj6);
CheckValue<IkReal> x7531=IKPowWithIntegerCheck(cj1,-1);
if(!x7531.valid){
continue;
}
if( IKabs(((((-1.0)*cj0*r01*x7530))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x7530))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7531.value)*((((cj6*r20))+(((-1.0)*r21*x7530)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*r01*x7530))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x7530))+((cj0*cj6*r00))))+IKsqr(((x7531.value)*((((cj6*r20))+(((-1.0)*r21*x7530))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*r01*x7530))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x7530))+((cj0*cj6*r00))), ((x7531.value)*((((cj6*r20))+(((-1.0)*r21*x7530))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7532=IKsin(j4);
IkReal x7533=IKcos(j4);
IkReal x7534=(cj6*sj0);
IkReal x7535=((0.02626)*r10);
IkReal x7536=(sj0*sj6);
IkReal x7537=((1.0)*cj1);
IkReal x7538=(r11*sj5);
IkReal x7539=(r10*sj5);
IkReal x7540=(cj0*cj6);
IkReal x7541=((0.02626)*r01);
IkReal x7542=(cj0*sj6);
IkReal x7543=(r21*sj6);
IkReal x7544=((1.0)*cj5);
IkReal x7545=(cj6*r20);
IkReal x7546=((1.0)*r10);
IkReal x7547=((1.0)*r01);
IkReal x7548=(r00*sj5);
IkReal x7549=((1.0)*py);
IkReal x7550=(cj5*r12);
IkReal x7551=((1.0)*sj5);
IkReal x7552=((0.02626)*r00);
IkReal x7553=((0.02626)*r11);
IkReal x7554=(sj1*x7533);
IkReal x7555=((0.0718)*x7532);
evalcond[0]=((((-1.0)*x7533*x7537))+(((-1.0)*x7543))+x7545);
evalcond[1]=((((-1.0)*x7532*x7537))+(((-1.0)*r22*x7544))+(((-1.0)*cj6*r21*x7551))+(((-1.0)*r20*sj6*x7551)));
evalcond[2]=((((-1.0)*x7534*x7546))+((r01*x7542))+x7532+((r11*x7536))+(((-1.0)*r00*x7540)));
evalcond[3]=((((-1.0)*x7540*x7546))+(((-1.0)*x7554))+((r11*x7542))+((r00*x7534))+(((-1.0)*x7536*x7547)));
evalcond[4]=((((-0.02626)*cj1*x7533))+(((-0.02626)*x7543))+(((-0.0001)*sj1))+(((-0.1264)*cj1))+(((0.02626)*x7545))+pz+((cj1*x7555)));
evalcond[5]=(((r01*sj5*x7540))+((cj0*cj5*r02))+((sj0*x7550))+(((-1.0)*x7533))+((x7536*x7539))+((x7542*x7548))+((x7534*x7538)));
evalcond[6]=(((cj0*x7550))+(((-1.0)*r02*sj0*x7544))+(((-1.0)*sj5*x7534*x7547))+((x7539*x7542))+(((-1.0)*sj1*x7532))+((x7538*x7540))+(((-1.0)*x7536*x7548)));
evalcond[7]=((-0.01934)+(((0.02626)*x7532))+(((-1.0)*x7540*x7552))+(((-1.0)*sj0*x7549))+((x7541*x7542))+(((-1.0)*x7534*x7535))+((x7536*x7553))+(((-1.0)*cj0*px))+(((0.0718)*x7533)));
evalcond[8]=((((-0.02626)*x7554))+(((-0.1264)*sj1))+(((-1.0)*x7535*x7540))+(((-1.0)*cj0*x7549))+((sj1*x7555))+((x7534*x7552))+((x7542*x7553))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x7536*x7541)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7556=((1.0)*r21);
CheckValue<IkReal> x7557=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x7557.valid){
continue;
}
CheckValue<IkReal> x7558 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x7556))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x7556))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x7558.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7557.value)))+(x7558.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7559=IKsin(j4);
IkReal x7560=IKcos(j4);
IkReal x7561=(cj6*sj0);
IkReal x7562=((0.02626)*r10);
IkReal x7563=(sj0*sj6);
IkReal x7564=((1.0)*cj1);
IkReal x7565=(r11*sj5);
IkReal x7566=(r10*sj5);
IkReal x7567=(cj0*cj6);
IkReal x7568=((0.02626)*r01);
IkReal x7569=(cj0*sj6);
IkReal x7570=(r21*sj6);
IkReal x7571=((1.0)*cj5);
IkReal x7572=(cj6*r20);
IkReal x7573=((1.0)*r10);
IkReal x7574=((1.0)*r01);
IkReal x7575=(r00*sj5);
IkReal x7576=((1.0)*py);
IkReal x7577=(cj5*r12);
IkReal x7578=((1.0)*sj5);
IkReal x7579=((0.02626)*r00);
IkReal x7580=((0.02626)*r11);
IkReal x7581=(sj1*x7560);
IkReal x7582=((0.0718)*x7559);
evalcond[0]=((((-1.0)*x7560*x7564))+x7572+(((-1.0)*x7570)));
evalcond[1]=((((-1.0)*x7559*x7564))+(((-1.0)*cj6*r21*x7578))+(((-1.0)*r22*x7571))+(((-1.0)*r20*sj6*x7578)));
evalcond[2]=((((-1.0)*r00*x7567))+(((-1.0)*x7561*x7573))+((r11*x7563))+x7559+((r01*x7569)));
evalcond[3]=((((-1.0)*x7567*x7573))+(((-1.0)*x7581))+((r11*x7569))+(((-1.0)*x7563*x7574))+((r00*x7561)));
evalcond[4]=((((0.02626)*x7572))+((cj1*x7582))+(((-0.0001)*sj1))+(((-0.02626)*cj1*x7560))+(((-0.1264)*cj1))+pz+(((-0.02626)*x7570)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x7567))+(((-1.0)*x7560))+((x7569*x7575))+((x7561*x7565))+((x7563*x7566))+((sj0*x7577)));
evalcond[6]=((((-1.0)*sj1*x7559))+((x7566*x7569))+((x7565*x7567))+(((-1.0)*x7563*x7575))+(((-1.0)*sj5*x7561*x7574))+(((-1.0)*r02*sj0*x7571))+((cj0*x7577)));
evalcond[7]=((-0.01934)+(((-1.0)*x7567*x7579))+((x7568*x7569))+((x7563*x7580))+(((-1.0)*sj0*x7576))+(((0.02626)*x7559))+(((0.0718)*x7560))+(((-1.0)*x7561*x7562))+(((-1.0)*cj0*px)));
evalcond[8]=((((-1.0)*x7562*x7567))+(((-1.0)*x7563*x7568))+(((-0.1264)*sj1))+((x7561*x7579))+((x7569*x7580))+(((-0.02626)*x7581))+(((0.0001)*cj1))+((px*sj0))+((sj1*x7582))+(((-1.0)*cj0*x7576)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x7590=IKPowWithIntegerCheck(cj3,-1);
if(!x7590.valid){
continue;
}
IkReal x7583=x7590.value;
IkReal x7584=(sj1*sj3);
IkReal x7585=((1.0)*cj6);
IkReal x7586=(r10*sj0);
IkReal x7587=(cj0*r00);
IkReal x7588=(cj0*r01*sj6);
IkReal x7589=(r11*sj0*sj6);
CheckValue<IkReal> x7591=IKPowWithIntegerCheck(cj1,-1);
if(!x7591.valid){
continue;
}
if( IKabs((x7583*(((((-1.0)*x7585*x7586))+(((-1.0)*x7585*x7587))+x7588+x7589)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x7583*(x7591.value)*(((((-1.0)*cj3*r21*sj6))+(((-1.0)*x7584*x7585*x7586))+(((-1.0)*x7584*x7585*x7587))+((cj3*cj6*r20))+((x7584*x7589))+((x7584*x7588)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x7583*(((((-1.0)*x7585*x7586))+(((-1.0)*x7585*x7587))+x7588+x7589))))+IKsqr((x7583*(x7591.value)*(((((-1.0)*cj3*r21*sj6))+(((-1.0)*x7584*x7585*x7586))+(((-1.0)*x7584*x7585*x7587))+((cj3*cj6*r20))+((x7584*x7589))+((x7584*x7588))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x7583*(((((-1.0)*x7585*x7586))+(((-1.0)*x7585*x7587))+x7588+x7589))), (x7583*(x7591.value)*(((((-1.0)*cj3*r21*sj6))+(((-1.0)*x7584*x7585*x7586))+(((-1.0)*x7584*x7585*x7587))+((cj3*cj6*r20))+((x7584*x7589))+((x7584*x7588))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7592=IKsin(j4);
IkReal x7593=IKcos(j4);
IkReal x7594=(cj6*sj0);
IkReal x7595=((0.02626)*r10);
IkReal x7596=(sj0*sj6);
IkReal x7597=(sj1*sj3);
IkReal x7598=((1.0)*cj1);
IkReal x7599=(r11*sj5);
IkReal x7600=(r10*sj5);
IkReal x7601=((0.02626)*r01);
IkReal x7602=(cj0*sj6);
IkReal x7603=((0.0718)*cj1);
IkReal x7604=((1.0)*cj5);
IkReal x7605=(cj1*sj3);
IkReal x7606=((0.02626)*cj6);
IkReal x7607=((1.0)*r10);
IkReal x7608=(r21*sj6);
IkReal x7609=((1.0)*r01);
IkReal x7610=(r00*sj5);
IkReal x7611=((1.0)*py);
IkReal x7612=(cj5*r12);
IkReal x7613=(cj0*cj6);
IkReal x7614=((1.0)*sj5);
IkReal x7615=((0.02626)*r11);
IkReal x7616=((0.02626)*x7592);
IkReal x7617=((1.0)*x7592);
IkReal x7618=(sj1*x7593);
IkReal x7619=((0.0718)*x7593);
evalcond[0]=(((cj6*r20))+(((-1.0)*x7593*x7598))+(((-1.0)*x7608))+((x7592*x7597)));
evalcond[1]=((((-1.0)*x7594*x7607))+((r01*x7602))+(((-1.0)*r00*x7613))+(((-1.0)*cj3*x7617))+((r11*x7596)));
evalcond[2]=((((-1.0)*x7592*x7598))+(((-1.0)*x7593*x7597))+(((-1.0)*r22*x7604))+(((-1.0)*cj6*r21*x7614))+(((-1.0)*r20*sj6*x7614)));
evalcond[3]=(((r11*x7602))+(((-1.0)*sj3*x7592*x7598))+(((-1.0)*x7596*x7609))+((r00*x7594))+(((-1.0)*x7618))+(((-1.0)*x7607*x7613)));
evalcond[4]=(((r01*sj5*x7613))+((cj3*x7593))+((x7596*x7600))+((x7594*x7599))+((cj0*cj5*r02))+((x7602*x7610))+((sj0*x7612)));
evalcond[5]=((((-1.0)*x7596*x7610))+((x7600*x7602))+((x7599*x7613))+(((-1.0)*sj5*x7594*x7609))+((cj0*x7612))+(((-1.0)*sj1*x7617))+((x7593*x7605))+(((-1.0)*r02*sj0*x7604)));
evalcond[6]=((-0.1168)+((x7601*x7602))+(((-1.0)*cj3*x7616))+(((-1.0)*cj3*x7619))+(((-1.0)*x7594*x7595))+(((-0.09746)*cj3))+(((-1.0)*sj0*x7611))+((x7596*x7615))+(((-1.0)*cj0*px))+(((-1.0)*cj0*r00*x7606)));
evalcond[7]=(((r20*x7606))+(((-0.0001)*sj1))+((x7597*x7619))+((x7597*x7616))+(((-0.1264)*cj1))+((x7592*x7603))+(((0.09746)*x7597))+pz+(((-0.02626)*x7608))+(((-0.02626)*cj1*x7593)));
evalcond[8]=((((-0.09746)*x7605))+(((-0.1264)*sj1))+((x7602*x7615))+(((0.02626)*r00*x7594))+(((-1.0)*x7605*x7616))+(((-0.02626)*x7618))+(((-1.0)*sj3*x7593*x7603))+(((0.0718)*sj1*x7592))+(((-1.0)*x7596*x7601))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*cj0*x7611))+(((-1.0)*x7595*x7613)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7620=(cj1*cj6);
IkReal x7621=(cj6*sj1);
IkReal x7622=((1.0)*sj6);
IkReal x7623=(r01*sj0);
IkReal x7624=(r00*sj0);
IkReal x7625=((1.0)*cj0*r10);
IkReal x7626=(cj0*r11*sj6);
CheckValue<IkReal> x7627=IKPowWithIntegerCheck(sj3,-1);
if(!x7627.valid){
continue;
}
if( IKabs(((x7627.value)*(((((-1.0)*r20*x7621))+(((-1.0)*x7620*x7625))+((x7620*x7624))+((cj1*x7626))+((r21*sj1*sj6))+(((-1.0)*cj1*x7622*x7623)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x7621*x7625))+((x7621*x7624))+((r20*x7620))+(((-1.0)*cj1*r21*x7622))+(((-1.0)*sj1*x7622*x7623))+((sj1*x7626)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7627.value)*(((((-1.0)*r20*x7621))+(((-1.0)*x7620*x7625))+((x7620*x7624))+((cj1*x7626))+((r21*sj1*sj6))+(((-1.0)*cj1*x7622*x7623))))))+IKsqr(((((-1.0)*x7621*x7625))+((x7621*x7624))+((r20*x7620))+(((-1.0)*cj1*r21*x7622))+(((-1.0)*sj1*x7622*x7623))+((sj1*x7626))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7627.value)*(((((-1.0)*r20*x7621))+(((-1.0)*x7620*x7625))+((x7620*x7624))+((cj1*x7626))+((r21*sj1*sj6))+(((-1.0)*cj1*x7622*x7623))))), ((((-1.0)*x7621*x7625))+((x7621*x7624))+((r20*x7620))+(((-1.0)*cj1*r21*x7622))+(((-1.0)*sj1*x7622*x7623))+((sj1*x7626))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7628=IKsin(j4);
IkReal x7629=IKcos(j4);
IkReal x7630=(cj6*sj0);
IkReal x7631=((0.02626)*r10);
IkReal x7632=(sj0*sj6);
IkReal x7633=(sj1*sj3);
IkReal x7634=((1.0)*cj1);
IkReal x7635=(r11*sj5);
IkReal x7636=(r10*sj5);
IkReal x7637=((0.02626)*r01);
IkReal x7638=(cj0*sj6);
IkReal x7639=((0.0718)*cj1);
IkReal x7640=((1.0)*cj5);
IkReal x7641=(cj1*sj3);
IkReal x7642=((0.02626)*cj6);
IkReal x7643=((1.0)*r10);
IkReal x7644=(r21*sj6);
IkReal x7645=((1.0)*r01);
IkReal x7646=(r00*sj5);
IkReal x7647=((1.0)*py);
IkReal x7648=(cj5*r12);
IkReal x7649=(cj0*cj6);
IkReal x7650=((1.0)*sj5);
IkReal x7651=((0.02626)*r11);
IkReal x7652=((0.02626)*x7628);
IkReal x7653=((1.0)*x7628);
IkReal x7654=(sj1*x7629);
IkReal x7655=((0.0718)*x7629);
evalcond[0]=(((x7628*x7633))+(((-1.0)*x7629*x7634))+((cj6*r20))+(((-1.0)*x7644)));
evalcond[1]=((((-1.0)*r00*x7649))+((r11*x7632))+((r01*x7638))+(((-1.0)*cj3*x7653))+(((-1.0)*x7630*x7643)));
evalcond[2]=((((-1.0)*r22*x7640))+(((-1.0)*x7628*x7634))+(((-1.0)*r20*sj6*x7650))+(((-1.0)*cj6*r21*x7650))+(((-1.0)*x7629*x7633)));
evalcond[3]=((((-1.0)*x7632*x7645))+((r11*x7638))+((r00*x7630))+(((-1.0)*sj3*x7628*x7634))+(((-1.0)*x7654))+(((-1.0)*x7643*x7649)));
evalcond[4]=(((x7630*x7635))+((cj0*cj5*r02))+((sj0*x7648))+((x7632*x7636))+((x7638*x7646))+((r01*sj5*x7649))+((cj3*x7629)));
evalcond[5]=((((-1.0)*sj5*x7630*x7645))+((x7635*x7649))+((x7629*x7641))+(((-1.0)*r02*sj0*x7640))+(((-1.0)*x7632*x7646))+(((-1.0)*sj1*x7653))+((cj0*x7648))+((x7636*x7638)));
evalcond[6]=((-0.1168)+(((-1.0)*x7630*x7631))+(((-1.0)*cj3*x7652))+(((-1.0)*cj3*x7655))+(((-1.0)*sj0*x7647))+((x7637*x7638))+(((-0.09746)*cj3))+(((-1.0)*cj0*px))+((x7632*x7651))+(((-1.0)*cj0*r00*x7642)));
evalcond[7]=(((x7633*x7652))+((x7633*x7655))+(((-0.02626)*cj1*x7629))+(((-0.0001)*sj1))+((x7628*x7639))+(((0.09746)*x7633))+(((-0.1264)*cj1))+pz+(((-0.02626)*x7644))+((r20*x7642)));
evalcond[8]=((((-0.1264)*sj1))+(((-0.02626)*x7654))+(((-1.0)*x7631*x7649))+(((0.02626)*r00*x7630))+(((-0.09746)*x7641))+((x7638*x7651))+(((-1.0)*cj0*x7647))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x7632*x7637))+(((0.0718)*sj1*x7628))+(((-1.0)*x7641*x7652))+(((-1.0)*sj3*x7629*x7639)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7656=cj3*cj3;
IkReal x7657=(cj1*r20);
IkReal x7658=((1.0)*sj5);
IkReal x7659=(cj1*r21);
IkReal x7660=(r21*sj1*sj3);
IkReal x7661=(r20*sj1*sj3);
IkReal x7662=((1.0)*cj5*r22);
CheckValue<IkReal> x7663 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*x7661))+(((-1.0)*cj1*x7662))+(((-1.0)*cj6*x7658*x7659))+(((-1.0)*sj6*x7657*x7658))+((sj6*x7660)))),((((-1.0)*cj6*x7658*x7660))+(((-1.0)*sj6*x7658*x7661))+((cj6*x7657))+(((-1.0)*sj1*sj3*x7662))+(((-1.0)*sj6*x7659))),IKFAST_ATAN2_MAGTHRESH);
if(!x7663.valid){
continue;
}
CheckValue<IkReal> x7664=IKPowWithIntegerCheck(IKsign(((1.0)+(((-1.0)*x7656))+((x7656*(cj1*cj1))))),-1);
if(!x7664.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x7663.value)+(((1.5707963267949)*(x7664.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7665=IKsin(j4);
IkReal x7666=IKcos(j4);
IkReal x7667=(cj6*sj0);
IkReal x7668=((0.02626)*r10);
IkReal x7669=(sj0*sj6);
IkReal x7670=(sj1*sj3);
IkReal x7671=((1.0)*cj1);
IkReal x7672=(r11*sj5);
IkReal x7673=(r10*sj5);
IkReal x7674=((0.02626)*r01);
IkReal x7675=(cj0*sj6);
IkReal x7676=((0.0718)*cj1);
IkReal x7677=((1.0)*cj5);
IkReal x7678=(cj1*sj3);
IkReal x7679=((0.02626)*cj6);
IkReal x7680=((1.0)*r10);
IkReal x7681=(r21*sj6);
IkReal x7682=((1.0)*r01);
IkReal x7683=(r00*sj5);
IkReal x7684=((1.0)*py);
IkReal x7685=(cj5*r12);
IkReal x7686=(cj0*cj6);
IkReal x7687=((1.0)*sj5);
IkReal x7688=((0.02626)*r11);
IkReal x7689=((0.02626)*x7665);
IkReal x7690=((1.0)*x7665);
IkReal x7691=(sj1*x7666);
IkReal x7692=((0.0718)*x7666);
evalcond[0]=((((-1.0)*x7666*x7671))+(((-1.0)*x7681))+((cj6*r20))+((x7665*x7670)));
evalcond[1]=(((r11*x7669))+(((-1.0)*cj3*x7690))+(((-1.0)*r00*x7686))+((r01*x7675))+(((-1.0)*x7667*x7680)));
evalcond[2]=((((-1.0)*r20*sj6*x7687))+(((-1.0)*cj6*r21*x7687))+(((-1.0)*x7666*x7670))+(((-1.0)*r22*x7677))+(((-1.0)*x7665*x7671)));
evalcond[3]=(((r00*x7667))+((r11*x7675))+(((-1.0)*x7691))+(((-1.0)*x7680*x7686))+(((-1.0)*sj3*x7665*x7671))+(((-1.0)*x7669*x7682)));
evalcond[4]=(((x7669*x7673))+((cj0*cj5*r02))+((sj0*x7685))+((x7667*x7672))+((r01*sj5*x7686))+((x7675*x7683))+((cj3*x7666)));
evalcond[5]=(((cj0*x7685))+(((-1.0)*x7669*x7683))+(((-1.0)*sj1*x7690))+(((-1.0)*r02*sj0*x7677))+((x7673*x7675))+((x7672*x7686))+(((-1.0)*sj5*x7667*x7682))+((x7666*x7678)));
evalcond[6]=((-0.1168)+(((-1.0)*cj0*r00*x7679))+(((-1.0)*cj3*x7692))+((x7669*x7688))+(((-0.09746)*cj3))+((x7674*x7675))+(((-1.0)*sj0*x7684))+(((-1.0)*cj3*x7689))+(((-1.0)*cj0*px))+(((-1.0)*x7667*x7668)));
evalcond[7]=((((-0.02626)*x7681))+((x7670*x7692))+(((-0.0001)*sj1))+((x7670*x7689))+(((-0.1264)*cj1))+(((0.09746)*x7670))+((r20*x7679))+pz+((x7665*x7676))+(((-0.02626)*cj1*x7666)));
evalcond[8]=((((-1.0)*cj0*x7684))+(((-0.1264)*sj1))+(((-0.02626)*x7691))+(((-1.0)*sj3*x7666*x7676))+(((0.02626)*r00*x7667))+(((0.0718)*sj1*x7665))+(((-0.09746)*x7678))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x7668*x7686))+(((-1.0)*x7678*x7689))+(((-1.0)*x7669*x7674))+((x7675*x7688)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x7693=((1.0)*cj5);
CheckValue<IkReal> x7694=IKPowWithIntegerCheck(sj1,-1);
if(!x7694.valid){
continue;
}
if( IKabs(((((-1.0)*r10*sj0*sj6*x7693))+((r12*sj0*sj5))+(((-1.0)*cj6*r11*sj0*x7693))+(((-1.0)*cj0*cj6*r01*x7693))+(((-1.0)*cj0*r00*sj6*x7693))+((cj0*r02*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7694.value)*((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*sj0*sj6*x7693))+((r12*sj0*sj5))+(((-1.0)*cj6*r11*sj0*x7693))+(((-1.0)*cj0*cj6*r01*x7693))+(((-1.0)*cj0*r00*sj6*x7693))+((cj0*r02*sj5))))+IKsqr(((x7694.value)*((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*r10*sj0*sj6*x7693))+((r12*sj0*sj5))+(((-1.0)*cj6*r11*sj0*x7693))+(((-1.0)*cj0*cj6*r01*x7693))+(((-1.0)*cj0*r00*sj6*x7693))+((cj0*r02*sj5))), ((x7694.value)*((((cj5*r20*sj6))+((cj5*cj6*r21))+(((-1.0)*r22*sj5))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x7695=IKcos(j3);
IkReal x7696=(cj5*cj6);
IkReal x7697=((1.0)*cj0);
IkReal x7698=((1.0)*sj5);
IkReal x7699=(cj0*sj5);
IkReal x7700=((1.0)*sj0);
IkReal x7701=(cj5*sj6);
IkReal x7702=(r10*x7701);
evalcond[0]=((((-1.0)*sj1*x7695))+((r20*x7701))+(((-1.0)*r22*x7698))+((r21*x7696)));
evalcond[1]=((((-1.0)*x7697*x7702))+((r12*x7699))+((r00*sj0*x7701))+((r01*sj0*x7696))+(((-1.0)*r02*sj0*x7698))+(((-1.0)*r11*x7696*x7697))+((cj1*x7695)));
evalcond[2]=(((r02*x7699))+(((-1.0)*r00*x7697*x7701))+(((-1.0)*r11*x7696*x7700))+((r12*sj0*sj5))+(((-1.0)*(IKsin(j3))))+(((-1.0)*x7700*x7702))+(((-1.0)*r01*x7696*x7697)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7703=cj3*cj3;
IkReal x7704=((1.0)+(((-1.0)*x7703))+((x7703*(cj1*cj1))));
j4eval[0]=x7704;
j4eval[1]=IKsign(x7704);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
j4eval[0]=cj3;
j4eval[1]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x7705=(cj5*cj6);
IkReal x7706=(r11*sj0);
IkReal x7707=(cj6*sj5);
IkReal x7708=((1.0)*cj0);
IkReal x7709=(r10*sj6);
IkReal x7710=(sj0*sj5);
IkReal x7711=(r00*sj6);
IkReal x7712=(cj0*sj5);
IkReal x7713=((0.02626)*cj0);
IkReal x7714=(r01*sj6);
IkReal x7715=((1.0)*sj0);
IkReal x7716=(cj6*r10);
IkReal x7717=(cj5*sj0);
IkReal x7718=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x7705))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x7708*x7718))+((cj0*x7714))+((sj6*x7706))+(((-1.0)*x7715*x7716)));
evalcond[3]=((-1.0)+(((-1.0)*r01*x7705*x7708))+((r02*x7712))+((r12*x7710))+(((-1.0)*x7705*x7706))+(((-1.0)*cj5*x7708*x7711))+(((-1.0)*cj5*x7709*x7715)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x7717))+((x7711*x7712))+((cj0*r01*x7707))+((x7706*x7707))+((x7709*x7710)));
evalcond[5]=((((-1.0)*r02*x7710))+((r12*x7712))+(((-1.0)*r11*x7705*x7708))+((x7711*x7717))+(((-1.0)*cj5*x7708*x7709))+((r01*sj0*x7705)));
evalcond[6]=((-0.1168)+(((0.02626)*sj6*x7706))+(((-0.02626)*sj0*x7716))+((x7713*x7714))+(((-1.0)*x7713*x7718))+(((-1.0)*px*x7708))+(((-1.0)*py*x7715)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7719=(cj1*r20);
IkReal x7720=((1.0)*sj6);
IkReal x7721=(r20*sj1);
IkReal x7722=((1.0)*cj5*r22);
IkReal x7723=((1.0)*cj6*r21*sj5);
if( IKabs(((((-1.0)*cj6*x7721))+(((-1.0)*sj5*x7719*x7720))+((r21*sj1*sj6))+(((-1.0)*cj1*x7723))+(((-1.0)*cj1*x7722)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x7720*x7721))+((cj6*x7719))+(((-1.0)*sj1*x7722))+(((-1.0)*sj1*x7723))+(((-1.0)*cj1*r21*x7720)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*x7721))+(((-1.0)*sj5*x7719*x7720))+((r21*sj1*sj6))+(((-1.0)*cj1*x7723))+(((-1.0)*cj1*x7722))))+IKsqr(((((-1.0)*sj5*x7720*x7721))+((cj6*x7719))+(((-1.0)*sj1*x7722))+(((-1.0)*sj1*x7723))+(((-1.0)*cj1*r21*x7720))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*x7721))+(((-1.0)*sj5*x7719*x7720))+((r21*sj1*sj6))+(((-1.0)*cj1*x7723))+(((-1.0)*cj1*x7722))), ((((-1.0)*sj5*x7720*x7721))+((cj6*x7719))+(((-1.0)*sj1*x7722))+(((-1.0)*sj1*x7723))+(((-1.0)*cj1*r21*x7720))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x7724=IKcos(j4);
IkReal x7725=IKsin(j4);
IkReal x7726=((1.0)*cj1);
IkReal x7727=((0.02626)*sj6);
IkReal x7728=(r01*sj0);
IkReal x7729=(cj0*sj6);
IkReal x7730=((0.02626)*cj6);
IkReal x7731=(cj0*r10);
IkReal x7732=((1.0)*cj5);
IkReal x7733=((1.0)*cj6);
IkReal x7734=((1.0)*sj6);
IkReal x7735=(r00*sj0);
IkReal x7736=(cj0*r11);
IkReal x7737=(sj1*x7724);
IkReal x7738=(cj1*x7725);
IkReal x7739=(sj1*x7725);
IkReal x7740=(cj1*x7724);
IkReal x7741=((1.0)*x7737);
IkReal x7742=(x7725*x7726);
IkReal x7743=(x7742+x7741);
evalcond[0]=((((-1.0)*x7724*x7726))+(((-1.0)*r21*x7734))+((cj6*r20))+x7739);
evalcond[1]=((((-1.0)*r21*sj5*x7733))+(((-1.0)*r20*sj5*x7734))+(((-1.0)*r22*x7732))+(((-1.0)*x7743)));
evalcond[2]=((((-1.0)*x7728*x7734))+(((-1.0)*x7731*x7733))+(((-1.0)*x7743))+((r11*x7729))+((cj6*x7735)));
evalcond[3]=((((-0.02626)*x7740))+(((-1.0)*r21*x7727))+(((0.09736)*sj1))+(((0.0718)*x7737))+(((0.0718)*x7738))+(((-0.1264)*cj1))+((r20*x7730))+pz+(((0.02626)*x7739)));
evalcond[4]=((((-1.0)*x7739))+((cj0*cj5*r12))+(((-1.0)*sj5*x7728*x7733))+((r10*sj5*x7729))+((cj6*sj5*x7736))+(((-1.0)*sj5*x7734*x7735))+x7740+(((-1.0)*r02*sj0*x7732)));
evalcond[5]=((((-0.1264)*sj1))+(((-0.09736)*cj1))+(((0.0718)*x7739))+(((-1.0)*x7730*x7731))+((x7730*x7735))+(((-1.0)*x7727*x7728))+((x7727*x7736))+(((-0.02626)*x7737))+(((-0.02626)*x7738))+((px*sj0))+(((-0.0718)*x7740))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7744=(cj5*cj6);
IkReal x7745=(r11*sj0);
IkReal x7746=(cj6*sj5);
IkReal x7747=((1.0)*cj0);
IkReal x7748=(r10*sj6);
IkReal x7749=(sj0*sj5);
IkReal x7750=(r00*sj6);
IkReal x7751=(cj0*sj5);
IkReal x7752=((0.02626)*cj0);
IkReal x7753=(r01*sj6);
IkReal x7754=((1.0)*sj0);
IkReal x7755=(cj6*r10);
IkReal x7756=(cj5*sj0);
IkReal x7757=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x7744)));
evalcond[2]=((((-1.0)*x7754*x7755))+((sj6*x7745))+((cj0*x7753))+(((-1.0)*x7747*x7757)));
evalcond[3]=((1.0)+((r12*x7749))+(((-1.0)*cj5*x7747*x7750))+((r02*x7751))+(((-1.0)*r01*x7744*x7747))+(((-1.0)*cj5*x7748*x7754))+(((-1.0)*x7744*x7745)));
evalcond[4]=(((cj0*cj5*r02))+((x7748*x7749))+((x7750*x7751))+((x7745*x7746))+((r12*x7756))+((cj0*r01*x7746)));
evalcond[5]=((((-1.0)*cj5*x7747*x7748))+((r01*sj0*x7744))+(((-1.0)*r02*x7749))+((x7750*x7756))+(((-1.0)*r11*x7744*x7747))+((r12*x7751)));
evalcond[6]=((-0.1168)+((x7752*x7753))+(((-1.0)*x7752*x7757))+(((-1.0)*px*x7747))+(((0.02626)*sj6*x7745))+(((-0.02626)*sj0*x7755))+(((-1.0)*py*x7754)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7758=(sj1*sj6);
IkReal x7759=(r20*sj5);
IkReal x7760=(cj1*cj6);
IkReal x7761=((1.0)*r21);
IkReal x7762=(cj5*r22);
IkReal x7763=(cj1*sj6);
IkReal x7764=(cj6*sj1);
if( IKabs(((((-1.0)*sj5*x7760*x7761))+(((-1.0)*x7758*x7761))+(((-1.0)*x7759*x7763))+((r20*x7764))+(((-1.0)*cj1*x7762)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x7762))+((x7758*x7759))+((r20*x7760))+(((-1.0)*x7761*x7763))+((r21*sj5*x7764)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x7760*x7761))+(((-1.0)*x7758*x7761))+(((-1.0)*x7759*x7763))+((r20*x7764))+(((-1.0)*cj1*x7762))))+IKsqr((((sj1*x7762))+((x7758*x7759))+((r20*x7760))+(((-1.0)*x7761*x7763))+((r21*sj5*x7764))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj5*x7760*x7761))+(((-1.0)*x7758*x7761))+(((-1.0)*x7759*x7763))+((r20*x7764))+(((-1.0)*cj1*x7762))), (((sj1*x7762))+((x7758*x7759))+((r20*x7760))+(((-1.0)*x7761*x7763))+((r21*sj5*x7764))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x7765=IKcos(j4);
IkReal x7766=IKsin(j4);
IkReal x7767=((1.0)*cj1);
IkReal x7768=((0.02626)*sj6);
IkReal x7769=(r01*sj0);
IkReal x7770=(cj0*sj6);
IkReal x7771=((0.02626)*cj6);
IkReal x7772=(cj0*r10);
IkReal x7773=((1.0)*cj5);
IkReal x7774=((1.0)*sj6);
IkReal x7775=(r00*sj0);
IkReal x7776=((1.0)*cj6);
IkReal x7777=(cj0*r11);
IkReal x7778=(sj1*x7765);
IkReal x7779=(cj1*x7766);
IkReal x7780=(sj1*x7766);
IkReal x7781=(cj1*x7765);
IkReal x7782=((1.0)*x7780);
IkReal x7783=(x7765*x7767);
IkReal x7784=(x7782+x7783);
evalcond[0]=(((cj6*r20))+(((-1.0)*r21*x7774))+(((-1.0)*x7784)));
evalcond[1]=((((-1.0)*x7766*x7767))+(((-1.0)*r20*sj5*x7774))+(((-1.0)*r22*x7773))+(((-1.0)*r21*sj5*x7776))+x7778);
evalcond[2]=(((r11*x7770))+(((-1.0)*x7772*x7776))+(((-1.0)*x7769*x7774))+(((-1.0)*x7778))+((cj6*x7775))+x7779);
evalcond[3]=((((-0.02626)*x7780))+(((-0.02626)*x7781))+(((-0.1264)*cj1))+(((-0.09756)*sj1))+((r20*x7771))+pz+(((-1.0)*r21*x7768))+(((0.0718)*x7779))+(((-0.0718)*x7778)));
evalcond[4]=(((cj0*cj5*r12))+((cj6*sj5*x7777))+(((-1.0)*x7784))+((r10*sj5*x7770))+(((-1.0)*sj5*x7769*x7776))+(((-1.0)*sj5*x7774*x7775))+(((-1.0)*r02*sj0*x7773)));
evalcond[5]=((((-1.0)*x7771*x7772))+(((-0.1264)*sj1))+(((-1.0)*x7768*x7769))+((x7771*x7775))+((x7768*x7777))+(((0.0718)*x7781))+(((0.0718)*x7780))+(((0.09756)*cj1))+((px*sj0))+(((0.02626)*x7779))+(((-0.02626)*x7778))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7785=(cj0*sj5);
IkReal x7786=(cj5*cj6);
IkReal x7787=((1.0)*sj5);
IkReal x7788=((1.0)*sj0);
IkReal x7789=((1.0)*cj0);
IkReal x7790=(cj5*sj6);
IkReal x7791=(r10*x7790);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj1))+((r20*x7790))+((r21*x7786))+(((-1.0)*r22*x7787)));
evalcond[2]=((((-1.0)*r11*x7786*x7788))+((r12*sj0*sj5))+(((-1.0)*r00*x7789*x7790))+((r02*x7785))+(((-1.0)*x7788*x7791))+(((-1.0)*r01*x7786*x7789)));
evalcond[3]=((((-1.0)*r02*sj0*x7787))+cj1+(((-1.0)*r11*x7786*x7789))+((r00*sj0*x7790))+((r12*x7785))+((r01*sj0*x7786))+(((-1.0)*x7789*x7791)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
IkReal x7792=((1.0)*r21);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*sj6*x7792))+((cj6*r20)))))+(IKabs(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x7792))+(((-1.0)*r20*sj5*sj6))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7793=((1.0)*cj6);
IkReal x7794=((1.0)*sj6);
CheckValue<IkReal> x7795=IKPowWithIntegerCheck(cj1,-1);
if(!x7795.valid){
continue;
}
CheckValue<IkReal> x7796=IKPowWithIntegerCheck(sj1,-1);
if(!x7796.valid){
continue;
}
if( IKabs(((x7795.value)*(((((-1.0)*r20*sj5*x7794))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7793)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7796.value)*(((((-1.0)*r01*sj0*x7794))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x7793)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7795.value)*(((((-1.0)*r20*sj5*x7794))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7793))))))+IKsqr(((x7796.value)*(((((-1.0)*r01*sj0*x7794))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x7793))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7795.value)*(((((-1.0)*r20*sj5*x7794))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7793))))), ((x7796.value)*(((((-1.0)*r01*sj0*x7794))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x7793))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7797=IKsin(j4);
IkReal x7798=IKcos(j4);
IkReal x7799=(cj6*sj0);
IkReal x7800=((0.02626)*r10);
IkReal x7801=(sj0*sj6);
IkReal x7802=((1.0)*cj1);
IkReal x7803=(r11*sj5);
IkReal x7804=(r10*sj5);
IkReal x7805=(cj0*cj6);
IkReal x7806=((0.02626)*r01);
IkReal x7807=(cj0*sj6);
IkReal x7808=((1.0)*cj5);
IkReal x7809=(cj6*r20);
IkReal x7810=((1.0)*r10);
IkReal x7811=(r21*sj6);
IkReal x7812=((1.0)*r01);
IkReal x7813=(r00*sj5);
IkReal x7814=((1.0)*py);
IkReal x7815=(cj5*r12);
IkReal x7816=((1.0)*sj5);
IkReal x7817=((0.02626)*r00);
IkReal x7818=((0.02626)*r11);
IkReal x7819=(sj1*x7798);
IkReal x7820=((0.0718)*x7797);
IkReal x7821=((1.0)*x7797);
evalcond[0]=((((-1.0)*x7811))+x7809+(((-1.0)*x7798*x7802)));
evalcond[1]=((((-1.0)*r20*sj6*x7816))+(((-1.0)*x7797*x7802))+(((-1.0)*r22*x7808))+(((-1.0)*cj6*r21*x7816)));
evalcond[2]=(((r11*x7801))+(((-1.0)*x7799*x7810))+((r01*x7807))+(((-1.0)*x7821))+(((-1.0)*r00*x7805)));
evalcond[3]=((((-1.0)*x7801*x7812))+(((-1.0)*x7819))+((r11*x7807))+(((-1.0)*x7805*x7810))+((r00*x7799)));
evalcond[4]=((((-0.02626)*cj1*x7798))+(((-0.0001)*sj1))+((cj1*x7820))+(((-0.1264)*cj1))+(((0.02626)*x7809))+(((-0.02626)*x7811))+pz);
evalcond[5]=(((cj0*cj5*r02))+((sj0*x7815))+((x7799*x7803))+((x7807*x7813))+((x7801*x7804))+x7798+((r01*sj5*x7805)));
evalcond[6]=(((x7803*x7805))+(((-1.0)*r02*sj0*x7808))+(((-1.0)*x7801*x7813))+(((-1.0)*sj1*x7821))+((x7804*x7807))+(((-1.0)*sj5*x7799*x7812))+((cj0*x7815)));
evalcond[7]=((-0.21426)+(((-0.02626)*x7797))+(((-1.0)*x7805*x7817))+((x7806*x7807))+((x7801*x7818))+(((-0.0718)*x7798))+(((-1.0)*x7799*x7800))+(((-1.0)*sj0*x7814))+(((-1.0)*cj0*px)));
evalcond[8]=((((-1.0)*x7801*x7806))+(((-0.1264)*sj1))+((sj1*x7820))+(((-1.0)*x7800*x7805))+(((-0.02626)*x7819))+(((0.0001)*cj1))+((px*sj0))+((x7799*x7817))+((x7807*x7818))+(((-1.0)*cj0*x7814)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7822=((1.0)*cj6);
CheckValue<IkReal> x7823=IKPowWithIntegerCheck(cj1,-1);
if(!x7823.valid){
continue;
}
if( IKabs((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x7822))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x7822)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7823.value)*((((cj6*r20))+(((-1.0)*r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x7822))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x7822))))+IKsqr(((x7823.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x7822))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x7822))), ((x7823.value)*((((cj6*r20))+(((-1.0)*r21*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7824=IKsin(j4);
IkReal x7825=IKcos(j4);
IkReal x7826=(cj6*sj0);
IkReal x7827=((0.02626)*r10);
IkReal x7828=(sj0*sj6);
IkReal x7829=((1.0)*cj1);
IkReal x7830=(r11*sj5);
IkReal x7831=(r10*sj5);
IkReal x7832=(cj0*cj6);
IkReal x7833=((0.02626)*r01);
IkReal x7834=(cj0*sj6);
IkReal x7835=((1.0)*cj5);
IkReal x7836=(cj6*r20);
IkReal x7837=((1.0)*r10);
IkReal x7838=(r21*sj6);
IkReal x7839=((1.0)*r01);
IkReal x7840=(r00*sj5);
IkReal x7841=((1.0)*py);
IkReal x7842=(cj5*r12);
IkReal x7843=((1.0)*sj5);
IkReal x7844=((0.02626)*r00);
IkReal x7845=((0.02626)*r11);
IkReal x7846=(sj1*x7825);
IkReal x7847=((0.0718)*x7824);
IkReal x7848=((1.0)*x7824);
evalcond[0]=((((-1.0)*x7825*x7829))+x7836+(((-1.0)*x7838)));
evalcond[1]=((((-1.0)*x7824*x7829))+(((-1.0)*r22*x7835))+(((-1.0)*cj6*r21*x7843))+(((-1.0)*r20*sj6*x7843)));
evalcond[2]=((((-1.0)*r00*x7832))+((r11*x7828))+((r01*x7834))+(((-1.0)*x7848))+(((-1.0)*x7826*x7837)));
evalcond[3]=((((-1.0)*x7828*x7839))+(((-1.0)*x7832*x7837))+(((-1.0)*x7846))+((r00*x7826))+((r11*x7834)));
evalcond[4]=((((-0.0001)*sj1))+(((-0.1264)*cj1))+(((-0.02626)*x7838))+(((-0.02626)*cj1*x7825))+pz+(((0.02626)*x7836))+((cj1*x7847)));
evalcond[5]=(((cj0*cj5*r02))+((x7834*x7840))+x7825+((x7826*x7830))+((r01*sj5*x7832))+((x7828*x7831))+((sj0*x7842)));
evalcond[6]=((((-1.0)*sj5*x7826*x7839))+((x7831*x7834))+((x7830*x7832))+((cj0*x7842))+(((-1.0)*r02*sj0*x7835))+(((-1.0)*x7828*x7840))+(((-1.0)*sj1*x7848)));
evalcond[7]=((-0.21426)+(((-1.0)*x7832*x7844))+(((-1.0)*x7826*x7827))+((x7833*x7834))+(((-0.02626)*x7824))+(((-0.0718)*x7825))+((x7828*x7845))+(((-1.0)*sj0*x7841))+(((-1.0)*cj0*px)));
evalcond[8]=((((-1.0)*x7828*x7833))+(((-0.1264)*sj1))+(((-1.0)*cj0*x7841))+((x7834*x7845))+(((-0.02626)*x7846))+((x7826*x7844))+(((0.0001)*cj1))+((px*sj0))+((sj1*x7847))+(((-1.0)*x7827*x7832)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7849=((1.0)*r21);
CheckValue<IkReal> x7850=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x7850.valid){
continue;
}
CheckValue<IkReal> x7851 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x7849))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x7849))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x7851.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7850.value)))+(x7851.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7852=IKsin(j4);
IkReal x7853=IKcos(j4);
IkReal x7854=(cj6*sj0);
IkReal x7855=((0.02626)*r10);
IkReal x7856=(sj0*sj6);
IkReal x7857=((1.0)*cj1);
IkReal x7858=(r11*sj5);
IkReal x7859=(r10*sj5);
IkReal x7860=(cj0*cj6);
IkReal x7861=((0.02626)*r01);
IkReal x7862=(cj0*sj6);
IkReal x7863=((1.0)*cj5);
IkReal x7864=(cj6*r20);
IkReal x7865=((1.0)*r10);
IkReal x7866=(r21*sj6);
IkReal x7867=((1.0)*r01);
IkReal x7868=(r00*sj5);
IkReal x7869=((1.0)*py);
IkReal x7870=(cj5*r12);
IkReal x7871=((1.0)*sj5);
IkReal x7872=((0.02626)*r00);
IkReal x7873=((0.02626)*r11);
IkReal x7874=(sj1*x7853);
IkReal x7875=((0.0718)*x7852);
IkReal x7876=((1.0)*x7852);
evalcond[0]=(x7864+(((-1.0)*x7866))+(((-1.0)*x7853*x7857)));
evalcond[1]=((((-1.0)*r20*sj6*x7871))+(((-1.0)*x7852*x7857))+(((-1.0)*cj6*r21*x7871))+(((-1.0)*r22*x7863)));
evalcond[2]=(((r11*x7856))+((r01*x7862))+(((-1.0)*x7876))+(((-1.0)*x7854*x7865))+(((-1.0)*r00*x7860)));
evalcond[3]=(((r11*x7862))+(((-1.0)*x7874))+((r00*x7854))+(((-1.0)*x7856*x7867))+(((-1.0)*x7860*x7865)));
evalcond[4]=((((-0.02626)*cj1*x7853))+(((-0.0001)*sj1))+(((-0.1264)*cj1))+((cj1*x7875))+(((0.02626)*x7864))+pz+(((-0.02626)*x7866)));
evalcond[5]=(((cj0*cj5*r02))+((x7856*x7859))+x7853+((r01*sj5*x7860))+((sj0*x7870))+((x7862*x7868))+((x7854*x7858)));
evalcond[6]=((((-1.0)*sj1*x7876))+(((-1.0)*r02*sj0*x7863))+((cj0*x7870))+((x7858*x7860))+((x7859*x7862))+(((-1.0)*sj5*x7854*x7867))+(((-1.0)*x7856*x7868)));
evalcond[7]=((-0.21426)+((x7861*x7862))+((x7856*x7873))+(((-1.0)*x7854*x7855))+(((-1.0)*sj0*x7869))+(((-0.0718)*x7853))+(((-0.02626)*x7852))+(((-1.0)*cj0*px))+(((-1.0)*x7860*x7872)));
evalcond[8]=((((-0.1264)*sj1))+(((-1.0)*x7855*x7860))+((sj1*x7875))+(((0.0001)*cj1))+((px*sj0))+((x7862*x7873))+((x7854*x7872))+(((-1.0)*x7856*x7861))+(((-0.02626)*x7874))+(((-1.0)*cj0*x7869)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7877=(cj0*sj5);
IkReal x7878=(cj5*cj6);
IkReal x7879=((1.0)*sj5);
IkReal x7880=((1.0)*cj0);
IkReal x7881=((1.0)*sj0);
IkReal x7882=(cj5*sj6);
IkReal x7883=(r10*x7882);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x7879))+sj1+((r20*x7882))+((r21*x7878)));
evalcond[2]=((((-1.0)*r11*x7878*x7881))+((r12*sj0*sj5))+(((-1.0)*r00*x7880*x7882))+((r02*x7877))+(((-1.0)*x7881*x7883))+(((-1.0)*r01*x7878*x7880)));
evalcond[3]=((((-1.0)*x7880*x7883))+(((-1.0)*r11*x7878*x7880))+((r01*sj0*x7878))+(((-1.0)*r02*sj0*x7879))+((r12*x7877))+((r00*sj0*x7882))+(((-1.0)*cj1)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x7884=((1.0)*r21);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*cj6*sj5*x7884))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))))+(IKabs(((((-1.0)*sj6*x7884))+((cj6*r20))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7885=((1.0)*cj6);
IkReal x7886=((1.0)*sj6);
CheckValue<IkReal> x7887=IKPowWithIntegerCheck(cj1,-1);
if(!x7887.valid){
continue;
}
CheckValue<IkReal> x7888=IKPowWithIntegerCheck(sj1,-1);
if(!x7888.valid){
continue;
}
if( IKabs(((x7887.value)*(((((-1.0)*r20*sj5*x7886))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7885)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7888.value)*((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x7886))+(((-1.0)*cj0*r10*x7885)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7887.value)*(((((-1.0)*r20*sj5*x7886))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7885))))))+IKsqr(((x7888.value)*((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x7886))+(((-1.0)*cj0*r10*x7885))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x7887.value)*(((((-1.0)*r20*sj5*x7886))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x7885))))), ((x7888.value)*((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x7886))+(((-1.0)*cj0*r10*x7885))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7889=IKsin(j4);
IkReal x7890=IKcos(j4);
IkReal x7891=(cj6*sj0);
IkReal x7892=((0.02626)*r10);
IkReal x7893=(sj0*sj6);
IkReal x7894=((1.0)*cj1);
IkReal x7895=(r11*sj5);
IkReal x7896=(r10*sj5);
IkReal x7897=(cj0*cj6);
IkReal x7898=((0.02626)*r01);
IkReal x7899=(cj0*sj6);
IkReal x7900=(r21*sj6);
IkReal x7901=((1.0)*cj5);
IkReal x7902=(cj6*r20);
IkReal x7903=((1.0)*r10);
IkReal x7904=((1.0)*r01);
IkReal x7905=(r00*sj5);
IkReal x7906=((1.0)*py);
IkReal x7907=(cj5*r12);
IkReal x7908=((1.0)*sj5);
IkReal x7909=((0.02626)*r00);
IkReal x7910=((0.02626)*r11);
IkReal x7911=(sj1*x7890);
IkReal x7912=((0.0718)*x7889);
evalcond[0]=((((-1.0)*x7900))+x7902+(((-1.0)*x7890*x7894)));
evalcond[1]=((((-1.0)*r20*sj6*x7908))+(((-1.0)*r22*x7901))+(((-1.0)*x7889*x7894))+(((-1.0)*cj6*r21*x7908)));
evalcond[2]=((((-1.0)*r00*x7897))+(((-1.0)*x7891*x7903))+x7889+((r01*x7899))+((r11*x7893)));
evalcond[3]=((((-1.0)*x7911))+(((-1.0)*x7893*x7904))+(((-1.0)*x7897*x7903))+((r00*x7891))+((r11*x7899)));
evalcond[4]=((((-0.02626)*x7900))+(((-0.0001)*sj1))+(((-0.1264)*cj1))+(((-0.02626)*cj1*x7890))+(((0.02626)*x7902))+((cj1*x7912))+pz);
evalcond[5]=(((r01*sj5*x7897))+((cj0*cj5*r02))+((x7893*x7896))+((x7899*x7905))+((sj0*x7907))+((x7891*x7895))+(((-1.0)*x7890)));
evalcond[6]=((((-1.0)*sj5*x7891*x7904))+((x7896*x7899))+(((-1.0)*sj1*x7889))+(((-1.0)*x7893*x7905))+((x7895*x7897))+(((-1.0)*r02*sj0*x7901))+((cj0*x7907)));
evalcond[7]=((-0.01934)+(((-1.0)*x7891*x7892))+((x7893*x7910))+(((-1.0)*x7897*x7909))+(((0.0718)*x7890))+(((-1.0)*sj0*x7906))+(((0.02626)*x7889))+((x7898*x7899))+(((-1.0)*cj0*px)));
evalcond[8]=((((-0.1264)*sj1))+((x7899*x7910))+((x7891*x7909))+(((-0.02626)*x7911))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x7893*x7898))+(((-1.0)*x7892*x7897))+((sj1*x7912))+(((-1.0)*cj0*x7906)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7913=((1.0)*sj6);
CheckValue<IkReal> x7914=IKPowWithIntegerCheck(cj1,-1);
if(!x7914.valid){
continue;
}
if( IKabs((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x7913))+(((-1.0)*r11*sj0*x7913))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7914.value)*(((((-1.0)*r21*x7913))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x7913))+(((-1.0)*r11*sj0*x7913))+((cj0*cj6*r00))))+IKsqr(((x7914.value)*(((((-1.0)*r21*x7913))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x7913))+(((-1.0)*r11*sj0*x7913))+((cj0*cj6*r00))), ((x7914.value)*(((((-1.0)*r21*x7913))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7915=IKsin(j4);
IkReal x7916=IKcos(j4);
IkReal x7917=(cj6*sj0);
IkReal x7918=((0.02626)*r10);
IkReal x7919=(sj0*sj6);
IkReal x7920=((1.0)*cj1);
IkReal x7921=(r11*sj5);
IkReal x7922=(r10*sj5);
IkReal x7923=(cj0*cj6);
IkReal x7924=((0.02626)*r01);
IkReal x7925=(cj0*sj6);
IkReal x7926=(r21*sj6);
IkReal x7927=((1.0)*cj5);
IkReal x7928=(cj6*r20);
IkReal x7929=((1.0)*r10);
IkReal x7930=((1.0)*r01);
IkReal x7931=(r00*sj5);
IkReal x7932=((1.0)*py);
IkReal x7933=(cj5*r12);
IkReal x7934=((1.0)*sj5);
IkReal x7935=((0.02626)*r00);
IkReal x7936=((0.02626)*r11);
IkReal x7937=(sj1*x7916);
IkReal x7938=((0.0718)*x7915);
evalcond[0]=((((-1.0)*x7926))+x7928+(((-1.0)*x7916*x7920)));
evalcond[1]=((((-1.0)*r22*x7927))+(((-1.0)*cj6*r21*x7934))+(((-1.0)*r20*sj6*x7934))+(((-1.0)*x7915*x7920)));
evalcond[2]=((((-1.0)*r00*x7923))+x7915+((r11*x7919))+((r01*x7925))+(((-1.0)*x7917*x7929)));
evalcond[3]=((((-1.0)*x7919*x7930))+(((-1.0)*x7937))+((r11*x7925))+((r00*x7917))+(((-1.0)*x7923*x7929)));
evalcond[4]=((((-0.0001)*sj1))+(((-0.02626)*x7926))+(((-0.1264)*cj1))+pz+(((-0.02626)*cj1*x7916))+((cj1*x7938))+(((0.02626)*x7928)));
evalcond[5]=(((sj0*x7933))+((cj0*cj5*r02))+(((-1.0)*x7916))+((r01*sj5*x7923))+((x7925*x7931))+((x7917*x7921))+((x7919*x7922)));
evalcond[6]=(((x7921*x7923))+((cj0*x7933))+(((-1.0)*x7919*x7931))+(((-1.0)*sj5*x7917*x7930))+(((-1.0)*sj1*x7915))+((x7922*x7925))+(((-1.0)*r02*sj0*x7927)));
evalcond[7]=((-0.01934)+(((-1.0)*x7923*x7935))+(((0.0718)*x7916))+(((-1.0)*sj0*x7932))+((x7919*x7936))+((x7924*x7925))+(((-1.0)*x7917*x7918))+(((0.02626)*x7915))+(((-1.0)*cj0*px)));
evalcond[8]=(((sj1*x7938))+(((-0.1264)*sj1))+(((-1.0)*cj0*x7932))+(((-0.02626)*x7937))+((x7925*x7936))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x7918*x7923))+((x7917*x7935))+(((-1.0)*x7919*x7924)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x7939=((1.0)*r21);
CheckValue<IkReal> x7940=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x7940.valid){
continue;
}
CheckValue<IkReal> x7941 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x7939))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),(((cj6*r20))+(((-1.0)*sj6*x7939))),IKFAST_ATAN2_MAGTHRESH);
if(!x7941.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7940.value)))+(x7941.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7942=IKsin(j4);
IkReal x7943=IKcos(j4);
IkReal x7944=(cj6*sj0);
IkReal x7945=((0.02626)*r10);
IkReal x7946=(sj0*sj6);
IkReal x7947=((1.0)*cj1);
IkReal x7948=(r11*sj5);
IkReal x7949=(r10*sj5);
IkReal x7950=(cj0*cj6);
IkReal x7951=((0.02626)*r01);
IkReal x7952=(cj0*sj6);
IkReal x7953=(r21*sj6);
IkReal x7954=((1.0)*cj5);
IkReal x7955=(cj6*r20);
IkReal x7956=((1.0)*r10);
IkReal x7957=((1.0)*r01);
IkReal x7958=(r00*sj5);
IkReal x7959=((1.0)*py);
IkReal x7960=(cj5*r12);
IkReal x7961=((1.0)*sj5);
IkReal x7962=((0.02626)*r00);
IkReal x7963=((0.02626)*r11);
IkReal x7964=(sj1*x7943);
IkReal x7965=((0.0718)*x7942);
evalcond[0]=((((-1.0)*x7953))+x7955+(((-1.0)*x7943*x7947)));
evalcond[1]=((((-1.0)*cj6*r21*x7961))+(((-1.0)*r22*x7954))+(((-1.0)*r20*sj6*x7961))+(((-1.0)*x7942*x7947)));
evalcond[2]=(((r01*x7952))+((r11*x7946))+x7942+(((-1.0)*r00*x7950))+(((-1.0)*x7944*x7956)));
evalcond[3]=(((r11*x7952))+(((-1.0)*x7964))+(((-1.0)*x7950*x7956))+((r00*x7944))+(((-1.0)*x7946*x7957)));
evalcond[4]=((((0.02626)*x7955))+(((-0.0001)*sj1))+(((-0.1264)*cj1))+(((-0.02626)*x7953))+pz+(((-0.02626)*cj1*x7943))+((cj1*x7965)));
evalcond[5]=(((r01*sj5*x7950))+((cj0*cj5*r02))+((x7946*x7949))+(((-1.0)*x7943))+((x7952*x7958))+((x7944*x7948))+((sj0*x7960)));
evalcond[6]=((((-1.0)*r02*sj0*x7954))+(((-1.0)*sj1*x7942))+((cj0*x7960))+((x7948*x7950))+(((-1.0)*sj5*x7944*x7957))+(((-1.0)*x7946*x7958))+((x7949*x7952)));
evalcond[7]=((-0.01934)+(((0.0718)*x7943))+((x7951*x7952))+(((-1.0)*x7944*x7945))+(((-1.0)*x7950*x7962))+(((0.02626)*x7942))+(((-1.0)*sj0*x7959))+((x7946*x7963))+(((-1.0)*cj0*px)));
evalcond[8]=((((-0.1264)*sj1))+((x7944*x7962))+(((-1.0)*cj0*x7959))+(((-0.02626)*x7964))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x7945*x7950))+((sj1*x7965))+(((-1.0)*x7946*x7951))+((x7952*x7963)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x7973=IKPowWithIntegerCheck(cj3,-1);
if(!x7973.valid){
continue;
}
IkReal x7966=x7973.value;
IkReal x7967=(sj1*sj3);
IkReal x7968=((1.0)*cj6);
IkReal x7969=(r10*sj0);
IkReal x7970=(cj0*r00);
IkReal x7971=(cj0*r01*sj6);
IkReal x7972=(r11*sj0*sj6);
CheckValue<IkReal> x7974=IKPowWithIntegerCheck(cj1,-1);
if(!x7974.valid){
continue;
}
if( IKabs((x7966*(((((-1.0)*x7968*x7970))+(((-1.0)*x7968*x7969))+x7971+x7972)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x7966*(x7974.value)*(((((-1.0)*x7967*x7968*x7969))+(((-1.0)*x7967*x7968*x7970))+(((-1.0)*cj3*r21*sj6))+((cj3*cj6*r20))+((x7967*x7972))+((x7967*x7971)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x7966*(((((-1.0)*x7968*x7970))+(((-1.0)*x7968*x7969))+x7971+x7972))))+IKsqr((x7966*(x7974.value)*(((((-1.0)*x7967*x7968*x7969))+(((-1.0)*x7967*x7968*x7970))+(((-1.0)*cj3*r21*sj6))+((cj3*cj6*r20))+((x7967*x7972))+((x7967*x7971))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x7966*(((((-1.0)*x7968*x7970))+(((-1.0)*x7968*x7969))+x7971+x7972))), (x7966*(x7974.value)*(((((-1.0)*x7967*x7968*x7969))+(((-1.0)*x7967*x7968*x7970))+(((-1.0)*cj3*r21*sj6))+((cj3*cj6*r20))+((x7967*x7972))+((x7967*x7971))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x7975=IKsin(j4);
IkReal x7976=IKcos(j4);
IkReal x7977=(cj6*sj0);
IkReal x7978=((0.02626)*r10);
IkReal x7979=(sj0*sj6);
IkReal x7980=(sj1*sj3);
IkReal x7981=((1.0)*cj1);
IkReal x7982=(r11*sj5);
IkReal x7983=(r10*sj5);
IkReal x7984=((0.02626)*r01);
IkReal x7985=(cj0*sj6);
IkReal x7986=((0.0718)*cj1);
IkReal x7987=((1.0)*cj5);
IkReal x7988=(cj1*sj3);
IkReal x7989=((0.02626)*cj6);
IkReal x7990=((1.0)*r10);
IkReal x7991=(r21*sj6);
IkReal x7992=((1.0)*r01);
IkReal x7993=(r00*sj5);
IkReal x7994=((1.0)*py);
IkReal x7995=(cj5*r12);
IkReal x7996=(cj0*cj6);
IkReal x7997=((1.0)*sj5);
IkReal x7998=((0.02626)*r11);
IkReal x7999=((0.02626)*x7975);
IkReal x8000=((1.0)*x7975);
IkReal x8001=(sj1*x7976);
IkReal x8002=((0.0718)*x7976);
evalcond[0]=(((x7975*x7980))+(((-1.0)*x7991))+((cj6*r20))+(((-1.0)*x7976*x7981)));
evalcond[1]=(((r11*x7979))+((r01*x7985))+(((-1.0)*x7977*x7990))+(((-1.0)*cj3*x8000))+(((-1.0)*r00*x7996)));
evalcond[2]=((((-1.0)*r22*x7987))+(((-1.0)*r20*sj6*x7997))+(((-1.0)*x7976*x7980))+(((-1.0)*x7975*x7981))+(((-1.0)*cj6*r21*x7997)));
evalcond[3]=((((-1.0)*x7979*x7992))+((r00*x7977))+(((-1.0)*x7990*x7996))+(((-1.0)*x8001))+(((-1.0)*sj3*x7975*x7981))+((r11*x7985)));
evalcond[4]=(((x7985*x7993))+((x7977*x7982))+((cj0*cj5*r02))+((sj0*x7995))+((cj3*x7976))+((x7979*x7983))+((r01*sj5*x7996)));
evalcond[5]=(((x7976*x7988))+(((-1.0)*sj5*x7977*x7992))+((x7982*x7996))+((x7983*x7985))+(((-1.0)*r02*sj0*x7987))+(((-1.0)*x7979*x7993))+((cj0*x7995))+(((-1.0)*sj1*x8000)));
evalcond[6]=((-0.1168)+((x7984*x7985))+(((-1.0)*sj0*x7994))+(((-0.09746)*cj3))+(((-1.0)*cj3*x7999))+(((-1.0)*cj3*x8002))+((x7979*x7998))+(((-1.0)*cj0*r00*x7989))+(((-1.0)*cj0*px))+(((-1.0)*x7977*x7978)));
evalcond[7]=((((-0.02626)*cj1*x7976))+((r20*x7989))+(((-0.0001)*sj1))+((x7975*x7986))+((x7980*x8002))+(((-0.1264)*cj1))+pz+((x7980*x7999))+(((-0.02626)*x7991))+(((0.09746)*x7980)));
evalcond[8]=(((x7985*x7998))+(((-1.0)*x7979*x7984))+(((-0.1264)*sj1))+(((0.0718)*sj1*x7975))+(((-1.0)*x7978*x7996))+(((-0.02626)*x8001))+(((-1.0)*sj3*x7976*x7986))+(((0.02626)*r00*x7977))+(((-1.0)*x7988*x7999))+(((0.0001)*cj1))+(((-1.0)*cj0*x7994))+((px*sj0))+(((-0.09746)*x7988)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8003=(cj1*cj6);
IkReal x8004=(cj6*sj1);
IkReal x8005=((1.0)*sj6);
IkReal x8006=(r01*sj0);
IkReal x8007=(r00*sj0);
IkReal x8008=((1.0)*cj0*r10);
IkReal x8009=(cj0*r11*sj6);
CheckValue<IkReal> x8010=IKPowWithIntegerCheck(sj3,-1);
if(!x8010.valid){
continue;
}
if( IKabs(((x8010.value)*(((((-1.0)*cj1*x8005*x8006))+(((-1.0)*x8003*x8008))+((r21*sj1*sj6))+((cj1*x8009))+(((-1.0)*r20*x8004))+((x8003*x8007)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x8009))+(((-1.0)*sj1*x8005*x8006))+((r20*x8003))+(((-1.0)*x8004*x8008))+((x8004*x8007))+(((-1.0)*cj1*r21*x8005)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x8010.value)*(((((-1.0)*cj1*x8005*x8006))+(((-1.0)*x8003*x8008))+((r21*sj1*sj6))+((cj1*x8009))+(((-1.0)*r20*x8004))+((x8003*x8007))))))+IKsqr((((sj1*x8009))+(((-1.0)*sj1*x8005*x8006))+((r20*x8003))+(((-1.0)*x8004*x8008))+((x8004*x8007))+(((-1.0)*cj1*r21*x8005))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x8010.value)*(((((-1.0)*cj1*x8005*x8006))+(((-1.0)*x8003*x8008))+((r21*sj1*sj6))+((cj1*x8009))+(((-1.0)*r20*x8004))+((x8003*x8007))))), (((sj1*x8009))+(((-1.0)*sj1*x8005*x8006))+((r20*x8003))+(((-1.0)*x8004*x8008))+((x8004*x8007))+(((-1.0)*cj1*r21*x8005))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8011=IKsin(j4);
IkReal x8012=IKcos(j4);
IkReal x8013=(cj6*sj0);
IkReal x8014=((0.02626)*r10);
IkReal x8015=(sj0*sj6);
IkReal x8016=(sj1*sj3);
IkReal x8017=((1.0)*cj1);
IkReal x8018=(r11*sj5);
IkReal x8019=(r10*sj5);
IkReal x8020=((0.02626)*r01);
IkReal x8021=(cj0*sj6);
IkReal x8022=((0.0718)*cj1);
IkReal x8023=((1.0)*cj5);
IkReal x8024=(cj1*sj3);
IkReal x8025=((0.02626)*cj6);
IkReal x8026=((1.0)*r10);
IkReal x8027=(r21*sj6);
IkReal x8028=((1.0)*r01);
IkReal x8029=(r00*sj5);
IkReal x8030=((1.0)*py);
IkReal x8031=(cj5*r12);
IkReal x8032=(cj0*cj6);
IkReal x8033=((1.0)*sj5);
IkReal x8034=((0.02626)*r11);
IkReal x8035=((0.02626)*x8011);
IkReal x8036=((1.0)*x8011);
IkReal x8037=(sj1*x8012);
IkReal x8038=((0.0718)*x8012);
evalcond[0]=((((-1.0)*x8012*x8017))+(((-1.0)*x8027))+((cj6*r20))+((x8011*x8016)));
evalcond[1]=((((-1.0)*x8013*x8026))+(((-1.0)*r00*x8032))+(((-1.0)*cj3*x8036))+((r11*x8015))+((r01*x8021)));
evalcond[2]=((((-1.0)*x8011*x8017))+(((-1.0)*r20*sj6*x8033))+(((-1.0)*cj6*r21*x8033))+(((-1.0)*x8012*x8016))+(((-1.0)*r22*x8023)));
evalcond[3]=((((-1.0)*sj3*x8011*x8017))+(((-1.0)*x8037))+((r00*x8013))+(((-1.0)*x8026*x8032))+(((-1.0)*x8015*x8028))+((r11*x8021)));
evalcond[4]=(((cj0*cj5*r02))+((r01*sj5*x8032))+((sj0*x8031))+((x8013*x8018))+((cj3*x8012))+((x8015*x8019))+((x8021*x8029)));
evalcond[5]=(((x8012*x8024))+((x8018*x8032))+((cj0*x8031))+(((-1.0)*r02*sj0*x8023))+(((-1.0)*x8015*x8029))+(((-1.0)*sj1*x8036))+(((-1.0)*sj5*x8013*x8028))+((x8019*x8021)));
evalcond[6]=((-0.1168)+(((-1.0)*sj0*x8030))+(((-1.0)*cj0*r00*x8025))+((x8015*x8034))+(((-1.0)*cj3*x8038))+(((-1.0)*cj3*x8035))+(((-0.09746)*cj3))+((x8020*x8021))+(((-1.0)*cj0*px))+(((-1.0)*x8013*x8014)));
evalcond[7]=(((x8011*x8022))+(((-0.0001)*sj1))+(((-0.02626)*cj1*x8012))+(((-0.1264)*cj1))+((x8016*x8038))+((x8016*x8035))+((r20*x8025))+(((0.09746)*x8016))+pz+(((-0.02626)*x8027)));
evalcond[8]=((((0.0718)*sj1*x8011))+(((-1.0)*x8024*x8035))+(((-0.1264)*sj1))+(((-0.02626)*x8037))+(((-1.0)*x8015*x8020))+(((-1.0)*x8014*x8032))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*cj0*x8030))+(((-1.0)*sj3*x8012*x8022))+(((-0.09746)*x8024))+(((0.02626)*r00*x8013))+((x8021*x8034)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8039=cj3*cj3;
IkReal x8040=(cj1*r20);
IkReal x8041=((1.0)*sj5);
IkReal x8042=(cj1*r21);
IkReal x8043=(r21*sj1*sj3);
IkReal x8044=(r20*sj1*sj3);
IkReal x8045=((1.0)*cj5*r22);
CheckValue<IkReal> x8046=IKPowWithIntegerCheck(IKsign(((1.0)+(((-1.0)*x8039))+((x8039*(cj1*cj1))))),-1);
if(!x8046.valid){
continue;
}
CheckValue<IkReal> x8047 = IKatan2WithCheck(IkReal((((sj6*x8043))+(((-1.0)*cj6*x8044))+(((-1.0)*cj6*x8041*x8042))+(((-1.0)*sj6*x8040*x8041))+(((-1.0)*cj1*x8045)))),((((-1.0)*sj1*sj3*x8045))+(((-1.0)*sj6*x8042))+(((-1.0)*cj6*x8041*x8043))+(((-1.0)*sj6*x8041*x8044))+((cj6*x8040))),IKFAST_ATAN2_MAGTHRESH);
if(!x8047.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8046.value)))+(x8047.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8048=IKsin(j4);
IkReal x8049=IKcos(j4);
IkReal x8050=(cj6*sj0);
IkReal x8051=((0.02626)*r10);
IkReal x8052=(sj0*sj6);
IkReal x8053=(sj1*sj3);
IkReal x8054=((1.0)*cj1);
IkReal x8055=(r11*sj5);
IkReal x8056=(r10*sj5);
IkReal x8057=((0.02626)*r01);
IkReal x8058=(cj0*sj6);
IkReal x8059=((0.0718)*cj1);
IkReal x8060=((1.0)*cj5);
IkReal x8061=(cj1*sj3);
IkReal x8062=((0.02626)*cj6);
IkReal x8063=((1.0)*r10);
IkReal x8064=(r21*sj6);
IkReal x8065=((1.0)*r01);
IkReal x8066=(r00*sj5);
IkReal x8067=((1.0)*py);
IkReal x8068=(cj5*r12);
IkReal x8069=(cj0*cj6);
IkReal x8070=((1.0)*sj5);
IkReal x8071=((0.02626)*r11);
IkReal x8072=((0.02626)*x8048);
IkReal x8073=((1.0)*x8048);
IkReal x8074=(sj1*x8049);
IkReal x8075=((0.0718)*x8049);
evalcond[0]=((((-1.0)*x8064))+((cj6*r20))+(((-1.0)*x8049*x8054))+((x8048*x8053)));
evalcond[1]=((((-1.0)*cj3*x8073))+(((-1.0)*x8050*x8063))+(((-1.0)*r00*x8069))+((r11*x8052))+((r01*x8058)));
evalcond[2]=((((-1.0)*x8049*x8053))+(((-1.0)*r20*sj6*x8070))+(((-1.0)*cj6*r21*x8070))+(((-1.0)*r22*x8060))+(((-1.0)*x8048*x8054)));
evalcond[3]=(((r00*x8050))+(((-1.0)*x8074))+(((-1.0)*x8052*x8065))+(((-1.0)*sj3*x8048*x8054))+((r11*x8058))+(((-1.0)*x8063*x8069)));
evalcond[4]=(((cj0*cj5*r02))+((r01*sj5*x8069))+((x8058*x8066))+((x8050*x8055))+((cj3*x8049))+((x8052*x8056))+((sj0*x8068)));
evalcond[5]=((((-1.0)*sj1*x8073))+((x8049*x8061))+(((-1.0)*sj5*x8050*x8065))+((cj0*x8068))+(((-1.0)*x8052*x8066))+((x8055*x8069))+(((-1.0)*r02*sj0*x8060))+((x8056*x8058)));
evalcond[6]=((-0.1168)+(((-1.0)*sj0*x8067))+(((-1.0)*cj3*x8072))+(((-1.0)*cj3*x8075))+(((-1.0)*x8050*x8051))+(((-1.0)*cj0*r00*x8062))+(((-0.09746)*cj3))+((x8052*x8071))+((x8057*x8058))+(((-1.0)*cj0*px)));
evalcond[7]=((((0.09746)*x8053))+(((-0.0001)*sj1))+(((-0.02626)*x8064))+(((-0.1264)*cj1))+((r20*x8062))+pz+((x8053*x8075))+((x8053*x8072))+(((-0.02626)*cj1*x8049))+((x8048*x8059)));
evalcond[8]=((((0.0718)*sj1*x8048))+(((-0.1264)*sj1))+(((-1.0)*cj0*x8067))+(((-0.09746)*x8061))+(((-1.0)*x8051*x8069))+(((-1.0)*x8052*x8057))+(((-0.02626)*x8074))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*sj3*x8049*x8059))+(((-1.0)*x8061*x8072))+(((0.02626)*r00*x8050))+((x8058*x8071)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=sj1;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
{
IkReal j3eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j3eval[0]=cj1;
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j3, j4]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x8076=(cj0*cj5);
IkReal x8077=(r00*sj6);
IkReal x8078=((1.0)*sj5);
IkReal x8079=(cj6*r01);
IkReal x8080=(cj5*sj0);
IkReal x8081=(cj6*r11);
IkReal x8082=(r10*sj6);
IkReal x8083=((1.0)*x8080);
CheckValue<IkReal> x8084=IKPowWithIntegerCheck(cj1,-1);
if(!x8084.valid){
continue;
}
if( IKabs(((((-1.0)*r12*sj0*x8078))+((x8076*x8079))+((x8076*x8077))+(((-1.0)*cj0*r02*x8078))+((x8080*x8082))+((x8080*x8081)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8084.value)*((((r02*sj0*sj5))+(((-1.0)*cj0*r12*x8078))+((x8076*x8081))+((x8076*x8082))+(((-1.0)*x8079*x8083))+(((-1.0)*x8077*x8083)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r12*sj0*x8078))+((x8076*x8079))+((x8076*x8077))+(((-1.0)*cj0*r02*x8078))+((x8080*x8082))+((x8080*x8081))))+IKsqr(((x8084.value)*((((r02*sj0*sj5))+(((-1.0)*cj0*r12*x8078))+((x8076*x8081))+((x8076*x8082))+(((-1.0)*x8079*x8083))+(((-1.0)*x8077*x8083))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((-1.0)*r12*sj0*x8078))+((x8076*x8079))+((x8076*x8077))+(((-1.0)*cj0*r02*x8078))+((x8080*x8082))+((x8080*x8081))), ((x8084.value)*((((r02*sj0*sj5))+(((-1.0)*cj0*r12*x8078))+((x8076*x8081))+((x8076*x8082))+(((-1.0)*x8079*x8083))+(((-1.0)*x8077*x8083))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x8085=IKcos(j3);
IkReal x8086=(cj0*sj5);
IkReal x8087=(cj5*cj6);
IkReal x8088=((1.0)*sj5);
IkReal x8089=((1.0)*cj0);
IkReal x8090=((1.0)*sj0);
IkReal x8091=(cj5*sj6);
IkReal x8092=(r10*x8091);
evalcond[0]=((((-1.0)*sj1*x8085))+((r21*x8087))+(((-1.0)*r22*x8088))+((r20*x8091)));
evalcond[1]=((((-1.0)*r00*x8089*x8091))+((r12*sj0*sj5))+(IKsin(j3))+(((-1.0)*x8090*x8092))+(((-1.0)*r11*x8087*x8090))+(((-1.0)*r01*x8087*x8089))+((r02*x8086)));
evalcond[2]=(((cj1*x8085))+(((-1.0)*r02*sj0*x8088))+((r00*sj0*x8091))+((r12*x8086))+(((-1.0)*x8089*x8092))+(((-1.0)*r11*x8087*x8089))+((r01*sj0*x8087)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x8093=cj3*cj3;
IkReal x8094=(sj5*sj6);
IkReal x8095=(cj1*cj6);
IkReal x8096=(sj1*sj3);
IkReal x8097=(r21*sj5);
IkReal x8098=((1.0)*cj1);
IkReal x8099=(cj5*r22);
IkReal x8100=(r20*x8096);
IkReal x8101=((1.0)*r21*sj6);
IkReal x8102=((-1.0)+(((-1.0)*cj1*x8093*x8098))+x8093);
j4eval[0]=x8102;
j4eval[1]=((IKabs(((((-1.0)*r21*sj6*x8098))+((cj6*x8096*x8097))+((x8096*x8099))+((r20*x8095))+((x8094*x8100)))))+(IKabs(((((-1.0)*x8095*x8097))+(((-1.0)*r20*x8094*x8098))+(((-1.0)*x8096*x8101))+((cj6*x8100))+(((-1.0)*x8098*x8099))))));
j4eval[2]=IKsign(x8102);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=cj3;
j4eval[1]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x8103=(cj5*cj6);
IkReal x8104=(r11*sj0);
IkReal x8105=(cj6*sj5);
IkReal x8106=((1.0)*cj0);
IkReal x8107=(r10*sj6);
IkReal x8108=(sj0*sj5);
IkReal x8109=(r00*sj6);
IkReal x8110=(cj0*sj5);
IkReal x8111=((0.02626)*cj0);
IkReal x8112=(r01*sj6);
IkReal x8113=((1.0)*sj0);
IkReal x8114=(cj6*r10);
IkReal x8115=(cj5*sj0);
IkReal x8116=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x8103))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x8113*x8114))+((cj0*x8112))+(((-1.0)*x8106*x8116))+((sj6*x8104)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x8107*x8113))+((r02*x8110))+(((-1.0)*cj5*x8106*x8109))+(((-1.0)*x8103*x8104))+((r12*x8108))+(((-1.0)*r01*x8103*x8106)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x8105))+((r12*x8115))+((x8107*x8108))+((x8109*x8110))+((x8104*x8105)));
evalcond[5]=((((-1.0)*cj5*x8106*x8107))+(((-1.0)*r11*x8103*x8106))+((r12*x8110))+(((-1.0)*r02*x8108))+((x8109*x8115))+((r01*sj0*x8103)));
evalcond[6]=((0.1148)+((x8111*x8112))+(((-0.02626)*sj0*x8114))+(((-1.0)*x8111*x8116))+(((-1.0)*px*x8106))+(((0.02626)*sj6*x8104))+(((-1.0)*py*x8113)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8117=(cj6*r21);
IkReal x8118=(r20*sj6);
IkReal x8119=(r21*sj6);
IkReal x8120=(cj1*sj5);
IkReal x8121=(cj5*r22);
IkReal x8122=((1.0)*sj1*sj5);
IkReal x8123=((1.0)*cj6*r20);
if( IKabs((((x8118*x8120))+((x8117*x8120))+((cj1*x8121))+(((-1.0)*sj1*x8123))+((sj1*x8119)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x8121))+(((-1.0)*x8117*x8122))+(((-1.0)*x8118*x8122))+(((-1.0)*cj1*x8123))+((cj1*x8119)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x8118*x8120))+((x8117*x8120))+((cj1*x8121))+(((-1.0)*sj1*x8123))+((sj1*x8119))))+IKsqr(((((-1.0)*sj1*x8121))+(((-1.0)*x8117*x8122))+(((-1.0)*x8118*x8122))+(((-1.0)*cj1*x8123))+((cj1*x8119))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x8118*x8120))+((x8117*x8120))+((cj1*x8121))+(((-1.0)*sj1*x8123))+((sj1*x8119))), ((((-1.0)*sj1*x8121))+(((-1.0)*x8117*x8122))+(((-1.0)*x8118*x8122))+(((-1.0)*cj1*x8123))+((cj1*x8119))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x8124=IKsin(j4);
IkReal x8125=IKcos(j4);
IkReal x8126=((0.02626)*sj6);
IkReal x8127=(r01*sj0);
IkReal x8128=(cj0*r11);
IkReal x8129=((0.02626)*cj6);
IkReal x8130=(cj0*r10);
IkReal x8131=((1.0)*cj5);
IkReal x8132=((1.0)*sj6);
IkReal x8133=(r00*sj0);
IkReal x8134=((1.0)*cj6);
IkReal x8135=(cj1*x8125);
IkReal x8136=(sj1*x8124);
IkReal x8137=(sj1*x8125);
IkReal x8138=(cj1*x8124);
IkReal x8139=(x8135+x8136);
evalcond[0]=((((-1.0)*r21*x8132))+((cj6*r20))+x8139);
evalcond[1]=((((-1.0)*r20*sj5*x8132))+(((-1.0)*r22*x8131))+(((-1.0)*r21*sj5*x8134))+(((-1.0)*x8137))+x8138);
evalcond[2]=(((sj6*x8128))+(((-1.0)*x8130*x8134))+(((-1.0)*x8138))+((cj6*x8133))+(((-1.0)*x8127*x8132))+x8137);
evalcond[3]=((((0.09736)*sj1))+(((-1.0)*r21*x8126))+(((-0.0718)*x8138))+((r20*x8129))+pz+(((-0.1246)*cj1))+(((0.0718)*x8137))+(((0.02626)*x8135))+(((0.02626)*x8136)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*sj5*x8132*x8133))+((sj5*sj6*x8130))+(((-1.0)*sj5*x8127*x8134))+((cj6*sj5*x8128))+(((-1.0)*r02*sj0*x8131))+x8139);
evalcond[5]=((((-0.1246)*sj1))+(((-0.09736)*cj1))+(((-0.0718)*x8135))+(((-0.0718)*x8136))+((x8129*x8133))+((px*sj0))+(((-1.0)*x8129*x8130))+(((-0.02626)*x8138))+((x8126*x8128))+(((-1.0)*cj0*py))+(((-1.0)*x8126*x8127))+(((0.02626)*x8137)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8140=(cj5*cj6);
IkReal x8141=(r11*sj0);
IkReal x8142=(cj6*sj5);
IkReal x8143=((1.0)*cj0);
IkReal x8144=(r10*sj6);
IkReal x8145=(sj0*sj5);
IkReal x8146=(r00*sj6);
IkReal x8147=(cj0*sj5);
IkReal x8148=((0.02626)*cj0);
IkReal x8149=(r01*sj6);
IkReal x8150=((1.0)*sj0);
IkReal x8151=(cj6*r10);
IkReal x8152=(cj5*sj0);
IkReal x8153=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x8140)));
evalcond[2]=((((-1.0)*x8150*x8151))+((sj6*x8141))+(((-1.0)*x8143*x8153))+((cj0*x8149)));
evalcond[3]=((-1.0)+(((-1.0)*r01*x8140*x8143))+(((-1.0)*x8140*x8141))+(((-1.0)*cj5*x8143*x8146))+(((-1.0)*cj5*x8144*x8150))+((r02*x8147))+((r12*x8145)));
evalcond[4]=(((cj0*cj5*r02))+((x8141*x8142))+((x8144*x8145))+((r12*x8152))+((x8146*x8147))+((cj0*r01*x8142)));
evalcond[5]=((((-1.0)*r02*x8145))+(((-1.0)*cj5*x8143*x8144))+((r01*sj0*x8140))+(((-1.0)*r11*x8140*x8143))+((r12*x8147))+((x8146*x8152)));
evalcond[6]=((0.1148)+(((0.02626)*sj6*x8141))+(((-1.0)*py*x8150))+(((-0.02626)*sj0*x8151))+(((-1.0)*x8148*x8153))+((x8148*x8149))+(((-1.0)*px*x8143)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8154=(cj5*r22);
IkReal x8155=(cj6*r20);
IkReal x8156=(r21*sj1);
IkReal x8157=(cj6*sj5);
IkReal x8158=(cj1*r21);
IkReal x8159=(r20*sj5*sj6);
if( IKabs((((sj1*x8155))+((cj1*x8154))+((cj1*x8159))+((x8157*x8158))+(((-1.0)*sj6*x8156)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x8156*x8157))+((sj1*x8154))+((sj1*x8159))+(((-1.0)*cj1*x8155))+((sj6*x8158)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x8155))+((cj1*x8154))+((cj1*x8159))+((x8157*x8158))+(((-1.0)*sj6*x8156))))+IKsqr((((x8156*x8157))+((sj1*x8154))+((sj1*x8159))+(((-1.0)*cj1*x8155))+((sj6*x8158))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj1*x8155))+((cj1*x8154))+((cj1*x8159))+((x8157*x8158))+(((-1.0)*sj6*x8156))), (((x8156*x8157))+((sj1*x8154))+((sj1*x8159))+(((-1.0)*cj1*x8155))+((sj6*x8158))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x8160=IKcos(j4);
IkReal x8161=IKsin(j4);
IkReal x8162=((0.02626)*sj6);
IkReal x8163=(r01*sj0);
IkReal x8164=(cj0*sj6);
IkReal x8165=((0.02626)*cj6);
IkReal x8166=(cj0*r10);
IkReal x8167=((1.0)*cj5);
IkReal x8168=((1.0)*sj6);
IkReal x8169=(r00*sj0);
IkReal x8170=((1.0)*cj6);
IkReal x8171=(cj0*r11);
IkReal x8172=(sj1*x8160);
IkReal x8173=(cj1*x8161);
IkReal x8174=(cj1*x8160);
IkReal x8175=(sj1*x8161);
IkReal x8176=(x8172+x8173);
evalcond[0]=((((-1.0)*x8175))+((cj6*r20))+(((-1.0)*r21*x8168))+x8174);
evalcond[1]=((((-1.0)*r20*sj5*x8168))+(((-1.0)*r22*x8167))+x8176+(((-1.0)*r21*sj5*x8170)));
evalcond[2]=(((r11*x8164))+((cj6*x8169))+(((-1.0)*x8163*x8168))+(((-1.0)*x8166*x8170))+x8176);
evalcond[3]=((((-0.09756)*sj1))+(((-0.02626)*x8175))+pz+(((-0.0718)*x8172))+(((-0.0718)*x8173))+(((0.02626)*x8174))+(((-1.0)*r21*x8162))+((r20*x8165))+(((-0.1246)*cj1)));
evalcond[4]=((((-1.0)*sj5*x8163*x8170))+(((-1.0)*sj5*x8168*x8169))+(((-1.0)*x8174))+((r10*sj5*x8164))+((cj0*cj5*r12))+((cj6*sj5*x8171))+x8175+(((-1.0)*r02*sj0*x8167)));
evalcond[5]=((((-1.0)*x8165*x8166))+((x8162*x8171))+(((0.0718)*x8174))+(((-0.1246)*sj1))+(((-1.0)*x8162*x8163))+(((0.09756)*cj1))+(((-0.0718)*x8175))+((px*sj0))+(((0.02626)*x8172))+(((0.02626)*x8173))+((x8165*x8169))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8177=(cj0*sj5);
IkReal x8178=(cj5*cj6);
IkReal x8179=((1.0)*sj5);
IkReal x8180=((1.0)*sj0);
IkReal x8181=((1.0)*cj0);
IkReal x8182=(cj5*sj6);
IkReal x8183=(r10*x8182);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj1))+(((-1.0)*r22*x8179))+((r21*x8178))+((r20*x8182)));
evalcond[2]=((((-1.0)*r01*x8178*x8181))+(((-1.0)*r00*x8181*x8182))+((r02*x8177))+(((-1.0)*r11*x8178*x8180))+((r12*sj0*sj5))+(((-1.0)*x8180*x8183)));
evalcond[3]=(cj1+(((-1.0)*r02*sj0*x8179))+(((-1.0)*r11*x8178*x8181))+((r12*x8177))+((r00*sj0*x8182))+((r01*sj0*x8178))+(((-1.0)*x8181*x8183)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8184=IKPowWithIntegerCheck(cj1,-1);
if(!x8184.valid){
continue;
}
CheckValue<IkReal> x8185=IKPowWithIntegerCheck(sj1,-1);
if(!x8185.valid){
continue;
}
if( IKabs(((x8184.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8185.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x8184.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x8185.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x8184.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x8185.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8186=IKsin(j4);
IkReal x8187=IKcos(j4);
IkReal x8188=(cj6*sj0);
IkReal x8189=((0.02626)*r10);
IkReal x8190=(sj0*sj6);
IkReal x8191=(r11*sj5);
IkReal x8192=(r10*sj5);
IkReal x8193=(cj0*cj6);
IkReal x8194=((0.02626)*r01);
IkReal x8195=(cj0*sj6);
IkReal x8196=(r21*sj6);
IkReal x8197=((1.0)*cj5);
IkReal x8198=(cj6*r20);
IkReal x8199=((1.0)*r10);
IkReal x8200=((1.0)*r01);
IkReal x8201=((1.0)*py);
IkReal x8202=(r00*sj5);
IkReal x8203=(cj5*r12);
IkReal x8204=((1.0)*sj5);
IkReal x8205=((0.02626)*r00);
IkReal x8206=((0.02626)*r11);
IkReal x8207=(sj1*x8187);
IkReal x8208=(cj1*x8186);
IkReal x8209=(cj1*x8187);
IkReal x8210=(sj1*x8186);
evalcond[0]=((((-1.0)*x8196))+x8198+x8209);
evalcond[1]=((((-1.0)*r22*x8197))+(((-1.0)*cj6*r21*x8204))+(((-1.0)*r20*sj6*x8204))+x8208);
evalcond[2]=(((r11*x8190))+((r01*x8195))+(((-1.0)*x8188*x8199))+(((-1.0)*r00*x8193))+x8186);
evalcond[3]=(((r11*x8195))+((r00*x8188))+(((-1.0)*x8190*x8200))+(((-1.0)*x8193*x8199))+x8207);
evalcond[4]=((((-0.0001)*sj1))+(((0.02626)*x8198))+pz+(((-0.0718)*x8208))+(((0.02626)*x8209))+(((-0.1246)*cj1))+(((-0.02626)*x8196)));
evalcond[5]=(((sj0*x8203))+((cj0*cj5*r02))+((x8195*x8202))+(((-1.0)*x8187))+((r01*sj5*x8193))+((x8190*x8192))+((x8188*x8191)));
evalcond[6]=((((-1.0)*x8190*x8202))+(((-1.0)*r02*sj0*x8197))+((cj0*x8203))+(((-1.0)*sj5*x8188*x8200))+((x8191*x8193))+((x8192*x8195))+x8210);
evalcond[7]=((0.21226)+((x8190*x8206))+((x8194*x8195))+(((-1.0)*x8188*x8189))+(((-1.0)*x8193*x8205))+(((0.02626)*x8186))+(((0.0718)*x8187))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x8201)));
evalcond[8]=((((-1.0)*cj0*x8201))+(((-0.1246)*sj1))+((x8195*x8206))+((x8188*x8205))+(((-0.0718)*x8210))+(((0.0001)*cj1))+((px*sj0))+(((0.02626)*x8207))+(((-1.0)*x8189*x8193))+(((-1.0)*x8190*x8194)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8211=((1.0)*sj6);
CheckValue<IkReal> x8212=IKPowWithIntegerCheck(cj1,-1);
if(!x8212.valid){
continue;
}
if( IKabs((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x8211))+(((-1.0)*cj0*r01*x8211))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8212.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x8211))+(((-1.0)*cj0*r01*x8211))+((cj0*cj6*r00))))+IKsqr(((x8212.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x8211))+(((-1.0)*cj0*r01*x8211))+((cj0*cj6*r00))), ((x8212.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8213=IKsin(j4);
IkReal x8214=IKcos(j4);
IkReal x8215=(cj6*sj0);
IkReal x8216=((0.02626)*r10);
IkReal x8217=(sj0*sj6);
IkReal x8218=(r11*sj5);
IkReal x8219=(r10*sj5);
IkReal x8220=(cj0*cj6);
IkReal x8221=((0.02626)*r01);
IkReal x8222=(cj0*sj6);
IkReal x8223=(r21*sj6);
IkReal x8224=((1.0)*cj5);
IkReal x8225=(cj6*r20);
IkReal x8226=((1.0)*r10);
IkReal x8227=((1.0)*r01);
IkReal x8228=((1.0)*py);
IkReal x8229=(r00*sj5);
IkReal x8230=(cj5*r12);
IkReal x8231=((1.0)*sj5);
IkReal x8232=((0.02626)*r00);
IkReal x8233=((0.02626)*r11);
IkReal x8234=(sj1*x8214);
IkReal x8235=(cj1*x8213);
IkReal x8236=(cj1*x8214);
IkReal x8237=(sj1*x8213);
evalcond[0]=((((-1.0)*x8223))+x8225+x8236);
evalcond[1]=((((-1.0)*cj6*r21*x8231))+(((-1.0)*r22*x8224))+(((-1.0)*r20*sj6*x8231))+x8235);
evalcond[2]=(((r11*x8217))+(((-1.0)*x8215*x8226))+((r01*x8222))+(((-1.0)*r00*x8220))+x8213);
evalcond[3]=((((-1.0)*x8220*x8226))+((r11*x8222))+((r00*x8215))+(((-1.0)*x8217*x8227))+x8234);
evalcond[4]=((((-0.02626)*x8223))+(((-0.0001)*sj1))+pz+(((-0.0718)*x8235))+(((0.02626)*x8236))+(((-0.1246)*cj1))+(((0.02626)*x8225)));
evalcond[5]=(((x8222*x8229))+((x8217*x8219))+((cj0*cj5*r02))+((r01*sj5*x8220))+(((-1.0)*x8214))+((sj0*x8230))+((x8215*x8218)));
evalcond[6]=(((cj0*x8230))+((x8218*x8220))+(((-1.0)*x8217*x8229))+(((-1.0)*r02*sj0*x8224))+((x8219*x8222))+(((-1.0)*sj5*x8215*x8227))+x8237);
evalcond[7]=((0.21226)+((x8217*x8233))+(((-1.0)*x8220*x8232))+((x8221*x8222))+(((0.02626)*x8213))+(((-1.0)*x8215*x8216))+(((0.0718)*x8214))+(((-1.0)*sj0*x8228))+(((-1.0)*cj0*px)));
evalcond[8]=(((x8222*x8233))+(((-0.1246)*sj1))+((x8215*x8232))+(((0.0001)*cj1))+((px*sj0))+(((-0.0718)*x8237))+(((0.02626)*x8234))+(((-1.0)*x8217*x8221))+(((-1.0)*cj0*x8228))+(((-1.0)*x8216*x8220)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8238=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x8238.valid){
continue;
}
CheckValue<IkReal> x8239 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x8239.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8238.value)))+(x8239.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8240=IKsin(j4);
IkReal x8241=IKcos(j4);
IkReal x8242=(cj6*sj0);
IkReal x8243=((0.02626)*r10);
IkReal x8244=(sj0*sj6);
IkReal x8245=(r11*sj5);
IkReal x8246=(r10*sj5);
IkReal x8247=(cj0*cj6);
IkReal x8248=((0.02626)*r01);
IkReal x8249=(cj0*sj6);
IkReal x8250=(r21*sj6);
IkReal x8251=((1.0)*cj5);
IkReal x8252=(cj6*r20);
IkReal x8253=((1.0)*r10);
IkReal x8254=((1.0)*r01);
IkReal x8255=((1.0)*py);
IkReal x8256=(r00*sj5);
IkReal x8257=(cj5*r12);
IkReal x8258=((1.0)*sj5);
IkReal x8259=((0.02626)*r00);
IkReal x8260=((0.02626)*r11);
IkReal x8261=(sj1*x8241);
IkReal x8262=(cj1*x8240);
IkReal x8263=(cj1*x8241);
IkReal x8264=(sj1*x8240);
evalcond[0]=((((-1.0)*x8250))+x8263+x8252);
evalcond[1]=((((-1.0)*r22*x8251))+(((-1.0)*cj6*r21*x8258))+(((-1.0)*r20*sj6*x8258))+x8262);
evalcond[2]=((((-1.0)*x8242*x8253))+((r11*x8244))+((r01*x8249))+(((-1.0)*r00*x8247))+x8240);
evalcond[3]=((((-1.0)*x8247*x8253))+(((-1.0)*x8244*x8254))+((r11*x8249))+((r00*x8242))+x8261);
evalcond[4]=((((-0.0001)*sj1))+(((0.02626)*x8252))+(((-0.0718)*x8262))+(((-0.02626)*x8250))+pz+(((-0.1246)*cj1))+(((0.02626)*x8263)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x8247))+((sj0*x8257))+((x8242*x8245))+((x8244*x8246))+((x8249*x8256))+(((-1.0)*x8241)));
evalcond[6]=(((x8246*x8249))+(((-1.0)*x8244*x8256))+((cj0*x8257))+(((-1.0)*sj5*x8242*x8254))+((x8245*x8247))+(((-1.0)*r02*sj0*x8251))+x8264);
evalcond[7]=((0.21226)+(((-1.0)*sj0*x8255))+(((-1.0)*x8242*x8243))+(((0.0718)*x8241))+((x8248*x8249))+(((-1.0)*x8247*x8259))+((x8244*x8260))+(((0.02626)*x8240))+(((-1.0)*cj0*px)));
evalcond[8]=((((-1.0)*x8244*x8248))+(((-0.1246)*sj1))+((x8242*x8259))+(((-1.0)*x8243*x8247))+(((-0.0718)*x8264))+(((-1.0)*cj0*x8255))+((x8249*x8260))+(((0.0001)*cj1))+((px*sj0))+(((0.02626)*x8261)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8265=(cj0*sj5);
IkReal x8266=(cj5*cj6);
IkReal x8267=((1.0)*sj5);
IkReal x8268=((1.0)*cj0);
IkReal x8269=((1.0)*sj0);
IkReal x8270=(cj5*sj6);
IkReal x8271=(r10*x8270);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(sj1+((r20*x8270))+((r21*x8266))+(((-1.0)*r22*x8267)));
evalcond[2]=((((-1.0)*r11*x8266*x8269))+(((-1.0)*r00*x8268*x8270))+((r02*x8265))+((r12*sj0*sj5))+(((-1.0)*r01*x8266*x8268))+(((-1.0)*x8269*x8271)));
evalcond[3]=((((-1.0)*r11*x8266*x8268))+((r00*sj0*x8270))+(((-1.0)*r02*sj0*x8267))+(((-1.0)*x8268*x8271))+((r12*x8265))+((r01*sj0*x8266))+(((-1.0)*cj1)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8272=IKPowWithIntegerCheck(cj1,-1);
if(!x8272.valid){
continue;
}
CheckValue<IkReal> x8273=IKPowWithIntegerCheck(sj1,-1);
if(!x8273.valid){
continue;
}
if( IKabs(((x8272.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8273.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x8272.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x8273.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x8272.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x8273.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8274=IKsin(j4);
IkReal x8275=IKcos(j4);
IkReal x8276=(cj6*sj0);
IkReal x8277=((0.02626)*r10);
IkReal x8278=(sj0*sj6);
IkReal x8279=(r11*sj5);
IkReal x8280=(r10*sj5);
IkReal x8281=(cj0*cj6);
IkReal x8282=((0.02626)*r01);
IkReal x8283=(cj0*sj6);
IkReal x8284=((1.0)*cj5);
IkReal x8285=(cj6*r20);
IkReal x8286=((1.0)*r10);
IkReal x8287=(r21*sj6);
IkReal x8288=((1.0)*r01);
IkReal x8289=((1.0)*py);
IkReal x8290=(r00*sj5);
IkReal x8291=(cj5*r12);
IkReal x8292=((1.0)*sj5);
IkReal x8293=((0.02626)*r00);
IkReal x8294=((0.02626)*r11);
IkReal x8295=(sj1*x8275);
IkReal x8296=(cj1*x8274);
IkReal x8297=(cj1*x8275);
IkReal x8298=(sj1*x8274);
evalcond[0]=((((-1.0)*x8287))+x8285+x8297);
evalcond[1]=((((-1.0)*r20*sj6*x8292))+(((-1.0)*cj6*r21*x8292))+(((-1.0)*r22*x8284))+x8296);
evalcond[2]=(((r01*x8283))+(((-1.0)*x8276*x8286))+((r11*x8278))+(((-1.0)*x8274))+(((-1.0)*r00*x8281)));
evalcond[3]=((((-1.0)*x8281*x8286))+((r11*x8283))+(((-1.0)*x8278*x8288))+((r00*x8276))+x8295);
evalcond[4]=((((0.02626)*x8297))+(((0.02626)*x8285))+(((-0.0001)*sj1))+(((-0.0718)*x8296))+pz+(((-0.02626)*x8287))+(((-0.1246)*cj1)));
evalcond[5]=(((cj0*cj5*r02))+((sj0*x8291))+((x8276*x8279))+((x8278*x8280))+((r01*sj5*x8281))+((x8283*x8290))+x8275);
evalcond[6]=(((x8279*x8281))+(((-1.0)*x8278*x8290))+(((-1.0)*sj5*x8276*x8288))+((cj0*x8291))+(((-1.0)*r02*sj0*x8284))+x8298+((x8280*x8283)));
evalcond[7]=((0.01734)+(((-1.0)*x8281*x8293))+(((-0.0718)*x8275))+(((-0.02626)*x8274))+((x8282*x8283))+((x8278*x8294))+(((-1.0)*x8276*x8277))+(((-1.0)*sj0*x8289))+(((-1.0)*cj0*px)));
evalcond[8]=((((0.02626)*x8295))+(((-0.1246)*sj1))+(((-0.0718)*x8298))+((x8276*x8293))+(((-1.0)*x8277*x8281))+(((-1.0)*cj0*x8289))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x8278*x8282))+((x8283*x8294)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8299=((1.0)*cj6);
CheckValue<IkReal> x8300=IKPowWithIntegerCheck(cj1,-1);
if(!x8300.valid){
continue;
}
if( IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x8299))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x8299)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8300.value)*(((((-1.0)*r20*x8299))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x8299))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x8299))))+IKsqr(((x8300.value)*(((((-1.0)*r20*x8299))+((r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x8299))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x8299))), ((x8300.value)*(((((-1.0)*r20*x8299))+((r21*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8301=IKsin(j4);
IkReal x8302=IKcos(j4);
IkReal x8303=(cj6*sj0);
IkReal x8304=((0.02626)*r10);
IkReal x8305=(sj0*sj6);
IkReal x8306=(r11*sj5);
IkReal x8307=(r10*sj5);
IkReal x8308=(cj0*cj6);
IkReal x8309=((0.02626)*r01);
IkReal x8310=(cj0*sj6);
IkReal x8311=((1.0)*cj5);
IkReal x8312=(cj6*r20);
IkReal x8313=((1.0)*r10);
IkReal x8314=(r21*sj6);
IkReal x8315=((1.0)*r01);
IkReal x8316=((1.0)*py);
IkReal x8317=(r00*sj5);
IkReal x8318=(cj5*r12);
IkReal x8319=((1.0)*sj5);
IkReal x8320=((0.02626)*r00);
IkReal x8321=((0.02626)*r11);
IkReal x8322=(sj1*x8302);
IkReal x8323=(cj1*x8301);
IkReal x8324=(cj1*x8302);
IkReal x8325=(sj1*x8301);
evalcond[0]=(x8324+x8312+(((-1.0)*x8314)));
evalcond[1]=(x8323+(((-1.0)*r20*sj6*x8319))+(((-1.0)*r22*x8311))+(((-1.0)*cj6*r21*x8319)));
evalcond[2]=((((-1.0)*r00*x8308))+((r01*x8310))+((r11*x8305))+(((-1.0)*x8303*x8313))+(((-1.0)*x8301)));
evalcond[3]=(x8322+((r00*x8303))+(((-1.0)*x8308*x8313))+(((-1.0)*x8305*x8315))+((r11*x8310)));
evalcond[4]=((((-0.02626)*x8314))+(((-0.0001)*sj1))+(((-0.0718)*x8323))+pz+(((0.02626)*x8312))+(((-0.1246)*cj1))+(((0.02626)*x8324)));
evalcond[5]=(x8302+((x8305*x8307))+((cj0*cj5*r02))+((x8303*x8306))+((x8310*x8317))+((sj0*x8318))+((r01*sj5*x8308)));
evalcond[6]=((((-1.0)*x8305*x8317))+x8325+((x8306*x8308))+((cj0*x8318))+(((-1.0)*sj5*x8303*x8315))+(((-1.0)*r02*sj0*x8311))+((x8307*x8310)));
evalcond[7]=((0.01734)+(((-1.0)*sj0*x8316))+(((-0.0718)*x8302))+(((-0.02626)*x8301))+(((-1.0)*x8308*x8320))+((x8305*x8321))+(((-1.0)*x8303*x8304))+((x8309*x8310))+(((-1.0)*cj0*px)));
evalcond[8]=((((-0.1246)*sj1))+(((-1.0)*x8305*x8309))+(((-1.0)*x8304*x8308))+(((-0.0718)*x8325))+(((-1.0)*cj0*x8316))+(((0.0001)*cj1))+((px*sj0))+((x8303*x8320))+((x8310*x8321))+(((0.02626)*x8322)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8326=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x8326.valid){
continue;
}
CheckValue<IkReal> x8327 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x8327.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8326.value)))+(x8327.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8328=IKsin(j4);
IkReal x8329=IKcos(j4);
IkReal x8330=(cj6*sj0);
IkReal x8331=((0.02626)*r10);
IkReal x8332=(sj0*sj6);
IkReal x8333=(r11*sj5);
IkReal x8334=(r10*sj5);
IkReal x8335=(cj0*cj6);
IkReal x8336=((0.02626)*r01);
IkReal x8337=(cj0*sj6);
IkReal x8338=((1.0)*cj5);
IkReal x8339=(cj6*r20);
IkReal x8340=((1.0)*r10);
IkReal x8341=(r21*sj6);
IkReal x8342=((1.0)*r01);
IkReal x8343=((1.0)*py);
IkReal x8344=(r00*sj5);
IkReal x8345=(cj5*r12);
IkReal x8346=((1.0)*sj5);
IkReal x8347=((0.02626)*r00);
IkReal x8348=((0.02626)*r11);
IkReal x8349=(sj1*x8329);
IkReal x8350=(cj1*x8328);
IkReal x8351=(cj1*x8329);
IkReal x8352=(sj1*x8328);
evalcond[0]=(x8351+x8339+(((-1.0)*x8341)));
evalcond[1]=(x8350+(((-1.0)*r22*x8338))+(((-1.0)*r20*sj6*x8346))+(((-1.0)*cj6*r21*x8346)));
evalcond[2]=((((-1.0)*x8330*x8340))+((r01*x8337))+((r11*x8332))+(((-1.0)*x8328))+(((-1.0)*r00*x8335)));
evalcond[3]=(x8349+(((-1.0)*x8335*x8340))+((r00*x8330))+(((-1.0)*x8332*x8342))+((r11*x8337)));
evalcond[4]=((((0.02626)*x8339))+(((-0.0001)*sj1))+(((-0.0718)*x8350))+pz+(((-0.1246)*cj1))+(((0.02626)*x8351))+(((-0.02626)*x8341)));
evalcond[5]=(((x8330*x8333))+((r01*sj5*x8335))+x8329+((cj0*cj5*r02))+((x8337*x8344))+((sj0*x8345))+((x8332*x8334)));
evalcond[6]=(x8352+((x8333*x8335))+(((-1.0)*r02*sj0*x8338))+((cj0*x8345))+(((-1.0)*x8332*x8344))+((x8334*x8337))+(((-1.0)*sj5*x8330*x8342)));
evalcond[7]=((0.01734)+(((-1.0)*x8335*x8347))+(((-0.0718)*x8329))+(((-1.0)*x8330*x8331))+((x8332*x8348))+((x8336*x8337))+(((-0.02626)*x8328))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x8343)));
evalcond[8]=((((-1.0)*x8332*x8336))+((x8337*x8348))+(((-0.1246)*sj1))+(((-0.0718)*x8352))+(((-1.0)*cj0*x8343))+(((-1.0)*x8331*x8335))+(((0.0001)*cj1))+((px*sj0))+((x8330*x8347))+(((0.02626)*x8349)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8360=IKPowWithIntegerCheck(cj3,-1);
if(!x8360.valid){
continue;
}
IkReal x8353=x8360.value;
IkReal x8354=(cj6*r10);
IkReal x8355=(r11*sj6);
IkReal x8356=(sj1*sj3);
IkReal x8357=(cj0*cj6*r00);
IkReal x8358=(sj0*x8356);
IkReal x8359=(cj0*r01*sj6);
CheckValue<IkReal> x8361=IKPowWithIntegerCheck(cj1,-1);
if(!x8361.valid){
continue;
}
if( IKabs((x8353*((x8357+(((-1.0)*sj0*x8355))+((sj0*x8354))+(((-1.0)*x8359)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x8353*(x8361.value)*(((((-1.0)*cj3*cj6*r20))+((cj3*r21*sj6))+((x8355*x8358))+((x8356*x8359))+(((-1.0)*x8354*x8358))+(((-1.0)*x8356*x8357)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x8353*((x8357+(((-1.0)*sj0*x8355))+((sj0*x8354))+(((-1.0)*x8359))))))+IKsqr((x8353*(x8361.value)*(((((-1.0)*cj3*cj6*r20))+((cj3*r21*sj6))+((x8355*x8358))+((x8356*x8359))+(((-1.0)*x8354*x8358))+(((-1.0)*x8356*x8357))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x8353*((x8357+(((-1.0)*sj0*x8355))+((sj0*x8354))+(((-1.0)*x8359))))), (x8353*(x8361.value)*(((((-1.0)*cj3*cj6*r20))+((cj3*r21*sj6))+((x8355*x8358))+((x8356*x8359))+(((-1.0)*x8354*x8358))+(((-1.0)*x8356*x8357))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8362=IKsin(j4);
IkReal x8363=IKcos(j4);
IkReal x8364=(cj6*sj0);
IkReal x8365=((0.02626)*r10);
IkReal x8366=(sj0*sj6);
IkReal x8367=(sj1*sj3);
IkReal x8368=(cj5*r12);
IkReal x8369=(r11*sj5);
IkReal x8370=(r10*sj5);
IkReal x8371=((0.02626)*r01);
IkReal x8372=(cj0*sj6);
IkReal x8373=((1.0)*cj5);
IkReal x8374=((0.02626)*cj6);
IkReal x8375=((1.0)*r10);
IkReal x8376=(r21*sj6);
IkReal x8377=((1.0)*r01);
IkReal x8378=((1.0)*py);
IkReal x8379=(cj1*sj3);
IkReal x8380=(r00*sj5);
IkReal x8381=(cj0*cj6);
IkReal x8382=((1.0)*sj5);
IkReal x8383=((0.02626)*r11);
IkReal x8384=((0.02626)*x8362);
IkReal x8385=(sj1*x8363);
IkReal x8386=(cj1*x8362);
IkReal x8387=((1.0)*x8363);
IkReal x8388=((0.0718)*x8363);
IkReal x8389=(cj1*x8363);
IkReal x8390=(sj1*x8362);
evalcond[0]=(x8389+(((-1.0)*x8376))+((cj6*r20))+((x8362*x8367)));
evalcond[1]=((((-1.0)*x8364*x8375))+(((-1.0)*r00*x8381))+((cj3*x8362))+((r11*x8366))+((r01*x8372)));
evalcond[2]=(x8386+(((-1.0)*r20*sj6*x8382))+(((-1.0)*r22*x8373))+(((-1.0)*x8367*x8387))+(((-1.0)*cj6*r21*x8382)));
evalcond[3]=(x8385+(((-1.0)*x8366*x8377))+((r00*x8364))+(((-1.0)*x8362*x8379))+(((-1.0)*x8375*x8381))+((r11*x8372)));
evalcond[4]=(((cj0*cj5*r02))+(((-1.0)*cj3*x8387))+((x8372*x8380))+((x8364*x8369))+((r01*sj5*x8381))+((sj0*x8368))+((x8366*x8370)));
evalcond[5]=(x8390+(((-1.0)*x8366*x8380))+((x8363*x8379))+((x8370*x8372))+(((-1.0)*sj5*x8364*x8377))+(((-1.0)*r02*sj0*x8373))+((x8369*x8381))+((cj0*x8368)));
evalcond[6]=((0.1148)+(((-1.0)*x8364*x8365))+(((-1.0)*cj0*r00*x8374))+((x8371*x8372))+((x8366*x8383))+(((0.09746)*cj3))+((cj3*x8388))+((cj3*x8384))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x8378)));
evalcond[7]=(((r20*x8374))+(((-0.0001)*sj1))+(((0.02626)*x8389))+pz+(((-0.0718)*x8386))+(((-0.1246)*cj1))+(((0.09746)*x8367))+((x8367*x8384))+((x8367*x8388))+(((-0.02626)*x8376)));
evalcond[8]=((((-1.0)*x8379*x8388))+(((-1.0)*x8379*x8384))+(((-0.1246)*sj1))+(((-1.0)*x8366*x8371))+(((0.02626)*r00*x8364))+(((-1.0)*cj0*x8378))+((x8372*x8383))+(((0.02626)*x8385))+(((-0.09746)*x8379))+(((-0.0718)*x8390))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x8365*x8381)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8391=((1.0)*cj0);
IkReal x8392=(cj1*cj6);
IkReal x8393=(sj1*sj6);
IkReal x8394=(r01*sj0);
IkReal x8395=((1.0)*r20);
IkReal x8396=(r00*sj0);
IkReal x8397=(cj6*sj1);
IkReal x8398=(cj1*sj6);
CheckValue<IkReal> x8399=IKPowWithIntegerCheck(sj3,-1);
if(!x8399.valid){
continue;
}
if( IKabs(((x8399.value)*((((x8392*x8396))+(((-1.0)*r10*x8391*x8392))+(((-1.0)*x8395*x8397))+(((-1.0)*x8394*x8398))+((r21*x8393))+((cj0*r11*x8398)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj0*r10*x8397))+((x8393*x8394))+(((-1.0)*x8396*x8397))+((r21*x8398))+(((-1.0)*x8392*x8395))+(((-1.0)*r11*x8391*x8393)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x8399.value)*((((x8392*x8396))+(((-1.0)*r10*x8391*x8392))+(((-1.0)*x8395*x8397))+(((-1.0)*x8394*x8398))+((r21*x8393))+((cj0*r11*x8398))))))+IKsqr((((cj0*r10*x8397))+((x8393*x8394))+(((-1.0)*x8396*x8397))+((r21*x8398))+(((-1.0)*x8392*x8395))+(((-1.0)*r11*x8391*x8393))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x8399.value)*((((x8392*x8396))+(((-1.0)*r10*x8391*x8392))+(((-1.0)*x8395*x8397))+(((-1.0)*x8394*x8398))+((r21*x8393))+((cj0*r11*x8398))))), (((cj0*r10*x8397))+((x8393*x8394))+(((-1.0)*x8396*x8397))+((r21*x8398))+(((-1.0)*x8392*x8395))+(((-1.0)*r11*x8391*x8393))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8400=IKsin(j4);
IkReal x8401=IKcos(j4);
IkReal x8402=(cj6*sj0);
IkReal x8403=((0.02626)*r10);
IkReal x8404=(sj0*sj6);
IkReal x8405=(sj1*sj3);
IkReal x8406=(cj5*r12);
IkReal x8407=(r11*sj5);
IkReal x8408=(r10*sj5);
IkReal x8409=((0.02626)*r01);
IkReal x8410=(cj0*sj6);
IkReal x8411=((1.0)*cj5);
IkReal x8412=((0.02626)*cj6);
IkReal x8413=((1.0)*r10);
IkReal x8414=(r21*sj6);
IkReal x8415=((1.0)*r01);
IkReal x8416=((1.0)*py);
IkReal x8417=(cj1*sj3);
IkReal x8418=(r00*sj5);
IkReal x8419=(cj0*cj6);
IkReal x8420=((1.0)*sj5);
IkReal x8421=((0.02626)*r11);
IkReal x8422=((0.02626)*x8400);
IkReal x8423=(sj1*x8401);
IkReal x8424=(cj1*x8400);
IkReal x8425=((1.0)*x8401);
IkReal x8426=((0.0718)*x8401);
IkReal x8427=(cj1*x8401);
IkReal x8428=(sj1*x8400);
evalcond[0]=((((-1.0)*x8414))+x8427+((cj6*r20))+((x8400*x8405)));
evalcond[1]=(((r11*x8404))+((cj3*x8400))+(((-1.0)*r00*x8419))+((r01*x8410))+(((-1.0)*x8402*x8413)));
evalcond[2]=((((-1.0)*cj6*r21*x8420))+x8424+(((-1.0)*x8405*x8425))+(((-1.0)*r20*sj6*x8420))+(((-1.0)*r22*x8411)));
evalcond[3]=((((-1.0)*x8404*x8415))+x8423+(((-1.0)*x8400*x8417))+((r00*x8402))+((r11*x8410))+(((-1.0)*x8413*x8419)));
evalcond[4]=(((sj0*x8406))+((cj0*cj5*r02))+((r01*sj5*x8419))+((x8410*x8418))+((x8402*x8407))+((x8404*x8408))+(((-1.0)*cj3*x8425)));
evalcond[5]=(x8428+(((-1.0)*sj5*x8402*x8415))+((x8407*x8419))+((x8401*x8417))+((x8408*x8410))+(((-1.0)*x8404*x8418))+((cj0*x8406))+(((-1.0)*r02*sj0*x8411)));
evalcond[6]=((0.1148)+((x8404*x8421))+((x8409*x8410))+((cj3*x8426))+((cj3*x8422))+(((-1.0)*cj0*r00*x8412))+(((0.09746)*cj3))+(((-1.0)*sj0*x8416))+(((-1.0)*x8402*x8403))+(((-1.0)*cj0*px)));
evalcond[7]=((((0.02626)*x8427))+(((-0.02626)*x8414))+(((-0.0001)*sj1))+((r20*x8412))+(((-0.0718)*x8424))+pz+(((-0.1246)*cj1))+(((0.09746)*x8405))+((x8405*x8426))+((x8405*x8422)));
evalcond[8]=((((0.02626)*x8423))+(((0.02626)*r00*x8402))+(((-0.1246)*sj1))+(((-1.0)*x8417*x8426))+(((-1.0)*x8417*x8422))+((x8410*x8421))+(((-1.0)*cj0*x8416))+(((-0.0718)*x8428))+(((-1.0)*x8404*x8409))+(((0.0001)*cj1))+((px*sj0))+(((-0.09746)*x8417))+(((-1.0)*x8403*x8419)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8429=cj3*cj3;
IkReal x8430=(cj1*cj6);
IkReal x8431=((1.0)*r21);
IkReal x8432=(cj1*sj6);
IkReal x8433=(sj1*sj3);
IkReal x8434=(r20*sj5);
IkReal x8435=(cj5*r22);
CheckValue<IkReal> x8436 = IKatan2WithCheck(IkReal(((((-1.0)*cj1*x8435))+(((-1.0)*sj6*x8431*x8433))+(((-1.0)*sj5*x8430*x8431))+((cj6*r20*x8433))+(((-1.0)*x8432*x8434)))),(((cj6*r21*sj5*x8433))+(((-1.0)*x8431*x8432))+((sj6*x8433*x8434))+((x8433*x8435))+((r20*x8430))),IKFAST_ATAN2_MAGTHRESH);
if(!x8436.valid){
continue;
}
CheckValue<IkReal> x8437=IKPowWithIntegerCheck(IKsign(((-1.0)+x8429+(((-1.0)*x8429*(cj1*cj1))))),-1);
if(!x8437.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x8436.value)+(((1.5707963267949)*(x8437.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8438=IKsin(j4);
IkReal x8439=IKcos(j4);
IkReal x8440=(cj6*sj0);
IkReal x8441=((0.02626)*r10);
IkReal x8442=(sj0*sj6);
IkReal x8443=(sj1*sj3);
IkReal x8444=(cj5*r12);
IkReal x8445=(r11*sj5);
IkReal x8446=(r10*sj5);
IkReal x8447=((0.02626)*r01);
IkReal x8448=(cj0*sj6);
IkReal x8449=((1.0)*cj5);
IkReal x8450=((0.02626)*cj6);
IkReal x8451=((1.0)*r10);
IkReal x8452=(r21*sj6);
IkReal x8453=((1.0)*r01);
IkReal x8454=((1.0)*py);
IkReal x8455=(cj1*sj3);
IkReal x8456=(r00*sj5);
IkReal x8457=(cj0*cj6);
IkReal x8458=((1.0)*sj5);
IkReal x8459=((0.02626)*r11);
IkReal x8460=((0.02626)*x8438);
IkReal x8461=(sj1*x8439);
IkReal x8462=(cj1*x8438);
IkReal x8463=((1.0)*x8439);
IkReal x8464=((0.0718)*x8439);
IkReal x8465=(cj1*x8439);
IkReal x8466=(sj1*x8438);
evalcond[0]=(x8465+((x8438*x8443))+(((-1.0)*x8452))+((cj6*r20)));
evalcond[1]=(((r11*x8442))+((cj3*x8438))+(((-1.0)*x8440*x8451))+(((-1.0)*r00*x8457))+((r01*x8448)));
evalcond[2]=((((-1.0)*r20*sj6*x8458))+x8462+(((-1.0)*cj6*r21*x8458))+(((-1.0)*x8443*x8463))+(((-1.0)*r22*x8449)));
evalcond[3]=(x8461+((r11*x8448))+(((-1.0)*x8442*x8453))+(((-1.0)*x8438*x8455))+(((-1.0)*x8451*x8457))+((r00*x8440)));
evalcond[4]=(((x8448*x8456))+((cj0*cj5*r02))+((r01*sj5*x8457))+((sj0*x8444))+((x8442*x8446))+(((-1.0)*cj3*x8463))+((x8440*x8445)));
evalcond[5]=(x8466+(((-1.0)*x8442*x8456))+(((-1.0)*r02*sj0*x8449))+(((-1.0)*sj5*x8440*x8453))+((x8445*x8457))+((x8446*x8448))+((x8439*x8455))+((cj0*x8444)));
evalcond[6]=((0.1148)+(((-1.0)*x8440*x8441))+(((-1.0)*sj0*x8454))+(((-1.0)*cj0*r00*x8450))+((cj3*x8460))+((cj3*x8464))+((x8447*x8448))+((x8442*x8459))+(((0.09746)*cj3))+(((-1.0)*cj0*px)));
evalcond[7]=((((-0.0718)*x8462))+(((-0.0001)*sj1))+(((-0.02626)*x8452))+((x8443*x8464))+((x8443*x8460))+((r20*x8450))+pz+(((-0.1246)*cj1))+(((0.09746)*x8443))+(((0.02626)*x8465)));
evalcond[8]=((((-0.0718)*x8466))+((x8448*x8459))+(((-0.1246)*sj1))+(((0.02626)*r00*x8440))+(((-1.0)*x8455*x8464))+(((-1.0)*x8455*x8460))+(((-0.09746)*x8455))+(((-1.0)*x8442*x8447))+(((0.0001)*cj1))+(((-1.0)*cj0*x8454))+((px*sj0))+(((-1.0)*x8441*x8457))+(((0.02626)*x8461)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x8467=(cj0*cj5);
IkReal x8468=((1.0)*sj5);
IkReal x8469=(cj5*cj6);
IkReal x8470=(cj5*sj6);
CheckValue<IkReal> x8471=IKPowWithIntegerCheck(sj1,-1);
if(!x8471.valid){
continue;
}
if( IKabs((((r00*sj6*x8467))+(((-1.0)*r12*sj0*x8468))+(((-1.0)*cj0*r02*x8468))+((r10*sj0*x8470))+((cj6*r01*x8467))+((r11*sj0*x8469)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8471.value)*((((r21*x8469))+(((-1.0)*r22*x8468))+((r20*x8470)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*sj6*x8467))+(((-1.0)*r12*sj0*x8468))+(((-1.0)*cj0*r02*x8468))+((r10*sj0*x8470))+((cj6*r01*x8467))+((r11*sj0*x8469))))+IKsqr(((x8471.value)*((((r21*x8469))+(((-1.0)*r22*x8468))+((r20*x8470))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((((r00*sj6*x8467))+(((-1.0)*r12*sj0*x8468))+(((-1.0)*cj0*r02*x8468))+((r10*sj0*x8470))+((cj6*r01*x8467))+((r11*sj0*x8469))), ((x8471.value)*((((r21*x8469))+(((-1.0)*r22*x8468))+((r20*x8470))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x8472=IKcos(j3);
IkReal x8473=(cj0*sj5);
IkReal x8474=(cj5*cj6);
IkReal x8475=((1.0)*sj5);
IkReal x8476=((1.0)*cj0);
IkReal x8477=((1.0)*sj0);
IkReal x8478=(cj5*sj6);
IkReal x8479=(r10*x8478);
evalcond[0]=(((r21*x8474))+(((-1.0)*r22*x8475))+(((-1.0)*sj1*x8472))+((r20*x8478)));
evalcond[1]=((((-1.0)*r00*x8476*x8478))+((r12*sj0*sj5))+(IKsin(j3))+(((-1.0)*x8477*x8479))+(((-1.0)*r11*x8474*x8477))+((r02*x8473))+(((-1.0)*r01*x8474*x8476)));
evalcond[2]=(((r12*x8473))+((cj1*x8472))+((r00*sj0*x8478))+((r01*sj0*x8474))+(((-1.0)*x8476*x8479))+(((-1.0)*r02*sj0*x8475))+(((-1.0)*r11*x8474*x8476)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x8480=cj3*cj3;
IkReal x8481=(sj5*sj6);
IkReal x8482=(cj1*cj6);
IkReal x8483=(sj1*sj3);
IkReal x8484=(r21*sj5);
IkReal x8485=((1.0)*cj1);
IkReal x8486=(cj5*r22);
IkReal x8487=(r20*x8483);
IkReal x8488=((1.0)*r21*sj6);
IkReal x8489=((-1.0)+x8480+(((-1.0)*cj1*x8480*x8485)));
j4eval[0]=x8489;
j4eval[1]=((IKabs(((((-1.0)*r20*x8481*x8485))+(((-1.0)*x8482*x8484))+((cj6*x8487))+(((-1.0)*x8483*x8488))+(((-1.0)*x8485*x8486)))))+(IKabs((((cj6*x8483*x8484))+(((-1.0)*r21*sj6*x8485))+((x8483*x8486))+((x8481*x8487))+((r20*x8482))))));
j4eval[2]=IKsign(x8489);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
j4eval[0]=cj3;
j4eval[1]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x8490=(cj5*cj6);
IkReal x8491=(r11*sj0);
IkReal x8492=(cj6*sj5);
IkReal x8493=((1.0)*cj0);
IkReal x8494=(r10*sj6);
IkReal x8495=(sj0*sj5);
IkReal x8496=(r00*sj6);
IkReal x8497=(cj0*sj5);
IkReal x8498=((0.02626)*cj0);
IkReal x8499=(r01*sj6);
IkReal x8500=((1.0)*sj0);
IkReal x8501=(cj6*r10);
IkReal x8502=(cj5*sj0);
IkReal x8503=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x8490)));
evalcond[2]=(((sj6*x8491))+(((-1.0)*x8493*x8503))+(((-1.0)*x8500*x8501))+((cj0*x8499)));
evalcond[3]=((1.0)+(((-1.0)*x8490*x8491))+(((-1.0)*cj5*x8494*x8500))+(((-1.0)*cj5*x8493*x8496))+((r12*x8495))+(((-1.0)*r01*x8490*x8493))+((r02*x8497)));
evalcond[4]=(((cj0*cj5*r02))+((x8491*x8492))+((r12*x8502))+((x8494*x8495))+((cj0*r01*x8492))+((x8496*x8497)));
evalcond[5]=(((x8496*x8502))+(((-1.0)*r11*x8490*x8493))+(((-1.0)*cj5*x8493*x8494))+((r12*x8497))+((r01*sj0*x8490))+(((-1.0)*r02*x8495)));
evalcond[6]=((0.1148)+(((-1.0)*x8498*x8503))+(((-1.0)*px*x8493))+(((0.02626)*sj6*x8491))+(((-1.0)*py*x8500))+(((-0.02626)*sj0*x8501))+((x8498*x8499)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8504=(cj6*r21);
IkReal x8505=(r20*sj6);
IkReal x8506=(r21*sj6);
IkReal x8507=(cj1*sj5);
IkReal x8508=(cj5*r22);
IkReal x8509=((1.0)*sj1*sj5);
IkReal x8510=((1.0)*cj6*r20);
if( IKabs((((cj1*x8508))+(((-1.0)*sj1*x8510))+((sj1*x8506))+((x8505*x8507))+((x8504*x8507)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x8505*x8509))+(((-1.0)*sj1*x8508))+((cj1*x8506))+(((-1.0)*cj1*x8510))+(((-1.0)*x8504*x8509)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x8508))+(((-1.0)*sj1*x8510))+((sj1*x8506))+((x8505*x8507))+((x8504*x8507))))+IKsqr(((((-1.0)*x8505*x8509))+(((-1.0)*sj1*x8508))+((cj1*x8506))+(((-1.0)*cj1*x8510))+(((-1.0)*x8504*x8509))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj1*x8508))+(((-1.0)*sj1*x8510))+((sj1*x8506))+((x8505*x8507))+((x8504*x8507))), ((((-1.0)*x8505*x8509))+(((-1.0)*sj1*x8508))+((cj1*x8506))+(((-1.0)*cj1*x8510))+(((-1.0)*x8504*x8509))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x8511=IKsin(j4);
IkReal x8512=IKcos(j4);
IkReal x8513=((0.02626)*sj6);
IkReal x8514=(r01*sj0);
IkReal x8515=(cj0*r11);
IkReal x8516=((0.02626)*cj6);
IkReal x8517=(cj0*r10);
IkReal x8518=((1.0)*cj5);
IkReal x8519=((1.0)*sj6);
IkReal x8520=(r00*sj0);
IkReal x8521=((1.0)*cj6);
IkReal x8522=(cj1*x8512);
IkReal x8523=(sj1*x8511);
IkReal x8524=(sj1*x8512);
IkReal x8525=(cj1*x8511);
IkReal x8526=(x8523+x8522);
evalcond[0]=(x8526+(((-1.0)*r21*x8519))+((cj6*r20)));
evalcond[1]=((((-1.0)*r21*sj5*x8521))+x8525+(((-1.0)*r20*sj5*x8519))+(((-1.0)*x8524))+(((-1.0)*r22*x8518)));
evalcond[2]=(((sj6*x8515))+((cj6*x8520))+x8524+(((-1.0)*x8517*x8521))+(((-1.0)*x8514*x8519))+(((-1.0)*x8525)));
evalcond[3]=((((0.09736)*sj1))+(((-1.0)*r21*x8513))+(((0.02626)*x8523))+(((0.02626)*x8522))+pz+(((-0.0718)*x8525))+(((-0.1246)*cj1))+(((0.0718)*x8524))+((r20*x8516)));
evalcond[4]=(x8526+((cj0*cj5*r12))+(((-1.0)*sj5*x8514*x8521))+((sj5*sj6*x8517))+(((-1.0)*r02*sj0*x8518))+(((-1.0)*sj5*x8519*x8520))+((cj6*sj5*x8515)));
evalcond[5]=(((x8516*x8520))+(((-1.0)*x8513*x8514))+(((-0.1246)*sj1))+(((-0.09736)*cj1))+((x8513*x8515))+(((0.02626)*x8524))+(((-0.02626)*x8525))+(((-1.0)*x8516*x8517))+((px*sj0))+(((-0.0718)*x8523))+(((-0.0718)*x8522))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8527=(cj5*cj6);
IkReal x8528=(r11*sj0);
IkReal x8529=(cj6*sj5);
IkReal x8530=((1.0)*cj0);
IkReal x8531=(r10*sj6);
IkReal x8532=(sj0*sj5);
IkReal x8533=(r00*sj6);
IkReal x8534=(cj0*sj5);
IkReal x8535=((0.02626)*cj0);
IkReal x8536=(r01*sj6);
IkReal x8537=((1.0)*sj0);
IkReal x8538=(cj6*r10);
IkReal x8539=(cj5*sj0);
IkReal x8540=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x8527))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x8537*x8538))+((sj6*x8528))+((cj0*x8536))+(((-1.0)*x8530*x8540)));
evalcond[3]=((-1.0)+(((-1.0)*r01*x8527*x8530))+(((-1.0)*x8527*x8528))+(((-1.0)*cj5*x8530*x8533))+((r12*x8532))+((r02*x8534))+(((-1.0)*cj5*x8531*x8537)));
evalcond[4]=(((x8528*x8529))+((cj0*cj5*r02))+((cj0*r01*x8529))+((x8531*x8532))+((x8533*x8534))+((r12*x8539)));
evalcond[5]=(((x8533*x8539))+(((-1.0)*cj5*x8530*x8531))+(((-1.0)*r11*x8527*x8530))+((r12*x8534))+((r01*sj0*x8527))+(((-1.0)*r02*x8532)));
evalcond[6]=((0.1148)+(((-1.0)*x8535*x8540))+((x8535*x8536))+(((-0.02626)*sj0*x8538))+(((-1.0)*py*x8537))+(((0.02626)*sj6*x8528))+(((-1.0)*px*x8530)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8541=(cj5*r22);
IkReal x8542=(cj6*r20);
IkReal x8543=(r21*sj1);
IkReal x8544=(cj6*sj5);
IkReal x8545=(cj1*r21);
IkReal x8546=(r20*sj5*sj6);
if( IKabs(((((-1.0)*sj6*x8543))+((x8544*x8545))+((cj1*x8546))+((cj1*x8541))+((sj1*x8542)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x8543*x8544))+(((-1.0)*cj1*x8542))+((sj6*x8545))+((sj1*x8541))+((sj1*x8546)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj6*x8543))+((x8544*x8545))+((cj1*x8546))+((cj1*x8541))+((sj1*x8542))))+IKsqr((((x8543*x8544))+(((-1.0)*cj1*x8542))+((sj6*x8545))+((sj1*x8541))+((sj1*x8546))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj6*x8543))+((x8544*x8545))+((cj1*x8546))+((cj1*x8541))+((sj1*x8542))), (((x8543*x8544))+(((-1.0)*cj1*x8542))+((sj6*x8545))+((sj1*x8541))+((sj1*x8546))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x8547=IKcos(j4);
IkReal x8548=IKsin(j4);
IkReal x8549=((0.02626)*sj6);
IkReal x8550=(r01*sj0);
IkReal x8551=(cj0*sj6);
IkReal x8552=((0.02626)*cj6);
IkReal x8553=(cj0*r10);
IkReal x8554=((1.0)*cj5);
IkReal x8555=((1.0)*sj6);
IkReal x8556=(r00*sj0);
IkReal x8557=((1.0)*cj6);
IkReal x8558=(cj0*r11);
IkReal x8559=(sj1*x8547);
IkReal x8560=(cj1*x8548);
IkReal x8561=(cj1*x8547);
IkReal x8562=(sj1*x8548);
IkReal x8563=(x8560+x8559);
evalcond[0]=(x8561+(((-1.0)*r21*x8555))+((cj6*r20))+(((-1.0)*x8562)));
evalcond[1]=(x8563+(((-1.0)*r22*x8554))+(((-1.0)*r21*sj5*x8557))+(((-1.0)*r20*sj5*x8555)));
evalcond[2]=(((cj6*x8556))+((r11*x8551))+x8563+(((-1.0)*x8553*x8557))+(((-1.0)*x8550*x8555)));
evalcond[3]=(((r20*x8552))+(((-0.0718)*x8559))+(((-0.0718)*x8560))+(((-0.09756)*sj1))+pz+(((0.02626)*x8561))+(((-0.1246)*cj1))+(((-0.02626)*x8562))+(((-1.0)*r21*x8549)));
evalcond[4]=(x8562+(((-1.0)*sj5*x8555*x8556))+((cj0*cj5*r12))+(((-1.0)*sj5*x8550*x8557))+((r10*sj5*x8551))+((cj6*sj5*x8558))+(((-1.0)*r02*sj0*x8554))+(((-1.0)*x8561)));
evalcond[5]=((((-0.1246)*sj1))+(((-0.0718)*x8562))+(((-1.0)*x8549*x8550))+(((0.09756)*cj1))+(((0.02626)*x8559))+((x8549*x8558))+(((0.0718)*x8561))+(((0.02626)*x8560))+(((-1.0)*x8552*x8553))+((px*sj0))+(((-1.0)*cj0*py))+((x8552*x8556)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8564=(cj0*sj5);
IkReal x8565=(cj5*cj6);
IkReal x8566=((1.0)*sj5);
IkReal x8567=((1.0)*sj0);
IkReal x8568=((1.0)*cj0);
IkReal x8569=(cj5*sj6);
IkReal x8570=(r10*x8569);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj1))+((r20*x8569))+(((-1.0)*r22*x8566))+((r21*x8565)));
evalcond[2]=((((-1.0)*r01*x8565*x8568))+((r12*sj0*sj5))+((r02*x8564))+(((-1.0)*r11*x8565*x8567))+(((-1.0)*r00*x8568*x8569))+(((-1.0)*x8567*x8570)));
evalcond[3]=(((r01*sj0*x8565))+cj1+(((-1.0)*r11*x8565*x8568))+(((-1.0)*x8568*x8570))+(((-1.0)*r02*sj0*x8566))+((r12*x8564))+((r00*sj0*x8569)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8571=IKPowWithIntegerCheck(cj1,-1);
if(!x8571.valid){
continue;
}
CheckValue<IkReal> x8572=IKPowWithIntegerCheck(sj1,-1);
if(!x8572.valid){
continue;
}
if( IKabs(((x8571.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8572.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x8571.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x8572.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x8571.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x8572.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8573=IKsin(j4);
IkReal x8574=IKcos(j4);
IkReal x8575=(cj6*sj0);
IkReal x8576=((0.02626)*r10);
IkReal x8577=(sj0*sj6);
IkReal x8578=(r11*sj5);
IkReal x8579=(r10*sj5);
IkReal x8580=(cj0*cj6);
IkReal x8581=((0.02626)*r01);
IkReal x8582=(cj0*sj6);
IkReal x8583=(r21*sj6);
IkReal x8584=((1.0)*cj5);
IkReal x8585=(cj6*r20);
IkReal x8586=((1.0)*r10);
IkReal x8587=((1.0)*r01);
IkReal x8588=((1.0)*py);
IkReal x8589=(r00*sj5);
IkReal x8590=(cj5*r12);
IkReal x8591=((1.0)*sj5);
IkReal x8592=((0.02626)*r00);
IkReal x8593=((0.02626)*r11);
IkReal x8594=(sj1*x8574);
IkReal x8595=(cj1*x8573);
IkReal x8596=(cj1*x8574);
IkReal x8597=(sj1*x8573);
evalcond[0]=(x8596+x8585+(((-1.0)*x8583)));
evalcond[1]=((((-1.0)*r22*x8584))+x8595+(((-1.0)*r20*sj6*x8591))+(((-1.0)*cj6*r21*x8591)));
evalcond[2]=(x8573+(((-1.0)*r00*x8580))+((r01*x8582))+((r11*x8577))+(((-1.0)*x8575*x8586)));
evalcond[3]=((((-1.0)*x8580*x8586))+(((-1.0)*x8577*x8587))+x8594+((r00*x8575))+((r11*x8582)));
evalcond[4]=((((-0.0718)*x8595))+(((0.02626)*x8585))+(((-0.0001)*sj1))+(((-0.02626)*x8583))+pz+(((0.02626)*x8596))+(((-0.1246)*cj1)));
evalcond[5]=(((sj0*x8590))+((cj0*cj5*r02))+((x8577*x8579))+((r01*sj5*x8580))+(((-1.0)*x8574))+((x8575*x8578))+((x8582*x8589)));
evalcond[6]=(x8597+(((-1.0)*r02*sj0*x8584))+(((-1.0)*x8577*x8589))+((x8578*x8580))+((cj0*x8590))+(((-1.0)*sj5*x8575*x8587))+((x8579*x8582)));
evalcond[7]=((0.21226)+(((0.0718)*x8574))+((x8577*x8593))+(((-1.0)*x8575*x8576))+(((0.02626)*x8573))+(((-1.0)*x8580*x8592))+((x8581*x8582))+(((-1.0)*sj0*x8588))+(((-1.0)*cj0*px)));
evalcond[8]=((((-1.0)*x8576*x8580))+(((-0.0718)*x8597))+(((-1.0)*x8577*x8581))+(((-0.1246)*sj1))+((x8582*x8593))+(((-1.0)*cj0*x8588))+(((0.0001)*cj1))+(((0.02626)*x8594))+((px*sj0))+((x8575*x8592)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8598=((1.0)*sj6);
CheckValue<IkReal> x8599=IKPowWithIntegerCheck(cj1,-1);
if(!x8599.valid){
continue;
}
if( IKabs(((((-1.0)*cj0*r01*x8598))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x8598))+((cj0*cj6*r00)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8599.value)*(((((-1.0)*cj6*r20))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*r01*x8598))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x8598))+((cj0*cj6*r00))))+IKsqr(((x8599.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*r01*x8598))+((cj6*r10*sj0))+(((-1.0)*r11*sj0*x8598))+((cj0*cj6*r00))), ((x8599.value)*(((((-1.0)*cj6*r20))+((r21*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8600=IKsin(j4);
IkReal x8601=IKcos(j4);
IkReal x8602=(cj6*sj0);
IkReal x8603=((0.02626)*r10);
IkReal x8604=(sj0*sj6);
IkReal x8605=(r11*sj5);
IkReal x8606=(r10*sj5);
IkReal x8607=(cj0*cj6);
IkReal x8608=((0.02626)*r01);
IkReal x8609=(cj0*sj6);
IkReal x8610=(r21*sj6);
IkReal x8611=((1.0)*cj5);
IkReal x8612=(cj6*r20);
IkReal x8613=((1.0)*r10);
IkReal x8614=((1.0)*r01);
IkReal x8615=((1.0)*py);
IkReal x8616=(r00*sj5);
IkReal x8617=(cj5*r12);
IkReal x8618=((1.0)*sj5);
IkReal x8619=((0.02626)*r00);
IkReal x8620=((0.02626)*r11);
IkReal x8621=(sj1*x8601);
IkReal x8622=(cj1*x8600);
IkReal x8623=(cj1*x8601);
IkReal x8624=(sj1*x8600);
evalcond[0]=(x8623+x8612+(((-1.0)*x8610)));
evalcond[1]=((((-1.0)*r20*sj6*x8618))+x8622+(((-1.0)*cj6*r21*x8618))+(((-1.0)*r22*x8611)));
evalcond[2]=((((-1.0)*x8602*x8613))+x8600+(((-1.0)*r00*x8607))+((r01*x8609))+((r11*x8604)));
evalcond[3]=(x8621+(((-1.0)*x8607*x8613))+((r00*x8602))+((r11*x8609))+(((-1.0)*x8604*x8614)));
evalcond[4]=((((-0.0001)*sj1))+(((0.02626)*x8612))+pz+(((-0.0718)*x8622))+(((-0.1246)*cj1))+(((-0.02626)*x8610))+(((0.02626)*x8623)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x8607))+((x8609*x8616))+((x8602*x8605))+((x8604*x8606))+(((-1.0)*x8601))+((sj0*x8617)));
evalcond[6]=(((x8606*x8609))+x8624+(((-1.0)*r02*sj0*x8611))+((x8605*x8607))+(((-1.0)*sj5*x8602*x8614))+(((-1.0)*x8604*x8616))+((cj0*x8617)));
evalcond[7]=((0.21226)+(((-1.0)*x8607*x8619))+(((-1.0)*x8602*x8603))+((x8608*x8609))+(((0.02626)*x8600))+((x8604*x8620))+(((-1.0)*sj0*x8615))+(((0.0718)*x8601))+(((-1.0)*cj0*px)));
evalcond[8]=((((-0.1246)*sj1))+((x8602*x8619))+(((-1.0)*x8603*x8607))+(((0.0001)*cj1))+(((-0.0718)*x8624))+((px*sj0))+((x8609*x8620))+(((-1.0)*x8604*x8608))+(((0.02626)*x8621))+(((-1.0)*cj0*x8615)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8625=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x8625.valid){
continue;
}
CheckValue<IkReal> x8626 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x8626.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8625.value)))+(x8626.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8627=IKsin(j4);
IkReal x8628=IKcos(j4);
IkReal x8629=(cj6*sj0);
IkReal x8630=((0.02626)*r10);
IkReal x8631=(sj0*sj6);
IkReal x8632=(r11*sj5);
IkReal x8633=(r10*sj5);
IkReal x8634=(cj0*cj6);
IkReal x8635=((0.02626)*r01);
IkReal x8636=(cj0*sj6);
IkReal x8637=(r21*sj6);
IkReal x8638=((1.0)*cj5);
IkReal x8639=(cj6*r20);
IkReal x8640=((1.0)*r10);
IkReal x8641=((1.0)*r01);
IkReal x8642=((1.0)*py);
IkReal x8643=(r00*sj5);
IkReal x8644=(cj5*r12);
IkReal x8645=((1.0)*sj5);
IkReal x8646=((0.02626)*r00);
IkReal x8647=((0.02626)*r11);
IkReal x8648=(sj1*x8628);
IkReal x8649=(cj1*x8627);
IkReal x8650=(cj1*x8628);
IkReal x8651=(sj1*x8627);
evalcond[0]=(x8639+x8650+(((-1.0)*x8637)));
evalcond[1]=(x8649+(((-1.0)*r20*sj6*x8645))+(((-1.0)*r22*x8638))+(((-1.0)*cj6*r21*x8645)));
evalcond[2]=((((-1.0)*x8629*x8640))+x8627+(((-1.0)*r00*x8634))+((r01*x8636))+((r11*x8631)));
evalcond[3]=(x8648+(((-1.0)*x8631*x8641))+((r00*x8629))+(((-1.0)*x8634*x8640))+((r11*x8636)));
evalcond[4]=((((0.02626)*x8650))+(((-0.0001)*sj1))+(((-0.02626)*x8637))+pz+(((-0.1246)*cj1))+(((0.02626)*x8639))+(((-0.0718)*x8649)));
evalcond[5]=((((-1.0)*x8628))+((cj0*cj5*r02))+((x8636*x8643))+((x8629*x8632))+((r01*sj5*x8634))+((sj0*x8644))+((x8631*x8633)));
evalcond[6]=((((-1.0)*x8631*x8643))+(((-1.0)*r02*sj0*x8638))+x8651+((cj0*x8644))+(((-1.0)*sj5*x8629*x8641))+((x8633*x8636))+((x8632*x8634)));
evalcond[7]=((0.21226)+((x8631*x8647))+(((-1.0)*x8629*x8630))+(((0.0718)*x8628))+(((-1.0)*sj0*x8642))+((x8635*x8636))+(((-1.0)*x8634*x8646))+(((-1.0)*cj0*px))+(((0.02626)*x8627)));
evalcond[8]=((((-0.1246)*sj1))+((x8636*x8647))+(((-1.0)*cj0*x8642))+(((-0.0718)*x8651))+(((0.02626)*x8648))+((x8629*x8646))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x8630*x8634))+(((-1.0)*x8631*x8635)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8652=(cj0*sj5);
IkReal x8653=(cj5*cj6);
IkReal x8654=((1.0)*sj5);
IkReal x8655=((1.0)*cj0);
IkReal x8656=((1.0)*sj0);
IkReal x8657=(cj5*sj6);
IkReal x8658=(r10*x8657);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x8653))+sj1+(((-1.0)*r22*x8654))+((r20*x8657)));
evalcond[2]=((((-1.0)*x8656*x8658))+(((-1.0)*r00*x8655*x8657))+((r12*sj0*sj5))+((r02*x8652))+(((-1.0)*r11*x8653*x8656))+(((-1.0)*r01*x8653*x8655)));
evalcond[3]=((((-1.0)*x8655*x8658))+((r01*sj0*x8653))+((r12*x8652))+(((-1.0)*r11*x8653*x8655))+((r00*sj0*x8657))+(((-1.0)*r02*sj0*x8654))+(((-1.0)*cj1)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=sj1;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8659=IKPowWithIntegerCheck(cj1,-1);
if(!x8659.valid){
continue;
}
CheckValue<IkReal> x8660=IKPowWithIntegerCheck(sj1,-1);
if(!x8660.valid){
continue;
}
if( IKabs(((x8659.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8660.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x8659.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x8660.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x8659.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x8660.value)*((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))+(((-1.0)*cj6*r00*sj0))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8661=IKsin(j4);
IkReal x8662=IKcos(j4);
IkReal x8663=(cj6*sj0);
IkReal x8664=((0.02626)*r10);
IkReal x8665=(sj0*sj6);
IkReal x8666=(r11*sj5);
IkReal x8667=(r10*sj5);
IkReal x8668=(cj0*cj6);
IkReal x8669=((0.02626)*r01);
IkReal x8670=(cj0*sj6);
IkReal x8671=((1.0)*cj5);
IkReal x8672=(cj6*r20);
IkReal x8673=((1.0)*r10);
IkReal x8674=(r21*sj6);
IkReal x8675=((1.0)*r01);
IkReal x8676=((1.0)*py);
IkReal x8677=(r00*sj5);
IkReal x8678=(cj5*r12);
IkReal x8679=((1.0)*sj5);
IkReal x8680=((0.02626)*r00);
IkReal x8681=((0.02626)*r11);
IkReal x8682=(sj1*x8662);
IkReal x8683=(cj1*x8661);
IkReal x8684=(cj1*x8662);
IkReal x8685=(sj1*x8661);
evalcond[0]=(x8684+x8672+(((-1.0)*x8674)));
evalcond[1]=(x8683+(((-1.0)*r22*x8671))+(((-1.0)*cj6*r21*x8679))+(((-1.0)*r20*sj6*x8679)));
evalcond[2]=((((-1.0)*x8663*x8673))+((r11*x8665))+(((-1.0)*r00*x8668))+((r01*x8670))+(((-1.0)*x8661)));
evalcond[3]=(x8682+(((-1.0)*x8668*x8673))+((r11*x8670))+((r00*x8663))+(((-1.0)*x8665*x8675)));
evalcond[4]=((((-0.0718)*x8683))+(((-0.0001)*sj1))+(((0.02626)*x8672))+(((0.02626)*x8684))+pz+(((-0.1246)*cj1))+(((-0.02626)*x8674)));
evalcond[5]=(x8662+((cj0*cj5*r02))+((r01*sj5*x8668))+((x8670*x8677))+((x8663*x8666))+((x8665*x8667))+((sj0*x8678)));
evalcond[6]=((((-1.0)*r02*sj0*x8671))+((cj0*x8678))+x8685+(((-1.0)*sj5*x8663*x8675))+(((-1.0)*x8665*x8677))+((x8667*x8670))+((x8666*x8668)));
evalcond[7]=((0.01734)+(((-0.0718)*x8662))+(((-0.02626)*x8661))+(((-1.0)*x8668*x8680))+((x8669*x8670))+((x8665*x8681))+(((-1.0)*x8663*x8664))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x8676)));
evalcond[8]=((((-1.0)*cj0*x8676))+(((-0.1246)*sj1))+(((-0.0718)*x8685))+(((0.02626)*x8682))+((x8670*x8681))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x8665*x8669))+(((-1.0)*x8664*x8668))+((x8663*x8680)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8686=((1.0)*cj6);
CheckValue<IkReal> x8687=IKPowWithIntegerCheck(cj1,-1);
if(!x8687.valid){
continue;
}
if( IKabs((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x8686))+(((-1.0)*r10*sj0*x8686))+((cj0*r01*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x8687.value)*((((r21*sj6))+(((-1.0)*r20*x8686)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x8686))+(((-1.0)*r10*sj0*x8686))+((cj0*r01*sj6))))+IKsqr(((x8687.value)*((((r21*sj6))+(((-1.0)*r20*x8686))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x8686))+(((-1.0)*r10*sj0*x8686))+((cj0*r01*sj6))), ((x8687.value)*((((r21*sj6))+(((-1.0)*r20*x8686))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8688=IKsin(j4);
IkReal x8689=IKcos(j4);
IkReal x8690=(cj6*sj0);
IkReal x8691=((0.02626)*r10);
IkReal x8692=(sj0*sj6);
IkReal x8693=(r11*sj5);
IkReal x8694=(r10*sj5);
IkReal x8695=(cj0*cj6);
IkReal x8696=((0.02626)*r01);
IkReal x8697=(cj0*sj6);
IkReal x8698=((1.0)*cj5);
IkReal x8699=(cj6*r20);
IkReal x8700=((1.0)*r10);
IkReal x8701=(r21*sj6);
IkReal x8702=((1.0)*r01);
IkReal x8703=((1.0)*py);
IkReal x8704=(r00*sj5);
IkReal x8705=(cj5*r12);
IkReal x8706=((1.0)*sj5);
IkReal x8707=((0.02626)*r00);
IkReal x8708=((0.02626)*r11);
IkReal x8709=(sj1*x8689);
IkReal x8710=(cj1*x8688);
IkReal x8711=(cj1*x8689);
IkReal x8712=(sj1*x8688);
evalcond[0]=(x8699+x8711+(((-1.0)*x8701)));
evalcond[1]=(x8710+(((-1.0)*cj6*r21*x8706))+(((-1.0)*r22*x8698))+(((-1.0)*r20*sj6*x8706)));
evalcond[2]=((((-1.0)*x8690*x8700))+(((-1.0)*r00*x8695))+(((-1.0)*x8688))+((r01*x8697))+((r11*x8692)));
evalcond[3]=((((-1.0)*x8692*x8702))+(((-1.0)*x8695*x8700))+x8709+((r00*x8690))+((r11*x8697)));
evalcond[4]=((((-0.0001)*sj1))+(((0.02626)*x8711))+(((-0.0718)*x8710))+pz+(((-0.1246)*cj1))+(((0.02626)*x8699))+(((-0.02626)*x8701)));
evalcond[5]=(x8689+((cj0*cj5*r02))+((x8690*x8693))+((x8697*x8704))+((x8692*x8694))+((r01*sj5*x8695))+((sj0*x8705)));
evalcond[6]=((((-1.0)*x8692*x8704))+x8712+((x8694*x8697))+((cj0*x8705))+((x8693*x8695))+(((-1.0)*r02*sj0*x8698))+(((-1.0)*sj5*x8690*x8702)));
evalcond[7]=((0.01734)+(((-1.0)*x8695*x8707))+(((-0.0718)*x8689))+((x8692*x8708))+(((-1.0)*x8690*x8691))+((x8696*x8697))+(((-1.0)*sj0*x8703))+(((-0.02626)*x8688))+(((-1.0)*cj0*px)));
evalcond[8]=((((-1.0)*cj0*x8703))+(((-0.1246)*sj1))+(((-1.0)*x8691*x8695))+((x8697*x8708))+(((-0.0718)*x8712))+((x8690*x8707))+(((0.0001)*cj1))+((px*sj0))+(((0.02626)*x8709))+(((-1.0)*x8692*x8696)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8713=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x8713.valid){
continue;
}
CheckValue<IkReal> x8714 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x8714.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8713.value)))+(x8714.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8715=IKsin(j4);
IkReal x8716=IKcos(j4);
IkReal x8717=(cj6*sj0);
IkReal x8718=((0.02626)*r10);
IkReal x8719=(sj0*sj6);
IkReal x8720=(r11*sj5);
IkReal x8721=(r10*sj5);
IkReal x8722=(cj0*cj6);
IkReal x8723=((0.02626)*r01);
IkReal x8724=(cj0*sj6);
IkReal x8725=((1.0)*cj5);
IkReal x8726=(cj6*r20);
IkReal x8727=((1.0)*r10);
IkReal x8728=(r21*sj6);
IkReal x8729=((1.0)*r01);
IkReal x8730=((1.0)*py);
IkReal x8731=(r00*sj5);
IkReal x8732=(cj5*r12);
IkReal x8733=((1.0)*sj5);
IkReal x8734=((0.02626)*r00);
IkReal x8735=((0.02626)*r11);
IkReal x8736=(sj1*x8716);
IkReal x8737=(cj1*x8715);
IkReal x8738=(cj1*x8716);
IkReal x8739=(sj1*x8715);
evalcond[0]=(x8738+x8726+(((-1.0)*x8728)));
evalcond[1]=(x8737+(((-1.0)*cj6*r21*x8733))+(((-1.0)*r22*x8725))+(((-1.0)*r20*sj6*x8733)));
evalcond[2]=(((r11*x8719))+(((-1.0)*x8715))+(((-1.0)*r00*x8722))+((r01*x8724))+(((-1.0)*x8717*x8727)));
evalcond[3]=(x8736+((r11*x8724))+((r00*x8717))+(((-1.0)*x8719*x8729))+(((-1.0)*x8722*x8727)));
evalcond[4]=((((-0.0718)*x8737))+(((-0.0001)*sj1))+pz+(((0.02626)*x8726))+(((0.02626)*x8738))+(((-0.1246)*cj1))+(((-0.02626)*x8728)));
evalcond[5]=(((r01*sj5*x8722))+((x8717*x8720))+((cj0*cj5*r02))+x8716+((x8724*x8731))+((x8719*x8721))+((sj0*x8732)));
evalcond[6]=((((-1.0)*x8719*x8731))+x8739+(((-1.0)*r02*sj0*x8725))+((cj0*x8732))+(((-1.0)*sj5*x8717*x8729))+((x8720*x8722))+((x8721*x8724)));
evalcond[7]=((0.01734)+(((-0.02626)*x8715))+((x8723*x8724))+(((-0.0718)*x8716))+(((-1.0)*x8717*x8718))+(((-1.0)*sj0*x8730))+((x8719*x8735))+(((-1.0)*cj0*px))+(((-1.0)*x8722*x8734)));
evalcond[8]=((((-0.0718)*x8739))+(((-1.0)*cj0*x8730))+((x8717*x8734))+(((-0.1246)*sj1))+((x8724*x8735))+(((-1.0)*x8719*x8723))+(((-1.0)*x8718*x8722))+(((0.0001)*cj1))+((px*sj0))+(((0.02626)*x8736)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x8747=IKPowWithIntegerCheck(cj3,-1);
if(!x8747.valid){
continue;
}
IkReal x8740=x8747.value;
IkReal x8741=(cj6*r10);
IkReal x8742=(r11*sj6);
IkReal x8743=(sj1*sj3);
IkReal x8744=(cj0*cj6*r00);
IkReal x8745=(sj0*x8743);
IkReal x8746=(cj0*r01*sj6);
CheckValue<IkReal> x8748=IKPowWithIntegerCheck(cj1,-1);
if(!x8748.valid){
continue;
}
if( IKabs((x8740*((x8744+(((-1.0)*sj0*x8742))+((sj0*x8741))+(((-1.0)*x8746)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x8740*(x8748.value)*(((((-1.0)*cj3*cj6*r20))+((cj3*r21*sj6))+(((-1.0)*x8743*x8744))+(((-1.0)*x8741*x8745))+((x8742*x8745))+((x8743*x8746)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x8740*((x8744+(((-1.0)*sj0*x8742))+((sj0*x8741))+(((-1.0)*x8746))))))+IKsqr((x8740*(x8748.value)*(((((-1.0)*cj3*cj6*r20))+((cj3*r21*sj6))+(((-1.0)*x8743*x8744))+(((-1.0)*x8741*x8745))+((x8742*x8745))+((x8743*x8746))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((x8740*((x8744+(((-1.0)*sj0*x8742))+((sj0*x8741))+(((-1.0)*x8746))))), (x8740*(x8748.value)*(((((-1.0)*cj3*cj6*r20))+((cj3*r21*sj6))+(((-1.0)*x8743*x8744))+(((-1.0)*x8741*x8745))+((x8742*x8745))+((x8743*x8746))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8749=IKsin(j4);
IkReal x8750=IKcos(j4);
IkReal x8751=(cj6*sj0);
IkReal x8752=((0.02626)*r10);
IkReal x8753=(sj0*sj6);
IkReal x8754=(sj1*sj3);
IkReal x8755=(cj5*r12);
IkReal x8756=(r11*sj5);
IkReal x8757=(r10*sj5);
IkReal x8758=((0.02626)*r01);
IkReal x8759=(cj0*sj6);
IkReal x8760=((1.0)*cj5);
IkReal x8761=((0.02626)*cj6);
IkReal x8762=((1.0)*r10);
IkReal x8763=(r21*sj6);
IkReal x8764=((1.0)*r01);
IkReal x8765=((1.0)*py);
IkReal x8766=(cj1*sj3);
IkReal x8767=(r00*sj5);
IkReal x8768=(cj0*cj6);
IkReal x8769=((1.0)*sj5);
IkReal x8770=((0.02626)*r11);
IkReal x8771=((0.02626)*x8749);
IkReal x8772=(sj1*x8750);
IkReal x8773=(cj1*x8749);
IkReal x8774=((1.0)*x8750);
IkReal x8775=((0.0718)*x8750);
IkReal x8776=(cj1*x8750);
IkReal x8777=(sj1*x8749);
evalcond[0]=(x8776+(((-1.0)*x8763))+((x8749*x8754))+((cj6*r20)));
evalcond[1]=(((cj3*x8749))+((r11*x8753))+(((-1.0)*r00*x8768))+(((-1.0)*x8751*x8762))+((r01*x8759)));
evalcond[2]=(x8773+(((-1.0)*r20*sj6*x8769))+(((-1.0)*x8754*x8774))+(((-1.0)*r22*x8760))+(((-1.0)*cj6*r21*x8769)));
evalcond[3]=((((-1.0)*x8753*x8764))+x8772+((r11*x8759))+(((-1.0)*x8749*x8766))+((r00*x8751))+(((-1.0)*x8762*x8768)));
evalcond[4]=(((r01*sj5*x8768))+((cj0*cj5*r02))+((sj0*x8755))+((x8753*x8757))+((x8751*x8756))+((x8759*x8767))+(((-1.0)*cj3*x8774)));
evalcond[5]=(((x8756*x8768))+((x8750*x8766))+x8777+((cj0*x8755))+((x8757*x8759))+(((-1.0)*sj5*x8751*x8764))+(((-1.0)*r02*sj0*x8760))+(((-1.0)*x8753*x8767)));
evalcond[6]=((0.1148)+(((-1.0)*x8751*x8752))+((x8758*x8759))+((cj3*x8771))+((cj3*x8775))+(((-1.0)*cj0*r00*x8761))+((x8753*x8770))+(((0.09746)*cj3))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x8765)));
evalcond[7]=((((-0.0001)*sj1))+((x8754*x8775))+((x8754*x8771))+(((0.09746)*x8754))+((r20*x8761))+pz+(((0.02626)*x8776))+(((-0.0718)*x8773))+(((-0.1246)*cj1))+(((-0.02626)*x8763)));
evalcond[8]=((((-0.1246)*sj1))+(((-1.0)*x8766*x8771))+(((-1.0)*x8766*x8775))+(((-0.09746)*x8766))+(((-1.0)*cj0*x8765))+(((0.02626)*r00*x8751))+(((-1.0)*x8753*x8758))+(((0.02626)*x8772))+(((-0.0718)*x8777))+(((0.0001)*cj1))+((px*sj0))+((x8759*x8770))+(((-1.0)*x8752*x8768)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8778=((1.0)*cj0);
IkReal x8779=(cj1*cj6);
IkReal x8780=(sj1*sj6);
IkReal x8781=(r01*sj0);
IkReal x8782=((1.0)*r20);
IkReal x8783=(r00*sj0);
IkReal x8784=(cj6*sj1);
IkReal x8785=(cj1*sj6);
CheckValue<IkReal> x8786=IKPowWithIntegerCheck(sj3,-1);
if(!x8786.valid){
continue;
}
if( IKabs(((x8786.value)*(((((-1.0)*r10*x8778*x8779))+((cj0*r11*x8785))+((r21*x8780))+(((-1.0)*x8781*x8785))+((x8779*x8783))+(((-1.0)*x8782*x8784)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r21*x8785))+(((-1.0)*x8779*x8782))+((cj0*r10*x8784))+(((-1.0)*x8783*x8784))+((x8780*x8781))+(((-1.0)*r11*x8778*x8780)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x8786.value)*(((((-1.0)*r10*x8778*x8779))+((cj0*r11*x8785))+((r21*x8780))+(((-1.0)*x8781*x8785))+((x8779*x8783))+(((-1.0)*x8782*x8784))))))+IKsqr((((r21*x8785))+(((-1.0)*x8779*x8782))+((cj0*r10*x8784))+(((-1.0)*x8783*x8784))+((x8780*x8781))+(((-1.0)*r11*x8778*x8780))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x8786.value)*(((((-1.0)*r10*x8778*x8779))+((cj0*r11*x8785))+((r21*x8780))+(((-1.0)*x8781*x8785))+((x8779*x8783))+(((-1.0)*x8782*x8784))))), (((r21*x8785))+(((-1.0)*x8779*x8782))+((cj0*r10*x8784))+(((-1.0)*x8783*x8784))+((x8780*x8781))+(((-1.0)*r11*x8778*x8780))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8787=IKsin(j4);
IkReal x8788=IKcos(j4);
IkReal x8789=(cj6*sj0);
IkReal x8790=((0.02626)*r10);
IkReal x8791=(sj0*sj6);
IkReal x8792=(sj1*sj3);
IkReal x8793=(cj5*r12);
IkReal x8794=(r11*sj5);
IkReal x8795=(r10*sj5);
IkReal x8796=((0.02626)*r01);
IkReal x8797=(cj0*sj6);
IkReal x8798=((1.0)*cj5);
IkReal x8799=((0.02626)*cj6);
IkReal x8800=((1.0)*r10);
IkReal x8801=(r21*sj6);
IkReal x8802=((1.0)*r01);
IkReal x8803=((1.0)*py);
IkReal x8804=(cj1*sj3);
IkReal x8805=(r00*sj5);
IkReal x8806=(cj0*cj6);
IkReal x8807=((1.0)*sj5);
IkReal x8808=((0.02626)*r11);
IkReal x8809=((0.02626)*x8787);
IkReal x8810=(sj1*x8788);
IkReal x8811=(cj1*x8787);
IkReal x8812=((1.0)*x8788);
IkReal x8813=((0.0718)*x8788);
IkReal x8814=(cj1*x8788);
IkReal x8815=(sj1*x8787);
evalcond[0]=(((x8787*x8792))+(((-1.0)*x8801))+x8814+((cj6*r20)));
evalcond[1]=((((-1.0)*r00*x8806))+(((-1.0)*x8789*x8800))+((r11*x8791))+((cj3*x8787))+((r01*x8797)));
evalcond[2]=((((-1.0)*x8792*x8812))+x8811+(((-1.0)*cj6*r21*x8807))+(((-1.0)*r20*sj6*x8807))+(((-1.0)*r22*x8798)));
evalcond[3]=((((-1.0)*x8791*x8802))+(((-1.0)*x8800*x8806))+((r11*x8797))+x8810+(((-1.0)*x8787*x8804))+((r00*x8789)));
evalcond[4]=(((cj0*cj5*r02))+((x8797*x8805))+((x8789*x8794))+((r01*sj5*x8806))+((x8791*x8795))+(((-1.0)*cj3*x8812))+((sj0*x8793)));
evalcond[5]=(((x8795*x8797))+((x8788*x8804))+(((-1.0)*sj5*x8789*x8802))+((cj0*x8793))+x8815+(((-1.0)*r02*sj0*x8798))+(((-1.0)*x8791*x8805))+((x8794*x8806)));
evalcond[6]=((0.1148)+(((-1.0)*x8789*x8790))+((x8796*x8797))+(((-1.0)*sj0*x8803))+((x8791*x8808))+(((0.09746)*cj3))+((cj3*x8809))+((cj3*x8813))+(((-1.0)*cj0*r00*x8799))+(((-1.0)*cj0*px)));
evalcond[7]=((((-0.0001)*sj1))+(((-0.0718)*x8811))+(((0.09746)*x8792))+(((0.02626)*x8814))+pz+((x8792*x8809))+(((-0.02626)*x8801))+(((-0.1246)*cj1))+((x8792*x8813))+((r20*x8799)));
evalcond[8]=((((0.02626)*r00*x8789))+(((-1.0)*x8804*x8813))+(((-0.1246)*sj1))+((x8797*x8808))+(((-0.0718)*x8815))+(((0.02626)*x8810))+(((-0.09746)*x8804))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x8791*x8796))+(((-1.0)*cj0*x8803))+(((-1.0)*x8804*x8809))+(((-1.0)*x8790*x8806)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8816=cj3*cj3;
IkReal x8817=(cj1*cj6);
IkReal x8818=((1.0)*r21);
IkReal x8819=(cj1*sj6);
IkReal x8820=(sj1*sj3);
IkReal x8821=(r20*sj5);
IkReal x8822=(cj5*r22);
CheckValue<IkReal> x8823 = IKatan2WithCheck(IkReal(((((-1.0)*sj5*x8817*x8818))+(((-1.0)*sj6*x8818*x8820))+((cj6*r20*x8820))+(((-1.0)*cj1*x8822))+(((-1.0)*x8819*x8821)))),(((cj6*r21*sj5*x8820))+((r20*x8817))+((sj6*x8820*x8821))+(((-1.0)*x8818*x8819))+((x8820*x8822))),IKFAST_ATAN2_MAGTHRESH);
if(!x8823.valid){
continue;
}
CheckValue<IkReal> x8824=IKPowWithIntegerCheck(IKsign(((-1.0)+(((-1.0)*x8816*(cj1*cj1)))+x8816)),-1);
if(!x8824.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x8823.value)+(((1.5707963267949)*(x8824.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8825=IKsin(j4);
IkReal x8826=IKcos(j4);
IkReal x8827=(cj6*sj0);
IkReal x8828=((0.02626)*r10);
IkReal x8829=(sj0*sj6);
IkReal x8830=(sj1*sj3);
IkReal x8831=(cj5*r12);
IkReal x8832=(r11*sj5);
IkReal x8833=(r10*sj5);
IkReal x8834=((0.02626)*r01);
IkReal x8835=(cj0*sj6);
IkReal x8836=((1.0)*cj5);
IkReal x8837=((0.02626)*cj6);
IkReal x8838=((1.0)*r10);
IkReal x8839=(r21*sj6);
IkReal x8840=((1.0)*r01);
IkReal x8841=((1.0)*py);
IkReal x8842=(cj1*sj3);
IkReal x8843=(r00*sj5);
IkReal x8844=(cj0*cj6);
IkReal x8845=((1.0)*sj5);
IkReal x8846=((0.02626)*r11);
IkReal x8847=((0.02626)*x8825);
IkReal x8848=(sj1*x8826);
IkReal x8849=(cj1*x8825);
IkReal x8850=((1.0)*x8826);
IkReal x8851=((0.0718)*x8826);
IkReal x8852=(cj1*x8826);
IkReal x8853=(sj1*x8825);
evalcond[0]=(x8852+(((-1.0)*x8839))+((cj6*r20))+((x8825*x8830)));
evalcond[1]=((((-1.0)*r00*x8844))+(((-1.0)*x8827*x8838))+((r11*x8829))+((r01*x8835))+((cj3*x8825)));
evalcond[2]=(x8849+(((-1.0)*cj6*r21*x8845))+(((-1.0)*r20*sj6*x8845))+(((-1.0)*x8830*x8850))+(((-1.0)*r22*x8836)));
evalcond[3]=(((r11*x8835))+x8848+(((-1.0)*x8838*x8844))+((r00*x8827))+(((-1.0)*x8829*x8840))+(((-1.0)*x8825*x8842)));
evalcond[4]=((((-1.0)*cj3*x8850))+((x8827*x8832))+((cj0*cj5*r02))+((r01*sj5*x8844))+((sj0*x8831))+((x8835*x8843))+((x8829*x8833)));
evalcond[5]=((((-1.0)*r02*sj0*x8836))+((cj0*x8831))+((x8826*x8842))+x8853+((x8832*x8844))+((x8833*x8835))+(((-1.0)*x8829*x8843))+(((-1.0)*sj5*x8827*x8840)));
evalcond[6]=((0.1148)+((x8829*x8846))+(((-1.0)*x8827*x8828))+((cj3*x8851))+(((-1.0)*sj0*x8841))+(((-1.0)*cj0*r00*x8837))+((cj3*x8847))+(((0.09746)*cj3))+((x8834*x8835))+(((-1.0)*cj0*px)));
evalcond[7]=((((-0.0001)*sj1))+(((-0.0718)*x8849))+((r20*x8837))+((x8830*x8847))+pz+(((-0.1246)*cj1))+(((0.02626)*x8852))+((x8830*x8851))+(((-0.02626)*x8839))+(((0.09746)*x8830)));
evalcond[8]=((((-1.0)*x8842*x8847))+(((-1.0)*cj0*x8841))+(((-0.1246)*sj1))+(((0.02626)*r00*x8827))+(((0.02626)*x8848))+(((-1.0)*x8842*x8851))+(((-1.0)*x8829*x8834))+(((-0.09746)*x8842))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x8828*x8844))+(((-0.0718)*x8853))+((x8835*x8846)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j3, j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x8866=IKPowWithIntegerCheck(sj2,-1);
if(!x8866.valid){
continue;
}
IkReal x8854=x8866.value;
IkReal x8855=(cj2*sj1);
IkReal x8856=(r11*sj0);
IkReal x8857=(cj0*r01);
IkReal x8858=(cj0*cj5);
IkReal x8859=(sj2*sj5);
IkReal x8860=(sj0*sj2);
IkReal x8861=(cj0*r02*sj5);
IkReal x8862=((1.0)*cj5*cj6);
IkReal x8863=((1.0)*r00*sj6);
IkReal x8864=(r12*sj0*sj5);
IkReal x8865=((1.0)*cj5*r10*sj0*sj6);
CheckValue<IkReal> x8867=IKPowWithIntegerCheck(cj1,-1);
if(!x8867.valid){
continue;
}
if( IKabs((x8854*(((((-1.0)*x8857*x8862))+x8864+x8861+(((-1.0)*x8865))+(((-1.0)*x8856*x8862))+(((-1.0)*x8858*x8863)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x8854*(x8867.value)*((((r10*sj2*sj6*x8858))+((x8855*x8861))+((x8855*x8864))+((cj6*r11*sj2*x8858))+(((-1.0)*r01*x8860*x8862))+(((-1.0)*x8855*x8865))+(((-1.0)*cj0*r12*x8859))+(((-1.0)*cj5*x8860*x8863))+(((-1.0)*x8855*x8857*x8862))+(((-1.0)*x8855*x8856*x8862))+((r02*sj0*x8859))+(((-1.0)*x8855*x8858*x8863)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x8854*(((((-1.0)*x8857*x8862))+x8864+x8861+(((-1.0)*x8865))+(((-1.0)*x8856*x8862))+(((-1.0)*x8858*x8863))))))+IKsqr((x8854*(x8867.value)*((((r10*sj2*sj6*x8858))+((x8855*x8861))+((x8855*x8864))+((cj6*r11*sj2*x8858))+(((-1.0)*r01*x8860*x8862))+(((-1.0)*x8855*x8865))+(((-1.0)*cj0*r12*x8859))+(((-1.0)*cj5*x8860*x8863))+(((-1.0)*x8855*x8857*x8862))+(((-1.0)*x8855*x8856*x8862))+((r02*sj0*x8859))+(((-1.0)*x8855*x8858*x8863))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((x8854*(((((-1.0)*x8857*x8862))+x8864+x8861+(((-1.0)*x8865))+(((-1.0)*x8856*x8862))+(((-1.0)*x8858*x8863))))), (x8854*(x8867.value)*((((r10*sj2*sj6*x8858))+((x8855*x8861))+((x8855*x8864))+((cj6*r11*sj2*x8858))+(((-1.0)*r01*x8860*x8862))+(((-1.0)*x8855*x8865))+(((-1.0)*cj0*r12*x8859))+(((-1.0)*cj5*x8860*x8863))+(((-1.0)*x8855*x8857*x8862))+(((-1.0)*x8855*x8856*x8862))+((r02*sj0*x8859))+(((-1.0)*x8855*x8858*x8863))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x8868=IKsin(j3);
IkReal x8869=IKcos(j3);
IkReal x8870=((1.0)*sj1);
IkReal x8871=(cj0*sj5);
IkReal x8872=(cj5*cj6);
IkReal x8873=((1.0)*sj5);
IkReal x8874=((1.0)*cj0);
IkReal x8875=((1.0)*sj0);
IkReal x8876=(cj5*sj6);
IkReal x8877=((1.0)*x8868);
evalcond[0]=(((r20*x8876))+(((-1.0)*r22*x8873))+(((-1.0)*x8869*x8870))+((r21*x8872))+(((-1.0)*cj1*cj2*x8877)));
evalcond[1]=(((r02*x8871))+(((-1.0)*r10*x8875*x8876))+(((-1.0)*sj2*x8877))+(((-1.0)*r00*x8874*x8876))+(((-1.0)*r01*x8872*x8874))+((r12*sj0*sj5))+(((-1.0)*r11*x8872*x8875)));
evalcond[2]=((((-1.0)*cj2*x8868*x8870))+((cj1*x8869))+((r01*sj0*x8872))+(((-1.0)*r10*x8874*x8876))+((r12*x8871))+(((-1.0)*r02*sj0*x8873))+(((-1.0)*r11*x8872*x8874))+((r00*sj0*x8876)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[2];
IkReal x8878=((((-1.0)*cj2*sj1*sj3))+((cj1*cj3)));
j4eval[0]=x8878;
j4eval[1]=IKsign(x8878);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
IkReal x8879=cj1*cj1;
IkReal x8880=cj3*cj3;
IkReal x8881=cj2*cj2;
IkReal x8882=(x8879*x8880);
IkReal x8883=((1.0)+(((-2.0)*cj1*cj2*cj3*sj1*sj3))+(((-1.0)*x8880))+(((-1.0)*x8879*x8881))+x8882+((x8881*x8882)));
j4eval[0]=x8883;
j4eval[1]=IKsign(x8883);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
IkReal x8884=cj3*cj3;
IkReal x8885=(cj1*cj2);
IkReal x8886=(cj3*sj1*sj3);
IkReal x8887=(sj2*x8885);
IkReal x8888=((1.0)*x8884);
j4eval[0]=(((sj2*x8886))+x8887+(((-1.0)*x8887*x8888)));
j4eval[1]=(x8885+x8886+(((-1.0)*x8885*x8888)));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x8889=(cj0*sj5);
IkReal x8890=(cj5*cj6);
IkReal x8891=((1.0)*sj3);
IkReal x8892=((1.0)*cj0);
IkReal x8893=((1.0)*sj0);
IkReal x8894=(cj5*sj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=(((r20*x8894))+(((-1.0)*cj3*sj1))+((r21*x8890))+(((-1.0)*r22*sj5))+(((-1.0)*cj1*x8891)));
evalcond[2]=(((r02*x8889))+((r12*sj0*sj5))+(((-1.0)*r01*x8890*x8892))+(((-1.0)*r10*x8893*x8894))+(((-1.0)*r11*x8890*x8893))+(((-1.0)*r00*x8892*x8894)));
evalcond[3]=((((-1.0)*r02*sj5*x8893))+((r01*sj0*x8890))+(((-1.0)*r10*x8892*x8894))+(((-1.0)*sj1*x8891))+((cj1*cj3))+(((-1.0)*r11*x8890*x8892))+((r12*x8889))+((r00*sj0*x8894)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x8895=(cj0*cj6);
IkReal x8896=((1.0)*cj5);
IkReal x8897=((1.0)*sj5);
IkReal x8898=(sj0*sj6);
IkReal x8899=(cj6*sj0);
IkReal x8900=(cj0*sj6);
if( IKabs(((((-1.0)*r00*x8897*x8900))+(((-1.0)*r10*x8897*x8898))+(((-1.0)*r01*x8895*x8897))+(((-1.0)*r11*x8897*x8899))+(((-1.0)*cj0*r02*x8896))+(((-1.0)*r12*sj0*x8896)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x8895))+(((-1.0)*r01*x8900))+((r10*x8899))+(((-1.0)*r11*x8898)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x8897*x8900))+(((-1.0)*r10*x8897*x8898))+(((-1.0)*r01*x8895*x8897))+(((-1.0)*r11*x8897*x8899))+(((-1.0)*cj0*r02*x8896))+(((-1.0)*r12*sj0*x8896))))+IKsqr((((r00*x8895))+(((-1.0)*r01*x8900))+((r10*x8899))+(((-1.0)*r11*x8898))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r00*x8897*x8900))+(((-1.0)*r10*x8897*x8898))+(((-1.0)*r01*x8895*x8897))+(((-1.0)*r11*x8897*x8899))+(((-1.0)*cj0*r02*x8896))+(((-1.0)*r12*sj0*x8896))), (((r00*x8895))+(((-1.0)*r01*x8900))+((r10*x8899))+(((-1.0)*r11*x8898))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x8901=IKsin(j4);
IkReal x8902=IKcos(j4);
IkReal x8903=(r11*sj0);
IkReal x8904=(sj1*sj3);
IkReal x8905=(cj5*r12);
IkReal x8906=(cj6*sj5);
IkReal x8907=(sj0*sj6);
IkReal x8908=(r10*sj5);
IkReal x8909=((0.02626)*r01);
IkReal x8910=(cj0*sj6);
IkReal x8911=((1.0)*cj5);
IkReal x8912=(cj1*sj3);
IkReal x8913=((0.02626)*cj6);
IkReal x8914=((0.02626)*sj6);
IkReal x8915=((1.0)*r01);
IkReal x8916=(r00*sj5);
IkReal x8917=(cj3*sj1);
IkReal x8918=(cj1*cj3);
IkReal x8919=((1.0)*py);
IkReal x8920=(r00*sj0);
IkReal x8921=((1.0)*r21);
IkReal x8922=((1.0)*cj0);
IkReal x8923=((1.0)*cj6*r10);
IkReal x8924=((0.02626)*x8901);
IkReal x8925=((1.0)*x8901);
IkReal x8926=((0.0718)*x8902);
IkReal x8927=(x8902*x8918);
evalcond[0]=((((-1.0)*x8918*x8925))+((x8901*x8904))+(((-1.0)*sj6*x8921))+((cj6*r20)));
evalcond[1]=((((-1.0)*sj0*x8923))+((r01*x8910))+x8902+(((-1.0)*cj6*r00*x8922))+((sj6*x8903)));
evalcond[2]=((((-1.0)*x8906*x8921))+(((-1.0)*x8902*x8904))+x8927+(((-1.0)*r22*x8911))+(((-1.0)*r20*sj5*sj6)));
evalcond[3]=(((x8910*x8916))+((cj0*cj5*r02))+((sj0*x8905))+((x8903*x8906))+((cj0*r01*x8906))+x8901+((x8907*x8908)));
evalcond[4]=((((-1.0)*x8907*x8915))+(((-1.0)*x8912*x8925))+((r11*x8910))+(((-1.0)*x8917*x8925))+((cj6*x8920))+(((-1.0)*cj6*r10*x8922)));
evalcond[5]=((-0.0001)+(((-1.0)*cj0*r00*x8913))+(((-1.0)*sj0*x8919))+(((-1.0)*px*x8922))+(((-1.0)*r10*sj0*x8913))+((x8909*x8910))+(((-0.0718)*x8901))+(((0.02626)*x8902))+((x8903*x8914)));
evalcond[6]=(((x8902*x8917))+((x8902*x8912))+(((-1.0)*sj0*x8906*x8915))+(((-1.0)*x8907*x8916))+(((-1.0)*r02*sj0*x8911))+((cj0*x8905))+((x8908*x8910))+((cj0*r11*x8906)));
evalcond[7]=((((-1.0)*x8918*x8926))+(((-1.0)*x8918*x8924))+(((0.09746)*x8904))+(((-0.0001)*sj1))+(((-1.0)*r21*x8914))+(((-0.09746)*x8918))+((x8904*x8924))+((x8904*x8926))+(((-0.2413)*cj1))+pz+((r20*x8913)));
evalcond[8]=((((-1.0)*cj0*r10*x8913))+((x8913*x8920))+(((-1.0)*x8912*x8926))+(((-1.0)*x8912*x8924))+(((-1.0)*cj0*x8919))+(((-0.09746)*x8912))+(((-0.09746)*x8917))+(((-1.0)*x8917*x8926))+(((-1.0)*x8917*x8924))+(((-1.0)*x8907*x8909))+(((0.0001)*cj1))+(((0.02626)*r11*x8910))+((px*sj0))+(((-0.2413)*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8928=(cj0*sj5);
IkReal x8929=(cj5*cj6);
IkReal x8930=((1.0)*sj5);
IkReal x8931=((1.0)*cj0);
IkReal x8932=((1.0)*sj0);
IkReal x8933=(cj5*sj6);
IkReal x8934=(r10*x8933);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x8930))+((cj1*sj3))+((r20*x8933))+(((-1.0)*cj3*sj1))+((r21*x8929)));
evalcond[2]=((((-1.0)*x8932*x8934))+(((-1.0)*r00*x8931*x8933))+((r02*x8928))+((r12*sj0*sj5))+(((-1.0)*r01*x8929*x8931))+(((-1.0)*r11*x8929*x8932)));
evalcond[3]=((((-1.0)*r02*sj0*x8930))+((sj1*sj3))+((r01*sj0*x8929))+((r00*sj0*x8933))+((r12*x8928))+(((-1.0)*x8931*x8934))+((cj1*cj3))+(((-1.0)*r11*x8929*x8931)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x8935=((1.0)*sj5);
IkReal x8936=(((sj1*sj3))+((cj1*cj3)));
j4eval[0]=x8936;
j4eval[1]=IKsign(x8936);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*r20*sj6*x8935))+(((-1.0)*cj6*r21*x8935))+(((-1.0)*cj5*r22))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=(((sj1*sj3))+((cj1*cj3)));
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=((((-1.0)*cj1*sj3))+((cj3*sj1)));
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x8937=(cj5*cj6);
IkReal x8938=(cj0*sj6);
IkReal x8939=(r01*sj0);
IkReal x8940=((1.0)*sj0);
IkReal x8941=((1.0)*cj5);
IkReal x8942=(cj0*r12);
IkReal x8943=(r02*sj5);
IkReal x8944=((1.0)*sj5);
IkReal x8945=(cj5*sj6);
IkReal x8946=((1.0)*cj0);
IkReal x8947=(cj0*cj6*r10);
IkReal x8948=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x8944))+((r20*x8945))+((r21*x8937)));
evalcond[2]=(x8948+(((-1.0)*sj6*x8939))+((r11*x8938))+(((-1.0)*cj6*r10*x8946)));
evalcond[3]=((((-1.0)*r00*x8938*x8941))+(((-1.0)*r10*x8940*x8945))+((r12*sj0*sj5))+((cj0*x8943))+(((-1.0)*r01*x8937*x8946))+(((-1.0)*r11*x8937*x8940)));
evalcond[4]=((1.0)+(((-1.0)*x8940*x8943))+((r00*sj0*x8945))+((x8937*x8939))+((sj5*x8942))+(((-1.0)*r11*x8937*x8946))+(((-1.0)*r10*x8938*x8941)));
evalcond[5]=((((-1.0)*cj6*x8939*x8944))+((cj0*cj6*r11*sj5))+((cj5*x8942))+(((-1.0)*r00*sj5*sj6*x8940))+(((-1.0)*cj5*r02*x8940))+((r10*sj5*x8938)));
evalcond[6]=((0.0001)+(((-0.02626)*sj6*x8939))+(((0.02626)*x8948))+(((-0.02626)*x8947))+(((0.02626)*r11*x8938))+(((-1.0)*py*x8946))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.22228412256267)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.22228412256267)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.22228412256267)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x8949=IKcos(j4);
IkReal x8950=IKsin(j4);
IkReal x8951=(r11*sj0);
IkReal x8952=(cj6*sj5);
IkReal x8953=(r10*sj0);
IkReal x8954=(sj5*sj6);
IkReal x8955=((0.02626)*sj6);
IkReal x8956=(cj0*r01);
IkReal x8957=((0.02626)*cj6);
IkReal x8958=((1.0)*cj6);
IkReal x8959=(cj0*r00);
IkReal x8960=((1.0)*r21);
IkReal x8961=((1.0)*x8949);
evalcond[0]=(x8950+((cj6*r20))+(((-1.0)*sj6*x8960)));
evalcond[1]=((((-1.0)*r20*x8954))+(((-1.0)*x8952*x8960))+(((-1.0)*cj5*r22))+(((-1.0)*x8961)));
evalcond[2]=((0.08776)+(((0.02626)*x8950))+pz+(((0.0718)*x8949))+((r20*x8957))+(((-1.0)*r21*x8955)));
evalcond[3]=((((-1.0)*x8958*x8959))+(((-1.0)*x8953*x8958))+((sj6*x8951))+((sj6*x8956))+(((-1.0)*x8961)));
evalcond[4]=(((cj5*r12*sj0))+((x8952*x8956))+((x8953*x8954))+((cj0*cj5*r02))+((x8954*x8959))+((x8951*x8952))+(((-1.0)*x8950)));
evalcond[5]=((-0.0019)+(((-0.02626)*x8949))+((x8951*x8955))+(((-1.0)*x8957*x8959))+(((-1.0)*x8953*x8957))+(((-1.0)*py*sj0))+(((0.0718)*x8950))+(((-1.0)*cj0*px))+((x8955*x8956)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8962=(cj5*cj6);
IkReal x8963=(cj0*sj6);
IkReal x8964=(r01*sj0);
IkReal x8965=((1.0)*sj0);
IkReal x8966=((1.0)*cj5);
IkReal x8967=(cj0*r12);
IkReal x8968=(r02*sj5);
IkReal x8969=((1.0)*sj5);
IkReal x8970=(cj5*sj6);
IkReal x8971=((1.0)*cj0);
IkReal x8972=(cj0*cj6*r10);
IkReal x8973=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x8970))+(((-1.0)*r22*x8969))+((r21*x8962)));
evalcond[2]=(((r11*x8963))+x8973+(((-1.0)*cj6*r10*x8971))+(((-1.0)*sj6*x8964)));
evalcond[3]=((((-1.0)*r01*x8962*x8971))+(((-1.0)*r11*x8962*x8965))+((r12*sj0*sj5))+(((-1.0)*r00*x8963*x8966))+(((-1.0)*r10*x8965*x8970))+((cj0*x8968)));
evalcond[4]=((-1.0)+(((-1.0)*r11*x8962*x8971))+(((-1.0)*x8965*x8968))+((r00*sj0*x8970))+(((-1.0)*r10*x8963*x8966))+((x8962*x8964))+((sj5*x8967)));
evalcond[5]=((((-1.0)*cj6*x8964*x8969))+((r10*sj5*x8963))+((cj5*x8967))+(((-1.0)*r00*sj5*sj6*x8965))+((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x8965)));
evalcond[6]=((0.0001)+(((-0.02626)*x8972))+(((0.02626)*r11*x8963))+((px*sj0))+(((0.02626)*x8973))+(((-0.02626)*sj6*x8964))+(((-1.0)*py*x8971)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.4924791086351)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.4924791086351)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.4924791086351)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x8974=IKcos(j4);
IkReal x8975=IKsin(j4);
IkReal x8976=(r11*sj0);
IkReal x8977=(cj6*sj5);
IkReal x8978=(r10*sj0);
IkReal x8979=(sj5*sj6);
IkReal x8980=((0.02626)*sj6);
IkReal x8981=(cj0*r01);
IkReal x8982=((0.02626)*cj6);
IkReal x8983=((1.0)*cj6);
IkReal x8984=(cj0*r00);
IkReal x8985=((1.0)*r21);
IkReal x8986=((1.0)*x8975);
evalcond[0]=((((-1.0)*x8986))+(((-1.0)*sj6*x8985))+((cj6*r20)));
evalcond[1]=(x8974+(((-1.0)*x8977*x8985))+(((-1.0)*r20*x8979))+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.10716)+(((-1.0)*r21*x8980))+(((-0.02626)*x8975))+pz+(((-0.0718)*x8974))+((r20*x8982)));
evalcond[3]=(((sj6*x8981))+(((-1.0)*x8974))+((sj6*x8976))+(((-1.0)*x8978*x8983))+(((-1.0)*x8983*x8984)));
evalcond[4]=(((cj5*r12*sj0))+((x8977*x8981))+(((-1.0)*x8986))+((cj0*cj5*r02))+((x8979*x8984))+((x8978*x8979))+((x8976*x8977)));
evalcond[5]=((-0.0019)+(((-1.0)*x8982*x8984))+((x8976*x8980))+(((-0.02626)*x8974))+(((-1.0)*py*sj0))+(((-1.0)*x8978*x8982))+(((0.0718)*x8975))+(((-1.0)*cj0*px))+((x8980*x8981)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x8987=(cj5*cj6);
IkReal x8988=(cj0*sj6);
IkReal x8989=(r01*sj0);
IkReal x8990=((1.0)*sj0);
IkReal x8991=((1.0)*cj5);
IkReal x8992=(cj0*r12);
IkReal x8993=(r02*sj5);
IkReal x8994=((1.0)*sj5);
IkReal x8995=(cj5*sj6);
IkReal x8996=((1.0)*cj0);
IkReal x8997=(cj0*cj6*r10);
IkReal x8998=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x8995))+(((-1.0)*r22*x8994))+((r21*x8987)));
evalcond[2]=(x8998+((r11*x8988))+(((-1.0)*cj6*r10*x8996))+(((-1.0)*sj6*x8989)));
evalcond[3]=((((-1.0)*r11*x8987*x8990))+((r12*sj0*sj5))+((cj0*x8993))+(((-1.0)*r10*x8990*x8995))+(((-1.0)*r00*x8988*x8991))+(((-1.0)*r01*x8987*x8996)));
evalcond[4]=((1.0)+(((-1.0)*r11*x8987*x8996))+(((-1.0)*x8990*x8993))+(((-1.0)*r10*x8988*x8991))+((r00*sj0*x8995))+((sj5*x8992))+((x8987*x8989)));
evalcond[5]=((((-1.0)*r00*sj5*sj6*x8990))+((cj0*cj6*r11*sj5))+((cj5*x8992))+((r10*sj5*x8988))+(((-1.0)*cj5*r02*x8990))+(((-1.0)*cj6*x8989*x8994)));
evalcond[6]=((-0.0097)+(((-0.02626)*x8997))+(((-0.02626)*sj6*x8989))+((px*sj0))+(((0.02626)*r11*x8988))+(((-1.0)*py*x8996))+(((0.02626)*x8998)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x8999=IKcos(j4);
IkReal x9000=IKsin(j4);
IkReal x9001=(r11*sj0);
IkReal x9002=(cj6*sj5);
IkReal x9003=(r10*sj0);
IkReal x9004=(sj5*sj6);
IkReal x9005=((0.02626)*sj6);
IkReal x9006=(cj0*r01);
IkReal x9007=((0.02626)*cj6);
IkReal x9008=((1.0)*cj6);
IkReal x9009=(cj0*r00);
IkReal x9010=((1.0)*r21);
IkReal x9011=((1.0)*x8999);
evalcond[0]=(x9000+((cj6*r20))+(((-1.0)*sj6*x9010)));
evalcond[1]=((((-1.0)*x9011))+(((-1.0)*r20*x9004))+(((-1.0)*x9002*x9010))+(((-1.0)*cj5*r22)));
evalcond[2]=((0.09736)+(((0.02626)*x9000))+(((-1.0)*r21*x9005))+pz+((r20*x9007))+(((0.0718)*x8999)));
evalcond[3]=((((-1.0)*x9011))+(((-1.0)*x9003*x9008))+(((-1.0)*x9008*x9009))+((sj6*x9006))+((sj6*x9001)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x9001*x9002))+(((-1.0)*x9000))+((x9002*x9006))+((x9004*x9009))+((x9003*x9004)));
evalcond[5]=((-0.0019)+((x9001*x9005))+(((-1.0)*x9003*x9007))+(((-0.02626)*x8999))+(((0.0718)*x9000))+((x9005*x9006))+(((-1.0)*py*sj0))+(((-1.0)*x9007*x9009))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9012=(cj5*cj6);
IkReal x9013=(cj0*sj6);
IkReal x9014=(r01*sj0);
IkReal x9015=((1.0)*sj0);
IkReal x9016=((1.0)*cj5);
IkReal x9017=(cj0*r12);
IkReal x9018=(r02*sj5);
IkReal x9019=((1.0)*sj5);
IkReal x9020=(cj5*sj6);
IkReal x9021=((1.0)*cj0);
IkReal x9022=(cj0*cj6*r10);
IkReal x9023=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x9019))+((r20*x9020))+((r21*x9012)));
evalcond[2]=(x9023+(((-1.0)*cj6*r10*x9021))+(((-1.0)*sj6*x9014))+((r11*x9013)));
evalcond[3]=((((-1.0)*r00*x9013*x9016))+(((-1.0)*r10*x9015*x9020))+((r12*sj0*sj5))+(((-1.0)*r01*x9012*x9021))+((cj0*x9018))+(((-1.0)*r11*x9012*x9015)));
evalcond[4]=((-1.0)+(((-1.0)*r10*x9013*x9016))+(((-1.0)*r11*x9012*x9021))+((sj5*x9017))+((r00*sj0*x9020))+((x9012*x9014))+(((-1.0)*x9015*x9018)));
evalcond[5]=((((-1.0)*r00*sj5*sj6*x9015))+(((-1.0)*cj6*x9014*x9019))+((r10*sj5*x9013))+((cj5*x9017))+((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x9015)));
evalcond[6]=((-0.0097)+(((-0.02626)*x9022))+(((-1.0)*py*x9021))+(((0.02626)*x9023))+((px*sj0))+(((0.02626)*r11*x9013))+(((-0.02626)*sj6*x9014)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9024=IKcos(j4);
IkReal x9025=IKsin(j4);
IkReal x9026=(r11*sj0);
IkReal x9027=(cj6*sj5);
IkReal x9028=(r10*sj0);
IkReal x9029=(sj5*sj6);
IkReal x9030=((0.02626)*sj6);
IkReal x9031=(cj0*r01);
IkReal x9032=((0.02626)*cj6);
IkReal x9033=((1.0)*cj6);
IkReal x9034=(cj0*r00);
IkReal x9035=((1.0)*r21);
IkReal x9036=((1.0)*x9025);
evalcond[0]=((((-1.0)*sj6*x9035))+(((-1.0)*x9036))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x9029))+x9024+(((-1.0)*x9027*x9035))+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.09756)+(((-0.02626)*x9025))+(((-0.0718)*x9024))+pz+(((-1.0)*r21*x9030))+((r20*x9032)));
evalcond[3]=((((-1.0)*x9033*x9034))+((sj6*x9026))+((sj6*x9031))+(((-1.0)*x9028*x9033))+(((-1.0)*x9024)));
evalcond[4]=(((cj5*r12*sj0))+((x9027*x9031))+((x9026*x9027))+((cj0*cj5*r02))+(((-1.0)*x9036))+((x9028*x9029))+((x9029*x9034)));
evalcond[5]=((-0.0019)+(((-0.02626)*x9024))+((x9026*x9030))+(((0.0718)*x9025))+(((-1.0)*x9032*x9034))+(((-1.0)*py*sj0))+(((-1.0)*x9028*x9032))+((x9030*x9031))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9037=(cj5*cj6);
IkReal x9038=(cj0*sj6);
IkReal x9039=(r01*sj0);
IkReal x9040=((1.0)*sj0);
IkReal x9041=((1.0)*cj5);
IkReal x9042=(cj0*r12);
IkReal x9043=(r02*sj5);
IkReal x9044=((1.0)*sj5);
IkReal x9045=(cj5*sj6);
IkReal x9046=((1.0)*cj0);
IkReal x9047=(cj0*cj6*r10);
IkReal x9048=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959))))));
evalcond[1]=(((r20*x9045))+((r21*x9037))+(((-1.0)*r22*x9044)));
evalcond[2]=((((-1.0)*cj6*r10*x9046))+x9048+((r11*x9038))+(((-1.0)*sj6*x9039)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r11*x9037*x9040))+((cj0*x9043))+(((-1.0)*r10*x9040*x9045))+(((-1.0)*r01*x9037*x9046))+(((-1.0)*r00*x9038*x9041)));
evalcond[4]=((-1.0)+((r00*sj0*x9045))+(((-1.0)*r11*x9037*x9046))+(((-1.0)*x9040*x9043))+((sj5*x9042))+((x9037*x9039))+(((-1.0)*r10*x9038*x9041)));
evalcond[5]=((((-1.0)*cj6*x9039*x9044))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x9040))+((r10*sj5*x9038))+(((-1.0)*cj5*r02*x9040))+((cj5*x9042)));
evalcond[6]=((-0.0001)+(((-0.02626)*x9047))+(((0.02626)*x9048))+(((-1.0)*py*x9046))+(((-0.02626)*sj6*x9039))+(((0.02626)*r11*x9038))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.22228412256267)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.22228412256267)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.22228412256267)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9049=IKcos(j4);
IkReal x9050=IKsin(j4);
IkReal x9051=(r11*sj0);
IkReal x9052=(cj6*sj5);
IkReal x9053=(r10*sj0);
IkReal x9054=(sj5*sj6);
IkReal x9055=((0.02626)*sj6);
IkReal x9056=(cj0*r01);
IkReal x9057=((0.02626)*cj6);
IkReal x9058=((1.0)*cj6);
IkReal x9059=(cj0*r00);
IkReal x9060=((1.0)*r21);
IkReal x9061=((1.0)*x9050);
evalcond[0]=((((-1.0)*x9061))+(((-1.0)*sj6*x9060))+((cj6*r20)));
evalcond[1]=((((-1.0)*x9052*x9060))+x9049+(((-1.0)*cj5*r22))+(((-1.0)*r20*x9054)));
evalcond[2]=((-0.08776)+(((-0.02626)*x9050))+((r20*x9057))+pz+(((-1.0)*r21*x9055))+(((-0.0718)*x9049)));
evalcond[3]=((((-1.0)*x9049))+(((-1.0)*x9053*x9058))+((sj6*x9051))+((sj6*x9056))+(((-1.0)*x9058*x9059)));
evalcond[4]=(((cj5*r12*sj0))+(((-1.0)*x9061))+((cj0*cj5*r02))+((x9051*x9052))+((x9052*x9056))+((x9053*x9054))+((x9054*x9059)));
evalcond[5]=((-0.0019)+((x9055*x9056))+(((-1.0)*x9053*x9057))+(((-0.02626)*x9049))+((x9051*x9055))+(((-1.0)*x9057*x9059))+(((0.0718)*x9050))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9062=(cj5*cj6);
IkReal x9063=(cj0*sj6);
IkReal x9064=(r01*sj0);
IkReal x9065=((1.0)*sj0);
IkReal x9066=((1.0)*cj5);
IkReal x9067=(cj0*r12);
IkReal x9068=(r02*sj5);
IkReal x9069=((1.0)*sj5);
IkReal x9070=(cj5*sj6);
IkReal x9071=((1.0)*cj0);
IkReal x9072=(cj0*cj6*r10);
IkReal x9073=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=(((r20*x9070))+((r21*x9062))+(((-1.0)*r22*x9069)));
evalcond[2]=(((r11*x9063))+(((-1.0)*cj6*r10*x9071))+x9073+(((-1.0)*sj6*x9064)));
evalcond[3]=((((-1.0)*r01*x9062*x9071))+((cj0*x9068))+((r12*sj0*sj5))+(((-1.0)*r00*x9063*x9066))+(((-1.0)*r10*x9065*x9070))+(((-1.0)*r11*x9062*x9065)));
evalcond[4]=((1.0)+(((-1.0)*x9065*x9068))+((sj5*x9067))+(((-1.0)*r11*x9062*x9071))+((x9062*x9064))+((r00*sj0*x9070))+(((-1.0)*r10*x9063*x9066)));
evalcond[5]=(((cj5*x9067))+(((-1.0)*cj5*r02*x9065))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x9065))+(((-1.0)*cj6*x9064*x9069))+((r10*sj5*x9063)));
evalcond[6]=((-0.0001)+(((0.02626)*x9073))+(((-1.0)*py*x9071))+(((-0.02626)*x9072))+(((0.02626)*r11*x9063))+((px*sj0))+(((-0.02626)*sj6*x9064)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.4924791086351)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.4924791086351)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.4924791086351)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9074=IKcos(j4);
IkReal x9075=IKsin(j4);
IkReal x9076=(r11*sj0);
IkReal x9077=(cj6*sj5);
IkReal x9078=(r10*sj0);
IkReal x9079=(sj5*sj6);
IkReal x9080=((0.02626)*sj6);
IkReal x9081=(cj0*r01);
IkReal x9082=((0.02626)*cj6);
IkReal x9083=((1.0)*cj6);
IkReal x9084=(cj0*r00);
IkReal x9085=((1.0)*r21);
IkReal x9086=((1.0)*x9074);
evalcond[0]=((((-1.0)*sj6*x9085))+x9075+((cj6*r20)));
evalcond[1]=((((-1.0)*x9086))+(((-1.0)*x9077*x9085))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x9079)));
evalcond[2]=((0.10716)+((r20*x9082))+(((0.02626)*x9075))+(((0.0718)*x9074))+(((-1.0)*r21*x9080))+pz);
evalcond[3]=(((sj6*x9076))+((sj6*x9081))+(((-1.0)*x9086))+(((-1.0)*x9083*x9084))+(((-1.0)*x9078*x9083)));
evalcond[4]=(((cj5*r12*sj0))+(((-1.0)*x9075))+((cj0*cj5*r02))+((x9078*x9079))+((x9079*x9084))+((x9076*x9077))+((x9077*x9081)));
evalcond[5]=((-0.0019)+(((0.0718)*x9075))+(((-0.02626)*x9074))+((x9080*x9081))+(((-1.0)*x9082*x9084))+(((-1.0)*py*sj0))+(((-1.0)*x9078*x9082))+(((-1.0)*cj0*px))+((x9076*x9080)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9087=(cj5*cj6);
IkReal x9088=(cj0*sj6);
IkReal x9089=(r01*sj0);
IkReal x9090=((1.0)*sj0);
IkReal x9091=((1.0)*cj5);
IkReal x9092=(cj0*r12);
IkReal x9093=(r02*sj5);
IkReal x9094=((1.0)*sj5);
IkReal x9095=(cj5*sj6);
IkReal x9096=((1.0)*cj0);
IkReal x9097=(cj0*cj6*r10);
IkReal x9098=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x9095))+((r21*x9087))+(((-1.0)*r22*x9094)));
evalcond[2]=(((r11*x9088))+x9098+(((-1.0)*cj6*r10*x9096))+(((-1.0)*sj6*x9089)));
evalcond[3]=((((-1.0)*r00*x9088*x9091))+(((-1.0)*r10*x9090*x9095))+(((-1.0)*r11*x9087*x9090))+((cj0*x9093))+(((-1.0)*r01*x9087*x9096))+((r12*sj0*sj5)));
evalcond[4]=((-1.0)+(((-1.0)*r11*x9087*x9096))+((x9087*x9089))+((r00*sj0*x9095))+(((-1.0)*r10*x9088*x9091))+((sj5*x9092))+(((-1.0)*x9090*x9093)));
evalcond[5]=((((-1.0)*cj5*r02*x9090))+(((-1.0)*cj6*x9089*x9094))+(((-1.0)*r00*sj5*sj6*x9090))+((cj0*cj6*r11*sj5))+((r10*sj5*x9088))+((cj5*x9092)));
evalcond[6]=((0.0097)+(((-1.0)*py*x9096))+(((0.02626)*x9098))+(((0.02626)*r11*x9088))+(((-0.02626)*sj6*x9089))+((px*sj0))+(((-0.02626)*x9097)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9099=IKcos(j4);
IkReal x9100=IKsin(j4);
IkReal x9101=(r11*sj0);
IkReal x9102=(cj6*sj5);
IkReal x9103=(r10*sj0);
IkReal x9104=(sj5*sj6);
IkReal x9105=((0.02626)*sj6);
IkReal x9106=(cj0*r01);
IkReal x9107=((0.02626)*cj6);
IkReal x9108=((1.0)*cj6);
IkReal x9109=(cj0*r00);
IkReal x9110=((1.0)*r21);
IkReal x9111=((1.0)*x9100);
evalcond[0]=((((-1.0)*x9111))+((cj6*r20))+(((-1.0)*sj6*x9110)));
evalcond[1]=((((-1.0)*r20*x9104))+(((-1.0)*x9102*x9110))+x9099+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.09736)+(((-0.0718)*x9099))+(((-1.0)*r21*x9105))+pz+((r20*x9107))+(((-0.02626)*x9100)));
evalcond[3]=((((-1.0)*x9108*x9109))+((sj6*x9106))+((sj6*x9101))+(((-1.0)*x9103*x9108))+(((-1.0)*x9099)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+(((-1.0)*x9111))+((x9101*x9102))+((x9104*x9109))+((x9103*x9104))+((x9102*x9106)));
evalcond[5]=((-0.0019)+(((0.0718)*x9100))+((x9101*x9105))+(((-1.0)*x9103*x9107))+((x9105*x9106))+(((-1.0)*py*sj0))+(((-1.0)*x9107*x9109))+(((-1.0)*cj0*px))+(((-0.02626)*x9099)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9112=(cj5*cj6);
IkReal x9113=(cj0*sj6);
IkReal x9114=(r01*sj0);
IkReal x9115=((1.0)*sj0);
IkReal x9116=((1.0)*cj5);
IkReal x9117=(cj0*r12);
IkReal x9118=(r02*sj5);
IkReal x9119=((1.0)*sj5);
IkReal x9120=(cj5*sj6);
IkReal x9121=((1.0)*cj0);
IkReal x9122=(cj0*cj6*r10);
IkReal x9123=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(((r21*x9112))+((r20*x9120))+(((-1.0)*r22*x9119)));
evalcond[2]=(((r11*x9113))+x9123+(((-1.0)*cj6*r10*x9121))+(((-1.0)*sj6*x9114)));
evalcond[3]=(((cj0*x9118))+((r12*sj0*sj5))+(((-1.0)*r01*x9112*x9121))+(((-1.0)*r11*x9112*x9115))+(((-1.0)*r10*x9115*x9120))+(((-1.0)*r00*x9113*x9116)));
evalcond[4]=((1.0)+((sj5*x9117))+(((-1.0)*x9115*x9118))+(((-1.0)*r10*x9113*x9116))+((r00*sj0*x9120))+((x9112*x9114))+(((-1.0)*r11*x9112*x9121)));
evalcond[5]=(((r10*sj5*x9113))+((cj5*x9117))+(((-1.0)*r00*sj5*sj6*x9115))+((cj0*cj6*r11*sj5))+(((-1.0)*cj6*x9114*x9119))+(((-1.0)*cj5*r02*x9115)));
evalcond[6]=((0.0097)+(((0.02626)*r11*x9113))+(((-0.02626)*sj6*x9114))+((px*sj0))+(((-0.02626)*x9122))+(((0.02626)*x9123))+(((-1.0)*py*x9121)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9124=IKcos(j4);
IkReal x9125=IKsin(j4);
IkReal x9126=(r11*sj0);
IkReal x9127=(cj6*sj5);
IkReal x9128=(r10*sj0);
IkReal x9129=(sj5*sj6);
IkReal x9130=((0.02626)*sj6);
IkReal x9131=(cj0*r01);
IkReal x9132=((0.02626)*cj6);
IkReal x9133=((1.0)*cj6);
IkReal x9134=(cj0*r00);
IkReal x9135=((1.0)*r21);
IkReal x9136=((1.0)*x9124);
evalcond[0]=((((-1.0)*sj6*x9135))+x9125+((cj6*r20)));
evalcond[1]=((((-1.0)*x9127*x9135))+(((-1.0)*r20*x9129))+(((-1.0)*cj5*r22))+(((-1.0)*x9136)));
evalcond[2]=((0.09756)+((r20*x9132))+(((0.0718)*x9124))+(((-1.0)*r21*x9130))+pz+(((0.02626)*x9125)));
evalcond[3]=((((-1.0)*x9128*x9133))+(((-1.0)*x9133*x9134))+((sj6*x9131))+((sj6*x9126))+(((-1.0)*x9136)));
evalcond[4]=(((cj5*r12*sj0))+((x9129*x9134))+((cj0*cj5*r02))+((x9128*x9129))+((x9126*x9127))+((x9127*x9131))+(((-1.0)*x9125)));
evalcond[5]=((-0.0019)+(((-1.0)*x9128*x9132))+((x9130*x9131))+(((0.0718)*x9125))+(((-1.0)*x9132*x9134))+(((-1.0)*py*sj0))+(((-0.02626)*x9124))+((x9126*x9130))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9137=(cj5*cj6);
IkReal x9138=((1.0)*sj0);
IkReal x9139=(r21*sj6);
IkReal x9140=(cj0*sj5);
IkReal x9141=((1.0)*r22);
IkReal x9142=(cj6*r20);
IkReal x9143=(cj5*sj6);
IkReal x9144=((1.0)*cj0);
IkReal x9145=((1.0)*sj5);
IkReal x9146=(x9143*x9144);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+((r20*x9143))+((r21*x9137))+(((-1.0)*sj5*x9141)));
evalcond[2]=((((-1.0)*x9139))+x9142);
evalcond[3]=((((-1.0)*cj5*x9141))+(((-1.0)*cj6*r21*x9145))+(((-1.0)*r20*sj6*x9145)));
evalcond[4]=((((-1.0)*r00*x9146))+(((-1.0)*r11*x9137*x9138))+((r12*sj0*sj5))+(((-1.0)*r01*x9137*x9144))+(((-1.0)*r10*x9138*x9143))+((r02*x9140)));
evalcond[5]=((((-1.0)*r02*sj5*x9138))+(((-1.0)*r10*x9146))+(((-1.0)*r11*x9137*x9144))+((r00*sj0*x9143))+((r12*x9140))+((r01*sj0*x9137)));
evalcond[6]=((-0.0097)+(((-0.02626)*x9139))+(((0.02626)*x9142))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9147=(sj0*sj6);
IkReal x9148=(cj0*sj6);
IkReal x9149=(cj6*r00);
IkReal x9150=((1.0)*cj6*r10);
if( IKabs((((sj0*x9149))+(((-1.0)*cj0*x9150))+(((-1.0)*r01*x9147))+((r11*x9148)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x9148))+(((-1.0)*cj0*x9149))+(((-1.0)*sj0*x9150))+((r11*x9147)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj0*x9149))+(((-1.0)*cj0*x9150))+(((-1.0)*r01*x9147))+((r11*x9148))))+IKsqr((((r01*x9148))+(((-1.0)*cj0*x9149))+(((-1.0)*sj0*x9150))+((r11*x9147))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj0*x9149))+(((-1.0)*cj0*x9150))+(((-1.0)*r01*x9147))+((r11*x9148))), (((r01*x9148))+(((-1.0)*cj0*x9149))+(((-1.0)*sj0*x9150))+((r11*x9147))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9151=IKcos(j4);
IkReal x9152=IKsin(j4);
IkReal x9153=(cj6*sj0);
IkReal x9154=((0.02626)*r10);
IkReal x9155=(r11*sj6);
IkReal x9156=(r11*sj5);
IkReal x9157=(sj0*sj6);
IkReal x9158=(r10*sj5);
IkReal x9159=((0.02626)*r01);
IkReal x9160=(cj5*r12);
IkReal x9161=(cj0*cj6);
IkReal x9162=((1.0)*sj0);
IkReal x9163=(cj5*r02);
IkReal x9164=(cj0*sj6);
IkReal x9165=((1.0)*r10);
IkReal x9166=((1.0)*r01);
IkReal x9167=(r00*sj5);
IkReal x9168=((1.0)*cj0);
IkReal x9169=((0.02626)*r00);
IkReal x9170=((1.0)*x9152);
evalcond[0]=(((r01*x9164))+(((-1.0)*r00*x9161))+((sj0*x9155))+(((-1.0)*x9153*x9165))+(((-1.0)*x9151)));
evalcond[1]=((((-1.0)*x9157*x9166))+((cj0*x9155))+(((-1.0)*x9170))+(((-1.0)*x9161*x9165))+((r00*x9153)));
evalcond[2]=(((x9164*x9167))+(((-1.0)*x9170))+((sj0*x9160))+((x9157*x9158))+((x9153*x9156))+((cj0*x9163))+((r01*sj5*x9161)));
evalcond[3]=(x9151+(((-1.0)*x9162*x9163))+((cj0*x9160))+(((-1.0)*x9157*x9167))+((x9158*x9164))+(((-1.0)*sj5*x9153*x9166))+((x9156*x9161)));
evalcond[4]=((-0.09736)+(((-1.0)*x9154*x9161))+((x9153*x9169))+(((0.02626)*cj0*x9155))+(((-0.0718)*x9151))+(((-1.0)*py*x9168))+((px*sj0))+(((-0.02626)*x9152))+(((-1.0)*x9157*x9159)));
evalcond[5]=((-0.0019)+((x9159*x9164))+(((-1.0)*x9153*x9154))+(((-1.0)*px*x9168))+(((-1.0)*x9161*x9169))+(((0.0718)*x9152))+(((0.02626)*sj0*x9155))+(((-1.0)*py*x9162))+(((-0.02626)*x9151)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9171=(cj5*cj6);
IkReal x9172=((1.0)*sj0);
IkReal x9173=(r21*sj6);
IkReal x9174=(cj0*sj5);
IkReal x9175=((1.0)*r22);
IkReal x9176=(cj6*r20);
IkReal x9177=(cj5*sj6);
IkReal x9178=((1.0)*cj0);
IkReal x9179=((1.0)*sj5);
IkReal x9180=(x9177*x9178);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+((r20*x9177))+((r21*x9171))+(((-1.0)*sj5*x9175)));
evalcond[2]=((((-1.0)*x9173))+x9176);
evalcond[3]=((((-1.0)*cj5*x9175))+(((-1.0)*cj6*r21*x9179))+(((-1.0)*r20*sj6*x9179)));
evalcond[4]=(((r02*x9174))+(((-1.0)*r01*x9171*x9178))+((r12*sj0*sj5))+(((-1.0)*r11*x9171*x9172))+(((-1.0)*r10*x9172*x9177))+(((-1.0)*r00*x9180)));
evalcond[5]=((((-1.0)*r02*sj5*x9172))+(((-1.0)*r11*x9171*x9178))+((r00*sj0*x9177))+((r12*x9174))+((r01*sj0*x9171))+(((-1.0)*r10*x9180)));
evalcond[6]=((-0.0097)+(((-0.02626)*x9173))+(((0.02626)*x9176))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9181=(sj0*sj6);
IkReal x9182=(cj6*r10);
IkReal x9183=((1.0)*sj0);
IkReal x9184=(cj6*r00);
IkReal x9185=(cj0*sj6);
if( IKabs(((((-1.0)*x9183*x9184))+(((-1.0)*r11*x9185))+((cj0*x9182))+((r01*x9181)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x9184))+((r11*x9181))+(((-1.0)*x9182*x9183))+((r01*x9185)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x9183*x9184))+(((-1.0)*r11*x9185))+((cj0*x9182))+((r01*x9181))))+IKsqr(((((-1.0)*cj0*x9184))+((r11*x9181))+(((-1.0)*x9182*x9183))+((r01*x9185))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x9183*x9184))+(((-1.0)*r11*x9185))+((cj0*x9182))+((r01*x9181))), ((((-1.0)*cj0*x9184))+((r11*x9181))+(((-1.0)*x9182*x9183))+((r01*x9185))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9186=IKsin(j4);
IkReal x9187=IKcos(j4);
IkReal x9188=(cj6*sj0);
IkReal x9189=((0.02626)*r10);
IkReal x9190=(r11*sj6);
IkReal x9191=(r11*sj5);
IkReal x9192=(sj0*sj6);
IkReal x9193=(r10*sj5);
IkReal x9194=(cj0*cj6);
IkReal x9195=((0.02626)*r01);
IkReal x9196=(cj5*r12);
IkReal x9197=((1.0)*sj0);
IkReal x9198=(cj5*r02);
IkReal x9199=(cj0*sj6);
IkReal x9200=((1.0)*r10);
IkReal x9201=((1.0)*r01);
IkReal x9202=(r00*sj5);
IkReal x9203=((1.0)*cj0);
IkReal x9204=((0.02626)*r00);
IkReal x9205=((1.0)*x9187);
evalcond[0]=((((-1.0)*x9194*x9200))+((r00*x9188))+x9186+((cj0*x9190))+(((-1.0)*x9192*x9201)));
evalcond[1]=(((sj0*x9190))+((r01*x9199))+(((-1.0)*r00*x9194))+(((-1.0)*x9188*x9200))+(((-1.0)*x9205)));
evalcond[2]=(((sj0*x9196))+((x9192*x9193))+((r01*sj5*x9194))+((cj0*x9198))+(((-1.0)*x9186))+((x9199*x9202))+((x9188*x9191)));
evalcond[3]=((((-1.0)*sj5*x9188*x9201))+(((-1.0)*x9197*x9198))+(((-1.0)*x9192*x9202))+((cj0*x9196))+((x9193*x9199))+(((-1.0)*x9205))+((x9191*x9194)));
evalcond[4]=((0.09756)+(((0.02626)*x9186))+((x9188*x9204))+(((0.02626)*cj0*x9190))+(((-1.0)*x9189*x9194))+(((-1.0)*py*x9203))+(((0.0718)*x9187))+((px*sj0))+(((-1.0)*x9192*x9195)));
evalcond[5]=((-0.0019)+(((-1.0)*x9194*x9204))+(((0.02626)*sj0*x9190))+((x9195*x9199))+(((-1.0)*px*x9203))+(((0.0718)*x9186))+(((-1.0)*py*x9197))+(((-1.0)*x9188*x9189))+(((-0.02626)*x9187)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9206=(cj5*cj6);
IkReal x9207=((1.0)*sj0);
IkReal x9208=(r21*sj6);
IkReal x9209=(cj0*sj5);
IkReal x9210=((1.0)*r22);
IkReal x9211=(cj6*r20);
IkReal x9212=(cj5*sj6);
IkReal x9213=((1.0)*cj0);
IkReal x9214=((1.0)*sj5);
IkReal x9215=(x9212*x9213);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+((r20*x9212))+(((-1.0)*sj5*x9210))+((r21*x9206)));
evalcond[2]=(x9211+(((-1.0)*x9208)));
evalcond[3]=((((-1.0)*r20*sj6*x9214))+(((-1.0)*cj5*x9210))+(((-1.0)*cj6*r21*x9214)));
evalcond[4]=((((-1.0)*r00*x9215))+(((-1.0)*r11*x9206*x9207))+(((-1.0)*r01*x9206*x9213))+((r02*x9209))+((r12*sj0*sj5))+(((-1.0)*r10*x9207*x9212)));
evalcond[5]=((((-1.0)*r11*x9206*x9213))+((r00*sj0*x9212))+(((-1.0)*r10*x9215))+((r01*sj0*x9206))+((r12*x9209))+(((-1.0)*r02*sj5*x9207)));
evalcond[6]=((-0.0001)+(((0.02626)*x9211))+pz+(((-0.02626)*x9208)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9216=(sj0*sj6);
IkReal x9217=(cj6*r10);
IkReal x9218=((1.0)*sj0);
IkReal x9219=(cj6*r00);
IkReal x9220=(cj0*sj6);
if( IKabs(((((-1.0)*x9218*x9219))+((cj0*x9217))+(((-1.0)*r11*x9220))+((r01*x9216)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x9220))+(((-1.0)*x9217*x9218))+(((-1.0)*cj0*x9219))+((r11*x9216)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x9218*x9219))+((cj0*x9217))+(((-1.0)*r11*x9220))+((r01*x9216))))+IKsqr((((r01*x9220))+(((-1.0)*x9217*x9218))+(((-1.0)*cj0*x9219))+((r11*x9216))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x9218*x9219))+((cj0*x9217))+(((-1.0)*r11*x9220))+((r01*x9216))), (((r01*x9220))+(((-1.0)*x9217*x9218))+(((-1.0)*cj0*x9219))+((r11*x9216))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9221=IKsin(j4);
IkReal x9222=IKcos(j4);
IkReal x9223=(cj6*sj0);
IkReal x9224=((0.02626)*r10);
IkReal x9225=(r11*sj6);
IkReal x9226=(r11*sj5);
IkReal x9227=(sj0*sj6);
IkReal x9228=(r10*sj5);
IkReal x9229=(cj0*cj6);
IkReal x9230=((0.02626)*r01);
IkReal x9231=(cj5*r12);
IkReal x9232=((1.0)*sj0);
IkReal x9233=(cj5*r02);
IkReal x9234=(cj0*sj6);
IkReal x9235=((1.0)*r10);
IkReal x9236=((1.0)*r01);
IkReal x9237=(r00*sj5);
IkReal x9238=((1.0)*cj0);
IkReal x9239=((0.02626)*r00);
IkReal x9240=((1.0)*x9222);
evalcond[0]=(((r00*x9223))+(((-1.0)*x9227*x9236))+x9221+((cj0*x9225))+(((-1.0)*x9229*x9235)));
evalcond[1]=((((-1.0)*x9240))+((sj0*x9225))+((r01*x9234))+(((-1.0)*r00*x9229))+(((-1.0)*x9223*x9235)));
evalcond[2]=(((x9234*x9237))+((cj0*x9233))+((r01*sj5*x9229))+((x9223*x9226))+((sj0*x9231))+((x9227*x9228))+(((-1.0)*x9221)));
evalcond[3]=(((cj0*x9231))+(((-1.0)*sj5*x9223*x9236))+(((-1.0)*x9240))+(((-1.0)*x9227*x9237))+(((-1.0)*x9232*x9233))+((x9226*x9229))+((x9228*x9234)));
evalcond[4]=((0.08776)+(((0.02626)*x9221))+(((-1.0)*x9227*x9230))+(((0.0718)*x9222))+(((-1.0)*x9224*x9229))+(((0.02626)*cj0*x9225))+((px*sj0))+(((-1.0)*py*x9238))+((x9223*x9239)));
evalcond[5]=((-0.0019)+(((-1.0)*px*x9238))+(((0.02626)*sj0*x9225))+(((0.0718)*x9221))+(((-1.0)*x9223*x9224))+(((-0.02626)*x9222))+((x9230*x9234))+(((-1.0)*py*x9232))+(((-1.0)*x9229*x9239)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9241=(cj5*cj6);
IkReal x9242=((1.0)*sj0);
IkReal x9243=(r21*sj6);
IkReal x9244=(cj0*sj5);
IkReal x9245=((1.0)*r22);
IkReal x9246=(cj6*r20);
IkReal x9247=(cj5*sj6);
IkReal x9248=((1.0)*cj0);
IkReal x9249=((1.0)*sj5);
IkReal x9250=(x9247*x9248);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+(((-1.0)*sj5*x9245))+((r21*x9241))+((r20*x9247)));
evalcond[2]=(x9246+(((-1.0)*x9243)));
evalcond[3]=((((-1.0)*cj5*x9245))+(((-1.0)*r20*sj6*x9249))+(((-1.0)*cj6*r21*x9249)));
evalcond[4]=((((-1.0)*r11*x9241*x9242))+((r02*x9244))+((r12*sj0*sj5))+(((-1.0)*r00*x9250))+(((-1.0)*r10*x9242*x9247))+(((-1.0)*r01*x9241*x9248)));
evalcond[5]=(((r00*sj0*x9247))+(((-1.0)*r02*sj5*x9242))+(((-1.0)*r11*x9241*x9248))+(((-1.0)*r10*x9250))+((r01*sj0*x9241))+((r12*x9244)));
evalcond[6]=((-0.0001)+(((-0.02626)*x9243))+pz+(((0.02626)*x9246)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9251=(sj0*sj6);
IkReal x9252=(cj0*sj6);
IkReal x9253=(cj6*r00);
IkReal x9254=((1.0)*cj6*r10);
if( IKabs(((((-1.0)*cj0*x9254))+(((-1.0)*r01*x9251))+((r11*x9252))+((sj0*x9253)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x9252))+((r11*x9251))+(((-1.0)*cj0*x9253))+(((-1.0)*sj0*x9254)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*x9254))+(((-1.0)*r01*x9251))+((r11*x9252))+((sj0*x9253))))+IKsqr((((r01*x9252))+((r11*x9251))+(((-1.0)*cj0*x9253))+(((-1.0)*sj0*x9254))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*x9254))+(((-1.0)*r01*x9251))+((r11*x9252))+((sj0*x9253))), (((r01*x9252))+((r11*x9251))+(((-1.0)*cj0*x9253))+(((-1.0)*sj0*x9254))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9255=IKcos(j4);
IkReal x9256=IKsin(j4);
IkReal x9257=(cj6*sj0);
IkReal x9258=((0.02626)*r10);
IkReal x9259=(r11*sj6);
IkReal x9260=(r11*sj5);
IkReal x9261=(sj0*sj6);
IkReal x9262=(r10*sj5);
IkReal x9263=((0.02626)*r01);
IkReal x9264=(cj5*r12);
IkReal x9265=(cj0*cj6);
IkReal x9266=((1.0)*sj0);
IkReal x9267=(cj5*r02);
IkReal x9268=(cj0*sj6);
IkReal x9269=((1.0)*r10);
IkReal x9270=((1.0)*r01);
IkReal x9271=(r00*sj5);
IkReal x9272=((1.0)*cj0);
IkReal x9273=((0.02626)*r00);
IkReal x9274=((1.0)*x9256);
evalcond[0]=((((-1.0)*r00*x9265))+(((-1.0)*x9257*x9269))+((r01*x9268))+((sj0*x9259))+(((-1.0)*x9255)));
evalcond[1]=(((cj0*x9259))+(((-1.0)*x9274))+(((-1.0)*x9261*x9270))+((r00*x9257))+(((-1.0)*x9265*x9269)));
evalcond[2]=(((cj0*x9267))+((sj0*x9264))+(((-1.0)*x9274))+((x9268*x9271))+((x9257*x9260))+((r01*sj5*x9265))+((x9261*x9262)));
evalcond[3]=(((cj0*x9264))+((x9262*x9268))+x9255+((x9260*x9265))+(((-1.0)*sj5*x9257*x9270))+(((-1.0)*x9261*x9271))+(((-1.0)*x9266*x9267)));
evalcond[4]=((-0.10716)+(((-1.0)*py*x9272))+(((-1.0)*x9258*x9265))+(((-1.0)*x9261*x9263))+((x9257*x9273))+(((-0.02626)*x9256))+((px*sj0))+(((0.02626)*cj0*x9259))+(((-0.0718)*x9255)));
evalcond[5]=((-0.0019)+(((-1.0)*py*x9266))+((x9263*x9268))+(((-1.0)*px*x9272))+(((-0.02626)*x9255))+(((-1.0)*x9257*x9258))+(((0.0718)*x9256))+(((0.02626)*sj0*x9259))+(((-1.0)*x9265*x9273)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9275=(cj5*cj6);
IkReal x9276=((1.0)*sj0);
IkReal x9277=(r21*sj6);
IkReal x9278=(cj0*sj5);
IkReal x9279=((1.0)*r22);
IkReal x9280=(cj6*r20);
IkReal x9281=(cj5*sj6);
IkReal x9282=((1.0)*cj0);
IkReal x9283=((1.0)*sj5);
IkReal x9284=(x9281*x9282);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x9279))+((r20*x9281))+((r21*x9275)));
evalcond[2]=(x9280+(((-1.0)*x9277)));
evalcond[3]=((((-1.0)*r20*sj6*x9283))+(((-1.0)*cj6*r21*x9283))+(((-1.0)*cj5*x9279)));
evalcond[4]=(((r02*x9278))+(((-1.0)*r11*x9275*x9276))+((r12*sj0*sj5))+(((-1.0)*r10*x9276*x9281))+(((-1.0)*r00*x9284))+(((-1.0)*r01*x9275*x9282)));
evalcond[5]=(((r12*x9278))+((r01*sj0*x9275))+(((-1.0)*r02*sj5*x9276))+(((-1.0)*r10*x9284))+((r00*sj0*x9281))+(((-1.0)*r11*x9275*x9282)));
evalcond[6]=((0.0097)+(((0.02626)*x9280))+(((-0.02626)*x9277))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9285=(sj0*sj6);
IkReal x9286=(cj6*r10);
IkReal x9287=((1.0)*sj0);
IkReal x9288=(cj6*r00);
IkReal x9289=(cj0*sj6);
if( IKabs(((((-1.0)*r11*x9289))+((r01*x9285))+(((-1.0)*x9287*x9288))+((cj0*x9286)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x9285))+((r01*x9289))+(((-1.0)*x9286*x9287))+(((-1.0)*cj0*x9288)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x9289))+((r01*x9285))+(((-1.0)*x9287*x9288))+((cj0*x9286))))+IKsqr((((r11*x9285))+((r01*x9289))+(((-1.0)*x9286*x9287))+(((-1.0)*cj0*x9288))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r11*x9289))+((r01*x9285))+(((-1.0)*x9287*x9288))+((cj0*x9286))), (((r11*x9285))+((r01*x9289))+(((-1.0)*x9286*x9287))+(((-1.0)*cj0*x9288))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9290=IKsin(j4);
IkReal x9291=IKcos(j4);
IkReal x9292=(cj6*sj0);
IkReal x9293=((0.02626)*r10);
IkReal x9294=(r11*sj6);
IkReal x9295=(r11*sj5);
IkReal x9296=(sj0*sj6);
IkReal x9297=(r10*sj5);
IkReal x9298=(cj0*cj6);
IkReal x9299=((0.02626)*r01);
IkReal x9300=(cj5*r12);
IkReal x9301=((1.0)*sj0);
IkReal x9302=(cj5*r02);
IkReal x9303=(cj0*sj6);
IkReal x9304=((1.0)*r10);
IkReal x9305=((1.0)*r01);
IkReal x9306=(r00*sj5);
IkReal x9307=((1.0)*cj0);
IkReal x9308=((0.02626)*r00);
IkReal x9309=((1.0)*x9291);
evalcond[0]=((((-1.0)*x9296*x9305))+x9290+((r00*x9292))+(((-1.0)*x9298*x9304))+((cj0*x9294)));
evalcond[1]=((((-1.0)*r00*x9298))+((r01*x9303))+(((-1.0)*x9309))+(((-1.0)*x9292*x9304))+((sj0*x9294)));
evalcond[2]=(((cj0*x9302))+((r01*sj5*x9298))+(((-1.0)*x9290))+((x9296*x9297))+((sj0*x9300))+((x9292*x9295))+((x9303*x9306)));
evalcond[3]=((((-1.0)*x9296*x9306))+(((-1.0)*x9301*x9302))+((cj0*x9300))+((x9295*x9298))+(((-1.0)*sj5*x9292*x9305))+((x9297*x9303))+(((-1.0)*x9309)));
evalcond[4]=((0.09736)+(((0.0718)*x9291))+(((0.02626)*cj0*x9294))+((x9292*x9308))+(((-1.0)*x9296*x9299))+(((-1.0)*x9293*x9298))+(((0.02626)*x9290))+(((-1.0)*py*x9307))+((px*sj0)));
evalcond[5]=((-0.0019)+(((0.0718)*x9290))+(((0.02626)*sj0*x9294))+(((-1.0)*px*x9307))+(((-0.02626)*x9291))+(((-1.0)*x9292*x9293))+(((-1.0)*py*x9301))+(((-1.0)*x9298*x9308))+((x9299*x9303)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9310=(cj5*cj6);
IkReal x9311=((1.0)*sj0);
IkReal x9312=(r21*sj6);
IkReal x9313=(cj0*sj5);
IkReal x9314=((1.0)*r22);
IkReal x9315=(cj6*r20);
IkReal x9316=(cj5*sj6);
IkReal x9317=((1.0)*cj0);
IkReal x9318=((1.0)*sj5);
IkReal x9319=(x9316*x9317);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((1.0)+((r21*x9310))+(((-1.0)*sj5*x9314))+((r20*x9316)));
evalcond[2]=(x9315+(((-1.0)*x9312)));
evalcond[3]=((((-1.0)*r20*sj6*x9318))+(((-1.0)*cj6*r21*x9318))+(((-1.0)*cj5*x9314)));
evalcond[4]=(((r02*x9313))+(((-1.0)*r11*x9310*x9311))+((r12*sj0*sj5))+(((-1.0)*r10*x9311*x9316))+(((-1.0)*r00*x9319))+(((-1.0)*r01*x9310*x9317)));
evalcond[5]=((((-1.0)*r02*sj5*x9311))+(((-1.0)*r11*x9310*x9317))+((r01*sj0*x9310))+((r00*sj0*x9316))+((r12*x9313))+(((-1.0)*r10*x9319)));
evalcond[6]=((0.0097)+(((0.02626)*x9315))+pz+(((-0.02626)*x9312)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9320=(sj0*sj6);
IkReal x9321=(cj0*sj6);
IkReal x9322=(cj6*r00);
IkReal x9323=((1.0)*cj6*r10);
if( IKabs((((sj0*x9322))+((r11*x9321))+(((-1.0)*cj0*x9323))+(((-1.0)*r01*x9320)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x9320))+((r01*x9321))+(((-1.0)*cj0*x9322))+(((-1.0)*sj0*x9323)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj0*x9322))+((r11*x9321))+(((-1.0)*cj0*x9323))+(((-1.0)*r01*x9320))))+IKsqr((((r11*x9320))+((r01*x9321))+(((-1.0)*cj0*x9322))+(((-1.0)*sj0*x9323))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj0*x9322))+((r11*x9321))+(((-1.0)*cj0*x9323))+(((-1.0)*r01*x9320))), (((r11*x9320))+((r01*x9321))+(((-1.0)*cj0*x9322))+(((-1.0)*sj0*x9323))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9324=IKcos(j4);
IkReal x9325=IKsin(j4);
IkReal x9326=(cj6*sj0);
IkReal x9327=((0.02626)*r10);
IkReal x9328=(r11*sj6);
IkReal x9329=(r11*sj5);
IkReal x9330=(sj0*sj6);
IkReal x9331=(r10*sj5);
IkReal x9332=((0.02626)*r01);
IkReal x9333=(cj5*r12);
IkReal x9334=(cj0*cj6);
IkReal x9335=((1.0)*sj0);
IkReal x9336=(cj5*r02);
IkReal x9337=(cj0*sj6);
IkReal x9338=((1.0)*r10);
IkReal x9339=((1.0)*r01);
IkReal x9340=(r00*sj5);
IkReal x9341=((1.0)*cj0);
IkReal x9342=((0.02626)*r00);
IkReal x9343=((1.0)*x9325);
evalcond[0]=(((sj0*x9328))+(((-1.0)*x9324))+((r01*x9337))+(((-1.0)*x9326*x9338))+(((-1.0)*r00*x9334)));
evalcond[1]=(((cj0*x9328))+((r00*x9326))+(((-1.0)*x9343))+(((-1.0)*x9330*x9339))+(((-1.0)*x9334*x9338)));
evalcond[2]=(((cj0*x9336))+((sj0*x9333))+((x9326*x9329))+(((-1.0)*x9343))+((x9337*x9340))+((r01*sj5*x9334))+((x9330*x9331)));
evalcond[3]=(((cj0*x9333))+((x9329*x9334))+x9324+((x9331*x9337))+(((-1.0)*x9330*x9340))+(((-1.0)*sj5*x9326*x9339))+(((-1.0)*x9335*x9336)));
evalcond[4]=((-0.09756)+(((-1.0)*x9327*x9334))+(((-0.02626)*x9325))+((x9326*x9342))+(((-1.0)*x9330*x9332))+(((-0.0718)*x9324))+(((0.02626)*cj0*x9328))+((px*sj0))+(((-1.0)*py*x9341)));
evalcond[5]=((-0.0019)+(((-0.02626)*x9324))+(((0.02626)*sj0*x9328))+(((-1.0)*x9326*x9327))+(((-1.0)*px*x9341))+(((0.0718)*x9325))+((x9332*x9337))+(((-1.0)*py*x9335))+(((-1.0)*x9334*x9342)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9344=(cj5*cj6);
IkReal x9345=((1.0)*sj0);
IkReal x9346=(r21*sj6);
IkReal x9347=(cj0*sj5);
IkReal x9348=((1.0)*r22);
IkReal x9349=(cj6*r20);
IkReal x9350=(cj5*sj6);
IkReal x9351=((1.0)*cj0);
IkReal x9352=((1.0)*sj5);
IkReal x9353=(x9350*x9351);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+(((-1.0)*sj5*x9348))+((r20*x9350))+((r21*x9344)));
evalcond[2]=(x9349+(((-1.0)*x9346)));
evalcond[3]=((((-1.0)*cj5*x9348))+(((-1.0)*cj6*r21*x9352))+(((-1.0)*r20*sj6*x9352)));
evalcond[4]=((((-1.0)*r01*x9344*x9351))+((r12*sj0*sj5))+(((-1.0)*r11*x9344*x9345))+(((-1.0)*r10*x9345*x9350))+(((-1.0)*r00*x9353))+((r02*x9347)));
evalcond[5]=(((r12*x9347))+(((-1.0)*r10*x9353))+((r00*sj0*x9350))+(((-1.0)*r11*x9344*x9351))+(((-1.0)*r02*sj5*x9345))+((r01*sj0*x9344)));
evalcond[6]=((0.0001)+(((-0.02626)*x9346))+pz+(((0.02626)*x9349)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9354=(sj0*sj6);
IkReal x9355=(cj0*sj6);
IkReal x9356=(cj6*r00);
IkReal x9357=((1.0)*cj6*r10);
if( IKabs(((((-1.0)*r01*x9354))+((r11*x9355))+(((-1.0)*cj0*x9357))+((sj0*x9356)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x9354))+((r01*x9355))+(((-1.0)*sj0*x9357))+(((-1.0)*cj0*x9356)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x9354))+((r11*x9355))+(((-1.0)*cj0*x9357))+((sj0*x9356))))+IKsqr((((r11*x9354))+((r01*x9355))+(((-1.0)*sj0*x9357))+(((-1.0)*cj0*x9356))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*x9354))+((r11*x9355))+(((-1.0)*cj0*x9357))+((sj0*x9356))), (((r11*x9354))+((r01*x9355))+(((-1.0)*sj0*x9357))+(((-1.0)*cj0*x9356))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9358=IKcos(j4);
IkReal x9359=IKsin(j4);
IkReal x9360=(cj6*sj0);
IkReal x9361=((0.02626)*r10);
IkReal x9362=(r11*sj6);
IkReal x9363=(r11*sj5);
IkReal x9364=(sj0*sj6);
IkReal x9365=(r10*sj5);
IkReal x9366=((0.02626)*r01);
IkReal x9367=(cj5*r12);
IkReal x9368=(cj0*cj6);
IkReal x9369=((1.0)*sj0);
IkReal x9370=(cj5*r02);
IkReal x9371=(cj0*sj6);
IkReal x9372=((1.0)*r10);
IkReal x9373=((1.0)*r01);
IkReal x9374=(r00*sj5);
IkReal x9375=((1.0)*cj0);
IkReal x9376=((0.02626)*r00);
IkReal x9377=((1.0)*x9359);
evalcond[0]=((((-1.0)*x9360*x9372))+((sj0*x9362))+(((-1.0)*x9358))+(((-1.0)*r00*x9368))+((r01*x9371)));
evalcond[1]=((((-1.0)*x9377))+(((-1.0)*x9368*x9372))+(((-1.0)*x9364*x9373))+((r00*x9360))+((cj0*x9362)));
evalcond[2]=(((x9364*x9365))+((cj0*x9370))+((r01*sj5*x9368))+(((-1.0)*x9377))+((sj0*x9367))+((x9371*x9374))+((x9360*x9363)));
evalcond[3]=((((-1.0)*x9369*x9370))+x9358+((x9365*x9371))+((x9363*x9368))+(((-1.0)*x9364*x9374))+((cj0*x9367))+(((-1.0)*sj5*x9360*x9373)));
evalcond[4]=((-0.08776)+(((0.02626)*cj0*x9362))+(((-1.0)*x9364*x9366))+(((-0.02626)*x9359))+(((-0.0718)*x9358))+(((-1.0)*py*x9375))+((x9360*x9376))+((px*sj0))+(((-1.0)*x9361*x9368)));
evalcond[5]=((-0.0019)+((x9366*x9371))+(((-1.0)*px*x9375))+(((-1.0)*x9360*x9361))+(((0.02626)*sj0*x9362))+(((0.0718)*x9359))+(((-0.02626)*x9358))+(((-1.0)*x9368*x9376))+(((-1.0)*py*x9369)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9378=(cj5*cj6);
IkReal x9379=((1.0)*sj0);
IkReal x9380=(r21*sj6);
IkReal x9381=(cj0*sj5);
IkReal x9382=((1.0)*r22);
IkReal x9383=(cj6*r20);
IkReal x9384=(cj5*sj6);
IkReal x9385=((1.0)*cj0);
IkReal x9386=((1.0)*sj5);
IkReal x9387=(x9384*x9385);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+((r21*x9378))+(((-1.0)*sj5*x9382))+((r20*x9384)));
evalcond[2]=(x9383+(((-1.0)*x9380)));
evalcond[3]=((((-1.0)*r20*sj6*x9386))+(((-1.0)*cj6*r21*x9386))+(((-1.0)*cj5*x9382)));
evalcond[4]=((((-1.0)*r11*x9378*x9379))+((r02*x9381))+(((-1.0)*r10*x9379*x9384))+((r12*sj0*sj5))+(((-1.0)*r00*x9387))+(((-1.0)*r01*x9378*x9385)));
evalcond[5]=(((r00*sj0*x9384))+((r12*x9381))+(((-1.0)*r10*x9387))+((r01*sj0*x9378))+(((-1.0)*r02*sj5*x9379))+(((-1.0)*r11*x9378*x9385)));
evalcond[6]=((0.0001)+(((0.02626)*x9383))+pz+(((-0.02626)*x9380)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9388=(sj0*sj6);
IkReal x9389=(cj6*r10);
IkReal x9390=((1.0)*sj0);
IkReal x9391=(cj6*r00);
IkReal x9392=(cj0*sj6);
if( IKabs(((((-1.0)*x9390*x9391))+(((-1.0)*r11*x9392))+((r01*x9388))+((cj0*x9389)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x9392))+((r11*x9388))+(((-1.0)*x9389*x9390))+(((-1.0)*cj0*x9391)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x9390*x9391))+(((-1.0)*r11*x9392))+((r01*x9388))+((cj0*x9389))))+IKsqr((((r01*x9392))+((r11*x9388))+(((-1.0)*x9389*x9390))+(((-1.0)*cj0*x9391))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x9390*x9391))+(((-1.0)*r11*x9392))+((r01*x9388))+((cj0*x9389))), (((r01*x9392))+((r11*x9388))+(((-1.0)*x9389*x9390))+(((-1.0)*cj0*x9391))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9393=IKsin(j4);
IkReal x9394=IKcos(j4);
IkReal x9395=(cj6*sj0);
IkReal x9396=((0.02626)*r10);
IkReal x9397=(r11*sj6);
IkReal x9398=(r11*sj5);
IkReal x9399=(sj0*sj6);
IkReal x9400=(r10*sj5);
IkReal x9401=(cj0*cj6);
IkReal x9402=((0.02626)*r01);
IkReal x9403=(cj5*r12);
IkReal x9404=((1.0)*sj0);
IkReal x9405=(cj5*r02);
IkReal x9406=(cj0*sj6);
IkReal x9407=((1.0)*r10);
IkReal x9408=((1.0)*r01);
IkReal x9409=(r00*sj5);
IkReal x9410=((1.0)*cj0);
IkReal x9411=((0.02626)*r00);
IkReal x9412=((1.0)*x9394);
evalcond[0]=(x9393+((cj0*x9397))+(((-1.0)*x9401*x9407))+(((-1.0)*x9399*x9408))+((r00*x9395)));
evalcond[1]=(((r01*x9406))+((sj0*x9397))+(((-1.0)*x9395*x9407))+(((-1.0)*r00*x9401))+(((-1.0)*x9412)));
evalcond[2]=(((x9395*x9398))+((cj0*x9405))+((sj0*x9403))+((r01*sj5*x9401))+((x9406*x9409))+(((-1.0)*x9393))+((x9399*x9400)));
evalcond[3]=(((cj0*x9403))+(((-1.0)*sj5*x9395*x9408))+(((-1.0)*x9404*x9405))+((x9400*x9406))+(((-1.0)*x9412))+(((-1.0)*x9399*x9409))+((x9398*x9401)));
evalcond[4]=((0.10716)+(((-1.0)*x9396*x9401))+((x9395*x9411))+(((-1.0)*py*x9410))+(((0.0718)*x9394))+((px*sj0))+(((0.02626)*cj0*x9397))+(((-1.0)*x9399*x9402))+(((0.02626)*x9393)));
evalcond[5]=((-0.0019)+(((-0.02626)*x9394))+(((0.02626)*sj0*x9397))+(((-1.0)*x9401*x9411))+(((-1.0)*px*x9410))+((x9402*x9406))+(((0.0718)*x9393))+(((-1.0)*py*x9404))+(((-1.0)*x9395*x9396)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9413=(cj6*r10);
IkReal x9414=((1.0)*sj0);
IkReal x9415=(sj0*sj6);
IkReal x9416=(cj6*r00);
IkReal x9417=(cj0*sj6);
CheckValue<IkReal> x9418=IKPowWithIntegerCheck(((((-1.0)*cj1*sj3))+((cj3*sj1))),-1);
if(!x9418.valid){
continue;
}
if( IKabs(((x9418.value)*(((((-1.0)*x9414*x9416))+((r01*x9415))+((cj0*x9413))+(((-1.0)*r11*x9417)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x9417))+((r11*x9415))+(((-1.0)*x9413*x9414))+(((-1.0)*cj0*x9416)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x9418.value)*(((((-1.0)*x9414*x9416))+((r01*x9415))+((cj0*x9413))+(((-1.0)*r11*x9417))))))+IKsqr((((r01*x9417))+((r11*x9415))+(((-1.0)*x9413*x9414))+(((-1.0)*cj0*x9416))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x9418.value)*(((((-1.0)*x9414*x9416))+((r01*x9415))+((cj0*x9413))+(((-1.0)*r11*x9417))))), (((r01*x9417))+((r11*x9415))+(((-1.0)*x9413*x9414))+(((-1.0)*cj0*x9416))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x9419=IKsin(j4);
IkReal x9420=IKcos(j4);
IkReal x9421=((1.0)*sj1);
IkReal x9422=(cj6*sj0);
IkReal x9423=((0.02626)*r10);
IkReal x9424=(sj0*sj6);
IkReal x9425=(sj1*sj3);
IkReal x9426=(cj5*r12);
IkReal x9427=(r11*sj5);
IkReal x9428=(r10*sj5);
IkReal x9429=((0.02626)*r01);
IkReal x9430=(cj0*sj6);
IkReal x9431=((1.0)*cj5);
IkReal x9432=(cj1*sj3);
IkReal x9433=((0.02626)*cj6);
IkReal x9434=((1.0)*r10);
IkReal x9435=(r21*sj6);
IkReal x9436=((1.0)*r01);
IkReal x9437=(r00*sj5);
IkReal x9438=(cj1*cj3);
IkReal x9439=((1.0)*py);
IkReal x9440=(cj0*cj6);
IkReal x9441=(cj3*sj1);
IkReal x9442=((1.0)*sj5);
IkReal x9443=((0.02626)*r11);
IkReal x9444=(cj3*x9420);
IkReal x9445=((0.02626)*x9419);
IkReal x9446=((1.0)*x9419);
IkReal x9447=((0.0718)*x9420);
evalcond[0]=(((x9419*x9425))+(((-1.0)*x9435))+((x9419*x9438))+((cj6*r20)));
evalcond[1]=((((-1.0)*x9420))+(((-1.0)*x9422*x9434))+(((-1.0)*r00*x9440))+((r01*x9430))+((r11*x9424)));
evalcond[2]=((((-1.0)*cj6*r21*x9442))+(((-1.0)*sj3*x9420*x9421))+(((-1.0)*r22*x9431))+(((-1.0)*r20*sj6*x9442))+(((-1.0)*x9420*x9438)));
evalcond[3]=(((r11*x9430))+((r00*x9422))+(((-1.0)*x9424*x9436))+(((-1.0)*x9432*x9446))+(((-1.0)*x9434*x9440))+((x9419*x9441)));
evalcond[4]=(((cj0*cj5*r02))+((x9424*x9428))+((x9422*x9427))+((r01*sj5*x9440))+(((-1.0)*x9446))+((x9430*x9437))+((sj0*x9426)));
evalcond[5]=((-0.0019)+(((0.0718)*x9419))+((x9429*x9430))+(((-0.02626)*x9420))+(((-1.0)*sj0*x9439))+((x9424*x9443))+(((-1.0)*x9422*x9423))+(((-1.0)*cj0*px))+(((-1.0)*cj0*r00*x9433)));
evalcond[6]=((((-1.0)*x9424*x9437))+((cj0*x9426))+((x9420*x9432))+((x9428*x9430))+(((-1.0)*x9421*x9444))+(((-1.0)*r02*sj0*x9431))+((x9427*x9440))+(((-1.0)*sj5*x9422*x9436)));
evalcond[7]=((((-0.02626)*x9435))+(((-0.0001)*sj1))+((x9425*x9445))+((x9425*x9447))+((r20*x9433))+(((-0.0097)*cj1))+pz+(((0.09746)*x9438))+((x9438*x9445))+((x9438*x9447))+(((0.09746)*x9425)));
evalcond[8]=((((-1.0)*x9424*x9429))+(((-1.0)*cj0*x9439))+(((0.02626)*r00*x9422))+((x9441*x9447))+((x9441*x9445))+(((-1.0)*x9432*x9445))+(((-1.0)*x9432*x9447))+(((-0.09746)*x9432))+(((-0.0097)*sj1))+((x9430*x9443))+(((-1.0)*x9423*x9440))+(((0.0001)*cj1))+((px*sj0))+(((0.09746)*x9441)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9448=((1.0)*cj6);
CheckValue<IkReal> x9449=IKPowWithIntegerCheck((((sj1*sj3))+((cj1*cj3))),-1);
if(!x9449.valid){
continue;
}
if( IKabs(((x9449.value)*((((r21*sj6))+(((-1.0)*r20*x9448)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x9448))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x9448)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x9449.value)*((((r21*sj6))+(((-1.0)*r20*x9448))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x9448))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x9448))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x9449.value)*((((r21*sj6))+(((-1.0)*r20*x9448))))), (((r11*sj0*sj6))+(((-1.0)*cj0*r00*x9448))+((cj0*r01*sj6))+(((-1.0)*r10*sj0*x9448))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x9450=IKsin(j4);
IkReal x9451=IKcos(j4);
IkReal x9452=((1.0)*sj1);
IkReal x9453=(cj6*sj0);
IkReal x9454=((0.02626)*r10);
IkReal x9455=(sj0*sj6);
IkReal x9456=(sj1*sj3);
IkReal x9457=(cj5*r12);
IkReal x9458=(r11*sj5);
IkReal x9459=(r10*sj5);
IkReal x9460=((0.02626)*r01);
IkReal x9461=(cj0*sj6);
IkReal x9462=((1.0)*cj5);
IkReal x9463=(cj1*sj3);
IkReal x9464=((0.02626)*cj6);
IkReal x9465=((1.0)*r10);
IkReal x9466=(r21*sj6);
IkReal x9467=((1.0)*r01);
IkReal x9468=(r00*sj5);
IkReal x9469=(cj1*cj3);
IkReal x9470=((1.0)*py);
IkReal x9471=(cj0*cj6);
IkReal x9472=(cj3*sj1);
IkReal x9473=((1.0)*sj5);
IkReal x9474=((0.02626)*r11);
IkReal x9475=(cj3*x9451);
IkReal x9476=((0.02626)*x9450);
IkReal x9477=((1.0)*x9450);
IkReal x9478=((0.0718)*x9451);
evalcond[0]=(((cj6*r20))+(((-1.0)*x9466))+((x9450*x9456))+((x9450*x9469)));
evalcond[1]=((((-1.0)*x9453*x9465))+((r01*x9461))+(((-1.0)*x9451))+((r11*x9455))+(((-1.0)*r00*x9471)));
evalcond[2]=((((-1.0)*cj6*r21*x9473))+(((-1.0)*x9451*x9469))+(((-1.0)*r22*x9462))+(((-1.0)*r20*sj6*x9473))+(((-1.0)*sj3*x9451*x9452)));
evalcond[3]=(((r00*x9453))+(((-1.0)*x9455*x9467))+((r11*x9461))+(((-1.0)*x9465*x9471))+(((-1.0)*x9463*x9477))+((x9450*x9472)));
evalcond[4]=(((cj0*cj5*r02))+(((-1.0)*x9477))+((sj0*x9457))+((x9453*x9458))+((r01*sj5*x9471))+((x9455*x9459))+((x9461*x9468)));
evalcond[5]=((-0.0019)+(((-1.0)*sj0*x9470))+(((0.0718)*x9450))+(((-1.0)*x9453*x9454))+(((-1.0)*cj0*r00*x9464))+((x9460*x9461))+(((-0.02626)*x9451))+((x9455*x9474))+(((-1.0)*cj0*px)));
evalcond[6]=((((-1.0)*x9455*x9468))+((x9451*x9463))+(((-1.0)*x9452*x9475))+((cj0*x9457))+((x9459*x9461))+((x9458*x9471))+(((-1.0)*sj5*x9453*x9467))+(((-1.0)*r02*sj0*x9462)));
evalcond[7]=(((x9469*x9478))+((x9469*x9476))+((x9456*x9478))+((x9456*x9476))+(((0.09746)*x9469))+(((-0.0001)*sj1))+(((-0.02626)*x9466))+(((-0.0097)*cj1))+pz+((r20*x9464))+(((0.09746)*x9456)));
evalcond[8]=((((0.09746)*x9472))+(((-0.0097)*sj1))+(((0.02626)*r00*x9453))+((x9461*x9474))+(((-1.0)*cj0*x9470))+(((-1.0)*x9455*x9460))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x9454*x9471))+((x9472*x9476))+((x9472*x9478))+(((-0.09746)*x9463))+(((-1.0)*x9463*x9478))+(((-1.0)*x9463*x9476)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9479=((1.0)*sj5);
CheckValue<IkReal> x9480=IKPowWithIntegerCheck(IKsign((((sj1*sj3))+((cj1*cj3)))),-1);
if(!x9480.valid){
continue;
}
CheckValue<IkReal> x9481 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x9479))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x9479))),IKFAST_ATAN2_MAGTHRESH);
if(!x9481.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9480.value)))+(x9481.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x9482=IKsin(j4);
IkReal x9483=IKcos(j4);
IkReal x9484=((1.0)*sj1);
IkReal x9485=(cj6*sj0);
IkReal x9486=((0.02626)*r10);
IkReal x9487=(sj0*sj6);
IkReal x9488=(sj1*sj3);
IkReal x9489=(cj5*r12);
IkReal x9490=(r11*sj5);
IkReal x9491=(r10*sj5);
IkReal x9492=((0.02626)*r01);
IkReal x9493=(cj0*sj6);
IkReal x9494=((1.0)*cj5);
IkReal x9495=(cj1*sj3);
IkReal x9496=((0.02626)*cj6);
IkReal x9497=((1.0)*r10);
IkReal x9498=(r21*sj6);
IkReal x9499=((1.0)*r01);
IkReal x9500=(r00*sj5);
IkReal x9501=(cj1*cj3);
IkReal x9502=((1.0)*py);
IkReal x9503=(cj0*cj6);
IkReal x9504=(cj3*sj1);
IkReal x9505=((1.0)*sj5);
IkReal x9506=((0.02626)*r11);
IkReal x9507=(cj3*x9483);
IkReal x9508=((0.02626)*x9482);
IkReal x9509=((1.0)*x9482);
IkReal x9510=((0.0718)*x9483);
evalcond[0]=(((x9482*x9501))+((cj6*r20))+(((-1.0)*x9498))+((x9482*x9488)));
evalcond[1]=((((-1.0)*x9483))+((r11*x9487))+(((-1.0)*r00*x9503))+(((-1.0)*x9485*x9497))+((r01*x9493)));
evalcond[2]=((((-1.0)*sj3*x9483*x9484))+(((-1.0)*x9483*x9501))+(((-1.0)*r22*x9494))+(((-1.0)*cj6*r21*x9505))+(((-1.0)*r20*sj6*x9505)));
evalcond[3]=(((r00*x9485))+((x9482*x9504))+(((-1.0)*x9487*x9499))+((r11*x9493))+(((-1.0)*x9495*x9509))+(((-1.0)*x9497*x9503)));
evalcond[4]=(((sj0*x9489))+((cj0*cj5*r02))+((x9487*x9491))+((x9485*x9490))+((r01*sj5*x9503))+(((-1.0)*x9509))+((x9493*x9500)));
evalcond[5]=((-0.0019)+(((-1.0)*cj0*r00*x9496))+((x9487*x9506))+(((-1.0)*x9485*x9486))+((x9492*x9493))+(((-1.0)*sj0*x9502))+(((0.0718)*x9482))+(((-0.02626)*x9483))+(((-1.0)*cj0*px)));
evalcond[6]=((((-1.0)*r02*sj0*x9494))+((x9490*x9503))+((x9491*x9493))+(((-1.0)*x9484*x9507))+((cj0*x9489))+(((-1.0)*x9487*x9500))+((x9483*x9495))+(((-1.0)*sj5*x9485*x9499)));
evalcond[7]=((((0.09746)*x9488))+(((-0.0001)*sj1))+((x9501*x9510))+(((-0.02626)*x9498))+(((-0.0097)*cj1))+pz+((x9501*x9508))+((r20*x9496))+((x9488*x9508))+(((0.09746)*x9501))+((x9488*x9510)));
evalcond[8]=(((x9504*x9510))+((x9504*x9508))+(((-1.0)*x9495*x9510))+(((-0.09746)*x9495))+(((0.02626)*r00*x9485))+(((-1.0)*cj0*x9502))+(((-0.0097)*sj1))+(((0.0001)*cj1))+(((-1.0)*x9487*x9492))+((px*sj0))+(((-1.0)*x9486*x9503))+(((-1.0)*x9495*x9508))+(((0.09746)*x9504))+((x9493*x9506)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9511=(cj0*sj5);
IkReal x9512=(cj5*cj6);
IkReal x9513=((1.0)*sj5);
IkReal x9514=((1.0)*sj0);
IkReal x9515=((1.0)*cj0);
IkReal x9516=(cj5*sj6);
IkReal x9517=(r10*x9516);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=(((r21*x9512))+(((-1.0)*sj1))+(((-1.0)*r22*x9513))+((r20*x9516)));
evalcond[2]=((((-1.0)*x9514*x9517))+(((-1.0)*r01*x9512*x9515))+((r12*sj0*sj5))+(((-1.0)*r11*x9512*x9514))+((r02*x9511))+(((-1.0)*r00*x9515*x9516)));
evalcond[3]=(cj1+((r00*sj0*x9516))+(((-1.0)*r11*x9512*x9515))+((r12*x9511))+(((-1.0)*x9515*x9517))+((r01*sj0*x9512))+(((-1.0)*r02*sj0*x9513)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj3=0;
cj3=1.0;
j3=0;
IkReal x9518=(cj2*sj6);
IkReal x9519=((1.0)*r21);
IkReal x9520=(r20*sj5);
IkReal x9521=(sj2*sj6);
IkReal x9522=(cj2*cj6);
IkReal x9523=(cj5*r22);
IkReal x9524=(cj6*sj2);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs((((r21*sj5*x9522))+((x9518*x9520))+((r20*x9524))+((cj2*x9523))+(((-1.0)*x9519*x9521)))))+(IKabs((((r20*x9522))+(((-1.0)*sj2*x9523))+(((-1.0)*sj5*x9519*x9524))+(((-1.0)*x9520*x9521))+(((-1.0)*x9518*x9519))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=1.0;
j3=0;
IkReal x9525=(cj1*sj1);
j4eval[0]=x9525;
j4eval[1]=IKsign(x9525);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x9526=(cj5*cj6);
IkReal x9527=(cj0*sj6);
IkReal x9528=(r01*sj0);
IkReal x9529=((1.0)*sj0);
IkReal x9530=((1.0)*cj5);
IkReal x9531=(cj0*r12);
IkReal x9532=(r02*sj5);
IkReal x9533=((1.0)*sj5);
IkReal x9534=(cj5*sj6);
IkReal x9535=((1.0)*cj0);
IkReal x9536=(cj0*cj6*r10);
IkReal x9537=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j1))), 6.28318530717959)));
evalcond[1]=(((r20*x9534))+(((-1.0)*r22*x9533))+((r21*x9526)));
evalcond[2]=((((-1.0)*sj6*x9528))+(((-1.0)*cj6*r10*x9535))+((r11*x9527))+x9537);
evalcond[3]=((((-1.0)*r11*x9526*x9529))+(((-1.0)*r01*x9526*x9535))+(((-1.0)*r00*x9527*x9530))+((r12*sj0*sj5))+((cj0*x9532))+(((-1.0)*r10*x9529*x9534)));
evalcond[4]=((1.0)+(((-1.0)*r11*x9526*x9535))+(((-1.0)*r10*x9527*x9530))+((x9526*x9528))+((sj5*x9531))+((r00*sj0*x9534))+(((-1.0)*x9529*x9532)));
evalcond[5]=(((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x9529))+(((-1.0)*cj6*x9528*x9533))+((cj5*x9531))+((r10*sj5*x9527))+(((-1.0)*r00*sj5*sj6*x9529)));
evalcond[6]=((0.0001)+(((-0.02626)*x9536))+(((-1.0)*py*x9535))+((px*sj0))+(((0.02626)*x9537))+(((-0.02626)*sj6*x9528))+(((0.02626)*r11*x9527)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9538=((1.0)*r21);
IkReal x9539=(cj2*sj6);
IkReal x9540=(cj5*r22);
IkReal x9541=(cj6*sj5);
IkReal x9542=(r20*sj2);
if( IKabs(((((-1.0)*sj5*sj6*x9542))+((cj2*cj6*r20))+(((-1.0)*x9538*x9539))+(((-1.0)*sj2*x9538*x9541))+(((-1.0)*sj2*x9540)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj2*x9540))+((cj2*r21*x9541))+(((-1.0)*sj2*sj6*x9538))+((r20*sj5*x9539))+((cj6*x9542)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*sj6*x9542))+((cj2*cj6*r20))+(((-1.0)*x9538*x9539))+(((-1.0)*sj2*x9538*x9541))+(((-1.0)*sj2*x9540))))+IKsqr((((cj2*x9540))+((cj2*r21*x9541))+(((-1.0)*sj2*sj6*x9538))+((r20*sj5*x9539))+((cj6*x9542))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj5*sj6*x9542))+((cj2*cj6*r20))+(((-1.0)*x9538*x9539))+(((-1.0)*sj2*x9538*x9541))+(((-1.0)*sj2*x9540))), (((cj2*x9540))+((cj2*r21*x9541))+(((-1.0)*sj2*sj6*x9538))+((r20*sj5*x9539))+((cj6*x9542))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9543=IKcos(j4);
IkReal x9544=IKsin(j4);
IkReal x9545=(cj6*sj0);
IkReal x9546=(sj0*sj6);
IkReal x9547=(cj6*r20);
IkReal x9548=((0.02626)*sj6);
IkReal x9549=(cj0*r01);
IkReal x9550=(cj0*r00);
IkReal x9551=(sj5*sj6);
IkReal x9552=((1.0)*r21);
IkReal x9553=(cj6*sj5);
IkReal x9554=(cj2*x9543);
IkReal x9555=((0.02626)*x9544);
IkReal x9556=(cj2*x9544);
IkReal x9557=((0.0718)*x9543);
IkReal x9558=(sj2*x9543);
IkReal x9559=(sj2*x9544);
IkReal x9560=((1.0)*x9559);
evalcond[0]=((((-1.0)*sj6*x9552))+x9547+(((-1.0)*x9556))+(((-1.0)*x9558)));
evalcond[1]=((((-1.0)*x9560))+x9554+(((-1.0)*cj5*r22))+(((-1.0)*r20*x9551))+(((-1.0)*x9552*x9553)));
evalcond[2]=((((-1.0)*cj6*x9550))+((r11*x9546))+(((-1.0)*x9560))+x9554+(((-1.0)*r10*x9545))+((sj6*x9549)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((r11*sj5*x9545))+((x9549*x9553))+((r10*sj5*x9546))+x9558+x9556+((x9550*x9551)));
evalcond[4]=((-0.1255)+(((0.02626)*x9547))+(((0.0718)*x9559))+(((-0.21326)*cj2))+(((-1.0)*cj2*x9555))+(((-0.0009)*sj2))+pz+(((-0.02626)*x9558))+(((-0.0718)*x9554))+(((-1.0)*r21*x9548)));
evalcond[5]=((-0.001)+(((-0.02626)*cj6*x9550))+((x9548*x9549))+(((0.02626)*x9554))+(((-0.02626)*r10*x9545))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-1.0)*py*sj0))+(((-1.0)*sj2*x9555))+(((-1.0)*sj2*x9557))+(((-0.0718)*x9556))+(((-1.0)*cj0*px))+(((0.02626)*r11*x9546)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9561=(cj5*cj6);
IkReal x9562=((1.0)*sj0);
IkReal x9563=(r21*sj6);
IkReal x9564=(cj0*sj5);
IkReal x9565=((1.0)*r22);
IkReal x9566=(cj6*r20);
IkReal x9567=(cj5*sj6);
IkReal x9568=((1.0)*cj0);
IkReal x9569=((1.0)*sj5);
IkReal x9570=(x9567*x9568);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x9561))+(((-1.0)*sj5*x9565))+((r20*x9567)));
evalcond[2]=((((-1.0)*x9563))+x9566);
evalcond[3]=((((-1.0)*r20*sj6*x9569))+(((-1.0)*cj6*r21*x9569))+(((-1.0)*cj5*x9565)));
evalcond[4]=((((-1.0)*r11*x9561*x9562))+(((-1.0)*r01*x9561*x9568))+((r12*sj0*sj5))+(((-1.0)*r00*x9570))+((r02*x9564))+(((-1.0)*r10*x9562*x9567)));
evalcond[5]=((((-1.0)*r02*sj5*x9562))+((r00*sj0*x9567))+(((-1.0)*r11*x9561*x9568))+((r12*x9564))+((r01*sj0*x9561))+(((-1.0)*r10*x9570)));
evalcond[6]=((-0.0001)+pz+(((0.02626)*x9566))+(((-0.02626)*x9563)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9571=((1.0)*r10);
IkReal x9572=((1.0)*cj2);
IkReal x9573=(r11*sj6);
IkReal x9574=(sj0*sj2);
IkReal x9575=(cj0*cj2);
IkReal x9576=(r01*sj6);
IkReal x9577=(cj0*x9576);
IkReal x9578=(cj6*x9574);
IkReal x9579=(cj0*cj6*sj2);
IkReal x9580=(cj2*cj6*sj0);
if( IKabs(((((-1.0)*r00*x9579))+((r00*x9580))+((sj2*x9577))+((x9573*x9574))+((x9573*x9575))+(((-1.0)*cj6*x9571*x9575))+(((-1.0)*sj0*x9572*x9576))+(((-1.0)*x9571*x9578)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*x9575))+((cj0*sj2*x9573))+((r00*x9578))+((r10*x9580))+(((-1.0)*x9572*x9577))+(((-1.0)*sj0*x9572*x9573))+(((-1.0)*x9571*x9579))+(((-1.0)*x9574*x9576)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x9579))+((r00*x9580))+((sj2*x9577))+((x9573*x9574))+((x9573*x9575))+(((-1.0)*cj6*x9571*x9575))+(((-1.0)*sj0*x9572*x9576))+(((-1.0)*x9571*x9578))))+IKsqr((((cj6*r00*x9575))+((cj0*sj2*x9573))+((r00*x9578))+((r10*x9580))+(((-1.0)*x9572*x9577))+(((-1.0)*sj0*x9572*x9573))+(((-1.0)*x9571*x9579))+(((-1.0)*x9574*x9576))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r00*x9579))+((r00*x9580))+((sj2*x9577))+((x9573*x9574))+((x9573*x9575))+(((-1.0)*cj6*x9571*x9575))+(((-1.0)*sj0*x9572*x9576))+(((-1.0)*x9571*x9578))), (((cj6*r00*x9575))+((cj0*sj2*x9573))+((r00*x9578))+((r10*x9580))+(((-1.0)*x9572*x9577))+(((-1.0)*sj0*x9572*x9573))+(((-1.0)*x9571*x9579))+(((-1.0)*x9574*x9576))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9581=IKsin(j4);
IkReal x9582=IKcos(j4);
IkReal x9583=(sj0*sj6);
IkReal x9584=((0.02626)*r01);
IkReal x9585=(cj0*sj6);
IkReal x9586=(cj6*sj0);
IkReal x9587=(r11*sj5);
IkReal x9588=(r10*sj5);
IkReal x9589=(cj0*cj5);
IkReal x9590=((1.0)*sj0);
IkReal x9591=((0.02626)*r11);
IkReal x9592=((1.0)*r01);
IkReal x9593=(r00*sj5);
IkReal x9594=((1.0)*cj0);
IkReal x9595=((0.02626)*r00);
IkReal x9596=(cj0*cj6);
IkReal x9597=(cj2*x9582);
IkReal x9598=(r10*x9596);
IkReal x9599=((0.02626)*x9581);
IkReal x9600=(cj2*x9581);
IkReal x9601=((0.0718)*x9582);
IkReal x9602=(sj2*x9582);
IkReal x9603=(sj2*x9581);
IkReal x9604=((1.0)*x9603);
evalcond[0]=(((r11*x9583))+(((-1.0)*x9604))+((r01*x9585))+(((-1.0)*r10*x9586))+(((-1.0)*cj6*r00*x9594))+x9597);
evalcond[1]=(((r11*x9585))+((r00*x9586))+(((-1.0)*cj6*r10*x9594))+(((-1.0)*x9600))+(((-1.0)*x9602))+(((-1.0)*x9583*x9592)));
evalcond[2]=(((cj5*r12*sj0))+((x9583*x9588))+((r01*sj5*x9596))+((x9586*x9587))+x9600+x9602+((x9585*x9593))+((r02*x9589)));
evalcond[3]=((((-1.0)*x9583*x9593))+(((-1.0)*x9604))+(((-1.0)*cj5*r02*x9590))+(((-1.0)*sj5*x9586*x9592))+((x9585*x9588))+((x9587*x9596))+x9597+((r12*x9589)));
evalcond[4]=((-0.1255)+(((0.0718)*x9603))+((x9586*x9595))+(((-0.21326)*cj2))+(((-1.0)*cj2*x9599))+(((-1.0)*py*x9594))+(((-0.02626)*x9602))+(((-0.0009)*sj2))+(((-0.02626)*x9598))+((x9585*x9591))+((px*sj0))+(((-0.0718)*x9597))+(((-1.0)*x9583*x9584)));
evalcond[5]=((-0.001)+((x9583*x9591))+(((-1.0)*sj2*x9601))+(((-1.0)*sj2*x9599))+(((0.02626)*x9597))+(((-1.0)*py*x9590))+((x9584*x9585))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-0.02626)*r10*x9586))+(((-1.0)*x9595*x9596))+(((-0.0718)*x9600))+(((-1.0)*px*x9594)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9605=(cj5*cj6);
IkReal x9606=(cj0*sj6);
IkReal x9607=(r01*sj0);
IkReal x9608=((1.0)*sj0);
IkReal x9609=((1.0)*cj5);
IkReal x9610=(cj0*r12);
IkReal x9611=(r02*sj5);
IkReal x9612=((1.0)*sj5);
IkReal x9613=(cj5*sj6);
IkReal x9614=((1.0)*cj0);
IkReal x9615=(cj0*cj6*r10);
IkReal x9616=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j1)))), 6.28318530717959)));
evalcond[1]=(((r20*x9613))+((r21*x9605))+(((-1.0)*r22*x9612)));
evalcond[2]=((((-1.0)*sj6*x9607))+((r11*x9606))+x9616+(((-1.0)*cj6*r10*x9614)));
evalcond[3]=(((cj0*x9611))+((r12*sj0*sj5))+(((-1.0)*r11*x9605*x9608))+(((-1.0)*r01*x9605*x9614))+(((-1.0)*r10*x9608*x9613))+(((-1.0)*r00*x9606*x9609)));
evalcond[4]=((-1.0)+((sj5*x9610))+(((-1.0)*r11*x9605*x9614))+((x9605*x9607))+(((-1.0)*r10*x9606*x9609))+(((-1.0)*x9608*x9611))+((r00*sj0*x9613)));
evalcond[5]=(((cj0*cj6*r11*sj5))+((cj5*x9610))+(((-1.0)*cj5*r02*x9608))+(((-1.0)*r00*sj5*sj6*x9608))+((r10*sj5*x9606))+(((-1.0)*cj6*x9607*x9612)));
evalcond[6]=((-0.0001)+(((0.02626)*r11*x9606))+(((-1.0)*py*x9614))+(((-0.02626)*x9615))+(((0.02626)*x9616))+((px*sj0))+(((-0.02626)*sj6*x9607)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9617=(cj2*r21);
IkReal x9618=(cj6*sj5);
IkReal x9619=(cj5*r22);
IkReal x9620=(r21*sj2);
IkReal x9621=((1.0)*cj2);
IkReal x9622=(cj6*r20);
IkReal x9623=(r20*sj5*sj6);
if( IKabs((((x9618*x9620))+(((-1.0)*x9621*x9622))+((sj2*x9619))+((sj6*x9617))+((sj2*x9623)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj6*x9620))+(((-1.0)*x9617*x9618))+(((-1.0)*sj2*x9622))+(((-1.0)*x9621*x9623))+(((-1.0)*x9619*x9621)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x9618*x9620))+(((-1.0)*x9621*x9622))+((sj2*x9619))+((sj6*x9617))+((sj2*x9623))))+IKsqr((((sj6*x9620))+(((-1.0)*x9617*x9618))+(((-1.0)*sj2*x9622))+(((-1.0)*x9621*x9623))+(((-1.0)*x9619*x9621))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x9618*x9620))+(((-1.0)*x9621*x9622))+((sj2*x9619))+((sj6*x9617))+((sj2*x9623))), (((sj6*x9620))+(((-1.0)*x9617*x9618))+(((-1.0)*sj2*x9622))+(((-1.0)*x9621*x9623))+(((-1.0)*x9619*x9621))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9624=IKsin(j4);
IkReal x9625=IKcos(j4);
IkReal x9626=(cj6*sj0);
IkReal x9627=(sj0*sj6);
IkReal x9628=((0.02626)*cj6);
IkReal x9629=(r21*sj6);
IkReal x9630=(cj0*r00);
IkReal x9631=(sj5*sj6);
IkReal x9632=((1.0)*cj6);
IkReal x9633=(sj2*x9625);
IkReal x9634=(cj2*x9624);
IkReal x9635=((0.02626)*x9624);
IkReal x9636=(cj2*x9625);
IkReal x9637=(sj2*x9624);
IkReal x9638=(cj0*r01*sj6);
IkReal x9639=(x9633+x9634);
evalcond[0]=((((-1.0)*x9629))+x9639+((cj6*r20)));
evalcond[1]=((((-1.0)*x9636))+x9637+(((-1.0)*r20*x9631))+(((-1.0)*cj5*r22))+(((-1.0)*r21*sj5*x9632)));
evalcond[2]=((((-1.0)*r10*x9626))+(((-1.0)*x9637))+(((-1.0)*x9630*x9632))+x9638+x9636+((r11*x9627)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((r10*sj5*x9627))+((x9630*x9631))+x9639+((r11*sj5*x9626))+((cj0*cj6*r01*sj5)));
evalcond[4]=((0.1255)+((r20*x9628))+(((-0.02626)*x9629))+(((-0.0718)*x9637))+(((0.0718)*x9636))+(((0.02626)*x9633))+(((0.02626)*x9634))+pz+(((0.21326)*cj2))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-1.0)*x9628*x9630))+(((-0.0718)*x9633))+(((-0.0718)*x9634))+(((-0.02626)*r10*x9626))+(((0.0009)*cj2))+(((0.02626)*x9638))+(((0.02626)*x9636))+(((-0.21326)*sj2))+(((-1.0)*py*sj0))+(((-1.0)*sj2*x9635))+(((0.02626)*r11*x9627))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9640=(cj5*cj6);
IkReal x9641=((1.0)*sj0);
IkReal x9642=(r21*sj6);
IkReal x9643=(cj0*sj5);
IkReal x9644=((1.0)*r22);
IkReal x9645=(cj6*r20);
IkReal x9646=(cj5*sj6);
IkReal x9647=((1.0)*cj0);
IkReal x9648=((1.0)*sj5);
IkReal x9649=(x9646*x9647);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x9644))+((r20*x9646))+((r21*x9640)));
evalcond[2]=(x9645+(((-1.0)*x9642)));
evalcond[3]=((((-1.0)*r20*sj6*x9648))+(((-1.0)*cj6*r21*x9648))+(((-1.0)*cj5*x9644)));
evalcond[4]=((((-1.0)*r01*x9640*x9647))+((r02*x9643))+((r12*sj0*sj5))+(((-1.0)*r11*x9640*x9641))+(((-1.0)*r00*x9649))+(((-1.0)*r10*x9641*x9646)));
evalcond[5]=(((r01*sj0*x9640))+((r00*sj0*x9646))+(((-1.0)*r11*x9640*x9647))+(((-1.0)*r10*x9649))+(((-1.0)*r02*sj5*x9641))+((r12*x9643)));
evalcond[6]=((0.0001)+(((0.02626)*x9645))+pz+(((-0.02626)*x9642)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9650=(cj0*sj6);
IkReal x9651=(r01*sj2);
IkReal x9652=(sj0*sj2);
IkReal x9653=((1.0)*cj6);
IkReal x9654=(sj0*sj6);
IkReal x9655=(cj0*sj2);
IkReal x9656=(cj6*r10);
IkReal x9657=(cj2*sj0);
IkReal x9658=(cj2*r01);
IkReal x9659=(cj0*cj2);
IkReal x9660=((1.0)*cj2*r11);
if( IKabs(((((-1.0)*x9650*x9660))+((x9654*x9658))+(((-1.0)*r10*x9652*x9653))+((x9656*x9659))+((r11*sj6*x9652))+((x9650*x9651))+(((-1.0)*r00*x9653*x9655))+(((-1.0)*r00*x9653*x9657)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*x9659))+(((-1.0)*r00*x9652*x9653))+(((-1.0)*x9654*x9660))+(((-1.0)*r11*sj2*x9650))+((x9656*x9657))+(((-1.0)*x9650*x9658))+((x9651*x9654))+((x9655*x9656)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x9650*x9660))+((x9654*x9658))+(((-1.0)*r10*x9652*x9653))+((x9656*x9659))+((r11*sj6*x9652))+((x9650*x9651))+(((-1.0)*r00*x9653*x9655))+(((-1.0)*r00*x9653*x9657))))+IKsqr((((cj6*r00*x9659))+(((-1.0)*r00*x9652*x9653))+(((-1.0)*x9654*x9660))+(((-1.0)*r11*sj2*x9650))+((x9656*x9657))+(((-1.0)*x9650*x9658))+((x9651*x9654))+((x9655*x9656))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x9650*x9660))+((x9654*x9658))+(((-1.0)*r10*x9652*x9653))+((x9656*x9659))+((r11*sj6*x9652))+((x9650*x9651))+(((-1.0)*r00*x9653*x9655))+(((-1.0)*r00*x9653*x9657))), (((cj6*r00*x9659))+(((-1.0)*r00*x9652*x9653))+(((-1.0)*x9654*x9660))+(((-1.0)*r11*sj2*x9650))+((x9656*x9657))+(((-1.0)*x9650*x9658))+((x9651*x9654))+((x9655*x9656))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9661=IKcos(j4);
IkReal x9662=IKsin(j4);
IkReal x9663=(sj0*sj6);
IkReal x9664=((0.02626)*r01);
IkReal x9665=(cj6*sj0);
IkReal x9666=(r11*sj5);
IkReal x9667=(r10*sj5);
IkReal x9668=(cj5*r12);
IkReal x9669=((1.0)*sj0);
IkReal x9670=(cj5*r02);
IkReal x9671=((1.0)*r01);
IkReal x9672=(cj0*sj6);
IkReal x9673=(r00*sj5);
IkReal x9674=((1.0)*cj0);
IkReal x9675=((0.02626)*r00);
IkReal x9676=(cj0*cj6);
IkReal x9677=(sj2*x9661);
IkReal x9678=(cj2*x9662);
IkReal x9679=(sj2*x9662);
IkReal x9680=(r11*x9672);
IkReal x9681=(r10*x9676);
IkReal x9682=((0.0718)*x9661);
IkReal x9683=(cj2*x9661);
IkReal x9684=(x9677+x9678);
evalcond[0]=((((-1.0)*x9663*x9671))+((r00*x9665))+x9680+x9684+(((-1.0)*cj6*r10*x9674)));
evalcond[1]=(((r11*x9663))+(((-1.0)*cj6*r00*x9674))+((r01*x9672))+x9683+(((-1.0)*x9679))+(((-1.0)*r10*x9665)));
evalcond[2]=(((sj0*x9668))+((x9665*x9666))+((cj0*x9670))+((x9663*x9667))+((r01*sj5*x9676))+x9684+((x9672*x9673)));
evalcond[3]=(((x9666*x9676))+(((-1.0)*x9683))+((x9667*x9672))+x9679+((cj0*x9668))+(((-1.0)*x9663*x9673))+(((-1.0)*x9669*x9670))+(((-1.0)*sj5*x9665*x9671)));
evalcond[4]=((0.1255)+(((-0.02626)*x9681))+(((-1.0)*x9663*x9664))+(((0.02626)*x9680))+((x9665*x9675))+((cj2*x9682))+((px*sj0))+(((0.21326)*cj2))+(((0.02626)*x9677))+(((0.02626)*x9678))+(((0.0009)*sj2))+(((-1.0)*py*x9674))+(((-0.0718)*x9679)));
evalcond[5]=((-0.001)+(((0.02626)*x9683))+((x9664*x9672))+(((-0.02626)*x9679))+(((-0.02626)*r10*x9665))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-1.0)*px*x9674))+(((-1.0)*py*x9669))+(((0.02626)*r11*x9663))+(((-1.0)*x9675*x9676))+(((-0.0718)*x9678))+(((-0.0718)*x9677)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9685=(cj1*cj2);
IkReal x9686=((1.0)*sj6);
IkReal x9687=(r01*sj0);
IkReal x9688=(cj0*r10);
IkReal x9689=(cj1*sj2);
IkReal x9690=(cj6*r00*sj0);
IkReal x9691=(cj0*r11*sj6);
IkReal x9692=((1.0)*cj6*sj2);
IkReal x9693=(r21*sj1*sj5);
IkReal x9694=(cj5*r22*sj1);
IkReal x9695=(r20*sj1*sj5);
CheckValue<IkReal> x9696 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*x9685*x9688))+(((-1.0)*x9692*x9693))+((x9685*x9690))+((x9685*x9691))+(((-1.0)*sj2*x9686*x9695))+(((-1.0)*sj2*x9694))+(((-1.0)*x9685*x9686*x9687)))),((((-1.0)*cj6*x9688*x9689))+((x9689*x9690))+((x9689*x9691))+((cj2*sj6*x9695))+((cj2*cj6*x9693))+(((-1.0)*x9686*x9687*x9689))+((cj2*x9694))),IKFAST_ATAN2_MAGTHRESH);
if(!x9696.valid){
continue;
}
CheckValue<IkReal> x9697=IKPowWithIntegerCheck(IKsign((cj1*sj1)),-1);
if(!x9697.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x9696.value)+(((1.5707963267949)*(x9697.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x9698=IKcos(j4);
IkReal x9699=IKsin(j4);
IkReal x9700=((0.0718)*sj1);
IkReal x9701=(r11*sj0);
IkReal x9702=(cj5*r12);
IkReal x9703=(cj6*sj5);
IkReal x9704=(cj1*cj2);
IkReal x9705=(cj6*r20);
IkReal x9706=(cj0*sj6);
IkReal x9707=((1.0)*sj1);
IkReal x9708=((1.0)*cj5);
IkReal x9709=((0.0009)*sj2);
IkReal x9710=((0.02626)*sj1);
IkReal x9711=((1.0)*sj0);
IkReal x9712=(cj6*r10);
IkReal x9713=(sj5*sj6);
IkReal x9714=((0.0718)*cj1);
IkReal x9715=(cj6*r00);
IkReal x9716=((1.0)*r21);
IkReal x9717=((0.02626)*sj6);
IkReal x9718=((1.0)*cj0);
IkReal x9719=((0.02626)*sj0);
IkReal x9720=((1.0)*cj1);
IkReal x9721=(cj2*x9698);
IkReal x9722=(cj0*x9712);
IkReal x9723=(sj2*x9699);
IkReal x9724=(sj2*x9698);
IkReal x9725=(r01*x9717);
IkReal x9726=(cj2*x9699);
evalcond[0]=((((-1.0)*x9699*x9704))+(((-1.0)*sj6*x9716))+x9705+(((-1.0)*x9720*x9724)));
evalcond[1]=((((-1.0)*r22*x9708))+((x9698*x9704))+(((-1.0)*r20*x9713))+(((-1.0)*x9703*x9716))+(((-1.0)*x9720*x9723)));
evalcond[2]=(((r01*x9706))+x9721+(((-1.0)*x9715*x9718))+(((-1.0)*x9711*x9712))+((sj6*x9701))+(((-1.0)*x9723)));
evalcond[3]=((((-1.0)*x9707*x9726))+(((-1.0)*x9707*x9724))+((r11*x9706))+((sj0*x9715))+(((-1.0)*x9712*x9718))+(((-1.0)*r01*sj6*x9711)));
evalcond[4]=(((cj0*r01*x9703))+((cj0*cj5*r02))+((x9701*x9703))+((sj0*x9702))+x9726+x9724+((r10*sj0*x9713))+((r00*sj5*x9706)));
evalcond[5]=((((-1.0)*r00*x9711*x9713))+(((-1.0)*x9707*x9723))+(((-1.0)*r02*sj0*x9708))+((r10*sj5*x9706))+(((-1.0)*r01*x9703*x9711))+((cj0*x9702))+((sj1*x9721))+((cj0*r11*x9703)));
evalcond[6]=((((-0.02626)*x9699*x9704))+((x9714*x9723))+(((-0.1255)*cj1))+(((-1.0)*r21*x9717))+(((-1.0)*cj1*x9709))+(((-0.0001)*sj1))+(((0.02626)*x9705))+(((-0.0718)*x9698*x9704))+pz+(((-0.02626)*cj1*x9724))+(((-0.21326)*x9704)));
evalcond[7]=((-0.001)+(((0.02626)*x9721))+((x9701*x9717))+(((-0.02626)*x9723))+(((0.0009)*cj2))+(((-0.0718)*x9726))+(((-0.0718)*x9724))+(((-1.0)*px*x9718))+(((-0.21326)*sj2))+(((-0.02626)*cj0*x9715))+(((-1.0)*x9712*x9719))+(((0.02626)*r01*x9706))+(((-1.0)*py*x9711)));
evalcond[8]=((((-0.1255)*sj1))+((x9700*x9723))+(((-1.0)*sj1*x9709))+(((-0.02626)*x9722))+(((0.02626)*r11*x9706))+((x9715*x9719))+(((0.0001)*cj1))+((px*sj0))+(((-0.21326)*cj2*sj1))+(((-1.0)*x9700*x9721))+(((-1.0)*sj0*x9725))+(((-1.0)*py*x9718))+(((-1.0)*x9710*x9726))+(((-1.0)*x9710*x9724)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9727=(cj0*r00);
IkReal x9728=(r10*sj0);
IkReal x9729=(cj1*cj2);
IkReal x9730=(cj1*sj2);
IkReal x9731=(cj6*r20);
IkReal x9732=(r11*sj0*sj6);
IkReal x9733=((1.0)*r21*sj6);
IkReal x9734=(cj0*r01*sj6);
IkReal x9735=((1.0)*cj6*x9730);
CheckValue<IkReal> x9736=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x9736.valid){
continue;
}
CheckValue<IkReal> x9737 = IKatan2WithCheck(IkReal((((x9730*x9732))+((x9730*x9734))+(((-1.0)*x9728*x9735))+(((-1.0)*x9727*x9735))+((cj2*x9731))+(((-1.0)*cj2*x9733)))),(((sj2*x9731))+(((-1.0)*sj2*x9733))+(((-1.0)*x9729*x9734))+(((-1.0)*x9729*x9732))+((cj6*x9728*x9729))+((cj6*x9727*x9729))),IKFAST_ATAN2_MAGTHRESH);
if(!x9737.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9736.value)))+(x9737.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x9738=IKcos(j4);
IkReal x9739=IKsin(j4);
IkReal x9740=((0.0718)*sj1);
IkReal x9741=(r11*sj0);
IkReal x9742=(cj5*r12);
IkReal x9743=(cj6*sj5);
IkReal x9744=(cj1*cj2);
IkReal x9745=(cj6*r20);
IkReal x9746=(cj0*sj6);
IkReal x9747=((1.0)*sj1);
IkReal x9748=((1.0)*cj5);
IkReal x9749=((0.0009)*sj2);
IkReal x9750=((0.02626)*sj1);
IkReal x9751=((1.0)*sj0);
IkReal x9752=(cj6*r10);
IkReal x9753=(sj5*sj6);
IkReal x9754=((0.0718)*cj1);
IkReal x9755=(cj6*r00);
IkReal x9756=((1.0)*r21);
IkReal x9757=((0.02626)*sj6);
IkReal x9758=((1.0)*cj0);
IkReal x9759=((0.02626)*sj0);
IkReal x9760=((1.0)*cj1);
IkReal x9761=(cj2*x9738);
IkReal x9762=(cj0*x9752);
IkReal x9763=(sj2*x9739);
IkReal x9764=(sj2*x9738);
IkReal x9765=(r01*x9757);
IkReal x9766=(cj2*x9739);
evalcond[0]=((((-1.0)*sj6*x9756))+(((-1.0)*x9739*x9744))+x9745+(((-1.0)*x9760*x9764)));
evalcond[1]=((((-1.0)*r20*x9753))+(((-1.0)*x9743*x9756))+((x9738*x9744))+(((-1.0)*r22*x9748))+(((-1.0)*x9760*x9763)));
evalcond[2]=((((-1.0)*x9763))+x9761+((sj6*x9741))+(((-1.0)*x9755*x9758))+(((-1.0)*x9751*x9752))+((r01*x9746)));
evalcond[3]=((((-1.0)*x9747*x9764))+(((-1.0)*x9747*x9766))+((r11*x9746))+((sj0*x9755))+(((-1.0)*r01*sj6*x9751))+(((-1.0)*x9752*x9758)));
evalcond[4]=(((sj0*x9742))+((cj0*cj5*r02))+((cj0*r01*x9743))+x9766+x9764+((r00*sj5*x9746))+((x9741*x9743))+((r10*sj0*x9753)));
evalcond[5]=((((-1.0)*x9747*x9763))+((r10*sj5*x9746))+(((-1.0)*r01*x9743*x9751))+(((-1.0)*r00*x9751*x9753))+((sj1*x9761))+(((-1.0)*r02*sj0*x9748))+((cj0*r11*x9743))+((cj0*x9742)));
evalcond[6]=((((-0.21326)*x9744))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-1.0)*cj1*x9749))+(((-1.0)*r21*x9757))+pz+((x9754*x9763))+(((-0.0718)*x9738*x9744))+(((0.02626)*x9745))+(((-0.02626)*x9739*x9744))+(((-0.02626)*cj1*x9764)));
evalcond[7]=((-0.001)+(((-0.02626)*cj0*x9755))+(((0.02626)*r01*x9746))+(((-1.0)*px*x9758))+(((-0.0718)*x9764))+(((-0.0718)*x9766))+(((0.02626)*x9761))+(((0.0009)*cj2))+(((-0.02626)*x9763))+(((-0.21326)*sj2))+(((-1.0)*py*x9751))+((x9741*x9757))+(((-1.0)*x9752*x9759)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*sj1*x9749))+(((-1.0)*sj0*x9765))+(((-0.02626)*x9762))+(((-1.0)*py*x9758))+(((0.02626)*r11*x9746))+(((-1.0)*x9750*x9764))+(((-1.0)*x9750*x9766))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x9740*x9761))+(((-0.21326)*cj2*sj1))+((x9740*x9763))+((x9755*x9759)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9767=(cj2*r21);
IkReal x9768=((1.0)*sj6);
IkReal x9769=(cj5*r22);
IkReal x9770=(cj6*sj5);
IkReal x9771=(r20*sj5);
IkReal x9772=(cj6*r20);
IkReal x9773=(r21*sj2);
CheckValue<IkReal> x9774 = IKatan2WithCheck(IkReal(((((-1.0)*x9767*x9768))+((cj2*x9772))+(((-1.0)*sj2*x9768*x9771))+(((-1.0)*x9770*x9773))+(((-1.0)*sj2*x9769)))),(((x9767*x9770))+(((-1.0)*x9768*x9773))+((cj2*x9769))+((sj2*x9772))+((cj2*sj6*x9771))),IKFAST_ATAN2_MAGTHRESH);
if(!x9774.valid){
continue;
}
CheckValue<IkReal> x9775=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x9775.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x9774.value)+(((1.5707963267949)*(x9775.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x9776=IKcos(j4);
IkReal x9777=IKsin(j4);
IkReal x9778=((0.0718)*sj1);
IkReal x9779=(r11*sj0);
IkReal x9780=(cj5*r12);
IkReal x9781=(cj6*sj5);
IkReal x9782=(cj1*cj2);
IkReal x9783=(cj6*r20);
IkReal x9784=(cj0*sj6);
IkReal x9785=((1.0)*sj1);
IkReal x9786=((1.0)*cj5);
IkReal x9787=((0.0009)*sj2);
IkReal x9788=((0.02626)*sj1);
IkReal x9789=((1.0)*sj0);
IkReal x9790=(cj6*r10);
IkReal x9791=(sj5*sj6);
IkReal x9792=((0.0718)*cj1);
IkReal x9793=(cj6*r00);
IkReal x9794=((1.0)*r21);
IkReal x9795=((0.02626)*sj6);
IkReal x9796=((1.0)*cj0);
IkReal x9797=((0.02626)*sj0);
IkReal x9798=((1.0)*cj1);
IkReal x9799=(cj2*x9776);
IkReal x9800=(cj0*x9790);
IkReal x9801=(sj2*x9777);
IkReal x9802=(sj2*x9776);
IkReal x9803=(r01*x9795);
IkReal x9804=(cj2*x9777);
evalcond[0]=((((-1.0)*x9777*x9782))+(((-1.0)*x9798*x9802))+x9783+(((-1.0)*sj6*x9794)));
evalcond[1]=(((x9776*x9782))+(((-1.0)*x9798*x9801))+(((-1.0)*x9781*x9794))+(((-1.0)*r20*x9791))+(((-1.0)*r22*x9786)));
evalcond[2]=(((sj6*x9779))+((r01*x9784))+(((-1.0)*x9789*x9790))+(((-1.0)*x9801))+(((-1.0)*x9793*x9796))+x9799);
evalcond[3]=((((-1.0)*x9790*x9796))+(((-1.0)*r01*sj6*x9789))+((sj0*x9793))+((r11*x9784))+(((-1.0)*x9785*x9804))+(((-1.0)*x9785*x9802)));
evalcond[4]=(((r10*sj0*x9791))+((sj0*x9780))+((cj0*cj5*r02))+((x9779*x9781))+((cj0*r01*x9781))+((r00*sj5*x9784))+x9804+x9802);
evalcond[5]=(((cj0*x9780))+((cj0*r11*x9781))+((sj1*x9799))+(((-1.0)*r01*x9781*x9789))+(((-1.0)*r00*x9789*x9791))+(((-1.0)*r02*sj0*x9786))+(((-1.0)*x9785*x9801))+((r10*sj5*x9784)));
evalcond[6]=((((-0.21326)*x9782))+(((-0.02626)*x9777*x9782))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.0718)*x9776*x9782))+(((-0.02626)*cj1*x9802))+pz+(((-1.0)*cj1*x9787))+((x9792*x9801))+(((0.02626)*x9783))+(((-1.0)*r21*x9795)));
evalcond[7]=((-0.001)+(((-1.0)*x9790*x9797))+(((-1.0)*px*x9796))+(((0.02626)*x9799))+(((-1.0)*py*x9789))+(((-0.02626)*cj0*x9793))+(((0.0009)*cj2))+(((0.02626)*r01*x9784))+(((-0.21326)*sj2))+(((-0.0718)*x9804))+(((-0.0718)*x9802))+(((-0.02626)*x9801))+((x9779*x9795)));
evalcond[8]=((((-0.1255)*sj1))+((x9778*x9801))+((x9793*x9797))+(((-1.0)*sj1*x9787))+(((0.02626)*r11*x9784))+(((0.0001)*cj1))+(((-0.02626)*x9800))+((px*sj0))+(((-0.21326)*cj2*sj1))+(((-1.0)*py*x9796))+(((-1.0)*x9778*x9799))+(((-1.0)*sj0*x9803))+(((-1.0)*x9788*x9802))+(((-1.0)*x9788*x9804)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9805=(cj0*sj5);
IkReal x9806=(cj5*cj6);
IkReal x9807=((1.0)*sj5);
IkReal x9808=((1.0)*cj0);
IkReal x9809=((1.0)*sj0);
IkReal x9810=(cj5*sj6);
IkReal x9811=(r10*x9810);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x9806))+sj1+(((-1.0)*r22*x9807))+((r20*x9810)));
evalcond[2]=((((-1.0)*x9809*x9811))+(((-1.0)*r00*x9808*x9810))+(((-1.0)*r01*x9806*x9808))+((r12*sj0*sj5))+((r02*x9805))+(((-1.0)*r11*x9806*x9809)));
evalcond[3]=(((r12*x9805))+(((-1.0)*x9808*x9811))+((r00*sj0*x9810))+((r01*sj0*x9806))+(((-1.0)*r02*sj0*x9807))+(((-1.0)*r11*x9806*x9808))+(((-1.0)*cj1)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x9812=(cj2*r21);
IkReal x9813=((1.0)*cj6);
IkReal x9814=((1.0)*cj2);
IkReal x9815=(cj5*r22);
IkReal x9816=(r20*sj2);
IkReal x9817=(sj5*sj6);
IkReal x9818=(r21*sj2);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*x9816*x9817))+(((-1.0)*sj5*x9813*x9818))+(((-1.0)*cj2*r20*x9813))+(((-1.0)*sj2*x9815))+((sj6*x9812)))))+(IKabs(((((-1.0)*x9814*x9815))+(((-1.0)*r20*x9814*x9817))+((cj6*x9816))+(((-1.0)*sj6*x9818))+(((-1.0)*sj5*x9812*x9813))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x9819=(cj1*sj1);
j4eval[0]=x9819;
j4eval[1]=IKsign(x9819);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x9820=(cj5*cj6);
IkReal x9821=(cj0*sj6);
IkReal x9822=(r01*sj0);
IkReal x9823=((1.0)*sj0);
IkReal x9824=((1.0)*cj5);
IkReal x9825=(cj0*r12);
IkReal x9826=(r02*sj5);
IkReal x9827=((1.0)*sj5);
IkReal x9828=(cj5*sj6);
IkReal x9829=((1.0)*cj0);
IkReal x9830=(cj0*cj6*r10);
IkReal x9831=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j1))), 6.28318530717959)));
evalcond[1]=(((r20*x9828))+((r21*x9820))+(((-1.0)*r22*x9827)));
evalcond[2]=(((r11*x9821))+(((-1.0)*cj6*r10*x9829))+(((-1.0)*sj6*x9822))+x9831);
evalcond[3]=((((-1.0)*r11*x9820*x9823))+(((-1.0)*r10*x9823*x9828))+(((-1.0)*r00*x9821*x9824))+((r12*sj0*sj5))+(((-1.0)*r01*x9820*x9829))+((cj0*x9826)));
evalcond[4]=((-1.0)+(((-1.0)*x9823*x9826))+(((-1.0)*r11*x9820*x9829))+(((-1.0)*r10*x9821*x9824))+((sj5*x9825))+((x9820*x9822))+((r00*sj0*x9828)));
evalcond[5]=((((-1.0)*cj6*x9822*x9827))+((cj5*x9825))+((cj0*cj6*r11*sj5))+((r10*sj5*x9821))+(((-1.0)*cj5*r02*x9823))+(((-1.0)*r00*sj5*sj6*x9823)));
evalcond[6]=((0.0001)+(((0.02626)*r11*x9821))+(((-1.0)*py*x9829))+(((0.02626)*x9831))+(((-0.02626)*sj6*x9822))+((px*sj0))+(((-0.02626)*x9830)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9832=(cj2*r21);
IkReal x9833=((1.0)*cj6);
IkReal x9834=((1.0)*cj2);
IkReal x9835=(cj5*r22);
IkReal x9836=(r20*sj2);
IkReal x9837=(sj5*sj6);
IkReal x9838=(r21*sj2);
if( IKabs(((((-1.0)*sj5*x9833*x9838))+(((-1.0)*x9836*x9837))+(((-1.0)*cj2*r20*x9833))+(((-1.0)*sj2*x9835))+((sj6*x9832)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj6*x9838))+(((-1.0)*x9834*x9835))+((cj6*x9836))+(((-1.0)*r20*x9834*x9837))+(((-1.0)*sj5*x9832*x9833)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x9833*x9838))+(((-1.0)*x9836*x9837))+(((-1.0)*cj2*r20*x9833))+(((-1.0)*sj2*x9835))+((sj6*x9832))))+IKsqr(((((-1.0)*sj6*x9838))+(((-1.0)*x9834*x9835))+((cj6*x9836))+(((-1.0)*r20*x9834*x9837))+(((-1.0)*sj5*x9832*x9833))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj5*x9833*x9838))+(((-1.0)*x9836*x9837))+(((-1.0)*cj2*r20*x9833))+(((-1.0)*sj2*x9835))+((sj6*x9832))), ((((-1.0)*sj6*x9838))+(((-1.0)*x9834*x9835))+((cj6*x9836))+(((-1.0)*r20*x9834*x9837))+(((-1.0)*sj5*x9832*x9833))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9839=IKcos(j4);
IkReal x9840=IKsin(j4);
IkReal x9841=(cj6*sj0);
IkReal x9842=(sj0*sj6);
IkReal x9843=((0.02626)*cj6);
IkReal x9844=(r21*sj6);
IkReal x9845=(cj0*r00);
IkReal x9846=(sj5*sj6);
IkReal x9847=((1.0)*cj6);
IkReal x9848=(cj2*x9840);
IkReal x9849=((0.02626)*x9840);
IkReal x9850=(cj2*x9839);
IkReal x9851=(sj2*x9840);
IkReal x9852=(sj2*x9839);
IkReal x9853=(cj0*r01*sj6);
IkReal x9854=((1.0)*x9852);
evalcond[0]=((((-1.0)*x9844))+(((-1.0)*x9854))+((cj6*r20))+x9848);
evalcond[1]=((((-1.0)*x9850))+(((-1.0)*x9851))+(((-1.0)*r21*sj5*x9847))+(((-1.0)*r20*x9846))+(((-1.0)*cj5*r22)));
evalcond[2]=(((r11*x9842))+(((-1.0)*x9845*x9847))+x9850+x9851+x9853+(((-1.0)*r10*x9841)));
evalcond[3]=(((cj5*r12*sj0))+((r11*sj5*x9841))+((cj0*cj5*r02))+((x9845*x9846))+((r10*sj5*x9842))+(((-1.0)*x9854))+((cj0*cj6*r01*sj5))+x9848);
evalcond[4]=((-0.1255)+(((0.0718)*x9851))+(((0.0718)*x9850))+((r20*x9843))+(((0.02626)*x9848))+(((-0.0009)*sj2))+pz+(((-0.02626)*x9844))+(((-0.02626)*x9852))+(((-0.01834)*cj2)));
evalcond[5]=((-0.001)+(((0.0718)*x9852))+(((-1.0)*x9843*x9845))+(((-0.01834)*sj2))+(((-0.02626)*r10*x9841))+(((0.0009)*cj2))+(((0.02626)*x9850))+(((0.02626)*x9853))+(((-0.0718)*x9848))+(((0.02626)*r11*x9842))+(((-1.0)*py*sj0))+((sj2*x9849))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9855=(cj5*cj6);
IkReal x9856=((1.0)*sj0);
IkReal x9857=(r21*sj6);
IkReal x9858=(cj0*sj5);
IkReal x9859=((1.0)*r22);
IkReal x9860=(cj6*r20);
IkReal x9861=(cj5*sj6);
IkReal x9862=((1.0)*cj0);
IkReal x9863=((1.0)*sj5);
IkReal x9864=(x9861*x9862);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x9855))+(((-1.0)*sj5*x9859))+((r20*x9861)));
evalcond[2]=((((-1.0)*x9857))+x9860);
evalcond[3]=((((-1.0)*cj5*x9859))+(((-1.0)*cj6*r21*x9863))+(((-1.0)*r20*sj6*x9863)));
evalcond[4]=((((-1.0)*r10*x9856*x9861))+(((-1.0)*r00*x9864))+((r02*x9858))+((r12*sj0*sj5))+(((-1.0)*r01*x9855*x9862))+(((-1.0)*r11*x9855*x9856)));
evalcond[5]=((((-1.0)*r11*x9855*x9862))+((r01*sj0*x9855))+(((-1.0)*r02*sj5*x9856))+((r00*sj0*x9861))+(((-1.0)*r10*x9864))+((r12*x9858)));
evalcond[6]=((-0.0001)+pz+(((-0.02626)*x9857))+(((0.02626)*x9860)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9865=(sj0*sj2);
IkReal x9866=(cj0*cj2);
IkReal x9867=(r01*sj6);
IkReal x9868=(cj6*r10);
IkReal x9869=(cj2*sj0);
IkReal x9870=(cj0*sj2);
IkReal x9871=(cj6*r00);
IkReal x9872=((1.0)*r11*sj6);
IkReal x9873=((1.0)*x9870);
if( IKabs(((((-1.0)*x9867*x9873))+((x9867*x9869))+((x9865*x9868))+(((-1.0)*x9866*x9872))+(((-1.0)*x9865*x9872))+((x9866*x9868))+((x9870*x9871))+(((-1.0)*x9869*x9871)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x9866*x9871))+((x9868*x9869))+(((-1.0)*x9865*x9867))+((r11*sj6*x9870))+(((-1.0)*x9868*x9873))+(((-1.0)*x9866*x9867))+(((-1.0)*x9869*x9872))+((x9865*x9871)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x9867*x9873))+((x9867*x9869))+((x9865*x9868))+(((-1.0)*x9866*x9872))+(((-1.0)*x9865*x9872))+((x9866*x9868))+((x9870*x9871))+(((-1.0)*x9869*x9871))))+IKsqr((((x9866*x9871))+((x9868*x9869))+(((-1.0)*x9865*x9867))+((r11*sj6*x9870))+(((-1.0)*x9868*x9873))+(((-1.0)*x9866*x9867))+(((-1.0)*x9869*x9872))+((x9865*x9871))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x9867*x9873))+((x9867*x9869))+((x9865*x9868))+(((-1.0)*x9866*x9872))+(((-1.0)*x9865*x9872))+((x9866*x9868))+((x9870*x9871))+(((-1.0)*x9869*x9871))), (((x9866*x9871))+((x9868*x9869))+(((-1.0)*x9865*x9867))+((r11*sj6*x9870))+(((-1.0)*x9868*x9873))+(((-1.0)*x9866*x9867))+(((-1.0)*x9869*x9872))+((x9865*x9871))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9874=IKsin(j4);
IkReal x9875=IKcos(j4);
IkReal x9876=(sj0*sj6);
IkReal x9877=((0.02626)*r01);
IkReal x9878=(cj6*sj0);
IkReal x9879=(r11*sj5);
IkReal x9880=(r10*sj5);
IkReal x9881=(cj5*r12);
IkReal x9882=((1.0)*sj0);
IkReal x9883=(cj5*r02);
IkReal x9884=((1.0)*r01);
IkReal x9885=(cj0*sj6);
IkReal x9886=(r00*sj5);
IkReal x9887=((1.0)*cj0);
IkReal x9888=((0.02626)*r00);
IkReal x9889=(cj0*cj6);
IkReal x9890=(cj2*x9874);
IkReal x9891=(sj2*x9874);
IkReal x9892=(r11*x9885);
IkReal x9893=(r10*x9889);
IkReal x9894=((0.0718)*x9875);
IkReal x9895=(cj2*x9875);
IkReal x9896=(sj2*x9875);
IkReal x9897=((1.0)*x9896);
evalcond[0]=((((-1.0)*r10*x9878))+((r01*x9885))+((r11*x9876))+x9895+x9891+(((-1.0)*cj6*r00*x9887)));
evalcond[1]=((((-1.0)*cj6*r10*x9887))+((r00*x9878))+(((-1.0)*x9876*x9884))+x9890+x9892+(((-1.0)*x9897)));
evalcond[2]=(((r01*sj5*x9889))+((x9876*x9880))+((cj0*x9883))+((sj0*x9881))+((x9878*x9879))+((x9885*x9886))+x9890+(((-1.0)*x9897)));
evalcond[3]=((((-1.0)*x9882*x9883))+((x9879*x9889))+(((-1.0)*sj5*x9878*x9884))+(((-1.0)*x9876*x9886))+((x9880*x9885))+(((-1.0)*x9891))+(((-1.0)*x9895))+((cj0*x9881)));
evalcond[4]=((-0.1255)+((cj2*x9894))+(((-1.0)*x9876*x9877))+(((-0.02626)*x9893))+(((-0.02626)*x9896))+(((-1.0)*py*x9887))+(((0.0718)*x9891))+(((-0.0009)*sj2))+((x9878*x9888))+((px*sj0))+(((-0.01834)*cj2))+(((0.02626)*x9890))+(((0.02626)*x9892)));
evalcond[5]=((-0.001)+(((-0.01834)*sj2))+((sj2*x9894))+(((-1.0)*py*x9882))+(((0.02626)*r11*x9876))+(((-0.02626)*r10*x9878))+(((0.0009)*cj2))+((x9877*x9885))+(((0.02626)*x9895))+(((0.02626)*x9891))+(((-1.0)*x9888*x9889))+(((-1.0)*px*x9887))+(((-0.0718)*x9890)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9898=(cj5*cj6);
IkReal x9899=(cj0*sj6);
IkReal x9900=(r01*sj0);
IkReal x9901=((1.0)*sj0);
IkReal x9902=((1.0)*cj5);
IkReal x9903=(cj0*r12);
IkReal x9904=(r02*sj5);
IkReal x9905=((1.0)*sj5);
IkReal x9906=(cj5*sj6);
IkReal x9907=((1.0)*cj0);
IkReal x9908=(cj0*cj6*r10);
IkReal x9909=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j1)))), 6.28318530717959)));
evalcond[1]=(((r20*x9906))+(((-1.0)*r22*x9905))+((r21*x9898)));
evalcond[2]=((((-1.0)*cj6*r10*x9907))+(((-1.0)*sj6*x9900))+((r11*x9899))+x9909);
evalcond[3]=((((-1.0)*r00*x9899*x9902))+((cj0*x9904))+((r12*sj0*sj5))+(((-1.0)*r01*x9898*x9907))+(((-1.0)*r10*x9901*x9906))+(((-1.0)*r11*x9898*x9901)));
evalcond[4]=((1.0)+((x9898*x9900))+(((-1.0)*x9901*x9904))+(((-1.0)*r10*x9899*x9902))+((r00*sj0*x9906))+(((-1.0)*r11*x9898*x9907))+((sj5*x9903)));
evalcond[5]=((((-1.0)*cj6*x9900*x9905))+(((-1.0)*r00*sj5*sj6*x9901))+((cj5*x9903))+(((-1.0)*cj5*r02*x9901))+((cj0*cj6*r11*sj5))+((r10*sj5*x9899)));
evalcond[6]=((-0.0001)+(((-1.0)*py*x9907))+(((-0.02626)*sj6*x9900))+(((0.02626)*x9909))+(((-0.02626)*x9908))+((px*sj0))+(((0.02626)*r11*x9899)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9910=(cj5*r22);
IkReal x9911=(cj6*sj2);
IkReal x9912=(r21*sj5);
IkReal x9913=(r21*sj6);
IkReal x9914=(cj2*cj6);
IkReal x9915=(r20*sj5*sj6);
if( IKabs((((sj2*x9910))+((sj2*x9915))+((r20*x9914))+((x9911*x9912))+(((-1.0)*cj2*x9913)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj2*x9913))+(((-1.0)*r20*x9911))+((x9912*x9914))+((cj2*x9910))+((cj2*x9915)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj2*x9910))+((sj2*x9915))+((r20*x9914))+((x9911*x9912))+(((-1.0)*cj2*x9913))))+IKsqr((((sj2*x9913))+(((-1.0)*r20*x9911))+((x9912*x9914))+((cj2*x9910))+((cj2*x9915))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj2*x9910))+((sj2*x9915))+((r20*x9914))+((x9911*x9912))+(((-1.0)*cj2*x9913))), (((sj2*x9913))+(((-1.0)*r20*x9911))+((x9912*x9914))+((cj2*x9910))+((cj2*x9915))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9916=IKcos(j4);
IkReal x9917=IKsin(j4);
IkReal x9918=(r11*sj0);
IkReal x9919=(cj6*sj5);
IkReal x9920=(r10*sj0);
IkReal x9921=(sj5*sj6);
IkReal x9922=(cj6*r20);
IkReal x9923=((1.0)*cj6);
IkReal x9924=((0.02626)*sj6);
IkReal x9925=(cj0*r00);
IkReal x9926=((0.02626)*cj6);
IkReal x9927=((1.0)*r21);
IkReal x9928=(cj0*r01);
IkReal x9929=(cj2*x9916);
IkReal x9930=(sj2*x9917);
IkReal x9931=((0.02626)*x9917);
IkReal x9932=(cj2*x9917);
IkReal x9933=((0.0718)*x9916);
IkReal x9934=(sj2*x9916);
IkReal x9935=(x9929+x9930);
evalcond[0]=((((-1.0)*sj6*x9927))+(((-1.0)*x9932))+x9922+x9934);
evalcond[1]=((((-1.0)*x9919*x9927))+(((-1.0)*r20*x9921))+(((-1.0)*cj5*r22))+x9935);
evalcond[2]=((((-1.0)*x9920*x9923))+((sj6*x9928))+x9935+(((-1.0)*x9923*x9925))+((sj6*x9918)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x9921*x9925))+((x9920*x9921))+(((-1.0)*x9934))+((x9918*x9919))+((x9919*x9928))+x9932);
evalcond[4]=((0.1255)+(((-0.0718)*x9930))+(((-1.0)*r21*x9924))+(((-1.0)*cj2*x9931))+(((-0.0718)*x9929))+(((0.02626)*x9922))+pz+(((0.01834)*cj2))+(((0.0009)*sj2))+(((0.02626)*x9934)));
evalcond[5]=((-0.001)+(((-0.0718)*x9932))+((x9924*x9928))+(((-1.0)*x9925*x9926))+(((-0.01834)*sj2))+(((-1.0)*x9920*x9926))+(((0.02626)*x9929))+(((0.0009)*cj2))+((x9918*x9924))+((sj2*x9933))+(((-1.0)*py*sj0))+(((0.02626)*x9930))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9936=(cj5*cj6);
IkReal x9937=((1.0)*sj0);
IkReal x9938=(r21*sj6);
IkReal x9939=(cj0*sj5);
IkReal x9940=((1.0)*r22);
IkReal x9941=(cj6*r20);
IkReal x9942=(cj5*sj6);
IkReal x9943=((1.0)*cj0);
IkReal x9944=((1.0)*sj5);
IkReal x9945=(x9942*x9943);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x9936))+((r20*x9942))+(((-1.0)*sj5*x9940)));
evalcond[2]=((((-1.0)*x9938))+x9941);
evalcond[3]=((((-1.0)*cj5*x9940))+(((-1.0)*r20*sj6*x9944))+(((-1.0)*cj6*r21*x9944)));
evalcond[4]=((((-1.0)*r00*x9945))+(((-1.0)*r10*x9937*x9942))+((r12*sj0*sj5))+(((-1.0)*r01*x9936*x9943))+(((-1.0)*r11*x9936*x9937))+((r02*x9939)));
evalcond[5]=(((r00*sj0*x9942))+((r12*x9939))+(((-1.0)*r10*x9945))+(((-1.0)*r11*x9936*x9943))+(((-1.0)*r02*sj5*x9937))+((r01*sj0*x9936)));
evalcond[6]=((0.0001)+(((0.02626)*x9941))+pz+(((-0.02626)*x9938)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9946=(cj6*r10);
IkReal x9947=(r11*sj0);
IkReal x9948=(r01*sj6);
IkReal x9949=((1.0)*sj0);
IkReal x9950=(cj2*sj6);
IkReal x9951=(cj0*r11);
IkReal x9952=(cj2*sj0);
IkReal x9953=(cj6*r00);
IkReal x9954=(sj0*sj2);
IkReal x9955=((1.0)*cj0*cj2);
IkReal x9956=((1.0)*sj2*sj6);
IkReal x9957=(sj2*x9953);
if( IKabs(((((-1.0)*x9946*x9955))+((cj0*x9957))+((x9950*x9951))+(((-1.0)*cj2*x9948*x9949))+((x9952*x9953))+(((-1.0)*cj0*sj2*x9948))+((x9946*x9954))+(((-1.0)*x9947*x9956)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x9947*x9950))+((x9948*x9954))+(((-1.0)*x9948*x9955))+((x9946*x9952))+((cj0*sj2*x9946))+(((-1.0)*x9951*x9956))+(((-1.0)*x9949*x9957))+((cj0*cj2*x9953)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x9946*x9955))+((cj0*x9957))+((x9950*x9951))+(((-1.0)*cj2*x9948*x9949))+((x9952*x9953))+(((-1.0)*cj0*sj2*x9948))+((x9946*x9954))+(((-1.0)*x9947*x9956))))+IKsqr(((((-1.0)*x9947*x9950))+((x9948*x9954))+(((-1.0)*x9948*x9955))+((x9946*x9952))+((cj0*sj2*x9946))+(((-1.0)*x9951*x9956))+(((-1.0)*x9949*x9957))+((cj0*cj2*x9953))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x9946*x9955))+((cj0*x9957))+((x9950*x9951))+(((-1.0)*cj2*x9948*x9949))+((x9952*x9953))+(((-1.0)*cj0*sj2*x9948))+((x9946*x9954))+(((-1.0)*x9947*x9956))), ((((-1.0)*x9947*x9950))+((x9948*x9954))+(((-1.0)*x9948*x9955))+((x9946*x9952))+((cj0*sj2*x9946))+(((-1.0)*x9951*x9956))+(((-1.0)*x9949*x9957))+((cj0*cj2*x9953))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x9958=IKcos(j4);
IkReal x9959=IKsin(j4);
IkReal x9960=((0.02626)*sj0);
IkReal x9961=(cj6*r10);
IkReal x9962=(r01*sj6);
IkReal x9963=(r11*sj6);
IkReal x9964=(sj0*sj5);
IkReal x9965=(cj6*r11);
IkReal x9966=(r10*sj6);
IkReal x9967=(cj5*r12);
IkReal x9968=((0.02626)*cj0);
IkReal x9969=((1.0)*sj0);
IkReal x9970=(cj5*r02);
IkReal x9971=(cj0*sj5);
IkReal x9972=(r00*sj6);
IkReal x9973=(cj6*r00);
IkReal x9974=((1.0)*cj0);
IkReal x9975=(cj6*r01);
IkReal x9976=(cj2*x9958);
IkReal x9977=(sj2*x9959);
IkReal x9978=((0.02626)*x9959);
IkReal x9979=(cj2*x9959);
IkReal x9980=((0.0718)*x9958);
IkReal x9981=(sj2*x9958);
IkReal x9982=(x9977+x9976);
evalcond[0]=(((sj0*x9963))+(((-1.0)*x9961*x9969))+((cj0*x9962))+(((-1.0)*x9973*x9974))+x9982);
evalcond[1]=((((-1.0)*x9979))+(((-1.0)*x9962*x9969))+((cj0*x9963))+((sj0*x9973))+(((-1.0)*x9961*x9974))+x9981);
evalcond[2]=(((cj0*x9970))+((sj0*x9967))+((x9964*x9965))+((x9964*x9966))+(((-1.0)*x9981))+x9979+((x9971*x9975))+((x9971*x9972)));
evalcond[3]=((((-1.0)*x9969*x9970))+((cj0*x9967))+(((-1.0)*x9964*x9972))+(((-1.0)*x9964*x9975))+((x9966*x9971))+((x9965*x9971))+x9982);
evalcond[4]=((0.1255)+(((-1.0)*x9960*x9962))+(((-1.0)*x9961*x9968))+((x9963*x9968))+(((-1.0)*py*x9974))+(((-0.0718)*x9977))+(((-0.0718)*x9976))+((x9960*x9973))+(((0.01834)*cj2))+(((-1.0)*cj2*x9978))+((px*sj0))+(((0.02626)*x9981))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-1.0)*x9960*x9961))+((x9962*x9968))+(((-1.0)*x9968*x9973))+(((-0.01834)*sj2))+(((-0.0718)*x9979))+(((0.0009)*cj2))+((sj2*x9980))+(((0.02626)*x9977))+(((0.02626)*x9976))+(((-1.0)*px*x9974))+(((-1.0)*py*x9969))+((x9960*x9963)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x9983=(cj0*cj1);
IkReal x9984=(cj5*r22);
IkReal x9985=(r21*sj5);
IkReal x9986=((1.0)*cj2);
IkReal x9987=(r11*sj6);
IkReal x9988=(cj1*sj0);
IkReal x9989=(cj6*r00);
IkReal x9990=(r01*sj6);
IkReal x9991=((1.0)*cj6*sj2);
IkReal x9992=(sj1*x9986);
IkReal x9993=(r20*sj5*sj6);
IkReal x9994=((1.0)*sj1*sj2);
CheckValue<IkReal> x9995=IKPowWithIntegerCheck(IKsign((cj1*sj1)),-1);
if(!x9995.valid){
continue;
}
CheckValue<IkReal> x9996 = IKatan2WithCheck(IkReal(((((-1.0)*x9984*x9994))+((cj2*x9988*x9990))+(((-1.0)*x9986*x9988*x9989))+((cj2*cj6*r10*x9983))+(((-1.0)*sj1*x9985*x9991))+(((-1.0)*x9993*x9994))+(((-1.0)*x9983*x9986*x9987)))),((((-1.0)*x9984*x9992))+((sj2*x9988*x9989))+(((-1.0)*r10*x9983*x9991))+((sj2*x9983*x9987))+(((-1.0)*x9992*x9993))+(((-1.0)*cj6*x9985*x9992))+(((-1.0)*sj2*x9988*x9990))),IKFAST_ATAN2_MAGTHRESH);
if(!x9996.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9995.value)))+(x9996.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x9997=IKcos(j4);
IkReal x9998=IKsin(j4);
IkReal x9999=((0.0718)*sj1);
IkReal x10000=((0.02626)*sj0);
IkReal x10001=(cj6*r10);
IkReal x10002=(sj0*sj6);
IkReal x10003=(cj5*r12);
IkReal x10004=((1.0)*cj1);
IkReal x10005=(r01*sj6);
IkReal x10006=(r10*sj5);
IkReal x10007=(cj0*sj6);
IkReal x10008=((0.02626)*cj0);
IkReal x10009=(cj6*r20);
IkReal x10010=((1.0)*cj5);
IkReal x10011=(cj1*sj2);
IkReal x10012=((0.02626)*sj1);
IkReal x10013=((1.0)*sj0);
IkReal x10014=((1.0)*sj1);
IkReal x10015=((0.01834)*cj2);
IkReal x10016=(r00*sj5);
IkReal x10017=((0.0718)*cj1);
IkReal x10018=(cj6*sj0);
IkReal x10019=((1.0)*cj0);
IkReal x10020=((1.0)*sj5);
IkReal x10021=(r21*sj6);
IkReal x10022=(r11*sj5);
IkReal x10023=(cj6*r00);
IkReal x10024=(cj2*x9997);
IkReal x10025=(sj2*x9998);
IkReal x10026=(cj2*x9998);
IkReal x10027=(sj2*x9997);
IkReal x10028=(cj6*r01*sj5);
IkReal x10029=(cj1*x10026);
evalcond[0]=((((-1.0)*x10004*x10027))+(((-1.0)*x10021))+x10029+x10009);
evalcond[1]=(((cj0*x10005))+(((-1.0)*x10019*x10023))+((r11*x10002))+x10024+x10025+(((-1.0)*x10001*x10013)));
evalcond[2]=((((-1.0)*r20*sj6*x10020))+(((-1.0)*x10004*x10025))+(((-1.0)*x10004*x10024))+(((-1.0)*cj6*r21*x10020))+(((-1.0)*r22*x10010)));
evalcond[3]=((((-1.0)*r01*x10002))+((sj1*x10026))+((r11*x10007))+((r00*x10018))+(((-1.0)*x10001*x10019))+(((-1.0)*x10014*x10027)));
evalcond[4]=(((cj0*x10028))+((cj0*cj5*r02))+(((-1.0)*x10027))+((x10018*x10022))+((x10007*x10016))+x10026+((x10002*x10006))+((sj0*x10003)));
evalcond[5]=(((cj0*x10003))+(((-1.0)*x10013*x10028))+((cj0*cj6*x10022))+((x10006*x10007))+(((-1.0)*x10002*x10016))+(((-1.0)*x10014*x10024))+(((-1.0)*x10014*x10025))+(((-1.0)*r02*sj0*x10010)));
evalcond[6]=((((-0.1255)*cj1))+(((-0.02626)*x10021))+(((-0.0001)*sj1))+((x10017*x10024))+(((0.02626)*x10029))+(((-0.02626)*x10011*x9997))+pz+(((0.02626)*x10009))+(((-0.0009)*x10011))+(((0.0718)*x10011*x9998))+(((-1.0)*cj1*x10015)));
evalcond[7]=((-0.001)+((r11*sj6*x10000))+(((-1.0)*x10008*x10023))+(((-0.01834)*sj2))+(((-0.0718)*x10026))+(((0.02626)*x10024))+(((0.02626)*x10025))+(((0.0009)*cj2))+(((-1.0)*px*x10019))+((x10005*x10008))+(((-1.0)*x10000*x10001))+(((-1.0)*py*x10013))+(((0.0718)*x10027)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*sj1*x10015))+((x10025*x9999))+((x10024*x9999))+(((-0.0009)*sj1*sj2))+((x10000*x10023))+(((0.02626)*r11*x10007))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x10000*x10005))+(((-1.0)*x10001*x10008))+((x10012*x10026))+(((-1.0)*x10012*x10027))+(((-1.0)*py*x10019)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10030=(cj1*sj2);
IkReal x10031=(cj2*sj6);
IkReal x10032=(cj1*cj2);
IkReal x10033=(cj6*r20);
IkReal x10034=((1.0)*sj6);
IkReal x10035=(cj0*r01);
IkReal x10036=(cj0*cj6*r00);
IkReal x10037=((1.0)*r11*sj0);
IkReal x10038=(cj6*r10*sj0);
CheckValue<IkReal> x10039 = IKatan2WithCheck(IkReal(((((-1.0)*r11*sj0*x10030*x10034))+((r21*x10031))+((x10030*x10038))+((x10030*x10036))+(((-1.0)*x10030*x10034*x10035))+(((-1.0)*cj2*x10033)))),((((-1.0)*r21*sj2*x10034))+(((-1.0)*cj1*x10031*x10037))+((x10032*x10036))+((x10032*x10038))+((sj2*x10033))+(((-1.0)*cj1*x10031*x10035))),IKFAST_ATAN2_MAGTHRESH);
if(!x10039.valid){
continue;
}
CheckValue<IkReal> x10040=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x10040.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x10039.value)+(((1.5707963267949)*(x10040.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10041=IKcos(j4);
IkReal x10042=IKsin(j4);
IkReal x10043=((0.0718)*sj1);
IkReal x10044=((0.02626)*sj0);
IkReal x10045=(cj6*r10);
IkReal x10046=(sj0*sj6);
IkReal x10047=(cj5*r12);
IkReal x10048=((1.0)*cj1);
IkReal x10049=(r01*sj6);
IkReal x10050=(r10*sj5);
IkReal x10051=(cj0*sj6);
IkReal x10052=((0.02626)*cj0);
IkReal x10053=(cj6*r20);
IkReal x10054=((1.0)*cj5);
IkReal x10055=(cj1*sj2);
IkReal x10056=((0.02626)*sj1);
IkReal x10057=((1.0)*sj0);
IkReal x10058=((1.0)*sj1);
IkReal x10059=((0.01834)*cj2);
IkReal x10060=(r00*sj5);
IkReal x10061=((0.0718)*cj1);
IkReal x10062=(cj6*sj0);
IkReal x10063=((1.0)*cj0);
IkReal x10064=((1.0)*sj5);
IkReal x10065=(r21*sj6);
IkReal x10066=(r11*sj5);
IkReal x10067=(cj6*r00);
IkReal x10068=(cj2*x10041);
IkReal x10069=(sj2*x10042);
IkReal x10070=(cj2*x10042);
IkReal x10071=(sj2*x10041);
IkReal x10072=(cj6*r01*sj5);
IkReal x10073=(cj1*x10070);
evalcond[0]=((((-1.0)*x10048*x10071))+x10073+x10053+(((-1.0)*x10065)));
evalcond[1]=(x10068+x10069+((r11*x10046))+((cj0*x10049))+(((-1.0)*x10045*x10057))+(((-1.0)*x10063*x10067)));
evalcond[2]=((((-1.0)*x10048*x10069))+(((-1.0)*x10048*x10068))+(((-1.0)*r20*sj6*x10064))+(((-1.0)*r22*x10054))+(((-1.0)*cj6*r21*x10064)));
evalcond[3]=((((-1.0)*r01*x10046))+((r00*x10062))+((sj1*x10070))+((r11*x10051))+(((-1.0)*x10045*x10063))+(((-1.0)*x10058*x10071)));
evalcond[4]=(((sj0*x10047))+((cj0*cj5*r02))+((x10062*x10066))+x10070+((cj0*x10072))+((x10051*x10060))+((x10046*x10050))+(((-1.0)*x10071)));
evalcond[5]=((((-1.0)*x10046*x10060))+(((-1.0)*r02*sj0*x10054))+(((-1.0)*x10057*x10072))+((cj0*cj6*x10066))+((x10050*x10051))+((cj0*x10047))+(((-1.0)*x10058*x10068))+(((-1.0)*x10058*x10069)));
evalcond[6]=((((-0.02626)*x10065))+(((0.02626)*x10053))+(((0.02626)*x10073))+(((-0.1255)*cj1))+(((-0.0009)*x10055))+(((-0.0001)*sj1))+(((-0.02626)*x10041*x10055))+pz+((x10061*x10068))+(((-1.0)*cj1*x10059))+(((0.0718)*x10042*x10055)));
evalcond[7]=((-0.001)+(((-1.0)*px*x10063))+(((-1.0)*x10044*x10045))+(((0.02626)*x10068))+(((0.02626)*x10069))+(((-1.0)*py*x10057))+(((-0.01834)*sj2))+(((0.0718)*x10071))+(((0.0009)*cj2))+(((-0.0718)*x10070))+((x10049*x10052))+((r11*sj6*x10044))+(((-1.0)*x10052*x10067)));
evalcond[8]=((((-1.0)*x10044*x10049))+(((-0.1255)*sj1))+(((-1.0)*py*x10063))+((x10044*x10067))+(((-1.0)*x10056*x10071))+((x10043*x10069))+((x10043*x10068))+(((-0.0009)*sj1*sj2))+(((-1.0)*sj1*x10059))+(((0.0001)*cj1))+((px*sj0))+(((0.02626)*r11*x10051))+((x10056*x10070))+(((-1.0)*x10045*x10052)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10074=(cj2*r21);
IkReal x10075=((1.0)*cj6);
IkReal x10076=((1.0)*cj2);
IkReal x10077=(cj5*r22);
IkReal x10078=(r20*sj2);
IkReal x10079=(sj5*sj6);
IkReal x10080=(r21*sj2);
CheckValue<IkReal> x10081=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x10081.valid){
continue;
}
CheckValue<IkReal> x10082 = IKatan2WithCheck(IkReal(((((-1.0)*sj5*x10075*x10080))+(((-1.0)*x10078*x10079))+(((-1.0)*sj2*x10077))+((sj6*x10074))+(((-1.0)*cj2*r20*x10075)))),(((cj6*x10078))+(((-1.0)*r20*x10076*x10079))+(((-1.0)*sj5*x10074*x10075))+(((-1.0)*x10076*x10077))+(((-1.0)*sj6*x10080))),IKFAST_ATAN2_MAGTHRESH);
if(!x10082.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10081.value)))+(x10082.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10083=IKcos(j4);
IkReal x10084=IKsin(j4);
IkReal x10085=((0.0718)*sj1);
IkReal x10086=((0.02626)*sj0);
IkReal x10087=(cj6*r10);
IkReal x10088=(sj0*sj6);
IkReal x10089=(cj5*r12);
IkReal x10090=((1.0)*cj1);
IkReal x10091=(r01*sj6);
IkReal x10092=(r10*sj5);
IkReal x10093=(cj0*sj6);
IkReal x10094=((0.02626)*cj0);
IkReal x10095=(cj6*r20);
IkReal x10096=((1.0)*cj5);
IkReal x10097=(cj1*sj2);
IkReal x10098=((0.02626)*sj1);
IkReal x10099=((1.0)*sj0);
IkReal x10100=((1.0)*sj1);
IkReal x10101=((0.01834)*cj2);
IkReal x10102=(r00*sj5);
IkReal x10103=((0.0718)*cj1);
IkReal x10104=(cj6*sj0);
IkReal x10105=((1.0)*cj0);
IkReal x10106=((1.0)*sj5);
IkReal x10107=(r21*sj6);
IkReal x10108=(r11*sj5);
IkReal x10109=(cj6*r00);
IkReal x10110=(cj2*x10083);
IkReal x10111=(sj2*x10084);
IkReal x10112=(cj2*x10084);
IkReal x10113=(sj2*x10083);
IkReal x10114=(cj6*r01*sj5);
IkReal x10115=(cj1*x10112);
evalcond[0]=((((-1.0)*x10107))+x10115+x10095+(((-1.0)*x10090*x10113)));
evalcond[1]=((((-1.0)*x10105*x10109))+((cj0*x10091))+(((-1.0)*x10087*x10099))+x10110+x10111+((r11*x10088)));
evalcond[2]=((((-1.0)*cj6*r21*x10106))+(((-1.0)*r20*sj6*x10106))+(((-1.0)*x10090*x10111))+(((-1.0)*x10090*x10110))+(((-1.0)*r22*x10096)));
evalcond[3]=(((r00*x10104))+((r11*x10093))+(((-1.0)*x10087*x10105))+(((-1.0)*x10100*x10113))+((sj1*x10112))+(((-1.0)*r01*x10088)));
evalcond[4]=(((cj0*x10114))+(((-1.0)*x10113))+((cj0*cj5*r02))+((sj0*x10089))+x10112+((x10093*x10102))+((x10104*x10108))+((x10088*x10092)));
evalcond[5]=(((cj0*cj6*x10108))+(((-1.0)*r02*sj0*x10096))+(((-1.0)*x10100*x10110))+(((-1.0)*x10100*x10111))+((x10092*x10093))+((cj0*x10089))+(((-1.0)*x10099*x10114))+(((-1.0)*x10088*x10102)));
evalcond[6]=((((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.02626)*x10083*x10097))+(((-0.0009)*x10097))+(((0.02626)*x10115))+(((-0.02626)*x10107))+(((0.0718)*x10084*x10097))+pz+(((-1.0)*cj1*x10101))+(((0.02626)*x10095))+((x10103*x10110)));
evalcond[7]=((-0.001)+((x10091*x10094))+(((0.0718)*x10113))+(((-0.01834)*sj2))+(((-1.0)*px*x10105))+(((-1.0)*x10086*x10087))+(((-1.0)*x10094*x10109))+(((0.02626)*x10110))+(((0.02626)*x10111))+((r11*sj6*x10086))+(((0.0009)*cj2))+(((-1.0)*py*x10099))+(((-0.0718)*x10112)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*py*x10105))+((x10098*x10112))+(((-1.0)*x10087*x10094))+(((-1.0)*x10086*x10091))+(((-0.0009)*sj1*sj2))+((x10085*x10111))+((x10085*x10110))+(((0.02626)*r11*x10093))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x10098*x10113))+(((-1.0)*sj1*x10101))+((x10086*x10109)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10116=(cj0*sj5);
IkReal x10117=(cj5*cj6);
IkReal x10118=((1.0)*sj5);
IkReal x10119=((1.0)*cj0);
IkReal x10120=((1.0)*sj0);
IkReal x10121=(cj5*sj6);
IkReal x10122=(r10*x10121);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r21*x10117))+((r20*x10121))+(((-1.0)*r22*x10118))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*x10120*x10122))+(((-1.0)*sj3))+(((-1.0)*r11*x10117*x10120))+(((-1.0)*r00*x10119*x10121))+((r12*sj0*sj5))+(((-1.0)*r01*x10117*x10119))+((r02*x10116)));
evalcond[3]=(((r00*sj0*x10121))+((r01*sj0*x10117))+((r12*x10116))+(((-1.0)*r11*x10117*x10119))+(((-1.0)*r02*sj0*x10118))+(((-1.0)*x10119*x10122)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
IkReal x10123=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*cj6*r21*x10123))+(((-1.0)*r20*sj6*x10123))+(((-1.0)*cj5*r22))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x10124=(cj5*cj6);
IkReal x10125=((1.0)*sj0);
IkReal x10126=(r21*sj6);
IkReal x10127=(cj0*sj5);
IkReal x10128=((1.0)*r22);
IkReal x10129=(cj6*r20);
IkReal x10130=(cj5*sj6);
IkReal x10131=((1.0)*cj0);
IkReal x10132=((1.0)*sj5);
IkReal x10133=(x10130*x10131);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x10130))+((r21*x10124))+(((-1.0)*sj5*x10128)));
evalcond[2]=(x10129+(((-1.0)*x10126)));
evalcond[3]=((((-1.0)*cj6*r21*x10132))+(((-1.0)*cj5*x10128))+(((-1.0)*r20*sj6*x10132)));
evalcond[4]=((((-1.0)*r11*x10124*x10125))+((r12*sj0*sj5))+((r02*x10127))+(((-1.0)*r00*x10133))+(((-1.0)*r10*x10125*x10130))+(((-1.0)*r01*x10124*x10131)));
evalcond[5]=(((r00*sj0*x10130))+(((-1.0)*r02*sj5*x10125))+(((-1.0)*r10*x10133))+(((-1.0)*r11*x10124*x10131))+((r01*sj0*x10124))+((r12*x10127)));
evalcond[6]=((-0.0001)+(((-0.02626)*x10126))+(((0.02626)*x10129))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10134=(sj0*sj6);
IkReal x10135=(cj0*sj6);
IkReal x10136=(cj6*r00);
IkReal x10137=((1.0)*cj6*r10);
if( IKabs((((r11*x10134))+(((-1.0)*cj0*x10136))+((r01*x10135))+(((-1.0)*sj0*x10137)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x10135))+(((-1.0)*r01*x10134))+(((-1.0)*cj0*x10137))+((sj0*x10136)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x10134))+(((-1.0)*cj0*x10136))+((r01*x10135))+(((-1.0)*sj0*x10137))))+IKsqr((((r11*x10135))+(((-1.0)*r01*x10134))+(((-1.0)*cj0*x10137))+((sj0*x10136))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x10134))+(((-1.0)*cj0*x10136))+((r01*x10135))+(((-1.0)*sj0*x10137))), (((r11*x10135))+(((-1.0)*r01*x10134))+(((-1.0)*cj0*x10137))+((sj0*x10136))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10138=IKcos(j4);
IkReal x10139=IKsin(j4);
IkReal x10140=(cj6*sj0);
IkReal x10141=((0.02626)*r10);
IkReal x10142=(r11*sj6);
IkReal x10143=(r11*sj5);
IkReal x10144=(sj0*sj6);
IkReal x10145=(r10*sj5);
IkReal x10146=((0.02626)*r01);
IkReal x10147=(cj5*r12);
IkReal x10148=(cj0*cj6);
IkReal x10149=((1.0)*sj0);
IkReal x10150=(cj5*r02);
IkReal x10151=(cj0*sj6);
IkReal x10152=((1.0)*r10);
IkReal x10153=((1.0)*r01);
IkReal x10154=(r00*sj5);
IkReal x10155=((1.0)*cj0);
IkReal x10156=((0.02626)*r00);
IkReal x10157=((1.0)*x10139);
evalcond[0]=(((sj0*x10142))+(((-1.0)*r00*x10148))+(((-1.0)*x10157))+((r01*x10151))+(((-1.0)*x10140*x10152)));
evalcond[1]=((((-1.0)*x10148*x10152))+(((-1.0)*x10144*x10153))+(((-1.0)*x10138))+((r00*x10140))+((cj0*x10142)));
evalcond[2]=(((sj0*x10147))+((x10151*x10154))+((r01*sj5*x10148))+x10138+((x10144*x10145))+((cj0*x10150))+((x10140*x10143)));
evalcond[3]=((((-1.0)*x10144*x10154))+(((-1.0)*x10149*x10150))+(((-1.0)*sj5*x10140*x10153))+((x10143*x10148))+(((-1.0)*x10157))+((x10145*x10151))+((cj0*x10147)));
evalcond[4]=((-0.1264)+(((-0.02626)*x10138))+(((-1.0)*py*x10155))+(((0.0718)*x10139))+(((0.02626)*cj0*x10142))+(((-1.0)*x10144*x10146))+((px*sj0))+(((-1.0)*x10141*x10148))+((x10140*x10156)));
evalcond[5]=((-0.21426)+(((-0.02626)*x10139))+(((-1.0)*x10148*x10156))+(((-0.0718)*x10138))+(((-1.0)*py*x10149))+(((-1.0)*px*x10155))+(((0.02626)*sj0*x10142))+((x10146*x10151))+(((-1.0)*x10140*x10141)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10158=(cj5*cj6);
IkReal x10159=((1.0)*sj0);
IkReal x10160=(r21*sj6);
IkReal x10161=(cj0*sj5);
IkReal x10162=((1.0)*r22);
IkReal x10163=(cj6*r20);
IkReal x10164=(cj5*sj6);
IkReal x10165=((1.0)*cj0);
IkReal x10166=((1.0)*sj5);
IkReal x10167=(x10164*x10165);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x10162))+((r21*x10158))+((r20*x10164)));
evalcond[2]=((((-1.0)*x10160))+x10163);
evalcond[3]=((((-1.0)*cj5*x10162))+(((-1.0)*r20*sj6*x10166))+(((-1.0)*cj6*r21*x10166)));
evalcond[4]=((((-1.0)*r00*x10167))+((r12*sj0*sj5))+((r02*x10161))+(((-1.0)*r01*x10158*x10165))+(((-1.0)*r10*x10159*x10164))+(((-1.0)*r11*x10158*x10159)));
evalcond[5]=(((r01*sj0*x10158))+(((-1.0)*r10*x10167))+(((-1.0)*r11*x10158*x10165))+((r12*x10161))+((r00*sj0*x10164))+(((-1.0)*r02*sj5*x10159)));
evalcond[6]=((-0.0001)+pz+(((-0.02626)*x10160))+(((0.02626)*x10163)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10168=(cj0*cj6);
IkReal x10169=(cj6*sj0);
IkReal x10170=(cj0*sj6);
IkReal x10171=((1.0)*sj0*sj6);
if( IKabs((((r10*x10169))+(((-1.0)*r01*x10170))+((r00*x10168))+(((-1.0)*r11*x10171)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x10170))+((r00*x10169))+(((-1.0)*r10*x10168))+(((-1.0)*r01*x10171)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x10169))+(((-1.0)*r01*x10170))+((r00*x10168))+(((-1.0)*r11*x10171))))+IKsqr((((r11*x10170))+((r00*x10169))+(((-1.0)*r10*x10168))+(((-1.0)*r01*x10171))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x10169))+(((-1.0)*r01*x10170))+((r00*x10168))+(((-1.0)*r11*x10171))), (((r11*x10170))+((r00*x10169))+(((-1.0)*r10*x10168))+(((-1.0)*r01*x10171))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10172=IKsin(j4);
IkReal x10173=IKcos(j4);
IkReal x10174=(cj6*sj0);
IkReal x10175=((0.02626)*r10);
IkReal x10176=(r11*sj6);
IkReal x10177=(r11*sj5);
IkReal x10178=(sj0*sj6);
IkReal x10179=(r10*sj5);
IkReal x10180=((0.02626)*r01);
IkReal x10181=(cj5*r12);
IkReal x10182=(cj0*cj6);
IkReal x10183=((1.0)*sj0);
IkReal x10184=(cj5*r02);
IkReal x10185=(cj0*sj6);
IkReal x10186=((1.0)*r10);
IkReal x10187=((1.0)*r01);
IkReal x10188=(r00*sj5);
IkReal x10189=((1.0)*cj0);
IkReal x10190=((0.02626)*r00);
IkReal x10191=((1.0)*x10173);
evalcond[0]=((((-1.0)*x10174*x10186))+((sj0*x10176))+(((-1.0)*r00*x10182))+x10172+((r01*x10185)));
evalcond[1]=((((-1.0)*x10178*x10187))+(((-1.0)*x10182*x10186))+(((-1.0)*x10191))+((r00*x10174))+((cj0*x10176)));
evalcond[2]=(((sj0*x10181))+(((-1.0)*x10191))+((r01*sj5*x10182))+((cj0*x10184))+((x10185*x10188))+((x10174*x10177))+((x10178*x10179)));
evalcond[3]=((((-1.0)*x10178*x10188))+(((-1.0)*x10183*x10184))+(((-1.0)*x10172))+((x10177*x10182))+((cj0*x10181))+((x10179*x10185))+(((-1.0)*sj5*x10174*x10187)));
evalcond[4]=((-0.1264)+(((-1.0)*x10178*x10180))+(((0.02626)*cj0*x10176))+(((-1.0)*py*x10189))+((x10174*x10190))+(((-1.0)*x10175*x10182))+((px*sj0))+(((-0.02626)*x10173))+(((0.0718)*x10172)));
evalcond[5]=((-0.01934)+(((-1.0)*x10174*x10175))+(((0.02626)*x10172))+(((-1.0)*x10182*x10190))+(((-1.0)*py*x10183))+(((0.02626)*sj0*x10176))+(((0.0718)*x10173))+((x10180*x10185))+(((-1.0)*px*x10189)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10192=((1.0)*cj6);
CheckValue<IkReal> x10193=IKPowWithIntegerCheck(sj3,-1);
if(!x10193.valid){
continue;
}
if( IKabs(((x10193.value)*((((r21*sj6))+(((-1.0)*r20*x10192)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+(((-1.0)*cj0*r10*x10192))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x10193.value)*((((r21*sj6))+(((-1.0)*r20*x10192))))))+IKsqr((((cj6*r00*sj0))+(((-1.0)*cj0*r10*x10192))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x10193.value)*((((r21*sj6))+(((-1.0)*r20*x10192))))), (((cj6*r00*sj0))+(((-1.0)*cj0*r10*x10192))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10194=IKcos(j4);
IkReal x10195=IKsin(j4);
IkReal x10196=(cj6*sj0);
IkReal x10197=((0.02626)*r10);
IkReal x10198=(sj0*sj6);
IkReal x10199=(r11*sj5);
IkReal x10200=(r10*sj5);
IkReal x10201=((0.02626)*r01);
IkReal x10202=(cj0*sj6);
IkReal x10203=(cj0*cj6);
IkReal x10204=(r21*sj6);
IkReal x10205=((1.0)*cj5);
IkReal x10206=(cj6*r20);
IkReal x10207=((1.0)*r10);
IkReal x10208=((1.0)*r01);
IkReal x10209=(r00*sj5);
IkReal x10210=((1.0)*py);
IkReal x10211=(cj5*r12);
IkReal x10212=((1.0)*sj5);
IkReal x10213=((0.02626)*r00);
IkReal x10214=((0.02626)*r11);
IkReal x10215=(cj3*x10195);
IkReal x10216=(sj3*x10195);
IkReal x10217=(cj3*x10194);
IkReal x10218=((1.0)*x10194);
evalcond[0]=((((-1.0)*x10204))+x10216+x10206);
evalcond[1]=((((-1.0)*r22*x10205))+(((-1.0)*sj3*x10218))+(((-1.0)*cj6*r21*x10212))+(((-1.0)*r20*sj6*x10212)));
evalcond[2]=((((-1.0)*x10218))+(((-1.0)*x10203*x10207))+((r00*x10196))+(((-1.0)*x10198*x10208))+((r11*x10202)));
evalcond[3]=((((-1.0)*x10196*x10207))+((r11*x10198))+((r01*x10202))+(((-1.0)*r00*x10203))+(((-1.0)*x10215)));
evalcond[4]=((-0.0001)+(((0.02626)*x10216))+(((-0.02626)*x10204))+pz+(((0.09746)*sj3))+(((0.02626)*x10206))+(((0.0718)*sj3*x10194)));
evalcond[5]=(((x10196*x10199))+((sj0*x10211))+((cj0*cj5*r02))+((x10202*x10209))+((r01*sj5*x10203))+((x10198*x10200))+x10217);
evalcond[6]=(((x10200*x10202))+(((-1.0)*x10198*x10209))+(((-1.0)*r02*sj0*x10205))+((x10199*x10203))+(((-1.0)*x10195))+((cj0*x10211))+(((-1.0)*sj5*x10196*x10208)));
evalcond[7]=((-0.1264)+(((-1.0)*x10197*x10203))+((x10202*x10214))+(((-1.0)*cj0*x10210))+((x10196*x10213))+(((0.0718)*x10195))+((px*sj0))+(((-1.0)*x10198*x10201))+(((-0.02626)*x10194)));
evalcond[8]=((-0.1168)+((x10198*x10214))+(((-0.02626)*x10215))+((x10201*x10202))+(((-1.0)*x10203*x10213))+(((-0.0718)*x10217))+(((-1.0)*sj0*x10210))+(((-0.09746)*cj3))+(((-1.0)*x10196*x10197))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10219=((1.0)*sj5);
CheckValue<IkReal> x10220=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x10220.valid){
continue;
}
CheckValue<IkReal> x10221 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x10219))+(((-1.0)*r20*sj6*x10219))),IKFAST_ATAN2_MAGTHRESH);
if(!x10221.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10220.value)))+(x10221.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10222=IKcos(j4);
IkReal x10223=IKsin(j4);
IkReal x10224=(cj6*sj0);
IkReal x10225=((0.02626)*r10);
IkReal x10226=(sj0*sj6);
IkReal x10227=(r11*sj5);
IkReal x10228=(r10*sj5);
IkReal x10229=((0.02626)*r01);
IkReal x10230=(cj0*sj6);
IkReal x10231=(cj0*cj6);
IkReal x10232=(r21*sj6);
IkReal x10233=((1.0)*cj5);
IkReal x10234=(cj6*r20);
IkReal x10235=((1.0)*r10);
IkReal x10236=((1.0)*r01);
IkReal x10237=(r00*sj5);
IkReal x10238=((1.0)*py);
IkReal x10239=(cj5*r12);
IkReal x10240=((1.0)*sj5);
IkReal x10241=((0.02626)*r00);
IkReal x10242=((0.02626)*r11);
IkReal x10243=(cj3*x10223);
IkReal x10244=(sj3*x10223);
IkReal x10245=(cj3*x10222);
IkReal x10246=((1.0)*x10222);
evalcond[0]=(x10234+x10244+(((-1.0)*x10232)));
evalcond[1]=((((-1.0)*cj6*r21*x10240))+(((-1.0)*r20*sj6*x10240))+(((-1.0)*r22*x10233))+(((-1.0)*sj3*x10246)));
evalcond[2]=((((-1.0)*x10226*x10236))+(((-1.0)*x10246))+((r00*x10224))+((r11*x10230))+(((-1.0)*x10231*x10235)));
evalcond[3]=((((-1.0)*x10224*x10235))+((r11*x10226))+((r01*x10230))+(((-1.0)*x10243))+(((-1.0)*r00*x10231)));
evalcond[4]=((-0.0001)+(((-0.02626)*x10232))+(((0.0718)*sj3*x10222))+(((0.02626)*x10244))+(((0.02626)*x10234))+pz+(((0.09746)*sj3)));
evalcond[5]=(((sj0*x10239))+((cj0*cj5*r02))+((x10230*x10237))+x10245+((x10224*x10227))+((r01*sj5*x10231))+((x10226*x10228)));
evalcond[6]=((((-1.0)*sj5*x10224*x10236))+(((-1.0)*x10226*x10237))+((x10228*x10230))+(((-1.0)*r02*sj0*x10233))+(((-1.0)*x10223))+((x10227*x10231))+((cj0*x10239)));
evalcond[7]=((-0.1264)+(((0.0718)*x10223))+(((-1.0)*x10226*x10229))+(((-1.0)*x10225*x10231))+(((-0.02626)*x10222))+((x10230*x10242))+(((-1.0)*cj0*x10238))+((px*sj0))+((x10224*x10241)));
evalcond[8]=((-0.1168)+(((-1.0)*x10224*x10225))+(((-1.0)*x10231*x10241))+(((-0.02626)*x10243))+(((-0.0718)*x10245))+(((-0.09746)*cj3))+(((-1.0)*sj0*x10238))+((x10229*x10230))+(((-1.0)*cj0*px))+((x10226*x10242)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10247=(cj0*sj5);
IkReal x10248=(cj5*cj6);
IkReal x10249=((1.0)*sj5);
IkReal x10250=((1.0)*cj0);
IkReal x10251=((1.0)*sj0);
IkReal x10252=(cj5*sj6);
IkReal x10253=(r10*x10252);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(cj3+((r21*x10248))+(((-1.0)*r22*x10249))+((r20*x10252)));
evalcond[2]=((((-1.0)*x10251*x10253))+(((-1.0)*sj3))+((r02*x10247))+(((-1.0)*r11*x10248*x10251))+((r12*sj0*sj5))+(((-1.0)*r00*x10250*x10252))+(((-1.0)*r01*x10248*x10250)));
evalcond[3]=(((r00*sj0*x10252))+((r01*sj0*x10248))+(((-1.0)*r11*x10248*x10250))+(((-1.0)*r02*sj0*x10249))+(((-1.0)*x10250*x10253))+((r12*x10247)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x10254=(cj5*cj6);
IkReal x10255=((1.0)*sj0);
IkReal x10256=(r21*sj6);
IkReal x10257=(cj0*sj5);
IkReal x10258=((1.0)*r22);
IkReal x10259=(cj6*r20);
IkReal x10260=(cj5*sj6);
IkReal x10261=((1.0)*cj0);
IkReal x10262=((1.0)*sj5);
IkReal x10263=(x10260*x10261);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x10258))+((r20*x10260))+((r21*x10254)));
evalcond[2]=(x10259+(((-1.0)*x10256)));
evalcond[3]=((((-1.0)*cj6*r21*x10262))+(((-1.0)*cj5*x10258))+(((-1.0)*r20*sj6*x10262)));
evalcond[4]=(((r02*x10257))+((r12*sj0*sj5))+(((-1.0)*r11*x10254*x10255))+(((-1.0)*r01*x10254*x10261))+(((-1.0)*r00*x10263))+(((-1.0)*r10*x10255*x10260)));
evalcond[5]=(((r12*x10257))+(((-1.0)*r10*x10263))+((r01*sj0*x10254))+(((-1.0)*r02*sj5*x10255))+((r00*sj0*x10260))+(((-1.0)*r11*x10254*x10261)));
evalcond[6]=((0.0001)+(((-0.02626)*x10256))+(((0.02626)*x10259))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10264=(sj0*sj6);
IkReal x10265=(cj6*r10);
IkReal x10266=((1.0)*sj0);
IkReal x10267=(cj6*r00);
IkReal x10268=(cj0*sj6);
if( IKabs((((r11*x10264))+(((-1.0)*cj0*x10267))+((r01*x10268))+(((-1.0)*x10265*x10266)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x10268))+(((-1.0)*x10266*x10267))+((r01*x10264))+((cj0*x10265)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x10264))+(((-1.0)*cj0*x10267))+((r01*x10268))+(((-1.0)*x10265*x10266))))+IKsqr(((((-1.0)*r11*x10268))+(((-1.0)*x10266*x10267))+((r01*x10264))+((cj0*x10265))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x10264))+(((-1.0)*cj0*x10267))+((r01*x10268))+(((-1.0)*x10265*x10266))), ((((-1.0)*r11*x10268))+(((-1.0)*x10266*x10267))+((r01*x10264))+((cj0*x10265))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10269=IKcos(j4);
IkReal x10270=IKsin(j4);
IkReal x10271=(cj6*sj0);
IkReal x10272=((0.02626)*r10);
IkReal x10273=(r11*sj6);
IkReal x10274=(r11*sj5);
IkReal x10275=(sj0*sj6);
IkReal x10276=(r10*sj5);
IkReal x10277=((0.02626)*r01);
IkReal x10278=(cj5*r12);
IkReal x10279=(cj0*cj6);
IkReal x10280=((1.0)*sj0);
IkReal x10281=(cj5*r02);
IkReal x10282=(cj0*sj6);
IkReal x10283=((1.0)*r10);
IkReal x10284=((1.0)*r01);
IkReal x10285=(r00*sj5);
IkReal x10286=((1.0)*cj0);
IkReal x10287=((0.02626)*r00);
evalcond[0]=((((-1.0)*x10275*x10284))+((r00*x10271))+(((-1.0)*x10279*x10283))+x10269+((cj0*x10273)));
evalcond[1]=(((sj0*x10273))+((r01*x10282))+(((-1.0)*x10271*x10283))+(((-1.0)*r00*x10279))+(((-1.0)*x10270)));
evalcond[2]=(((sj0*x10278))+((x10271*x10274))+((x10275*x10276))+x10269+((cj0*x10281))+((r01*sj5*x10279))+((x10282*x10285)));
evalcond[3]=((((-1.0)*x10275*x10285))+(((-1.0)*sj5*x10271*x10284))+((x10274*x10279))+x10270+((cj0*x10278))+((x10276*x10282))+(((-1.0)*x10280*x10281)));
evalcond[4]=((0.1264)+(((-1.0)*py*x10286))+(((0.02626)*x10269))+(((0.02626)*cj0*x10273))+(((-1.0)*x10272*x10279))+(((-0.0718)*x10270))+((x10271*x10287))+((px*sj0))+(((-1.0)*x10275*x10277)));
evalcond[5]=((-0.21426)+(((-0.02626)*x10270))+(((-1.0)*py*x10280))+(((-1.0)*px*x10286))+(((-1.0)*x10279*x10287))+(((0.02626)*sj0*x10273))+(((-0.0718)*x10269))+((x10277*x10282))+(((-1.0)*x10271*x10272)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10288=(cj5*cj6);
IkReal x10289=((1.0)*sj0);
IkReal x10290=(r21*sj6);
IkReal x10291=(cj0*sj5);
IkReal x10292=((1.0)*r22);
IkReal x10293=(cj6*r20);
IkReal x10294=(cj5*sj6);
IkReal x10295=((1.0)*cj0);
IkReal x10296=((1.0)*sj5);
IkReal x10297=(x10294*x10295);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x10294))+((r21*x10288))+(((-1.0)*sj5*x10292)));
evalcond[2]=((((-1.0)*x10290))+x10293);
evalcond[3]=((((-1.0)*r20*sj6*x10296))+(((-1.0)*cj5*x10292))+(((-1.0)*cj6*r21*x10296)));
evalcond[4]=((((-1.0)*r01*x10288*x10295))+(((-1.0)*r11*x10288*x10289))+((r12*sj0*sj5))+(((-1.0)*r10*x10289*x10294))+(((-1.0)*r00*x10297))+((r02*x10291)));
evalcond[5]=(((r00*sj0*x10294))+(((-1.0)*r02*sj5*x10289))+((r12*x10291))+(((-1.0)*r10*x10297))+((r01*sj0*x10288))+(((-1.0)*r11*x10288*x10295)));
evalcond[6]=((0.0001)+(((0.02626)*x10293))+pz+(((-0.02626)*x10290)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10298=(cj0*cj6);
IkReal x10299=(sj0*sj6);
IkReal x10300=((1.0)*r11);
IkReal x10301=(cj6*sj0);
IkReal x10302=(cj0*sj6);
if( IKabs((((r10*x10301))+(((-1.0)*r01*x10302))+(((-1.0)*x10299*x10300))+((r00*x10298)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x10300*x10302))+((r10*x10298))+(((-1.0)*r00*x10301))+((r01*x10299)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x10301))+(((-1.0)*r01*x10302))+(((-1.0)*x10299*x10300))+((r00*x10298))))+IKsqr(((((-1.0)*x10300*x10302))+((r10*x10298))+(((-1.0)*r00*x10301))+((r01*x10299))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x10301))+(((-1.0)*r01*x10302))+(((-1.0)*x10299*x10300))+((r00*x10298))), ((((-1.0)*x10300*x10302))+((r10*x10298))+(((-1.0)*r00*x10301))+((r01*x10299))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10303=IKcos(j4);
IkReal x10304=IKsin(j4);
IkReal x10305=(cj6*sj0);
IkReal x10306=((0.02626)*r10);
IkReal x10307=(r11*sj6);
IkReal x10308=(r11*sj5);
IkReal x10309=(sj0*sj6);
IkReal x10310=(r10*sj5);
IkReal x10311=((0.02626)*r01);
IkReal x10312=(cj5*r12);
IkReal x10313=(cj0*cj6);
IkReal x10314=((1.0)*sj0);
IkReal x10315=(cj5*r02);
IkReal x10316=(cj0*sj6);
IkReal x10317=((1.0)*r10);
IkReal x10318=((1.0)*r01);
IkReal x10319=(r00*sj5);
IkReal x10320=((1.0)*cj0);
IkReal x10321=((0.02626)*r00);
evalcond[0]=(((r01*x10316))+(((-1.0)*r00*x10313))+((sj0*x10307))+x10304+(((-1.0)*x10305*x10317)));
evalcond[1]=((((-1.0)*x10313*x10317))+((cj0*x10307))+((r00*x10305))+(((-1.0)*x10309*x10318))+x10303);
evalcond[2]=(((sj0*x10312))+((x10305*x10308))+(((-1.0)*x10303))+((x10309*x10310))+((x10316*x10319))+((cj0*x10315))+((r01*sj5*x10313)));
evalcond[3]=((((-1.0)*sj5*x10305*x10318))+(((-1.0)*x10314*x10315))+x10304+(((-1.0)*x10309*x10319))+((x10308*x10313))+((x10310*x10316))+((cj0*x10312)));
evalcond[4]=((0.1264)+((x10305*x10321))+(((-1.0)*x10306*x10313))+(((0.02626)*cj0*x10307))+(((-1.0)*x10309*x10311))+(((0.02626)*x10303))+((px*sj0))+(((-1.0)*py*x10320))+(((-0.0718)*x10304)));
evalcond[5]=((-0.01934)+(((-1.0)*px*x10320))+(((-1.0)*x10305*x10306))+(((-1.0)*py*x10314))+(((0.02626)*sj0*x10307))+((x10311*x10316))+(((0.02626)*x10304))+(((0.0718)*x10303))+(((-1.0)*x10313*x10321)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10322=((1.0)*sj6);
CheckValue<IkReal> x10323=IKPowWithIntegerCheck(sj3,-1);
if(!x10323.valid){
continue;
}
if( IKabs(((x10323.value)*((((cj6*r20))+(((-1.0)*r21*x10322)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*r11*x10322))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x10323.value)*((((cj6*r20))+(((-1.0)*r21*x10322))))))+IKsqr(((((-1.0)*cj0*r11*x10322))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x10323.value)*((((cj6*r20))+(((-1.0)*r21*x10322))))), ((((-1.0)*cj0*r11*x10322))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10324=IKcos(j4);
IkReal x10325=IKsin(j4);
IkReal x10326=(cj6*sj0);
IkReal x10327=((0.02626)*r10);
IkReal x10328=(sj0*sj6);
IkReal x10329=(r11*sj5);
IkReal x10330=(r10*sj5);
IkReal x10331=(cj0*cj6);
IkReal x10332=((0.02626)*r01);
IkReal x10333=(cj0*sj6);
IkReal x10334=(r21*sj6);
IkReal x10335=((1.0)*cj5);
IkReal x10336=(cj6*r20);
IkReal x10337=((1.0)*r10);
IkReal x10338=((1.0)*r01);
IkReal x10339=(r00*sj5);
IkReal x10340=((1.0)*py);
IkReal x10341=(cj5*r12);
IkReal x10342=((1.0)*sj5);
IkReal x10343=((0.02626)*r00);
IkReal x10344=((0.02626)*r11);
IkReal x10345=((1.0)*x10325);
IkReal x10346=((0.02626)*x10325);
IkReal x10347=(sj3*x10324);
IkReal x10348=(cj3*x10324);
evalcond[0]=((((-1.0)*x10334))+(((-1.0)*sj3*x10345))+x10336);
evalcond[1]=((((-1.0)*r22*x10335))+(((-1.0)*cj6*r21*x10342))+(((-1.0)*r20*sj6*x10342))+x10347);
evalcond[2]=((((-1.0)*x10328*x10338))+((r00*x10326))+x10324+(((-1.0)*x10331*x10337))+((r11*x10333)));
evalcond[3]=(((r01*x10333))+(((-1.0)*r00*x10331))+((r11*x10328))+(((-1.0)*x10326*x10337))+(((-1.0)*cj3*x10345)));
evalcond[4]=((0.0001)+(((-0.0718)*x10347))+(((-1.0)*sj3*x10346))+pz+(((0.02626)*x10336))+(((-0.09746)*sj3))+(((-0.02626)*x10334)));
evalcond[5]=(((x10328*x10330))+((cj0*cj5*r02))+((sj0*x10341))+((x10326*x10329))+((r01*sj5*x10331))+x10348+((x10333*x10339)));
evalcond[6]=((((-1.0)*r02*sj0*x10335))+((x10329*x10331))+((x10330*x10333))+x10325+(((-1.0)*sj5*x10326*x10338))+((cj0*x10341))+(((-1.0)*x10328*x10339)));
evalcond[7]=((0.1264)+(((-1.0)*x10328*x10332))+(((-0.0718)*x10325))+(((-1.0)*cj0*x10340))+((x10333*x10344))+((px*sj0))+(((0.02626)*x10324))+((x10326*x10343))+(((-1.0)*x10327*x10331)));
evalcond[8]=((-0.1168)+(((-1.0)*x10331*x10343))+(((-0.0718)*x10348))+((x10328*x10344))+(((-0.09746)*cj3))+((x10332*x10333))+(((-1.0)*x10326*x10327))+(((-1.0)*sj0*x10340))+(((-1.0)*cj0*px))+(((-1.0)*cj3*x10346)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x10349=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x10349.valid){
continue;
}
CheckValue<IkReal> x10350 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x10350.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10349.value)))+(x10350.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10351=IKcos(j4);
IkReal x10352=IKsin(j4);
IkReal x10353=(cj6*sj0);
IkReal x10354=((0.02626)*r10);
IkReal x10355=(sj0*sj6);
IkReal x10356=(r11*sj5);
IkReal x10357=(r10*sj5);
IkReal x10358=(cj0*cj6);
IkReal x10359=((0.02626)*r01);
IkReal x10360=(cj0*sj6);
IkReal x10361=(r21*sj6);
IkReal x10362=((1.0)*cj5);
IkReal x10363=(cj6*r20);
IkReal x10364=((1.0)*r10);
IkReal x10365=((1.0)*r01);
IkReal x10366=(r00*sj5);
IkReal x10367=((1.0)*py);
IkReal x10368=(cj5*r12);
IkReal x10369=((1.0)*sj5);
IkReal x10370=((0.02626)*r00);
IkReal x10371=((0.02626)*r11);
IkReal x10372=((1.0)*x10352);
IkReal x10373=((0.02626)*x10352);
IkReal x10374=(sj3*x10351);
IkReal x10375=(cj3*x10351);
evalcond[0]=((((-1.0)*x10361))+x10363+(((-1.0)*sj3*x10372)));
evalcond[1]=((((-1.0)*r20*sj6*x10369))+x10374+(((-1.0)*cj6*r21*x10369))+(((-1.0)*r22*x10362)));
evalcond[2]=((((-1.0)*x10355*x10365))+((r00*x10353))+(((-1.0)*x10358*x10364))+x10351+((r11*x10360)));
evalcond[3]=((((-1.0)*cj3*x10372))+((r01*x10360))+(((-1.0)*r00*x10358))+((r11*x10355))+(((-1.0)*x10353*x10364)));
evalcond[4]=((0.0001)+(((0.02626)*x10363))+(((-0.0718)*x10374))+(((-0.02626)*x10361))+pz+(((-0.09746)*sj3))+(((-1.0)*sj3*x10373)));
evalcond[5]=(((cj0*cj5*r02))+((x10355*x10357))+((x10353*x10356))+((sj0*x10368))+x10375+((r01*sj5*x10358))+((x10360*x10366)));
evalcond[6]=(x10352+(((-1.0)*sj5*x10353*x10365))+((x10357*x10360))+(((-1.0)*r02*sj0*x10362))+((cj0*x10368))+((x10356*x10358))+(((-1.0)*x10355*x10366)));
evalcond[7]=((0.1264)+(((-1.0)*cj0*x10367))+((x10353*x10370))+(((-0.0718)*x10352))+(((0.02626)*x10351))+(((-1.0)*x10354*x10358))+(((-1.0)*x10355*x10359))+((px*sj0))+((x10360*x10371)));
evalcond[8]=((-0.1168)+(((-1.0)*cj3*x10373))+(((-1.0)*x10358*x10370))+(((-1.0)*sj0*x10367))+(((-0.0718)*x10375))+((x10355*x10371))+(((-0.09746)*cj3))+((x10359*x10360))+(((-1.0)*x10353*x10354))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10376=(cj5*cj6);
IkReal x10377=(r11*sj0);
IkReal x10378=(cj6*sj5);
IkReal x10379=((1.0)*cj0);
IkReal x10380=(r10*sj6);
IkReal x10381=(sj0*sj5);
IkReal x10382=(r00*sj6);
IkReal x10383=(cj0*sj5);
IkReal x10384=((0.02626)*cj0);
IkReal x10385=(r01*sj6);
IkReal x10386=((1.0)*sj0);
IkReal x10387=(cj6*r10);
IkReal x10388=(cj5*sj0);
IkReal x10389=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959))))));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x10376)));
evalcond[2]=(((sj6*x10377))+(((-1.0)*x10386*x10387))+(((-1.0)*x10379*x10389))+((cj0*x10385)));
evalcond[3]=((-1.0)+((r12*x10381))+(((-1.0)*cj5*x10380*x10386))+(((-1.0)*cj5*x10379*x10382))+((r02*x10383))+(((-1.0)*x10376*x10377))+(((-1.0)*r01*x10376*x10379)));
evalcond[4]=(((x10377*x10378))+((r12*x10388))+((cj0*cj5*r02))+((cj0*r01*x10378))+((x10380*x10381))+((x10382*x10383)));
evalcond[5]=(((r12*x10383))+(((-1.0)*r11*x10376*x10379))+(((-1.0)*cj5*x10379*x10380))+((r01*sj0*x10376))+((x10382*x10388))+(((-1.0)*r02*x10381)));
evalcond[6]=((-0.1168)+(((-1.0)*px*x10379))+(((0.02626)*sj6*x10377))+(((-1.0)*x10384*x10389))+((x10384*x10385))+(((-1.0)*py*x10386))+(((-0.02626)*sj0*x10387)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10390=(cj1*r20);
IkReal x10391=((1.0)*sj6);
IkReal x10392=(r20*sj1);
IkReal x10393=((1.0)*cj5*r22);
IkReal x10394=((1.0)*cj6*r21*sj5);
if( IKabs((((r21*sj1*sj6))+(((-1.0)*cj6*x10392))+(((-1.0)*sj5*x10390*x10391))+(((-1.0)*cj1*x10394))+(((-1.0)*cj1*x10393)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*x10390))+(((-1.0)*sj5*x10391*x10392))+(((-1.0)*cj1*r21*x10391))+(((-1.0)*sj1*x10394))+(((-1.0)*sj1*x10393)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r21*sj1*sj6))+(((-1.0)*cj6*x10392))+(((-1.0)*sj5*x10390*x10391))+(((-1.0)*cj1*x10394))+(((-1.0)*cj1*x10393))))+IKsqr((((cj6*x10390))+(((-1.0)*sj5*x10391*x10392))+(((-1.0)*cj1*r21*x10391))+(((-1.0)*sj1*x10394))+(((-1.0)*sj1*x10393))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r21*sj1*sj6))+(((-1.0)*cj6*x10392))+(((-1.0)*sj5*x10390*x10391))+(((-1.0)*cj1*x10394))+(((-1.0)*cj1*x10393))), (((cj6*x10390))+(((-1.0)*sj5*x10391*x10392))+(((-1.0)*cj1*r21*x10391))+(((-1.0)*sj1*x10394))+(((-1.0)*sj1*x10393))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10395=IKcos(j4);
IkReal x10396=IKsin(j4);
IkReal x10397=((1.0)*cj1);
IkReal x10398=((0.02626)*sj6);
IkReal x10399=(r01*sj0);
IkReal x10400=(cj0*sj6);
IkReal x10401=((0.02626)*cj6);
IkReal x10402=(cj0*r10);
IkReal x10403=((1.0)*cj5);
IkReal x10404=((1.0)*cj6);
IkReal x10405=((1.0)*sj6);
IkReal x10406=(r00*sj0);
IkReal x10407=(cj0*r11);
IkReal x10408=(sj1*x10395);
IkReal x10409=(cj1*x10396);
IkReal x10410=(sj1*x10396);
IkReal x10411=(cj1*x10395);
IkReal x10412=((1.0)*x10408);
IkReal x10413=(x10396*x10397);
IkReal x10414=(x10413+x10412);
evalcond[0]=((((-1.0)*x10395*x10397))+(((-1.0)*r21*x10405))+((cj6*r20))+x10410);
evalcond[1]=((((-1.0)*r22*x10403))+(((-1.0)*x10414))+(((-1.0)*r20*sj5*x10405))+(((-1.0)*r21*sj5*x10404)));
evalcond[2]=((((-1.0)*x10402*x10404))+((cj6*x10406))+(((-1.0)*x10414))+((r11*x10400))+(((-1.0)*x10399*x10405)));
evalcond[3]=((((0.09736)*sj1))+(((-0.1264)*cj1))+(((-1.0)*r21*x10398))+pz+((r20*x10401))+(((0.02626)*x10410))+(((-0.02626)*x10411))+(((0.0718)*x10408))+(((0.0718)*x10409)));
evalcond[4]=((((-1.0)*sj5*x10405*x10406))+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x10403))+(((-1.0)*sj5*x10399*x10404))+((r10*sj5*x10400))+x10411+(((-1.0)*x10410))+((cj6*sj5*x10407)));
evalcond[5]=((((-1.0)*x10398*x10399))+(((0.0718)*x10410))+((x10401*x10406))+(((-0.1264)*sj1))+(((-0.09736)*cj1))+(((-0.0718)*x10411))+((x10398*x10407))+(((-1.0)*x10401*x10402))+(((-0.02626)*x10409))+(((-0.02626)*x10408))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10415=(cj5*cj6);
IkReal x10416=(r11*sj0);
IkReal x10417=(cj6*sj5);
IkReal x10418=((1.0)*cj0);
IkReal x10419=(r10*sj6);
IkReal x10420=(sj0*sj5);
IkReal x10421=(r00*sj6);
IkReal x10422=(cj0*sj5);
IkReal x10423=((0.02626)*cj0);
IkReal x10424=(r01*sj6);
IkReal x10425=((1.0)*sj0);
IkReal x10426=(cj6*r10);
IkReal x10427=(cj5*sj0);
IkReal x10428=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959))))));
evalcond[1]=(((r21*x10415))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x10424))+(((-1.0)*x10418*x10428))+((sj6*x10416))+(((-1.0)*x10425*x10426)));
evalcond[3]=((1.0)+(((-1.0)*r01*x10415*x10418))+(((-1.0)*cj5*x10419*x10425))+((r12*x10420))+((r02*x10422))+(((-1.0)*cj5*x10418*x10421))+(((-1.0)*x10415*x10416)));
evalcond[4]=(((x10416*x10417))+((cj0*cj5*r02))+((x10421*x10422))+((x10419*x10420))+((r12*x10427))+((cj0*r01*x10417)));
evalcond[5]=(((r01*sj0*x10415))+((x10421*x10427))+(((-1.0)*cj5*x10418*x10419))+(((-1.0)*r02*x10420))+(((-1.0)*r11*x10415*x10418))+((r12*x10422)));
evalcond[6]=((-0.1168)+(((0.02626)*sj6*x10416))+(((-1.0)*x10423*x10428))+(((-1.0)*py*x10425))+((x10423*x10424))+(((-0.02626)*sj0*x10426))+(((-1.0)*px*x10418)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10429=(sj1*sj6);
IkReal x10430=(r20*sj5);
IkReal x10431=(cj1*cj6);
IkReal x10432=((1.0)*r21);
IkReal x10433=(cj5*r22);
IkReal x10434=(cj1*sj6);
IkReal x10435=(cj6*sj1);
if( IKabs(((((-1.0)*cj1*x10433))+(((-1.0)*sj5*x10431*x10432))+(((-1.0)*x10429*x10432))+((r20*x10435))+(((-1.0)*x10430*x10434)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x10433))+(((-1.0)*x10432*x10434))+((r21*sj5*x10435))+((x10429*x10430))+((r20*x10431)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x10433))+(((-1.0)*sj5*x10431*x10432))+(((-1.0)*x10429*x10432))+((r20*x10435))+(((-1.0)*x10430*x10434))))+IKsqr((((sj1*x10433))+(((-1.0)*x10432*x10434))+((r21*sj5*x10435))+((x10429*x10430))+((r20*x10431))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj1*x10433))+(((-1.0)*sj5*x10431*x10432))+(((-1.0)*x10429*x10432))+((r20*x10435))+(((-1.0)*x10430*x10434))), (((sj1*x10433))+(((-1.0)*x10432*x10434))+((r21*sj5*x10435))+((x10429*x10430))+((r20*x10431))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10436=IKcos(j4);
IkReal x10437=IKsin(j4);
IkReal x10438=((1.0)*cj1);
IkReal x10439=((0.02626)*sj6);
IkReal x10440=(r01*sj0);
IkReal x10441=(cj0*sj6);
IkReal x10442=((0.02626)*cj6);
IkReal x10443=(cj0*r10);
IkReal x10444=((1.0)*cj5);
IkReal x10445=((1.0)*sj6);
IkReal x10446=(r00*sj0);
IkReal x10447=((1.0)*cj6);
IkReal x10448=(cj0*r11);
IkReal x10449=(sj1*x10436);
IkReal x10450=(cj1*x10437);
IkReal x10451=(sj1*x10437);
IkReal x10452=(cj1*x10436);
IkReal x10453=((1.0)*x10451);
IkReal x10454=(x10436*x10438);
IkReal x10455=(x10453+x10454);
evalcond[0]=((((-1.0)*r21*x10445))+((cj6*r20))+(((-1.0)*x10455)));
evalcond[1]=((((-1.0)*x10437*x10438))+(((-1.0)*r21*sj5*x10447))+(((-1.0)*r22*x10444))+(((-1.0)*r20*sj5*x10445))+x10449);
evalcond[2]=((((-1.0)*x10449))+(((-1.0)*x10440*x10445))+((cj6*x10446))+(((-1.0)*x10443*x10447))+((r11*x10441))+x10450);
evalcond[3]=((((-0.02626)*x10451))+(((-0.02626)*x10452))+(((-0.0718)*x10449))+(((-1.0)*r21*x10439))+(((-0.1264)*cj1))+(((-0.09756)*sj1))+((r20*x10442))+pz+(((0.0718)*x10450)));
evalcond[4]=((((-1.0)*r02*sj0*x10444))+((cj0*cj5*r12))+(((-1.0)*sj5*x10445*x10446))+((cj6*sj5*x10448))+((r10*sj5*x10441))+(((-1.0)*sj5*x10440*x10447))+(((-1.0)*x10455)));
evalcond[5]=(((x10442*x10446))+(((-0.1264)*sj1))+(((-1.0)*x10442*x10443))+(((0.09756)*cj1))+((px*sj0))+(((0.0718)*x10452))+(((0.0718)*x10451))+((x10439*x10448))+(((0.02626)*x10450))+(((-0.02626)*x10449))+(((-1.0)*cj0*py))+(((-1.0)*x10439*x10440)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10456=(cj0*sj5);
IkReal x10457=(cj5*cj6);
IkReal x10458=((1.0)*sj5);
IkReal x10459=((1.0)*cj0);
IkReal x10460=((1.0)*sj0);
IkReal x10461=(cj5*sj6);
IkReal x10462=(r10*x10461);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x10461))+(((-1.0)*r22*x10458))+((r21*x10457))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*r11*x10457*x10460))+(((-1.0)*r00*x10459*x10461))+sj3+(((-1.0)*x10460*x10462))+((r12*sj0*sj5))+(((-1.0)*r01*x10457*x10459))+((r02*x10456)));
evalcond[3]=((((-1.0)*r11*x10457*x10459))+(((-1.0)*x10459*x10462))+((r12*x10456))+((r01*sj0*x10457))+((r00*sj0*x10461))+(((-1.0)*r02*sj0*x10458)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
IkReal x10463=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r21*x10463))+(((-1.0)*r20*sj6*x10463))+(((-1.0)*cj5*r22)))))+(IKabs(((((-1.0)*cj6*r20))+((r21*sj6))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x10464=(cj5*cj6);
IkReal x10465=(r11*sj0);
IkReal x10466=(cj6*sj5);
IkReal x10467=((1.0)*cj0);
IkReal x10468=(r10*sj6);
IkReal x10469=(sj0*sj5);
IkReal x10470=(r00*sj6);
IkReal x10471=(cj0*sj5);
IkReal x10472=((0.02626)*cj0);
IkReal x10473=(r01*sj6);
IkReal x10474=((1.0)*sj0);
IkReal x10475=(cj6*r10);
IkReal x10476=(cj5*sj0);
IkReal x10477=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x10464))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x10467*x10477))+((cj0*x10473))+((sj6*x10465))+(((-1.0)*x10474*x10475)));
evalcond[3]=((1.0)+(((-1.0)*r01*x10464*x10467))+(((-1.0)*cj5*x10468*x10474))+((r12*x10469))+(((-1.0)*cj5*x10467*x10470))+(((-1.0)*x10464*x10465))+((r02*x10471)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x10476))+((cj0*r01*x10466))+((x10465*x10466))+((x10470*x10471))+((x10468*x10469)));
evalcond[5]=(((r12*x10471))+((r01*sj0*x10464))+(((-1.0)*r11*x10464*x10467))+(((-1.0)*cj5*x10467*x10468))+((x10470*x10476))+(((-1.0)*r02*x10469)));
evalcond[6]=((0.1148)+(((-1.0)*py*x10474))+(((0.02626)*sj6*x10465))+(((-1.0)*x10472*x10477))+((x10472*x10473))+(((-1.0)*px*x10467))+(((-0.02626)*sj0*x10475)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10478=IKcos(j4);
IkReal x10479=IKsin(j4);
IkReal x10480=(cj0*sj6);
IkReal x10481=((0.02626)*cj6);
IkReal x10482=(cj0*r10);
IkReal x10483=((0.02626)*sj6);
IkReal x10484=(r01*sj0);
IkReal x10485=((1.0)*cj5);
IkReal x10486=((1.0)*cj6);
IkReal x10487=((1.0)*sj6);
IkReal x10488=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x10487))+((cj6*r20))+x10479);
evalcond[1]=((((-1.0)*x10478))+(((-1.0)*r22*x10485))+(((-1.0)*r20*sj5*x10487))+(((-1.0)*r21*sj5*x10486)));
evalcond[2]=((0.09736)+(((0.02626)*x10479))+(((-1.0)*r21*x10483))+pz+((r20*x10481))+(((0.0718)*x10478)));
evalcond[3]=(((cj6*x10488))+((r11*x10480))+(((-1.0)*x10484*x10487))+x10478+(((-1.0)*x10482*x10486)));
evalcond[4]=(((cj0*cj5*r12))+((r10*sj5*x10480))+(((-1.0)*r02*sj0*x10485))+((cj0*cj6*r11*sj5))+x10479+(((-1.0)*sj5*x10484*x10486))+(((-1.0)*sj5*x10487*x10488)));
evalcond[5]=((-0.1246)+(((0.02626)*x10478))+(((-0.0718)*x10479))+(((-1.0)*x10481*x10482))+(((-1.0)*x10483*x10484))+((px*sj0))+((x10481*x10488))+(((0.02626)*r11*x10480))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10489=(cj5*cj6);
IkReal x10490=(r11*sj0);
IkReal x10491=(cj6*sj5);
IkReal x10492=((1.0)*cj0);
IkReal x10493=(r10*sj6);
IkReal x10494=(sj0*sj5);
IkReal x10495=(r00*sj6);
IkReal x10496=(cj0*sj5);
IkReal x10497=((0.02626)*cj0);
IkReal x10498=(r01*sj6);
IkReal x10499=((1.0)*sj0);
IkReal x10500=(cj6*r10);
IkReal x10501=(cj5*sj0);
IkReal x10502=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x10489))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x10492*x10502))+((sj6*x10490))+((cj0*x10498))+(((-1.0)*x10499*x10500)));
evalcond[3]=((-1.0)+((r12*x10494))+(((-1.0)*cj5*x10492*x10495))+(((-1.0)*cj5*x10493*x10499))+(((-1.0)*x10489*x10490))+((r02*x10496))+(((-1.0)*r01*x10489*x10492)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x10491))+((x10490*x10491))+((x10493*x10494))+((x10495*x10496))+((r12*x10501)));
evalcond[5]=(((r12*x10496))+(((-1.0)*cj5*x10492*x10493))+((r01*sj0*x10489))+(((-1.0)*r02*x10494))+((x10495*x10501))+(((-1.0)*r11*x10489*x10492)));
evalcond[6]=((0.1148)+(((0.02626)*sj6*x10490))+(((-1.0)*py*x10499))+(((-1.0)*x10497*x10502))+((x10497*x10498))+(((-1.0)*px*x10492))+(((-0.02626)*sj0*x10500)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10503=IKcos(j4);
IkReal x10504=IKsin(j4);
IkReal x10505=(cj0*sj6);
IkReal x10506=((0.02626)*cj6);
IkReal x10507=(cj0*r10);
IkReal x10508=((0.02626)*sj6);
IkReal x10509=(r01*sj0);
IkReal x10510=((1.0)*cj5);
IkReal x10511=((1.0)*cj6);
IkReal x10512=((1.0)*sj6);
IkReal x10513=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x10512))+((cj6*r20))+(((-1.0)*x10504)));
evalcond[1]=((((-1.0)*r21*sj5*x10511))+(((-1.0)*r20*sj5*x10512))+(((-1.0)*r22*x10510))+x10503);
evalcond[2]=((-0.09756)+((r20*x10506))+(((-0.02626)*x10504))+pz+(((-0.0718)*x10503))+(((-1.0)*r21*x10508)));
evalcond[3]=(((cj6*x10513))+x10503+(((-1.0)*x10509*x10512))+((r11*x10505))+(((-1.0)*x10507*x10511)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*sj5*x10512*x10513))+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x10510))+(((-1.0)*sj5*x10509*x10511))+x10504+((r10*sj5*x10505)));
evalcond[5]=((-0.1246)+((x10506*x10513))+(((-1.0)*x10508*x10509))+((px*sj0))+(((-1.0)*x10506*x10507))+(((-0.0718)*x10504))+(((0.02626)*r11*x10505))+(((0.02626)*x10503))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10514=(cj5*cj6);
IkReal x10515=((1.0)*sj0);
IkReal x10516=(r21*sj6);
IkReal x10517=(cj0*sj5);
IkReal x10518=((1.0)*r22);
IkReal x10519=(cj6*r20);
IkReal x10520=(cj5*sj6);
IkReal x10521=((1.0)*cj0);
IkReal x10522=((1.0)*sj5);
IkReal x10523=(x10520*x10521);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x10514))+((r20*x10520))+(((-1.0)*sj5*x10518)));
evalcond[2]=((((-1.0)*x10516))+x10519);
evalcond[3]=((((-1.0)*cj5*x10518))+(((-1.0)*r20*sj6*x10522))+(((-1.0)*cj6*r21*x10522)));
evalcond[4]=((((-1.0)*r10*x10515*x10520))+(((-1.0)*r11*x10514*x10515))+(((-1.0)*r01*x10514*x10521))+((r12*sj0*sj5))+(((-1.0)*r00*x10523))+((r02*x10517)));
evalcond[5]=(((r12*x10517))+(((-1.0)*r10*x10523))+(((-1.0)*r11*x10514*x10521))+((r01*sj0*x10514))+((r00*sj0*x10520))+(((-1.0)*r02*sj5*x10515)));
evalcond[6]=((-0.0001)+pz+(((0.02626)*x10519))+(((-0.02626)*x10516)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10524=(cj0*cj6);
IkReal x10525=(sj0*sj6);
IkReal x10526=((1.0)*r11);
IkReal x10527=(cj6*sj0);
IkReal x10528=(cj0*sj6);
if( IKabs((((r10*x10527))+((r00*x10524))+(((-1.0)*r01*x10528))+(((-1.0)*x10525*x10526)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x10526*x10528))+((r10*x10524))+(((-1.0)*r00*x10527))+((r01*x10525)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x10527))+((r00*x10524))+(((-1.0)*r01*x10528))+(((-1.0)*x10525*x10526))))+IKsqr(((((-1.0)*x10526*x10528))+((r10*x10524))+(((-1.0)*r00*x10527))+((r01*x10525))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x10527))+((r00*x10524))+(((-1.0)*r01*x10528))+(((-1.0)*x10525*x10526))), ((((-1.0)*x10526*x10528))+((r10*x10524))+(((-1.0)*r00*x10527))+((r01*x10525))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10529=IKcos(j4);
IkReal x10530=IKsin(j4);
IkReal x10531=(cj6*sj0);
IkReal x10532=((0.02626)*r10);
IkReal x10533=(r11*sj6);
IkReal x10534=(r11*sj5);
IkReal x10535=(sj0*sj6);
IkReal x10536=(r10*sj5);
IkReal x10537=((0.02626)*r01);
IkReal x10538=(cj5*r12);
IkReal x10539=(cj0*cj6);
IkReal x10540=((1.0)*sj0);
IkReal x10541=(cj5*r02);
IkReal x10542=(cj0*sj6);
IkReal x10543=((1.0)*r10);
IkReal x10544=((1.0)*r01);
IkReal x10545=(r00*sj5);
IkReal x10546=((1.0)*cj0);
IkReal x10547=((0.02626)*r00);
evalcond[0]=(((sj0*x10533))+(((-1.0)*x10531*x10543))+(((-1.0)*r00*x10539))+x10530+((r01*x10542)));
evalcond[1]=((((-1.0)*x10535*x10544))+((cj0*x10533))+(((-1.0)*x10539*x10543))+x10529+((r00*x10531)));
evalcond[2]=(((sj0*x10538))+((cj0*x10541))+(((-1.0)*x10529))+((x10531*x10534))+((x10542*x10545))+((r01*sj5*x10539))+((x10535*x10536)));
evalcond[3]=(((cj0*x10538))+((x10534*x10539))+x10530+((x10536*x10542))+(((-1.0)*x10535*x10545))+(((-1.0)*sj5*x10531*x10544))+(((-1.0)*x10540*x10541)));
evalcond[4]=((-0.1246)+(((0.02626)*x10529))+(((0.02626)*cj0*x10533))+((x10531*x10547))+(((-1.0)*x10532*x10539))+((px*sj0))+(((-1.0)*py*x10546))+(((-0.0718)*x10530))+(((-1.0)*x10535*x10537)));
evalcond[5]=((0.21226)+(((0.0718)*x10529))+(((0.02626)*x10530))+(((-1.0)*px*x10546))+(((-1.0)*x10539*x10547))+(((-1.0)*x10531*x10532))+((x10537*x10542))+(((0.02626)*sj0*x10533))+(((-1.0)*py*x10540)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10548=(cj5*cj6);
IkReal x10549=((1.0)*sj0);
IkReal x10550=(r21*sj6);
IkReal x10551=(cj0*sj5);
IkReal x10552=((1.0)*r22);
IkReal x10553=(cj6*r20);
IkReal x10554=(cj5*sj6);
IkReal x10555=((1.0)*cj0);
IkReal x10556=((1.0)*sj5);
IkReal x10557=(x10554*x10555);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x10552))+((r20*x10554))+((r21*x10548)));
evalcond[2]=((((-1.0)*x10550))+x10553);
evalcond[3]=((((-1.0)*r20*sj6*x10556))+(((-1.0)*cj6*r21*x10556))+(((-1.0)*cj5*x10552)));
evalcond[4]=(((r02*x10551))+(((-1.0)*r11*x10548*x10549))+((r12*sj0*sj5))+(((-1.0)*r01*x10548*x10555))+(((-1.0)*r00*x10557))+(((-1.0)*r10*x10549*x10554)));
evalcond[5]=((((-1.0)*r11*x10548*x10555))+((r01*sj0*x10548))+(((-1.0)*r02*sj5*x10549))+(((-1.0)*r10*x10557))+((r12*x10551))+((r00*sj0*x10554)));
evalcond[6]=((-0.0001)+(((-0.02626)*x10550))+pz+(((0.02626)*x10553)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10558=(sj0*sj6);
IkReal x10559=(cj6*r10);
IkReal x10560=((1.0)*sj0);
IkReal x10561=(cj6*r00);
IkReal x10562=(cj0*sj6);
if( IKabs((((r01*x10562))+(((-1.0)*cj0*x10561))+(((-1.0)*x10559*x10560))+((r11*x10558)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x10562))+(((-1.0)*x10560*x10561))+((cj0*x10559))+((r01*x10558)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x10562))+(((-1.0)*cj0*x10561))+(((-1.0)*x10559*x10560))+((r11*x10558))))+IKsqr(((((-1.0)*r11*x10562))+(((-1.0)*x10560*x10561))+((cj0*x10559))+((r01*x10558))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x10562))+(((-1.0)*cj0*x10561))+(((-1.0)*x10559*x10560))+((r11*x10558))), ((((-1.0)*r11*x10562))+(((-1.0)*x10560*x10561))+((cj0*x10559))+((r01*x10558))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10563=IKcos(j4);
IkReal x10564=IKsin(j4);
IkReal x10565=(cj6*sj0);
IkReal x10566=((0.02626)*r10);
IkReal x10567=(r11*sj6);
IkReal x10568=(r11*sj5);
IkReal x10569=(sj0*sj6);
IkReal x10570=(r10*sj5);
IkReal x10571=((0.02626)*r01);
IkReal x10572=(cj5*r12);
IkReal x10573=(cj0*cj6);
IkReal x10574=((1.0)*sj0);
IkReal x10575=(cj5*r02);
IkReal x10576=(cj0*sj6);
IkReal x10577=((1.0)*r10);
IkReal x10578=((1.0)*r01);
IkReal x10579=(r00*sj5);
IkReal x10580=((1.0)*cj0);
IkReal x10581=((0.02626)*r00);
evalcond[0]=(((r00*x10565))+(((-1.0)*x10569*x10578))+((cj0*x10567))+(((-1.0)*x10573*x10577))+x10563);
evalcond[1]=(((sj0*x10567))+((r01*x10576))+(((-1.0)*r00*x10573))+(((-1.0)*x10564))+(((-1.0)*x10565*x10577)));
evalcond[2]=(((r01*sj5*x10573))+((sj0*x10572))+((x10576*x10579))+((cj0*x10575))+x10563+((x10569*x10570))+((x10565*x10568)));
evalcond[3]=(((x10570*x10576))+((cj0*x10572))+((x10568*x10573))+(((-1.0)*x10574*x10575))+x10564+(((-1.0)*x10569*x10579))+(((-1.0)*sj5*x10565*x10578)));
evalcond[4]=((-0.1246)+(((-1.0)*x10569*x10571))+((x10565*x10581))+(((0.02626)*x10563))+(((0.02626)*cj0*x10567))+(((-1.0)*py*x10580))+(((-1.0)*x10566*x10573))+((px*sj0))+(((-0.0718)*x10564)));
evalcond[5]=((0.01734)+(((-0.02626)*x10564))+(((-1.0)*py*x10574))+(((0.02626)*sj0*x10567))+((x10571*x10576))+(((-1.0)*x10565*x10566))+(((-1.0)*x10573*x10581))+(((-1.0)*px*x10580))+(((-0.0718)*x10563)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10582=((1.0)*sj5);
IkReal x10583=((1.0)*sj6);
CheckValue<IkReal> x10584=IKPowWithIntegerCheck(cj3,-1);
if(!x10584.valid){
continue;
}
CheckValue<IkReal> x10585=IKPowWithIntegerCheck(sj3,-1);
if(!x10585.valid){
continue;
}
if( IKabs(((x10584.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x10583))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x10583)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x10585.value)*(((((-1.0)*cj6*r21*x10582))+(((-1.0)*r20*sj6*x10582))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x10584.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x10583))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x10583))))))+IKsqr(((x10585.value)*(((((-1.0)*cj6*r21*x10582))+(((-1.0)*r20*sj6*x10582))+(((-1.0)*cj5*r22))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x10584.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x10583))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x10583))))), ((x10585.value)*(((((-1.0)*cj6*r21*x10582))+(((-1.0)*r20*sj6*x10582))+(((-1.0)*cj5*r22))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10586=IKcos(j4);
IkReal x10587=IKsin(j4);
IkReal x10588=(cj6*sj0);
IkReal x10589=((0.02626)*r10);
IkReal x10590=(sj0*sj6);
IkReal x10591=(cj5*r12);
IkReal x10592=(r11*sj5);
IkReal x10593=(r10*sj5);
IkReal x10594=((0.02626)*r01);
IkReal x10595=(cj0*sj6);
IkReal x10596=(cj0*cj6);
IkReal x10597=(r21*sj6);
IkReal x10598=((1.0)*cj5);
IkReal x10599=(cj6*r20);
IkReal x10600=((1.0)*r10);
IkReal x10601=((1.0)*r01);
IkReal x10602=(r00*sj5);
IkReal x10603=((1.0)*py);
IkReal x10604=((1.0)*sj5);
IkReal x10605=((0.02626)*r00);
IkReal x10606=((0.02626)*r11);
IkReal x10607=((0.02626)*x10587);
IkReal x10608=(cj3*x10586);
IkReal x10609=(sj3*x10586);
evalcond[0]=((((-1.0)*x10597))+x10599+((sj3*x10587)));
evalcond[1]=((((-1.0)*cj6*r21*x10604))+(((-1.0)*r20*sj6*x10604))+(((-1.0)*r22*x10598))+(((-1.0)*x10609)));
evalcond[2]=(((r11*x10595))+x10586+(((-1.0)*x10590*x10601))+(((-1.0)*x10596*x10600))+((r00*x10588)));
evalcond[3]=(((r11*x10590))+((r01*x10595))+(((-1.0)*x10588*x10600))+((cj3*x10587))+(((-1.0)*r00*x10596)));
evalcond[4]=((-0.0001)+(((0.02626)*x10599))+((sj3*x10607))+pz+(((-0.02626)*x10597))+(((0.0718)*x10609))+(((0.09746)*sj3)));
evalcond[5]=(((cj0*cj5*r02))+((x10595*x10602))+(((-1.0)*x10608))+((x10588*x10592))+((sj0*x10591))+((x10590*x10593))+((r01*sj5*x10596)));
evalcond[6]=((((-1.0)*x10590*x10602))+(((-1.0)*sj5*x10588*x10601))+((x10592*x10596))+((cj0*x10591))+((x10593*x10595))+x10587+(((-1.0)*r02*sj0*x10598)));
evalcond[7]=((-0.1246)+(((-1.0)*cj0*x10603))+((x10595*x10606))+((x10588*x10605))+(((-1.0)*x10589*x10596))+(((-1.0)*x10590*x10594))+(((0.02626)*x10586))+(((-0.0718)*x10587))+((px*sj0)));
evalcond[8]=((0.1148)+((cj3*x10607))+(((-1.0)*sj0*x10603))+((x10590*x10606))+((x10594*x10595))+(((0.0718)*x10608))+(((-1.0)*x10588*x10589))+(((0.09746)*cj3))+(((-1.0)*x10596*x10605))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10610=((1.0)*cj6);
CheckValue<IkReal> x10611=IKPowWithIntegerCheck(sj3,-1);
if(!x10611.valid){
continue;
}
if( IKabs(((x10611.value)*((((r21*sj6))+(((-1.0)*r20*x10610)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*r00*sj0*x10610))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x10611.value)*((((r21*sj6))+(((-1.0)*r20*x10610))))))+IKsqr((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*r00*sj0*x10610))+(((-1.0)*cj0*r11*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x10611.value)*((((r21*sj6))+(((-1.0)*r20*x10610))))), (((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*r00*sj0*x10610))+(((-1.0)*cj0*r11*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10612=IKcos(j4);
IkReal x10613=IKsin(j4);
IkReal x10614=(cj6*sj0);
IkReal x10615=((0.02626)*r10);
IkReal x10616=(sj0*sj6);
IkReal x10617=(cj5*r12);
IkReal x10618=(r11*sj5);
IkReal x10619=(r10*sj5);
IkReal x10620=((0.02626)*r01);
IkReal x10621=(cj0*sj6);
IkReal x10622=(cj0*cj6);
IkReal x10623=(r21*sj6);
IkReal x10624=((1.0)*cj5);
IkReal x10625=(cj6*r20);
IkReal x10626=((1.0)*r10);
IkReal x10627=((1.0)*r01);
IkReal x10628=(r00*sj5);
IkReal x10629=((1.0)*py);
IkReal x10630=((1.0)*sj5);
IkReal x10631=((0.02626)*r00);
IkReal x10632=((0.02626)*r11);
IkReal x10633=((0.02626)*x10613);
IkReal x10634=(cj3*x10612);
IkReal x10635=(sj3*x10612);
evalcond[0]=((((-1.0)*x10623))+x10625+((sj3*x10613)));
evalcond[1]=((((-1.0)*cj6*r21*x10630))+(((-1.0)*r22*x10624))+(((-1.0)*x10635))+(((-1.0)*r20*sj6*x10630)));
evalcond[2]=((((-1.0)*x10622*x10626))+((r00*x10614))+((r11*x10621))+x10612+(((-1.0)*x10616*x10627)));
evalcond[3]=(((cj3*x10613))+((r01*x10621))+(((-1.0)*x10614*x10626))+((r11*x10616))+(((-1.0)*r00*x10622)));
evalcond[4]=((-0.0001)+pz+(((0.02626)*x10625))+(((0.0718)*x10635))+((sj3*x10633))+(((0.09746)*sj3))+(((-0.02626)*x10623)));
evalcond[5]=(((cj0*cj5*r02))+((x10614*x10618))+((x10616*x10619))+((sj0*x10617))+(((-1.0)*x10634))+((x10621*x10628))+((r01*sj5*x10622)));
evalcond[6]=((((-1.0)*x10616*x10628))+((cj0*x10617))+(((-1.0)*r02*sj0*x10624))+((x10619*x10621))+x10613+(((-1.0)*sj5*x10614*x10627))+((x10618*x10622)));
evalcond[7]=((-0.1246)+(((0.02626)*x10612))+(((-0.0718)*x10613))+(((-1.0)*cj0*x10629))+((x10621*x10632))+(((-1.0)*x10615*x10622))+((x10614*x10631))+((px*sj0))+(((-1.0)*x10616*x10620)));
evalcond[8]=((0.1148)+(((-1.0)*x10614*x10615))+((x10616*x10632))+(((0.0718)*x10634))+((x10620*x10621))+(((0.09746)*cj3))+(((-1.0)*x10622*x10631))+((cj3*x10633))+(((-1.0)*sj0*x10629))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10636=((1.0)*sj5);
CheckValue<IkReal> x10637 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x10636))+(((-1.0)*r20*sj6*x10636))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x10637.valid){
continue;
}
CheckValue<IkReal> x10638=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x10638.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x10637.value)+(((1.5707963267949)*(x10638.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10639=IKcos(j4);
IkReal x10640=IKsin(j4);
IkReal x10641=(cj6*sj0);
IkReal x10642=((0.02626)*r10);
IkReal x10643=(sj0*sj6);
IkReal x10644=(cj5*r12);
IkReal x10645=(r11*sj5);
IkReal x10646=(r10*sj5);
IkReal x10647=((0.02626)*r01);
IkReal x10648=(cj0*sj6);
IkReal x10649=(cj0*cj6);
IkReal x10650=(r21*sj6);
IkReal x10651=((1.0)*cj5);
IkReal x10652=(cj6*r20);
IkReal x10653=((1.0)*r10);
IkReal x10654=((1.0)*r01);
IkReal x10655=(r00*sj5);
IkReal x10656=((1.0)*py);
IkReal x10657=((1.0)*sj5);
IkReal x10658=((0.02626)*r00);
IkReal x10659=((0.02626)*r11);
IkReal x10660=((0.02626)*x10640);
IkReal x10661=(cj3*x10639);
IkReal x10662=(sj3*x10639);
evalcond[0]=((((-1.0)*x10650))+((sj3*x10640))+x10652);
evalcond[1]=((((-1.0)*cj6*r21*x10657))+(((-1.0)*r22*x10651))+(((-1.0)*x10662))+(((-1.0)*r20*sj6*x10657)));
evalcond[2]=((((-1.0)*x10643*x10654))+((r00*x10641))+(((-1.0)*x10649*x10653))+((r11*x10648))+x10639);
evalcond[3]=(((r01*x10648))+((r11*x10643))+((cj3*x10640))+(((-1.0)*x10641*x10653))+(((-1.0)*r00*x10649)));
evalcond[4]=((-0.0001)+(((-0.02626)*x10650))+pz+(((0.0718)*x10662))+(((0.02626)*x10652))+(((0.09746)*sj3))+((sj3*x10660)));
evalcond[5]=(((x10648*x10655))+((cj0*cj5*r02))+((x10643*x10646))+((sj0*x10644))+(((-1.0)*x10661))+((r01*sj5*x10649))+((x10641*x10645)));
evalcond[6]=((((-1.0)*r02*sj0*x10651))+((cj0*x10644))+((x10646*x10648))+((x10645*x10649))+(((-1.0)*x10643*x10655))+(((-1.0)*sj5*x10641*x10654))+x10640);
evalcond[7]=((-0.1246)+((x10648*x10659))+((x10641*x10658))+(((-0.0718)*x10640))+(((-1.0)*cj0*x10656))+(((0.02626)*x10639))+((px*sj0))+(((-1.0)*x10643*x10647))+(((-1.0)*x10642*x10649)));
evalcond[8]=((0.1148)+(((-1.0)*sj0*x10656))+((x10647*x10648))+((cj3*x10660))+(((-1.0)*x10641*x10642))+((x10643*x10659))+(((-1.0)*x10649*x10658))+(((0.0718)*x10661))+(((0.09746)*cj3))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10663=(cj0*sj5);
IkReal x10664=(cj5*cj6);
IkReal x10665=((1.0)*sj5);
IkReal x10666=((1.0)*cj0);
IkReal x10667=((1.0)*sj0);
IkReal x10668=(cj5*sj6);
IkReal x10669=(r10*x10668);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(cj3+((r20*x10668))+(((-1.0)*r22*x10665))+((r21*x10664)));
evalcond[2]=((((-1.0)*x10667*x10669))+sj3+((r02*x10663))+(((-1.0)*r01*x10664*x10666))+(((-1.0)*r00*x10666*x10668))+((r12*sj0*sj5))+(((-1.0)*r11*x10664*x10667)));
evalcond[3]=(((r12*x10663))+((r00*sj0*x10668))+(((-1.0)*x10666*x10669))+((r01*sj0*x10664))+(((-1.0)*r02*sj0*x10665))+(((-1.0)*r11*x10664*x10666)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x10670=(cj5*cj6);
IkReal x10671=(r11*sj0);
IkReal x10672=(cj6*sj5);
IkReal x10673=((1.0)*cj0);
IkReal x10674=(r10*sj6);
IkReal x10675=(sj0*sj5);
IkReal x10676=(r00*sj6);
IkReal x10677=(cj0*sj5);
IkReal x10678=((0.02626)*cj0);
IkReal x10679=(r01*sj6);
IkReal x10680=((1.0)*sj0);
IkReal x10681=(cj6*r10);
IkReal x10682=(cj5*sj0);
IkReal x10683=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x10670)));
evalcond[2]=(((sj6*x10671))+(((-1.0)*x10673*x10683))+(((-1.0)*x10680*x10681))+((cj0*x10679)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x10674*x10680))+(((-1.0)*r01*x10670*x10673))+((r02*x10677))+(((-1.0)*cj5*x10673*x10676))+(((-1.0)*x10670*x10671))+((r12*x10675)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x10672))+((x10676*x10677))+((x10674*x10675))+((r12*x10682))+((x10671*x10672)));
evalcond[5]=((((-1.0)*r02*x10675))+(((-1.0)*cj5*x10673*x10674))+((x10676*x10682))+(((-1.0)*r11*x10670*x10673))+((r01*sj0*x10670))+((r12*x10677)));
evalcond[6]=((0.1148)+(((-1.0)*x10678*x10683))+((x10678*x10679))+(((0.02626)*sj6*x10671))+(((-0.02626)*sj0*x10681))+(((-1.0)*py*x10680))+(((-1.0)*px*x10673)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10684=IKcos(j4);
IkReal x10685=IKsin(j4);
IkReal x10686=(cj0*sj6);
IkReal x10687=((0.02626)*cj6);
IkReal x10688=(cj0*r10);
IkReal x10689=((0.02626)*sj6);
IkReal x10690=(r01*sj0);
IkReal x10691=((1.0)*cj5);
IkReal x10692=((1.0)*cj6);
IkReal x10693=((1.0)*sj6);
IkReal x10694=(r00*sj0);
IkReal x10695=((1.0)*x10685);
evalcond[0]=((((-1.0)*x10695))+(((-1.0)*r21*x10693))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj5*x10693))+(((-1.0)*r22*x10691))+x10684+(((-1.0)*r21*sj5*x10692)));
evalcond[2]=((-0.09736)+(((-1.0)*r21*x10689))+(((-0.0718)*x10684))+(((-0.02626)*x10685))+((r20*x10687))+pz);
evalcond[3]=(((cj6*x10694))+(((-1.0)*x10690*x10693))+((r11*x10686))+(((-1.0)*x10688*x10692))+(((-1.0)*x10684)));
evalcond[4]=((((-1.0)*x10695))+((r10*sj5*x10686))+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x10691))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x10690*x10692))+(((-1.0)*sj5*x10693*x10694)));
evalcond[5]=((0.1246)+(((-1.0)*x10687*x10688))+(((-0.02626)*x10684))+(((0.0718)*x10685))+(((0.02626)*r11*x10686))+((px*sj0))+(((-1.0)*x10689*x10690))+(((-1.0)*cj0*py))+((x10687*x10694)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10696=(cj5*cj6);
IkReal x10697=(r11*sj0);
IkReal x10698=(cj6*sj5);
IkReal x10699=((1.0)*cj0);
IkReal x10700=(r10*sj6);
IkReal x10701=(sj0*sj5);
IkReal x10702=(r00*sj6);
IkReal x10703=(cj0*sj5);
IkReal x10704=((0.02626)*cj0);
IkReal x10705=(r01*sj6);
IkReal x10706=((1.0)*sj0);
IkReal x10707=(cj6*r10);
IkReal x10708=(cj5*sj0);
IkReal x10709=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x10696))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x10699*x10709))+((cj0*x10705))+(((-1.0)*x10706*x10707))+((sj6*x10697)));
evalcond[3]=((-1.0)+(((-1.0)*x10696*x10697))+(((-1.0)*cj5*x10700*x10706))+((r12*x10701))+(((-1.0)*r01*x10696*x10699))+((r02*x10703))+(((-1.0)*cj5*x10699*x10702)));
evalcond[4]=(((x10700*x10701))+((cj0*cj5*r02))+((cj0*r01*x10698))+((r12*x10708))+((x10702*x10703))+((x10697*x10698)));
evalcond[5]=((((-1.0)*r11*x10696*x10699))+(((-1.0)*r02*x10701))+((r12*x10703))+((r01*sj0*x10696))+((x10702*x10708))+(((-1.0)*cj5*x10699*x10700)));
evalcond[6]=((0.1148)+(((-1.0)*px*x10699))+(((-1.0)*x10704*x10709))+((x10704*x10705))+(((0.02626)*sj6*x10697))+(((-1.0)*py*x10706))+(((-0.02626)*sj0*x10707)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10710=IKcos(j4);
IkReal x10711=IKsin(j4);
IkReal x10712=(cj0*sj6);
IkReal x10713=((0.02626)*cj6);
IkReal x10714=(cj0*r10);
IkReal x10715=((0.02626)*sj6);
IkReal x10716=(r01*sj0);
IkReal x10717=((1.0)*cj5);
IkReal x10718=((1.0)*cj6);
IkReal x10719=((1.0)*sj6);
IkReal x10720=(r00*sj0);
IkReal x10721=((1.0)*x10710);
evalcond[0]=((((-1.0)*r21*x10719))+((cj6*r20))+x10711);
evalcond[1]=((((-1.0)*r21*sj5*x10718))+(((-1.0)*r22*x10717))+(((-1.0)*x10721))+(((-1.0)*r20*sj5*x10719)));
evalcond[2]=((0.09756)+(((-1.0)*r21*x10715))+((r20*x10713))+(((0.02626)*x10711))+pz+(((0.0718)*x10710)));
evalcond[3]=(((r11*x10712))+(((-1.0)*x10714*x10718))+(((-1.0)*x10721))+((cj6*x10720))+(((-1.0)*x10716*x10719)));
evalcond[4]=((((-1.0)*x10711))+(((-1.0)*sj5*x10716*x10718))+((cj0*cj5*r12))+((r10*sj5*x10712))+(((-1.0)*r02*sj0*x10717))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x10719*x10720)));
evalcond[5]=((0.1246)+((x10713*x10720))+(((-1.0)*x10713*x10714))+(((-0.02626)*x10710))+(((-1.0)*x10715*x10716))+(((0.02626)*r11*x10712))+((px*sj0))+(((-1.0)*cj0*py))+(((0.0718)*x10711)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10722=(cj5*cj6);
IkReal x10723=((1.0)*sj0);
IkReal x10724=(r21*sj6);
IkReal x10725=(cj0*sj5);
IkReal x10726=((1.0)*r22);
IkReal x10727=(cj6*r20);
IkReal x10728=(cj5*sj6);
IkReal x10729=((1.0)*cj0);
IkReal x10730=((1.0)*sj5);
IkReal x10731=(x10728*x10729);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x10722))+((r20*x10728))+(((-1.0)*sj5*x10726)));
evalcond[2]=((((-1.0)*x10724))+x10727);
evalcond[3]=((((-1.0)*cj6*r21*x10730))+(((-1.0)*cj5*x10726))+(((-1.0)*r20*sj6*x10730)));
evalcond[4]=((((-1.0)*r11*x10722*x10723))+((r02*x10725))+(((-1.0)*r01*x10722*x10729))+(((-1.0)*r00*x10731))+((r12*sj0*sj5))+(((-1.0)*r10*x10723*x10728)));
evalcond[5]=((((-1.0)*r11*x10722*x10729))+(((-1.0)*r02*sj5*x10723))+((r00*sj0*x10728))+((r01*sj0*x10722))+((r12*x10725))+(((-1.0)*r10*x10731)));
evalcond[6]=((0.0001)+(((-0.02626)*x10724))+pz+(((0.02626)*x10727)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10732=(cj0*cj6);
IkReal x10733=(cj6*sj0);
IkReal x10734=(cj0*sj6);
IkReal x10735=((1.0)*sj0*sj6);
if( IKabs((((r10*x10733))+(((-1.0)*r01*x10734))+(((-1.0)*r11*x10735))+((r00*x10732)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x10735))+((r11*x10734))+(((-1.0)*r10*x10732))+((r00*x10733)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x10733))+(((-1.0)*r01*x10734))+(((-1.0)*r11*x10735))+((r00*x10732))))+IKsqr(((((-1.0)*r01*x10735))+((r11*x10734))+(((-1.0)*r10*x10732))+((r00*x10733))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x10733))+(((-1.0)*r01*x10734))+(((-1.0)*r11*x10735))+((r00*x10732))), ((((-1.0)*r01*x10735))+((r11*x10734))+(((-1.0)*r10*x10732))+((r00*x10733))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10736=IKsin(j4);
IkReal x10737=IKcos(j4);
IkReal x10738=(cj6*sj0);
IkReal x10739=((0.02626)*r10);
IkReal x10740=(r11*sj6);
IkReal x10741=(r11*sj5);
IkReal x10742=(sj0*sj6);
IkReal x10743=(r10*sj5);
IkReal x10744=((0.02626)*r01);
IkReal x10745=(cj5*r12);
IkReal x10746=(cj0*cj6);
IkReal x10747=((1.0)*sj0);
IkReal x10748=(cj5*r02);
IkReal x10749=(cj0*sj6);
IkReal x10750=((1.0)*r10);
IkReal x10751=((1.0)*r01);
IkReal x10752=(r00*sj5);
IkReal x10753=((1.0)*cj0);
IkReal x10754=((0.02626)*r00);
IkReal x10755=((1.0)*x10737);
evalcond[0]=((((-1.0)*x10738*x10750))+(((-1.0)*r00*x10746))+((sj0*x10740))+x10736+((r01*x10749)));
evalcond[1]=((((-1.0)*x10746*x10750))+((cj0*x10740))+(((-1.0)*x10755))+(((-1.0)*x10742*x10751))+((r00*x10738)));
evalcond[2]=(((cj0*x10748))+((x10749*x10752))+((sj0*x10745))+((r01*sj5*x10746))+(((-1.0)*x10755))+((x10738*x10741))+((x10742*x10743)));
evalcond[3]=(((x10743*x10749))+(((-1.0)*x10742*x10752))+((cj0*x10745))+(((-1.0)*x10747*x10748))+(((-1.0)*x10736))+(((-1.0)*sj5*x10738*x10751))+((x10741*x10746)));
evalcond[4]=((0.1246)+(((-1.0)*py*x10753))+(((0.02626)*cj0*x10740))+(((0.0718)*x10736))+(((-1.0)*x10739*x10746))+(((-0.02626)*x10737))+((px*sj0))+((x10738*x10754))+(((-1.0)*x10742*x10744)));
evalcond[5]=((0.21226)+(((-1.0)*py*x10747))+(((-1.0)*x10746*x10754))+(((-1.0)*x10738*x10739))+(((0.02626)*sj0*x10740))+(((-1.0)*px*x10753))+(((0.0718)*x10737))+(((0.02626)*x10736))+((x10744*x10749)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10756=(cj5*cj6);
IkReal x10757=((1.0)*sj0);
IkReal x10758=(r21*sj6);
IkReal x10759=(cj0*sj5);
IkReal x10760=((1.0)*r22);
IkReal x10761=(cj6*r20);
IkReal x10762=(cj5*sj6);
IkReal x10763=((1.0)*cj0);
IkReal x10764=((1.0)*sj5);
IkReal x10765=(x10762*x10763);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x10760))+((r20*x10762))+((r21*x10756)));
evalcond[2]=(x10761+(((-1.0)*x10758)));
evalcond[3]=((((-1.0)*cj6*r21*x10764))+(((-1.0)*r20*sj6*x10764))+(((-1.0)*cj5*x10760)));
evalcond[4]=((((-1.0)*r11*x10756*x10757))+(((-1.0)*r10*x10757*x10762))+(((-1.0)*r01*x10756*x10763))+(((-1.0)*r00*x10765))+((r12*sj0*sj5))+((r02*x10759)));
evalcond[5]=((((-1.0)*r11*x10756*x10763))+(((-1.0)*r02*sj5*x10757))+(((-1.0)*r10*x10765))+((r01*sj0*x10756))+((r00*sj0*x10762))+((r12*x10759)));
evalcond[6]=((0.0001)+(((0.02626)*x10761))+pz+(((-0.02626)*x10758)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10766=(sj0*sj6);
IkReal x10767=(cj0*sj6);
IkReal x10768=(cj6*r00);
IkReal x10769=((1.0)*cj6*r10);
if( IKabs((((r11*x10766))+(((-1.0)*cj0*x10768))+((r01*x10767))+(((-1.0)*sj0*x10769)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x10767))+(((-1.0)*r01*x10766))+(((-1.0)*cj0*x10769))+((sj0*x10768)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x10766))+(((-1.0)*cj0*x10768))+((r01*x10767))+(((-1.0)*sj0*x10769))))+IKsqr((((r11*x10767))+(((-1.0)*r01*x10766))+(((-1.0)*cj0*x10769))+((sj0*x10768))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x10766))+(((-1.0)*cj0*x10768))+((r01*x10767))+(((-1.0)*sj0*x10769))), (((r11*x10767))+(((-1.0)*r01*x10766))+(((-1.0)*cj0*x10769))+((sj0*x10768))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10770=IKcos(j4);
IkReal x10771=IKsin(j4);
IkReal x10772=(cj6*sj0);
IkReal x10773=((0.02626)*r10);
IkReal x10774=(r11*sj6);
IkReal x10775=(r11*sj5);
IkReal x10776=(sj0*sj6);
IkReal x10777=(r10*sj5);
IkReal x10778=((0.02626)*r01);
IkReal x10779=(cj5*r12);
IkReal x10780=(cj0*cj6);
IkReal x10781=((1.0)*sj0);
IkReal x10782=(cj5*r02);
IkReal x10783=(cj0*sj6);
IkReal x10784=((1.0)*r10);
IkReal x10785=((1.0)*r01);
IkReal x10786=(r00*sj5);
IkReal x10787=((1.0)*cj0);
IkReal x10788=((0.02626)*r00);
IkReal x10789=((1.0)*x10771);
evalcond[0]=((((-1.0)*x10772*x10784))+((sj0*x10774))+(((-1.0)*r00*x10780))+((r01*x10783))+(((-1.0)*x10789)));
evalcond[1]=((((-1.0)*x10776*x10785))+(((-1.0)*x10780*x10784))+(((-1.0)*x10770))+((r00*x10772))+((cj0*x10774)));
evalcond[2]=(((sj0*x10779))+((x10783*x10786))+((x10772*x10775))+((r01*sj5*x10780))+x10770+((x10776*x10777))+((cj0*x10782)));
evalcond[3]=((((-1.0)*sj5*x10772*x10785))+(((-1.0)*x10776*x10786))+((x10777*x10783))+((x10775*x10780))+(((-1.0)*x10789))+(((-1.0)*x10781*x10782))+((cj0*x10779)));
evalcond[4]=((0.1246)+(((-0.02626)*x10770))+((x10772*x10788))+(((-1.0)*py*x10787))+(((-1.0)*x10776*x10778))+((px*sj0))+(((0.02626)*cj0*x10774))+(((0.0718)*x10771))+(((-1.0)*x10773*x10780)));
evalcond[5]=((0.01734)+(((-0.0718)*x10770))+(((-1.0)*x10780*x10788))+((x10778*x10783))+(((-0.02626)*x10771))+(((-1.0)*x10772*x10773))+(((-1.0)*py*x10781))+(((0.02626)*sj0*x10774))+(((-1.0)*px*x10787)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10790=((1.0)*sj6);
CheckValue<IkReal> x10791=IKPowWithIntegerCheck(cj3,-1);
if(!x10791.valid){
continue;
}
CheckValue<IkReal> x10792=IKPowWithIntegerCheck(sj3,-1);
if(!x10792.valid){
continue;
}
if( IKabs(((x10791.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x10790))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x10790)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x10792.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x10791.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x10790))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x10790))))))+IKsqr(((x10792.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x10791.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x10790))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x10790))))), ((x10792.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10793=IKsin(j4);
IkReal x10794=IKcos(j4);
IkReal x10795=(cj6*sj0);
IkReal x10796=((0.02626)*r10);
IkReal x10797=(sj0*sj6);
IkReal x10798=(cj5*r12);
IkReal x10799=(r11*sj5);
IkReal x10800=(r10*sj5);
IkReal x10801=(cj0*cj6);
IkReal x10802=((0.02626)*r01);
IkReal x10803=(cj0*sj6);
IkReal x10804=(r21*sj6);
IkReal x10805=((1.0)*cj5);
IkReal x10806=(cj6*r20);
IkReal x10807=((1.0)*r10);
IkReal x10808=((1.0)*r01);
IkReal x10809=(r00*sj5);
IkReal x10810=((1.0)*py);
IkReal x10811=((1.0)*sj5);
IkReal x10812=((0.02626)*r00);
IkReal x10813=((0.02626)*r11);
IkReal x10814=(sj3*x10793);
IkReal x10815=(sj3*x10794);
IkReal x10816=(cj3*x10793);
IkReal x10817=((1.0)*x10794);
evalcond[0]=((((-1.0)*x10814))+(((-1.0)*x10804))+x10806);
evalcond[1]=((((-1.0)*r22*x10805))+(((-1.0)*cj6*r21*x10811))+(((-1.0)*r20*sj6*x10811))+x10815);
evalcond[2]=((((-1.0)*x10795*x10807))+((r01*x10803))+(((-1.0)*r00*x10801))+((r11*x10797))+x10816);
evalcond[3]=((((-1.0)*x10797*x10808))+((r11*x10803))+((r00*x10795))+(((-1.0)*x10817))+(((-1.0)*x10801*x10807)));
evalcond[4]=((0.0001)+(((-0.02626)*x10814))+(((-0.0718)*x10815))+(((0.02626)*x10806))+(((-0.02626)*x10804))+pz+(((-0.09746)*sj3)));
evalcond[5]=(((x10803*x10809))+((x10795*x10799))+((cj0*cj5*r02))+((r01*sj5*x10801))+((sj0*x10798))+(((-1.0)*cj3*x10817))+((x10797*x10800)));
evalcond[6]=((((-1.0)*x10797*x10809))+((cj0*x10798))+((x10800*x10803))+(((-1.0)*sj5*x10795*x10808))+((x10799*x10801))+(((-1.0)*r02*sj0*x10805))+(((-1.0)*x10793)));
evalcond[7]=((0.1246)+(((-1.0)*x10797*x10802))+(((-1.0)*cj0*x10810))+(((0.0718)*x10793))+((x10803*x10813))+((x10795*x10812))+(((-1.0)*x10796*x10801))+(((-0.02626)*x10794))+((px*sj0)));
evalcond[8]=((0.1148)+((x10802*x10803))+(((-1.0)*sj0*x10810))+((x10797*x10813))+(((-1.0)*x10801*x10812))+(((-1.0)*x10795*x10796))+(((0.09746)*cj3))+(((0.02626)*x10816))+(((-1.0)*cj0*px))+(((0.0718)*cj3*x10794)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10818=((1.0)*sj6);
CheckValue<IkReal> x10819=IKPowWithIntegerCheck(sj3,-1);
if(!x10819.valid){
continue;
}
if( IKabs(((x10819.value)*((((cj6*r20))+(((-1.0)*r21*x10818)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x10818)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x10819.value)*((((cj6*r20))+(((-1.0)*r21*x10818))))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x10818))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x10819.value)*((((cj6*r20))+(((-1.0)*r21*x10818))))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x10818))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10820=IKsin(j4);
IkReal x10821=IKcos(j4);
IkReal x10822=(cj6*sj0);
IkReal x10823=((0.02626)*r10);
IkReal x10824=(sj0*sj6);
IkReal x10825=(cj5*r12);
IkReal x10826=(r11*sj5);
IkReal x10827=(r10*sj5);
IkReal x10828=(cj0*cj6);
IkReal x10829=((0.02626)*r01);
IkReal x10830=(cj0*sj6);
IkReal x10831=(r21*sj6);
IkReal x10832=((1.0)*cj5);
IkReal x10833=(cj6*r20);
IkReal x10834=((1.0)*r10);
IkReal x10835=((1.0)*r01);
IkReal x10836=(r00*sj5);
IkReal x10837=((1.0)*py);
IkReal x10838=((1.0)*sj5);
IkReal x10839=((0.02626)*r00);
IkReal x10840=((0.02626)*r11);
IkReal x10841=(sj3*x10820);
IkReal x10842=(sj3*x10821);
IkReal x10843=(cj3*x10820);
IkReal x10844=((1.0)*x10821);
evalcond[0]=((((-1.0)*x10831))+(((-1.0)*x10841))+x10833);
evalcond[1]=((((-1.0)*cj6*r21*x10838))+(((-1.0)*r20*sj6*x10838))+(((-1.0)*r22*x10832))+x10842);
evalcond[2]=((((-1.0)*x10822*x10834))+(((-1.0)*r00*x10828))+((r01*x10830))+((r11*x10824))+x10843);
evalcond[3]=((((-1.0)*x10844))+(((-1.0)*x10828*x10834))+((r00*x10822))+(((-1.0)*x10824*x10835))+((r11*x10830)));
evalcond[4]=((0.0001)+(((-0.0718)*x10842))+(((-0.02626)*x10841))+pz+(((-0.09746)*sj3))+(((0.02626)*x10833))+(((-0.02626)*x10831)));
evalcond[5]=(((sj0*x10825))+((cj0*cj5*r02))+(((-1.0)*cj3*x10844))+((x10824*x10827))+((x10822*x10826))+((r01*sj5*x10828))+((x10830*x10836)));
evalcond[6]=((((-1.0)*x10820))+(((-1.0)*r02*sj0*x10832))+((x10827*x10830))+(((-1.0)*sj5*x10822*x10835))+((x10826*x10828))+((cj0*x10825))+(((-1.0)*x10824*x10836)));
evalcond[7]=((0.1246)+(((-0.02626)*x10821))+(((-1.0)*x10823*x10828))+(((0.0718)*x10820))+((x10830*x10840))+(((-1.0)*cj0*x10837))+((px*sj0))+(((-1.0)*x10824*x10829))+((x10822*x10839)));
evalcond[8]=((0.1148)+(((-1.0)*x10822*x10823))+(((-1.0)*x10828*x10839))+(((0.0718)*cj3*x10821))+(((0.09746)*cj3))+((x10824*x10840))+((x10829*x10830))+(((-1.0)*cj0*px))+(((-1.0)*sj0*x10837))+(((0.02626)*x10843)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x10845=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x10845.valid){
continue;
}
CheckValue<IkReal> x10846 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x10846.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10845.value)))+(x10846.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x10847=IKsin(j4);
IkReal x10848=IKcos(j4);
IkReal x10849=(cj6*sj0);
IkReal x10850=((0.02626)*r10);
IkReal x10851=(sj0*sj6);
IkReal x10852=(cj5*r12);
IkReal x10853=(r11*sj5);
IkReal x10854=(r10*sj5);
IkReal x10855=(cj0*cj6);
IkReal x10856=((0.02626)*r01);
IkReal x10857=(cj0*sj6);
IkReal x10858=(r21*sj6);
IkReal x10859=((1.0)*cj5);
IkReal x10860=(cj6*r20);
IkReal x10861=((1.0)*r10);
IkReal x10862=((1.0)*r01);
IkReal x10863=(r00*sj5);
IkReal x10864=((1.0)*py);
IkReal x10865=((1.0)*sj5);
IkReal x10866=((0.02626)*r00);
IkReal x10867=((0.02626)*r11);
IkReal x10868=(sj3*x10847);
IkReal x10869=(sj3*x10848);
IkReal x10870=(cj3*x10847);
IkReal x10871=((1.0)*x10848);
evalcond[0]=((((-1.0)*x10868))+(((-1.0)*x10858))+x10860);
evalcond[1]=((((-1.0)*r20*sj6*x10865))+(((-1.0)*r22*x10859))+x10869+(((-1.0)*cj6*r21*x10865)));
evalcond[2]=((((-1.0)*x10849*x10861))+((r11*x10851))+(((-1.0)*r00*x10855))+((r01*x10857))+x10870);
evalcond[3]=((((-1.0)*x10851*x10862))+((r00*x10849))+((r11*x10857))+(((-1.0)*x10855*x10861))+(((-1.0)*x10871)));
evalcond[4]=((0.0001)+(((-0.0718)*x10869))+pz+(((0.02626)*x10860))+(((-0.09746)*sj3))+(((-0.02626)*x10858))+(((-0.02626)*x10868)));
evalcond[5]=(((r01*sj5*x10855))+(((-1.0)*cj3*x10871))+((cj0*cj5*r02))+((x10857*x10863))+((sj0*x10852))+((x10849*x10853))+((x10851*x10854)));
evalcond[6]=(((x10854*x10857))+(((-1.0)*x10851*x10863))+((cj0*x10852))+(((-1.0)*x10847))+((x10853*x10855))+(((-1.0)*sj5*x10849*x10862))+(((-1.0)*r02*sj0*x10859)));
evalcond[7]=((0.1246)+(((0.0718)*x10847))+((x10857*x10867))+(((-1.0)*cj0*x10864))+(((-0.02626)*x10848))+((x10849*x10866))+((px*sj0))+(((-1.0)*x10850*x10855))+(((-1.0)*x10851*x10856)));
evalcond[8]=((0.1148)+(((-1.0)*x10849*x10850))+((x10856*x10857))+(((0.0718)*cj3*x10848))+(((-1.0)*sj0*x10864))+((x10851*x10867))+(((-1.0)*x10855*x10866))+(((0.09746)*cj3))+(((0.02626)*x10870))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10872=(cj5*cj6);
IkReal x10873=(r11*sj0);
IkReal x10874=(cj6*sj5);
IkReal x10875=((1.0)*cj0);
IkReal x10876=(r10*sj6);
IkReal x10877=(sj0*sj5);
IkReal x10878=(r00*sj6);
IkReal x10879=(cj0*sj5);
IkReal x10880=((0.02626)*cj0);
IkReal x10881=(r01*sj6);
IkReal x10882=((1.0)*sj0);
IkReal x10883=(cj6*r10);
IkReal x10884=(cj5*sj0);
IkReal x10885=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959))))));
evalcond[1]=(((r21*x10872))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x10882*x10883))+((cj0*x10881))+(((-1.0)*x10875*x10885))+((sj6*x10873)));
evalcond[3]=((1.0)+((r02*x10879))+((r12*x10877))+(((-1.0)*cj5*x10875*x10878))+(((-1.0)*cj5*x10876*x10882))+(((-1.0)*x10872*x10873))+(((-1.0)*r01*x10872*x10875)));
evalcond[4]=(((x10876*x10877))+((cj0*r01*x10874))+((cj0*cj5*r02))+((x10878*x10879))+((r12*x10884))+((x10873*x10874)));
evalcond[5]=(((r12*x10879))+(((-1.0)*r11*x10872*x10875))+((r01*sj0*x10872))+(((-1.0)*cj5*x10875*x10876))+(((-1.0)*r02*x10877))+((x10878*x10884)));
evalcond[6]=((0.1148)+((x10880*x10881))+(((-1.0)*x10880*x10885))+(((-1.0)*px*x10875))+(((-0.02626)*sj0*x10883))+(((0.02626)*sj6*x10873))+(((-1.0)*py*x10882)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10886=(cj6*r21);
IkReal x10887=(r20*sj6);
IkReal x10888=(r21*sj6);
IkReal x10889=(cj1*sj5);
IkReal x10890=(cj5*r22);
IkReal x10891=((1.0)*sj1*sj5);
IkReal x10892=((1.0)*cj6*r20);
if( IKabs((((cj1*x10890))+(((-1.0)*sj1*x10892))+((x10887*x10889))+((x10886*x10889))+((sj1*x10888)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x10892))+((cj1*x10888))+(((-1.0)*x10886*x10891))+(((-1.0)*sj1*x10890))+(((-1.0)*x10887*x10891)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x10890))+(((-1.0)*sj1*x10892))+((x10887*x10889))+((x10886*x10889))+((sj1*x10888))))+IKsqr(((((-1.0)*cj1*x10892))+((cj1*x10888))+(((-1.0)*x10886*x10891))+(((-1.0)*sj1*x10890))+(((-1.0)*x10887*x10891))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj1*x10890))+(((-1.0)*sj1*x10892))+((x10887*x10889))+((x10886*x10889))+((sj1*x10888))), ((((-1.0)*cj1*x10892))+((cj1*x10888))+(((-1.0)*x10886*x10891))+(((-1.0)*sj1*x10890))+(((-1.0)*x10887*x10891))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10893=IKsin(j4);
IkReal x10894=IKcos(j4);
IkReal x10895=((0.02626)*sj6);
IkReal x10896=(r01*sj0);
IkReal x10897=(cj0*r11);
IkReal x10898=((0.02626)*cj6);
IkReal x10899=(cj0*r10);
IkReal x10900=((1.0)*cj5);
IkReal x10901=((1.0)*sj6);
IkReal x10902=(r00*sj0);
IkReal x10903=((1.0)*cj6);
IkReal x10904=(cj1*x10894);
IkReal x10905=(sj1*x10893);
IkReal x10906=(sj1*x10894);
IkReal x10907=(cj1*x10893);
IkReal x10908=(x10905+x10904);
evalcond[0]=((((-1.0)*r21*x10901))+((cj6*r20))+x10908);
evalcond[1]=((((-1.0)*r21*sj5*x10903))+(((-1.0)*r22*x10900))+(((-1.0)*r20*sj5*x10901))+(((-1.0)*x10906))+x10907);
evalcond[2]=(((cj6*x10902))+((sj6*x10897))+(((-1.0)*x10899*x10903))+(((-1.0)*x10907))+(((-1.0)*x10896*x10901))+x10906);
evalcond[3]=(((r20*x10898))+(((0.09736)*sj1))+(((0.02626)*x10905))+(((0.02626)*x10904))+(((0.0718)*x10906))+(((-0.0718)*x10907))+pz+(((-0.1246)*cj1))+(((-1.0)*r21*x10895)));
evalcond[4]=(((sj5*sj6*x10899))+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x10900))+(((-1.0)*sj5*x10896*x10903))+((cj6*sj5*x10897))+(((-1.0)*sj5*x10901*x10902))+x10908);
evalcond[5]=((((-0.1246)*sj1))+(((-0.09736)*cj1))+(((0.02626)*x10906))+(((-1.0)*x10895*x10896))+(((-0.0718)*x10905))+(((-0.0718)*x10904))+(((-1.0)*x10898*x10899))+((x10895*x10897))+(((-0.02626)*x10907))+((px*sj0))+((x10898*x10902))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10909=(cj5*cj6);
IkReal x10910=(r11*sj0);
IkReal x10911=(cj6*sj5);
IkReal x10912=((1.0)*cj0);
IkReal x10913=(r10*sj6);
IkReal x10914=(sj0*sj5);
IkReal x10915=(r00*sj6);
IkReal x10916=(cj0*sj5);
IkReal x10917=((0.02626)*cj0);
IkReal x10918=(r01*sj6);
IkReal x10919=((1.0)*sj0);
IkReal x10920=(cj6*r10);
IkReal x10921=(cj5*sj0);
IkReal x10922=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959))))));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x10909)));
evalcond[2]=((((-1.0)*x10912*x10922))+(((-1.0)*x10919*x10920))+((sj6*x10910))+((cj0*x10918)));
evalcond[3]=((-1.0)+(((-1.0)*x10909*x10910))+(((-1.0)*r01*x10909*x10912))+((r02*x10916))+((r12*x10914))+(((-1.0)*cj5*x10913*x10919))+(((-1.0)*cj5*x10912*x10915)));
evalcond[4]=(((x10910*x10911))+((x10913*x10914))+((cj0*cj5*r02))+((x10915*x10916))+((r12*x10921))+((cj0*r01*x10911)));
evalcond[5]=((((-1.0)*r02*x10914))+((x10915*x10921))+((r01*sj0*x10909))+((r12*x10916))+(((-1.0)*r11*x10909*x10912))+(((-1.0)*cj5*x10912*x10913)));
evalcond[6]=((0.1148)+(((-0.02626)*sj0*x10920))+(((0.02626)*sj6*x10910))+(((-1.0)*py*x10919))+(((-1.0)*x10917*x10922))+(((-1.0)*px*x10912))+((x10917*x10918)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10923=(cj5*r22);
IkReal x10924=(cj6*r20);
IkReal x10925=(r21*sj1);
IkReal x10926=(cj6*sj5);
IkReal x10927=(cj1*r21);
IkReal x10928=(r20*sj5*sj6);
if( IKabs((((sj1*x10924))+(((-1.0)*sj6*x10925))+((x10926*x10927))+((cj1*x10923))+((cj1*x10928)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x10928))+((sj1*x10923))+((sj6*x10927))+((x10925*x10926))+(((-1.0)*cj1*x10924)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x10924))+(((-1.0)*sj6*x10925))+((x10926*x10927))+((cj1*x10923))+((cj1*x10928))))+IKsqr((((sj1*x10928))+((sj1*x10923))+((sj6*x10927))+((x10925*x10926))+(((-1.0)*cj1*x10924))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj1*x10924))+(((-1.0)*sj6*x10925))+((x10926*x10927))+((cj1*x10923))+((cj1*x10928))), (((sj1*x10928))+((sj1*x10923))+((sj6*x10927))+((x10925*x10926))+(((-1.0)*cj1*x10924))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10929=IKcos(j4);
IkReal x10930=IKsin(j4);
IkReal x10931=((0.02626)*sj6);
IkReal x10932=(r01*sj0);
IkReal x10933=(cj0*sj6);
IkReal x10934=((0.02626)*cj6);
IkReal x10935=(cj0*r10);
IkReal x10936=((1.0)*cj5);
IkReal x10937=((1.0)*sj6);
IkReal x10938=(r00*sj0);
IkReal x10939=((1.0)*cj6);
IkReal x10940=(cj0*r11);
IkReal x10941=(sj1*x10929);
IkReal x10942=(cj1*x10930);
IkReal x10943=(cj1*x10929);
IkReal x10944=(sj1*x10930);
IkReal x10945=(x10942+x10941);
evalcond[0]=((((-1.0)*r21*x10937))+(((-1.0)*x10944))+((cj6*r20))+x10943);
evalcond[1]=((((-1.0)*r22*x10936))+(((-1.0)*r20*sj5*x10937))+(((-1.0)*r21*sj5*x10939))+x10945);
evalcond[2]=(((r11*x10933))+((cj6*x10938))+(((-1.0)*x10932*x10937))+(((-1.0)*x10935*x10939))+x10945);
evalcond[3]=((((-0.02626)*x10944))+(((-1.0)*r21*x10931))+(((-0.09756)*sj1))+pz+((r20*x10934))+(((-0.0718)*x10942))+(((-0.0718)*x10941))+(((-0.1246)*cj1))+(((0.02626)*x10943)));
evalcond[4]=(((cj6*sj5*x10940))+((cj0*cj5*r12))+(((-1.0)*sj5*x10937*x10938))+(((-1.0)*x10943))+(((-1.0)*r02*sj0*x10936))+(((-1.0)*sj5*x10932*x10939))+((r10*sj5*x10933))+x10944);
evalcond[5]=((((-1.0)*x10931*x10932))+(((-0.1246)*sj1))+(((0.09756)*cj1))+((x10931*x10940))+((x10934*x10938))+(((0.0718)*x10943))+(((-1.0)*x10934*x10935))+((px*sj0))+(((-0.0718)*x10944))+(((-1.0)*cj0*py))+(((0.02626)*x10942))+(((0.02626)*x10941)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10946=(cj0*sj5);
IkReal x10947=(cj5*cj6);
IkReal x10948=((1.0)*sj5);
IkReal x10949=((1.0)*cj0);
IkReal x10950=((1.0)*sj0);
IkReal x10951=(cj5*sj6);
IkReal x10952=(r10*x10951);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=(((r21*x10947))+(((-1.0)*r22*x10948))+((r20*x10951))+(((-1.0)*cj2)));
evalcond[2]=((((-1.0)*r11*x10947*x10950))+(((-1.0)*sj2))+((r12*sj0*sj5))+(((-1.0)*r01*x10947*x10949))+(((-1.0)*x10950*x10952))+((r02*x10946))+(((-1.0)*r00*x10949*x10951)));
evalcond[3]=(((r01*sj0*x10947))+((r12*x10946))+(((-1.0)*x10949*x10952))+(((-1.0)*r02*sj0*x10948))+((r00*sj0*x10951))+(((-1.0)*r11*x10947*x10949)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
IkReal x10953=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*sj6*x10953))+((cj6*r20)))))+(IKabs(((((-1.0)*cj6*sj5*x10953))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x10954=(cj5*cj6);
IkReal x10955=((1.0)*sj0);
IkReal x10956=(r21*sj6);
IkReal x10957=(cj0*sj5);
IkReal x10958=((1.0)*r22);
IkReal x10959=(cj6*r20);
IkReal x10960=(cj5*sj6);
IkReal x10961=((1.0)*cj0);
IkReal x10962=((1.0)*sj5);
IkReal x10963=(x10960*x10961);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x10960))+(((-1.0)*sj5*x10958))+((r21*x10954)));
evalcond[2]=((((-1.0)*x10956))+x10959);
evalcond[3]=((((-1.0)*r20*sj6*x10962))+(((-1.0)*cj5*x10958))+(((-1.0)*cj6*r21*x10962)));
evalcond[4]=((((-1.0)*r11*x10954*x10955))+(((-1.0)*r00*x10963))+((r02*x10957))+(((-1.0)*r10*x10955*x10960))+(((-1.0)*r01*x10954*x10961))+((r12*sj0*sj5)));
evalcond[5]=((((-1.0)*r11*x10954*x10961))+((r01*sj0*x10954))+(((-1.0)*r10*x10963))+((r00*sj0*x10960))+((r12*x10957))+(((-1.0)*r02*sj5*x10955)));
evalcond[6]=((-0.2413)+(((0.02626)*x10959))+(((-0.02626)*x10956))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x10964=(cj0*cj6);
IkReal x10965=(cj6*sj0);
IkReal x10966=(cj0*sj6);
IkReal x10967=((1.0)*sj0*sj6);
if( IKabs((((r11*x10966))+((r00*x10965))+(((-1.0)*r10*x10964))+(((-1.0)*r01*x10967)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x10966))+((r00*x10964))+((r10*x10965))+(((-1.0)*r11*x10967)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x10966))+((r00*x10965))+(((-1.0)*r10*x10964))+(((-1.0)*r01*x10967))))+IKsqr(((((-1.0)*r01*x10966))+((r00*x10964))+((r10*x10965))+(((-1.0)*r11*x10967))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x10966))+((r00*x10965))+(((-1.0)*r10*x10964))+(((-1.0)*r01*x10967))), ((((-1.0)*r01*x10966))+((r00*x10964))+((r10*x10965))+(((-1.0)*r11*x10967))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x10968=IKsin(j4);
IkReal x10969=IKcos(j4);
IkReal x10970=(cj6*sj0);
IkReal x10971=((0.02626)*r10);
IkReal x10972=(r11*sj6);
IkReal x10973=(r11*sj5);
IkReal x10974=(sj0*sj6);
IkReal x10975=(r10*sj5);
IkReal x10976=((0.02626)*r01);
IkReal x10977=(cj5*r12);
IkReal x10978=(cj0*cj6);
IkReal x10979=((1.0)*sj0);
IkReal x10980=(cj5*r02);
IkReal x10981=(cj0*sj6);
IkReal x10982=((1.0)*r10);
IkReal x10983=((1.0)*r01);
IkReal x10984=(r00*sj5);
IkReal x10985=((1.0)*cj0);
IkReal x10986=((0.02626)*r00);
evalcond[0]=(((r01*x10981))+((sj0*x10972))+(((-1.0)*x10970*x10982))+x10969+(((-1.0)*r00*x10978)));
evalcond[1]=(((r00*x10970))+((cj0*x10972))+(((-1.0)*x10978*x10982))+(((-1.0)*x10968))+(((-1.0)*x10974*x10983)));
evalcond[2]=(((sj0*x10977))+((cj0*x10980))+((x10981*x10984))+((x10974*x10975))+((r01*sj5*x10978))+((x10970*x10973))+x10968);
evalcond[3]=(((x10975*x10981))+(((-1.0)*sj5*x10970*x10983))+(((-1.0)*x10974*x10984))+((cj0*x10977))+(((-1.0)*x10979*x10980))+((x10973*x10978))+x10969);
evalcond[4]=((-0.09736)+(((-1.0)*x10971*x10978))+(((-1.0)*py*x10985))+(((-0.02626)*x10968))+((x10970*x10986))+(((-0.0718)*x10969))+(((0.02626)*cj0*x10972))+((px*sj0))+(((-1.0)*x10974*x10976)));
evalcond[5]=((-0.0001)+(((0.02626)*sj0*x10972))+(((-1.0)*x10970*x10971))+(((0.02626)*x10969))+(((-0.0718)*x10968))+(((-1.0)*px*x10985))+(((-1.0)*x10978*x10986))+((x10976*x10981))+(((-1.0)*py*x10979)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10987=(cj5*cj6);
IkReal x10988=(r11*sj0);
IkReal x10989=(cj6*sj5);
IkReal x10990=((1.0)*cj0);
IkReal x10991=(r10*sj6);
IkReal x10992=(sj0*sj5);
IkReal x10993=(r00*sj6);
IkReal x10994=(cj0*sj5);
IkReal x10995=((0.02626)*cj0);
IkReal x10996=(r01*sj6);
IkReal x10997=((1.0)*sj0);
IkReal x10998=(cj6*r10);
IkReal x10999=(cj5*sj0);
IkReal x11000=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x10987))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x10997*x10998))+((cj0*x10996))+(((-1.0)*x10990*x11000))+((sj6*x10988)));
evalcond[3]=((-1.0)+((r12*x10992))+(((-1.0)*x10987*x10988))+(((-1.0)*r01*x10987*x10990))+(((-1.0)*cj5*x10991*x10997))+((r02*x10994))+(((-1.0)*cj5*x10990*x10993)));
evalcond[4]=(((r12*x10999))+((cj0*r01*x10989))+((cj0*cj5*r02))+((x10993*x10994))+((x10991*x10992))+((x10988*x10989)));
evalcond[5]=(((r12*x10994))+((r01*sj0*x10987))+((x10993*x10999))+(((-1.0)*r11*x10987*x10990))+(((-1.0)*r02*x10992))+(((-1.0)*cj5*x10990*x10991)));
evalcond[6]=((-0.1168)+(((-1.0)*py*x10997))+(((-1.0)*x10995*x11000))+((x10995*x10996))+(((-0.02626)*sj0*x10998))+(((0.02626)*sj6*x10988))+(((-1.0)*px*x10990)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11001=IKsin(j4);
IkReal x11002=IKcos(j4);
IkReal x11003=(cj0*sj6);
IkReal x11004=((0.02626)*sj6);
IkReal x11005=(r01*sj0);
IkReal x11006=((0.02626)*cj6);
IkReal x11007=(cj0*r10);
IkReal x11008=((1.0)*cj5);
IkReal x11009=((1.0)*cj6);
IkReal x11010=((1.0)*sj6);
IkReal x11011=(r00*sj0);
IkReal x11012=((1.0)*x11001);
evalcond[0]=(((cj6*r20))+(((-1.0)*x11002))+(((-1.0)*r21*x11010)));
evalcond[1]=((((-1.0)*x11012))+(((-1.0)*r22*x11008))+(((-1.0)*r21*sj5*x11009))+(((-1.0)*r20*sj5*x11010)));
evalcond[2]=((-0.1264)+(((-0.02626)*x11002))+((r20*x11006))+pz+(((0.0718)*x11001))+(((-1.0)*r21*x11004)));
evalcond[3]=((((-1.0)*x11012))+(((-1.0)*x11007*x11009))+(((-1.0)*x11005*x11010))+((r11*x11003))+((cj6*x11011)));
evalcond[4]=(((cj0*cj5*r12))+x11002+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x11005*x11009))+((r10*sj5*x11003))+(((-1.0)*sj5*x11010*x11011))+(((-1.0)*r02*sj0*x11008)));
evalcond[5]=((-0.09736)+(((-0.02626)*x11001))+(((-1.0)*x11004*x11005))+((px*sj0))+(((0.02626)*r11*x11003))+(((-0.0718)*x11002))+(((-1.0)*x11006*x11007))+(((-1.0)*cj0*py))+((x11006*x11011)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11013=(cj5*cj6);
IkReal x11014=(r11*sj0);
IkReal x11015=(cj6*sj5);
IkReal x11016=((1.0)*cj0);
IkReal x11017=(r10*sj6);
IkReal x11018=(sj0*sj5);
IkReal x11019=(r00*sj6);
IkReal x11020=(cj0*sj5);
IkReal x11021=((0.02626)*cj0);
IkReal x11022=(r01*sj6);
IkReal x11023=((1.0)*sj0);
IkReal x11024=(cj6*r10);
IkReal x11025=(cj5*sj0);
IkReal x11026=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x11013))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x11023*x11024))+((sj6*x11014))+((cj0*x11022))+(((-1.0)*x11016*x11026)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x11016*x11019))+(((-1.0)*cj5*x11017*x11023))+(((-1.0)*r01*x11013*x11016))+(((-1.0)*x11013*x11014))+((r12*x11018))+((r02*x11020)));
evalcond[4]=(((x11017*x11018))+((cj0*cj5*r02))+((x11019*x11020))+((r12*x11025))+((x11014*x11015))+((cj0*r01*x11015)));
evalcond[5]=(((x11019*x11025))+(((-1.0)*cj5*x11016*x11017))+((r01*sj0*x11013))+((r12*x11020))+(((-1.0)*r11*x11013*x11016))+(((-1.0)*r02*x11018)));
evalcond[6]=((0.1148)+(((-1.0)*px*x11016))+(((-0.02626)*sj0*x11024))+((x11021*x11022))+(((-1.0)*py*x11023))+(((0.02626)*sj6*x11014))+(((-1.0)*x11021*x11026)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11027=IKcos(j4);
IkReal x11028=IKsin(j4);
IkReal x11029=(cj0*sj6);
IkReal x11030=((0.02626)*sj6);
IkReal x11031=(r01*sj0);
IkReal x11032=((0.02626)*cj6);
IkReal x11033=(cj0*r10);
IkReal x11034=((1.0)*cj5);
IkReal x11035=((1.0)*cj6);
IkReal x11036=((1.0)*sj6);
IkReal x11037=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x11036))+x11027+((cj6*r20)));
evalcond[1]=((((-1.0)*r21*sj5*x11035))+(((-1.0)*r20*sj5*x11036))+x11028+(((-1.0)*r22*x11034)));
evalcond[2]=((-0.1246)+((r20*x11032))+(((-1.0)*r21*x11030))+(((0.02626)*x11027))+pz+(((-0.0718)*x11028)));
evalcond[3]=((((-1.0)*x11028))+((cj6*x11037))+(((-1.0)*x11031*x11036))+(((-1.0)*x11033*x11035))+((r11*x11029)));
evalcond[4]=((((-1.0)*sj5*x11036*x11037))+((cj0*cj5*r12))+((r10*sj5*x11029))+(((-1.0)*r02*sj0*x11034))+x11027+(((-1.0)*sj5*x11031*x11035))+((cj0*cj6*r11*sj5)));
evalcond[5]=((-0.09736)+(((-0.02626)*x11028))+(((-1.0)*x11032*x11033))+(((-1.0)*x11030*x11031))+((px*sj0))+(((0.02626)*r11*x11029))+(((-0.0718)*x11027))+(((-1.0)*cj0*py))+((x11032*x11037)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11038=((1.0)*sj5);
IkReal x11039=((1.0)*sj6);
CheckValue<IkReal> x11040=IKPowWithIntegerCheck(sj2,-1);
if(!x11040.valid){
continue;
}
CheckValue<IkReal> x11041=IKPowWithIntegerCheck(cj2,-1);
if(!x11041.valid){
continue;
}
if( IKabs(((x11040.value)*(((((-1.0)*r20*sj6*x11038))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x11038)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11041.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x11039))+(((-1.0)*cj0*r01*x11039))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11040.value)*(((((-1.0)*r20*sj6*x11038))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x11038))))))+IKsqr(((x11041.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x11039))+(((-1.0)*cj0*r01*x11039))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x11040.value)*(((((-1.0)*r20*sj6*x11038))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x11038))))), ((x11041.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x11039))+(((-1.0)*cj0*r01*x11039))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11042=IKcos(j4);
IkReal x11043=IKsin(j4);
IkReal x11044=(sj0*sj6);
IkReal x11045=((0.02626)*r01);
IkReal x11046=(cj5*r12);
IkReal x11047=(cj6*sj0);
IkReal x11048=(r11*sj5);
IkReal x11049=(r10*sj5);
IkReal x11050=(cj0*sj6);
IkReal x11051=((1.0)*cj5);
IkReal x11052=((0.02626)*cj6);
IkReal x11053=(r21*sj6);
IkReal x11054=((1.0)*r01);
IkReal x11055=(r00*sj5);
IkReal x11056=((1.0)*py);
IkReal x11057=((1.0)*sj5);
IkReal x11058=((1.0)*cj0);
IkReal x11059=((0.02626)*r11);
IkReal x11060=(cj0*cj6);
IkReal x11061=(r10*x11060);
IkReal x11062=(cj2*x11043);
IkReal x11063=(cj2*x11042);
IkReal x11064=((1.0)*x11043);
IkReal x11065=(sj2*x11042);
evalcond[0]=((((-1.0)*x11053))+((cj6*r20))+(((-1.0)*x11065)));
evalcond[1]=((((-1.0)*r22*x11051))+(((-1.0)*sj2*x11064))+(((-1.0)*r20*sj6*x11057))+(((-1.0)*cj6*r21*x11057)));
evalcond[2]=(((r11*x11044))+x11063+(((-1.0)*r10*x11047))+((r01*x11050))+(((-1.0)*cj6*r00*x11058)));
evalcond[3]=((((-1.0)*x11064))+((r00*x11047))+(((-1.0)*cj6*r10*x11058))+(((-1.0)*x11044*x11054))+((r11*x11050)));
evalcond[4]=((-0.1255)+(((-0.02626)*x11053))+((r20*x11052))+(((0.0718)*sj2*x11043))+(((-0.02626)*x11065))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+pz);
evalcond[5]=(((cj0*cj5*r02))+((sj0*x11046))+((x11044*x11049))+((x11047*x11048))+x11062+((x11050*x11055))+((r01*sj5*x11060)));
evalcond[6]=(((x11048*x11060))+(((-1.0)*x11044*x11055))+((cj0*x11046))+x11042+(((-1.0)*r02*sj0*x11051))+((x11049*x11050))+(((-1.0)*sj5*x11047*x11054)));
evalcond[7]=((-0.09736)+(((-0.0718)*x11042))+(((-1.0)*cj0*r10*x11052))+(((-1.0)*cj0*x11056))+((x11050*x11059))+((px*sj0))+(((0.02626)*r00*x11047))+(((-1.0)*x11044*x11045))+(((-0.02626)*x11043)));
evalcond[8]=((-0.001)+(((-0.02626)*r10*x11047))+(((0.02626)*x11063))+(((-1.0)*cj0*r00*x11052))+(((-0.1158)*sj2))+((x11044*x11059))+(((-1.0)*sj0*x11056))+(((-1.0)*px*x11058))+(((0.0009)*cj2))+((x11045*x11050))+(((-0.0718)*x11062)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11066=((1.0)*sj6);
CheckValue<IkReal> x11067=IKPowWithIntegerCheck(sj2,-1);
if(!x11067.valid){
continue;
}
if( IKabs(((((-1.0)*r01*sj0*x11066))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11067.value)*((((cj6*r20))+(((-1.0)*r21*x11066)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*sj0*x11066))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))))+IKsqr(((x11067.value)*((((cj6*r20))+(((-1.0)*r21*x11066))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*sj0*x11066))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))), ((x11067.value)*((((cj6*r20))+(((-1.0)*r21*x11066))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11068=IKcos(j4);
IkReal x11069=IKsin(j4);
IkReal x11070=(sj0*sj6);
IkReal x11071=((0.02626)*r01);
IkReal x11072=(cj5*r12);
IkReal x11073=(cj6*sj0);
IkReal x11074=(r11*sj5);
IkReal x11075=(r10*sj5);
IkReal x11076=(cj0*sj6);
IkReal x11077=((1.0)*cj5);
IkReal x11078=((0.02626)*cj6);
IkReal x11079=(r21*sj6);
IkReal x11080=((1.0)*r01);
IkReal x11081=(r00*sj5);
IkReal x11082=((1.0)*py);
IkReal x11083=((1.0)*sj5);
IkReal x11084=((1.0)*cj0);
IkReal x11085=((0.02626)*r11);
IkReal x11086=(cj0*cj6);
IkReal x11087=(r10*x11086);
IkReal x11088=(cj2*x11069);
IkReal x11089=(cj2*x11068);
IkReal x11090=((1.0)*x11069);
IkReal x11091=(sj2*x11068);
evalcond[0]=((((-1.0)*x11091))+((cj6*r20))+(((-1.0)*x11079)));
evalcond[1]=((((-1.0)*cj6*r21*x11083))+(((-1.0)*r20*sj6*x11083))+(((-1.0)*sj2*x11090))+(((-1.0)*r22*x11077)));
evalcond[2]=((((-1.0)*r10*x11073))+((r11*x11070))+x11089+(((-1.0)*cj6*r00*x11084))+((r01*x11076)));
evalcond[3]=((((-1.0)*x11090))+(((-1.0)*x11070*x11080))+((r11*x11076))+((r00*x11073))+(((-1.0)*cj6*r10*x11084)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((-0.02626)*x11079))+(((-0.0009)*sj2))+((r20*x11078))+pz+(((-0.02626)*x11091))+(((0.0718)*sj2*x11069)));
evalcond[5]=(((cj0*cj5*r02))+((x11073*x11074))+x11088+((r01*sj5*x11086))+((x11076*x11081))+((sj0*x11072))+((x11070*x11075)));
evalcond[6]=((((-1.0)*sj5*x11073*x11080))+((x11074*x11086))+(((-1.0)*r02*sj0*x11077))+(((-1.0)*x11070*x11081))+x11068+((x11075*x11076))+((cj0*x11072)));
evalcond[7]=((-0.09736)+(((-0.02626)*x11069))+(((-1.0)*x11070*x11071))+(((-1.0)*cj0*x11082))+(((0.02626)*r00*x11073))+((x11076*x11085))+((px*sj0))+(((-0.0718)*x11068))+(((-1.0)*cj0*r10*x11078)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((0.02626)*x11089))+((x11070*x11085))+(((0.0009)*cj2))+(((-1.0)*sj0*x11082))+((x11071*x11076))+(((-0.0718)*x11088))+(((-0.02626)*r10*x11073))+(((-1.0)*px*x11084))+(((-1.0)*cj0*r00*x11078)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11092=((1.0)*r21);
CheckValue<IkReal> x11093=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x11093.valid){
continue;
}
CheckValue<IkReal> x11094 = IKatan2WithCheck(IkReal(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x11092))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x11092))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x11094.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11093.value)))+(x11094.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11095=IKcos(j4);
IkReal x11096=IKsin(j4);
IkReal x11097=(sj0*sj6);
IkReal x11098=((0.02626)*r01);
IkReal x11099=(cj5*r12);
IkReal x11100=(cj6*sj0);
IkReal x11101=(r11*sj5);
IkReal x11102=(r10*sj5);
IkReal x11103=(cj0*sj6);
IkReal x11104=((1.0)*cj5);
IkReal x11105=((0.02626)*cj6);
IkReal x11106=(r21*sj6);
IkReal x11107=((1.0)*r01);
IkReal x11108=(r00*sj5);
IkReal x11109=((1.0)*py);
IkReal x11110=((1.0)*sj5);
IkReal x11111=((1.0)*cj0);
IkReal x11112=((0.02626)*r11);
IkReal x11113=(cj0*cj6);
IkReal x11114=(r10*x11113);
IkReal x11115=(cj2*x11096);
IkReal x11116=(cj2*x11095);
IkReal x11117=((1.0)*x11096);
IkReal x11118=(sj2*x11095);
evalcond[0]=((((-1.0)*x11106))+(((-1.0)*x11118))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj6*x11110))+(((-1.0)*r22*x11104))+(((-1.0)*sj2*x11117))+(((-1.0)*cj6*r21*x11110)));
evalcond[2]=((((-1.0)*r10*x11100))+((r11*x11097))+x11116+(((-1.0)*cj6*r00*x11111))+((r01*x11103)));
evalcond[3]=((((-1.0)*x11097*x11107))+(((-1.0)*cj6*r10*x11111))+((r11*x11103))+(((-1.0)*x11117))+((r00*x11100)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((-0.0009)*sj2))+(((0.0718)*sj2*x11096))+pz+(((-0.02626)*x11106))+(((-0.02626)*x11118))+((r20*x11105)));
evalcond[5]=(((cj0*cj5*r02))+((x11103*x11108))+((x11100*x11101))+((sj0*x11099))+x11115+((x11097*x11102))+((r01*sj5*x11113)));
evalcond[6]=(((cj0*x11099))+((x11102*x11103))+(((-1.0)*r02*sj0*x11104))+((x11101*x11113))+x11095+(((-1.0)*sj5*x11100*x11107))+(((-1.0)*x11097*x11108)));
evalcond[7]=((-0.09736)+((x11103*x11112))+(((-0.0718)*x11095))+(((-1.0)*cj0*x11109))+(((0.02626)*r00*x11100))+((px*sj0))+(((-0.02626)*x11096))+(((-1.0)*x11097*x11098))+(((-1.0)*cj0*r10*x11105)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-1.0)*px*x11111))+(((0.0009)*cj2))+(((-0.02626)*r10*x11100))+(((-1.0)*sj0*x11109))+((x11098*x11103))+((x11097*x11112))+(((0.02626)*x11116))+(((-1.0)*cj0*r00*x11105))+(((-0.0718)*x11115)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11119=(cj0*sj5);
IkReal x11120=(cj5*cj6);
IkReal x11121=((1.0)*sj5);
IkReal x11122=((1.0)*cj0);
IkReal x11123=((1.0)*sj0);
IkReal x11124=(cj5*sj6);
IkReal x11125=(r10*x11124);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=(((r21*x11120))+cj2+(((-1.0)*r22*x11121))+((r20*x11124)));
evalcond[2]=(sj2+((r02*x11119))+(((-1.0)*r11*x11120*x11123))+(((-1.0)*r00*x11122*x11124))+((r12*sj0*sj5))+(((-1.0)*x11123*x11125))+(((-1.0)*r01*x11120*x11122)));
evalcond[3]=((((-1.0)*r11*x11120*x11122))+((r01*sj0*x11120))+(((-1.0)*r02*sj0*x11121))+(((-1.0)*x11122*x11125))+((r12*x11119))+((r00*sj0*x11124)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
IkReal x11126=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs((((cj6*r20))+(((-1.0)*sj6*x11126)))))+(IKabs(((((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6))+(((-1.0)*cj6*sj5*x11126))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x11127=(cj5*cj6);
IkReal x11128=((1.0)*sj0);
IkReal x11129=(r21*sj6);
IkReal x11130=(cj0*sj5);
IkReal x11131=((1.0)*r22);
IkReal x11132=(cj6*r20);
IkReal x11133=(cj5*sj6);
IkReal x11134=((1.0)*cj0);
IkReal x11135=((1.0)*sj5);
IkReal x11136=(x11133*x11134);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x11127))+((r20*x11133))+(((-1.0)*sj5*x11131)));
evalcond[2]=((((-1.0)*x11129))+x11132);
evalcond[3]=((((-1.0)*r20*sj6*x11135))+(((-1.0)*cj6*r21*x11135))+(((-1.0)*cj5*x11131)));
evalcond[4]=(((r02*x11130))+(((-1.0)*r01*x11127*x11134))+(((-1.0)*r10*x11128*x11133))+((r12*sj0*sj5))+(((-1.0)*r00*x11136))+(((-1.0)*r11*x11127*x11128)));
evalcond[5]=((((-1.0)*r10*x11136))+(((-1.0)*r11*x11127*x11134))+((r01*sj0*x11127))+((r00*sj0*x11133))+((r12*x11130))+(((-1.0)*r02*sj5*x11128)));
evalcond[6]=((-0.2413)+pz+(((0.02626)*x11132))+(((-0.02626)*x11129)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11137=(cj0*cj6);
IkReal x11138=(sj0*sj6);
IkReal x11139=((1.0)*r11);
IkReal x11140=(cj6*sj0);
IkReal x11141=(cj0*sj6);
if( IKabs(((((-1.0)*x11139*x11141))+((r10*x11137))+(((-1.0)*r00*x11140))+((r01*x11138)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x11141))+((r10*x11140))+(((-1.0)*x11138*x11139))+((r00*x11137)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x11139*x11141))+((r10*x11137))+(((-1.0)*r00*x11140))+((r01*x11138))))+IKsqr(((((-1.0)*r01*x11141))+((r10*x11140))+(((-1.0)*x11138*x11139))+((r00*x11137))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x11139*x11141))+((r10*x11137))+(((-1.0)*r00*x11140))+((r01*x11138))), ((((-1.0)*r01*x11141))+((r10*x11140))+(((-1.0)*x11138*x11139))+((r00*x11137))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11142=IKsin(j4);
IkReal x11143=IKcos(j4);
IkReal x11144=(cj6*sj0);
IkReal x11145=((0.02626)*r10);
IkReal x11146=(r11*sj6);
IkReal x11147=(r11*sj5);
IkReal x11148=(sj0*sj6);
IkReal x11149=(r10*sj5);
IkReal x11150=(cj0*cj6);
IkReal x11151=((0.02626)*r01);
IkReal x11152=(cj5*r12);
IkReal x11153=((1.0)*sj0);
IkReal x11154=(cj5*r02);
IkReal x11155=(cj0*sj6);
IkReal x11156=((1.0)*r10);
IkReal x11157=((1.0)*r01);
IkReal x11158=(r00*sj5);
IkReal x11159=((1.0)*cj0);
IkReal x11160=((0.02626)*r00);
evalcond[0]=(((r01*x11155))+((sj0*x11146))+x11143+(((-1.0)*r00*x11150))+(((-1.0)*x11144*x11156)));
evalcond[1]=(((r00*x11144))+((cj0*x11146))+(((-1.0)*x11150*x11156))+(((-1.0)*x11148*x11157))+x11142);
evalcond[2]=(((sj0*x11152))+((cj0*x11154))+x11142+((x11144*x11147))+((x11148*x11149))+((r01*sj5*x11150))+((x11155*x11158)));
evalcond[3]=(((x11147*x11150))+(((-1.0)*x11143))+((cj0*x11152))+(((-1.0)*x11148*x11158))+(((-1.0)*x11153*x11154))+((x11149*x11155))+(((-1.0)*sj5*x11144*x11157)));
evalcond[4]=((0.09756)+(((-1.0)*py*x11159))+(((-1.0)*x11148*x11151))+((x11144*x11160))+(((0.0718)*x11143))+((px*sj0))+(((0.02626)*cj0*x11146))+(((-1.0)*x11145*x11150))+(((0.02626)*x11142)));
evalcond[5]=((-0.0001)+(((-1.0)*x11150*x11160))+(((-1.0)*py*x11153))+(((0.02626)*sj0*x11146))+(((-0.0718)*x11142))+((x11151*x11155))+(((-1.0)*px*x11159))+(((-1.0)*x11144*x11145))+(((0.02626)*x11143)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11161=(cj5*cj6);
IkReal x11162=(r11*sj0);
IkReal x11163=(cj6*sj5);
IkReal x11164=((1.0)*cj0);
IkReal x11165=(r10*sj6);
IkReal x11166=(sj0*sj5);
IkReal x11167=(r00*sj6);
IkReal x11168=(cj0*sj5);
IkReal x11169=((0.02626)*cj0);
IkReal x11170=(r01*sj6);
IkReal x11171=((1.0)*sj0);
IkReal x11172=(cj6*r10);
IkReal x11173=(cj5*sj0);
IkReal x11174=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x11161)));
evalcond[2]=(((sj6*x11162))+((cj0*x11170))+(((-1.0)*x11171*x11172))+(((-1.0)*x11164*x11174)));
evalcond[3]=((1.0)+((r12*x11166))+(((-1.0)*x11161*x11162))+(((-1.0)*cj5*x11165*x11171))+(((-1.0)*cj5*x11164*x11167))+((r02*x11168))+(((-1.0)*r01*x11161*x11164)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x11173))+((cj0*r01*x11163))+((x11162*x11163))+((x11165*x11166))+((x11167*x11168)));
evalcond[5]=(((r12*x11168))+((x11167*x11173))+(((-1.0)*r02*x11166))+(((-1.0)*cj5*x11164*x11165))+((r01*sj0*x11161))+(((-1.0)*r11*x11161*x11164)));
evalcond[6]=((-0.1168)+(((0.02626)*sj6*x11162))+(((-1.0)*py*x11171))+((x11169*x11170))+(((-1.0)*x11169*x11174))+(((-1.0)*px*x11164))+(((-0.02626)*sj0*x11172)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11175=IKsin(j4);
IkReal x11176=IKcos(j4);
IkReal x11177=(cj0*sj6);
IkReal x11178=((0.02626)*cj6);
IkReal x11179=(cj0*r10);
IkReal x11180=((0.02626)*sj6);
IkReal x11181=(r01*sj0);
IkReal x11182=((1.0)*cj5);
IkReal x11183=((1.0)*cj6);
IkReal x11184=((1.0)*sj6);
IkReal x11185=(r00*sj0);
IkReal x11186=((1.0)*x11176);
evalcond[0]=((((-1.0)*x11186))+(((-1.0)*r21*x11184))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj5*x11184))+(((-1.0)*r22*x11182))+(((-1.0)*r21*sj5*x11183))+(((-1.0)*x11175)));
evalcond[2]=((-0.1264)+(((-0.02626)*x11176))+((r20*x11178))+(((0.0718)*x11175))+(((-1.0)*r21*x11180))+pz);
evalcond[3]=(((r11*x11177))+(((-1.0)*x11181*x11184))+((cj6*x11185))+x11175+(((-1.0)*x11179*x11183)));
evalcond[4]=(((r10*sj5*x11177))+(((-1.0)*x11186))+(((-1.0)*sj5*x11181*x11183))+((cj0*cj5*r12))+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x11182))+(((-1.0)*sj5*x11184*x11185)));
evalcond[5]=((0.09756)+(((0.02626)*r11*x11177))+(((-1.0)*x11180*x11181))+(((0.02626)*x11175))+((x11178*x11185))+(((0.0718)*x11176))+((px*sj0))+(((-1.0)*x11178*x11179))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11187=(cj5*cj6);
IkReal x11188=(r11*sj0);
IkReal x11189=(cj6*sj5);
IkReal x11190=((1.0)*cj0);
IkReal x11191=(r10*sj6);
IkReal x11192=(sj0*sj5);
IkReal x11193=(r00*sj6);
IkReal x11194=(cj0*sj5);
IkReal x11195=((0.02626)*cj0);
IkReal x11196=(r01*sj6);
IkReal x11197=((1.0)*sj0);
IkReal x11198=(cj6*r10);
IkReal x11199=(cj5*sj0);
IkReal x11200=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x11187)));
evalcond[2]=((((-1.0)*x11197*x11198))+(((-1.0)*x11190*x11200))+((cj0*x11196))+((sj6*x11188)));
evalcond[3]=((-1.0)+((r12*x11192))+(((-1.0)*cj5*x11190*x11193))+(((-1.0)*cj5*x11191*x11197))+((r02*x11194))+(((-1.0)*r01*x11187*x11190))+(((-1.0)*x11187*x11188)));
evalcond[4]=(((cj0*r01*x11189))+((cj0*cj5*r02))+((r12*x11199))+((x11191*x11192))+((x11193*x11194))+((x11188*x11189)));
evalcond[5]=((((-1.0)*r02*x11192))+((r12*x11194))+(((-1.0)*cj5*x11190*x11191))+((x11193*x11199))+(((-1.0)*r11*x11187*x11190))+((r01*sj0*x11187)));
evalcond[6]=((0.1148)+(((-1.0)*py*x11197))+(((-1.0)*x11195*x11200))+(((-0.02626)*sj0*x11198))+(((-1.0)*px*x11190))+((x11195*x11196))+(((0.02626)*sj6*x11188)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11201=IKcos(j4);
IkReal x11202=IKsin(j4);
IkReal x11203=(cj0*sj6);
IkReal x11204=((0.02626)*cj6);
IkReal x11205=(cj0*r10);
IkReal x11206=((0.02626)*sj6);
IkReal x11207=(r01*sj0);
IkReal x11208=((1.0)*cj5);
IkReal x11209=((1.0)*cj6);
IkReal x11210=((1.0)*sj6);
IkReal x11211=(r00*sj0);
evalcond[0]=(x11201+(((-1.0)*r21*x11210))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x11208))+x11202+(((-1.0)*r21*sj5*x11209))+(((-1.0)*r20*sj5*x11210)));
evalcond[2]=((-0.1246)+((r20*x11204))+(((-0.0718)*x11202))+(((-1.0)*r21*x11206))+(((0.02626)*x11201))+pz);
evalcond[3]=(((cj6*x11211))+x11202+((r11*x11203))+(((-1.0)*x11207*x11210))+(((-1.0)*x11205*x11209)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*sj5*x11210*x11211))+((cj0*cj6*r11*sj5))+(((-1.0)*x11201))+((r10*sj5*x11203))+(((-1.0)*sj5*x11207*x11209))+(((-1.0)*r02*sj0*x11208)));
evalcond[5]=((0.09756)+(((-1.0)*x11206*x11207))+(((0.0718)*x11201))+(((0.02626)*r11*x11203))+((x11204*x11211))+(((0.02626)*x11202))+((px*sj0))+(((-1.0)*x11204*x11205))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11212=((1.0)*sj5);
IkReal x11213=((1.0)*sj6);
CheckValue<IkReal> x11214=IKPowWithIntegerCheck(sj2,-1);
if(!x11214.valid){
continue;
}
CheckValue<IkReal> x11215=IKPowWithIntegerCheck(cj2,-1);
if(!x11215.valid){
continue;
}
if( IKabs(((x11214.value)*(((((-1.0)*r20*sj6*x11212))+(((-1.0)*cj6*r21*x11212))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11215.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x11213))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x11213)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11214.value)*(((((-1.0)*r20*sj6*x11212))+(((-1.0)*cj6*r21*x11212))+(((-1.0)*cj5*r22))))))+IKsqr(((x11215.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x11213))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x11213))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x11214.value)*(((((-1.0)*r20*sj6*x11212))+(((-1.0)*cj6*r21*x11212))+(((-1.0)*cj5*r22))))), ((x11215.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x11213))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x11213))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11216=IKsin(j4);
IkReal x11217=IKcos(j4);
IkReal x11218=(sj0*sj6);
IkReal x11219=((0.02626)*r01);
IkReal x11220=(cj5*r12);
IkReal x11221=(cj6*sj0);
IkReal x11222=(r11*sj5);
IkReal x11223=(r10*sj5);
IkReal x11224=(cj0*sj6);
IkReal x11225=(r21*sj6);
IkReal x11226=((1.0)*cj5);
IkReal x11227=((0.02626)*cj6);
IkReal x11228=((1.0)*r01);
IkReal x11229=(r00*sj5);
IkReal x11230=((1.0)*py);
IkReal x11231=((1.0)*sj2);
IkReal x11232=((1.0)*sj5);
IkReal x11233=((1.0)*cj0);
IkReal x11234=((0.02626)*r11);
IkReal x11235=(cj0*cj6);
IkReal x11236=(r10*x11235);
IkReal x11237=(cj2*x11216);
IkReal x11238=(cj2*x11217);
evalcond[0]=((((-1.0)*x11217*x11231))+((cj6*r20))+(((-1.0)*x11225)));
evalcond[1]=((((-1.0)*cj6*r21*x11232))+(((-1.0)*x11216*x11231))+(((-1.0)*r20*sj6*x11232))+(((-1.0)*r22*x11226)));
evalcond[2]=((((-1.0)*cj6*r10*x11233))+x11216+((r11*x11224))+(((-1.0)*x11218*x11228))+((r00*x11221)));
evalcond[3]=(x11238+((r11*x11218))+((r01*x11224))+(((-1.0)*r10*x11221))+(((-1.0)*cj6*r00*x11233)));
evalcond[4]=((-0.1255)+(((-0.02626)*x11225))+(((-0.02626)*sj2*x11217))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+((r20*x11227))+pz+(((0.0718)*sj2*x11216)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x11235))+((x11224*x11229))+x11237+((sj0*x11220))+((x11221*x11222))+((x11218*x11223)));
evalcond[6]=(((x11223*x11224))+((x11222*x11235))+((cj0*x11220))+(((-1.0)*x11218*x11229))+(((-1.0)*sj5*x11221*x11228))+(((-1.0)*x11217))+(((-1.0)*r02*sj0*x11226)));
evalcond[7]=((0.09756)+(((0.0718)*x11217))+(((-1.0)*cj0*x11230))+(((-1.0)*x11218*x11219))+((x11224*x11234))+(((0.02626)*x11216))+((px*sj0))+(((0.02626)*r00*x11221))+(((-1.0)*cj0*r10*x11227)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-0.02626)*r10*x11221))+(((0.0009)*cj2))+(((-1.0)*sj0*x11230))+(((-1.0)*cj0*r00*x11227))+(((-1.0)*px*x11233))+((x11218*x11234))+(((0.02626)*x11238))+((x11219*x11224))+(((-0.0718)*x11237)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11239=((1.0)*sj6);
CheckValue<IkReal> x11240=IKPowWithIntegerCheck(sj2,-1);
if(!x11240.valid){
continue;
}
if( IKabs(((((-1.0)*cj0*r11*x11239))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11240.value)*((((cj6*r20))+(((-1.0)*r21*x11239)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*r11*x11239))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))))+IKsqr(((x11240.value)*((((cj6*r20))+(((-1.0)*r21*x11239))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*r11*x11239))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))), ((x11240.value)*((((cj6*r20))+(((-1.0)*r21*x11239))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11241=IKsin(j4);
IkReal x11242=IKcos(j4);
IkReal x11243=(sj0*sj6);
IkReal x11244=((0.02626)*r01);
IkReal x11245=(cj5*r12);
IkReal x11246=(cj6*sj0);
IkReal x11247=(r11*sj5);
IkReal x11248=(r10*sj5);
IkReal x11249=(cj0*sj6);
IkReal x11250=(r21*sj6);
IkReal x11251=((1.0)*cj5);
IkReal x11252=((0.02626)*cj6);
IkReal x11253=((1.0)*r01);
IkReal x11254=(r00*sj5);
IkReal x11255=((1.0)*py);
IkReal x11256=((1.0)*sj2);
IkReal x11257=((1.0)*sj5);
IkReal x11258=((1.0)*cj0);
IkReal x11259=((0.02626)*r11);
IkReal x11260=(cj0*cj6);
IkReal x11261=(r10*x11260);
IkReal x11262=(cj2*x11241);
IkReal x11263=(cj2*x11242);
evalcond[0]=((((-1.0)*x11250))+((cj6*r20))+(((-1.0)*x11242*x11256)));
evalcond[1]=((((-1.0)*cj6*r21*x11257))+(((-1.0)*r20*sj6*x11257))+(((-1.0)*x11241*x11256))+(((-1.0)*r22*x11251)));
evalcond[2]=((((-1.0)*x11243*x11253))+(((-1.0)*cj6*r10*x11258))+x11241+((r11*x11249))+((r00*x11246)));
evalcond[3]=(x11263+((r11*x11243))+(((-1.0)*cj6*r00*x11258))+((r01*x11249))+(((-1.0)*r10*x11246)));
evalcond[4]=((-0.1255)+(((-0.02626)*x11250))+(((-0.1158)*cj2))+((r20*x11252))+(((-0.0009)*sj2))+(((-0.02626)*sj2*x11242))+pz+(((0.0718)*sj2*x11241)));
evalcond[5]=(((cj0*cj5*r02))+x11262+((x11243*x11248))+((x11249*x11254))+((sj0*x11245))+((r01*sj5*x11260))+((x11246*x11247)));
evalcond[6]=((((-1.0)*x11243*x11254))+(((-1.0)*sj5*x11246*x11253))+(((-1.0)*x11242))+((x11247*x11260))+((cj0*x11245))+(((-1.0)*r02*sj0*x11251))+((x11248*x11249)));
evalcond[7]=((0.09756)+(((-1.0)*cj0*r10*x11252))+(((-1.0)*x11243*x11244))+(((-1.0)*cj0*x11255))+((x11249*x11259))+(((0.02626)*x11241))+((px*sj0))+(((0.0718)*x11242))+(((0.02626)*r00*x11246)));
evalcond[8]=((-0.001)+(((-0.02626)*r10*x11246))+(((0.02626)*x11263))+(((-0.1158)*sj2))+((x11243*x11259))+((x11244*x11249))+(((-1.0)*sj0*x11255))+(((0.0009)*cj2))+(((-1.0)*px*x11258))+(((-1.0)*cj0*r00*x11252))+(((-0.0718)*x11262)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11264=((1.0)*r21);
CheckValue<IkReal> x11265=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x11265.valid){
continue;
}
CheckValue<IkReal> x11266 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x11264))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),(((cj6*r20))+(((-1.0)*sj6*x11264))),IKFAST_ATAN2_MAGTHRESH);
if(!x11266.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11265.value)))+(x11266.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11267=IKsin(j4);
IkReal x11268=IKcos(j4);
IkReal x11269=(sj0*sj6);
IkReal x11270=((0.02626)*r01);
IkReal x11271=(cj5*r12);
IkReal x11272=(cj6*sj0);
IkReal x11273=(r11*sj5);
IkReal x11274=(r10*sj5);
IkReal x11275=(cj0*sj6);
IkReal x11276=(r21*sj6);
IkReal x11277=((1.0)*cj5);
IkReal x11278=((0.02626)*cj6);
IkReal x11279=((1.0)*r01);
IkReal x11280=(r00*sj5);
IkReal x11281=((1.0)*py);
IkReal x11282=((1.0)*sj2);
IkReal x11283=((1.0)*sj5);
IkReal x11284=((1.0)*cj0);
IkReal x11285=((0.02626)*r11);
IkReal x11286=(cj0*cj6);
IkReal x11287=(r10*x11286);
IkReal x11288=(cj2*x11267);
IkReal x11289=(cj2*x11268);
evalcond[0]=((((-1.0)*x11276))+(((-1.0)*x11268*x11282))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj6*x11283))+(((-1.0)*r22*x11277))+(((-1.0)*x11267*x11282))+(((-1.0)*cj6*r21*x11283)));
evalcond[2]=(((r00*x11272))+x11267+(((-1.0)*x11269*x11279))+(((-1.0)*cj6*r10*x11284))+((r11*x11275)));
evalcond[3]=(((r01*x11275))+((r11*x11269))+x11289+(((-1.0)*r10*x11272))+(((-1.0)*cj6*r00*x11284)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((-0.02626)*x11276))+(((-0.0009)*sj2))+pz+(((0.0718)*sj2*x11267))+(((-0.02626)*sj2*x11268))+((r20*x11278)));
evalcond[5]=(((x11275*x11280))+((sj0*x11271))+((cj0*cj5*r02))+x11288+((x11269*x11274))+((r01*sj5*x11286))+((x11272*x11273)));
evalcond[6]=((((-1.0)*r02*sj0*x11277))+(((-1.0)*x11269*x11280))+(((-1.0)*x11268))+((x11273*x11286))+(((-1.0)*sj5*x11272*x11279))+((x11274*x11275))+((cj0*x11271)));
evalcond[7]=((0.09756)+((x11275*x11285))+(((0.02626)*x11267))+(((0.02626)*r00*x11272))+(((-1.0)*cj0*r10*x11278))+(((0.0718)*x11268))+(((-1.0)*x11269*x11270))+((px*sj0))+(((-1.0)*cj0*x11281)));
evalcond[8]=((-0.001)+(((-1.0)*cj0*r00*x11278))+(((-0.1158)*sj2))+((x11269*x11285))+(((-1.0)*px*x11284))+(((-0.02626)*r10*x11272))+(((0.02626)*x11289))+(((0.0009)*cj2))+(((-0.0718)*x11288))+(((-1.0)*sj0*x11281))+((x11270*x11275)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11290=(cj0*sj5);
IkReal x11291=(cj5*cj6);
IkReal x11292=((1.0)*sj5);
IkReal x11293=((1.0)*cj0);
IkReal x11294=((1.0)*sj0);
IkReal x11295=(cj5*sj6);
IkReal x11296=(r10*x11295);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x11292))+cj2+((r21*x11291))+((r20*x11295)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r11*x11291*x11294))+(((-1.0)*r00*x11293*x11295))+((r02*x11290))+((r12*sj0*sj5))+(((-1.0)*x11294*x11296))+(((-1.0)*r01*x11291*x11293)));
evalcond[3]=((((-1.0)*r11*x11291*x11293))+(((-1.0)*r02*sj0*x11292))+((r01*sj0*x11291))+((r00*sj0*x11295))+(((-1.0)*x11293*x11296))+((r12*x11290)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x11297=(cj5*cj6);
IkReal x11298=((1.0)*sj0);
IkReal x11299=(r21*sj6);
IkReal x11300=(cj0*sj5);
IkReal x11301=((1.0)*r22);
IkReal x11302=(cj6*r20);
IkReal x11303=(cj5*sj6);
IkReal x11304=((1.0)*cj0);
IkReal x11305=((1.0)*sj5);
IkReal x11306=(x11303*x11304);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x11303))+(((-1.0)*sj5*x11301))+((r21*x11297)));
evalcond[2]=(x11302+(((-1.0)*x11299)));
evalcond[3]=((((-1.0)*r20*sj6*x11305))+(((-1.0)*cj5*x11301))+(((-1.0)*cj6*r21*x11305)));
evalcond[4]=(((r02*x11300))+(((-1.0)*r11*x11297*x11298))+(((-1.0)*r01*x11297*x11304))+((r12*sj0*sj5))+(((-1.0)*r00*x11306))+(((-1.0)*r10*x11298*x11303)));
evalcond[5]=((((-1.0)*r02*sj5*x11298))+((r12*x11300))+((r01*sj0*x11297))+(((-1.0)*r10*x11306))+(((-1.0)*r11*x11297*x11304))+((r00*sj0*x11303)));
evalcond[6]=((0.2413)+(((-0.02626)*x11299))+pz+(((0.02626)*x11302)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11307=(cj0*cj6);
IkReal x11308=(sj0*sj6);
IkReal x11309=((1.0)*r11);
IkReal x11310=(cj6*sj0);
IkReal x11311=(cj0*sj6);
if( IKabs(((((-1.0)*x11309*x11311))+((r01*x11308))+(((-1.0)*r00*x11310))+((r10*x11307)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x11307))+((r10*x11310))+(((-1.0)*r01*x11311))+(((-1.0)*x11308*x11309)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x11309*x11311))+((r01*x11308))+(((-1.0)*r00*x11310))+((r10*x11307))))+IKsqr((((r00*x11307))+((r10*x11310))+(((-1.0)*r01*x11311))+(((-1.0)*x11308*x11309))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x11309*x11311))+((r01*x11308))+(((-1.0)*r00*x11310))+((r10*x11307))), (((r00*x11307))+((r10*x11310))+(((-1.0)*r01*x11311))+(((-1.0)*x11308*x11309))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11312=IKsin(j4);
IkReal x11313=IKcos(j4);
IkReal x11314=(cj6*sj0);
IkReal x11315=((0.02626)*r10);
IkReal x11316=(r11*sj6);
IkReal x11317=(r11*sj5);
IkReal x11318=(sj0*sj6);
IkReal x11319=(r10*sj5);
IkReal x11320=(cj0*cj6);
IkReal x11321=((0.02626)*r01);
IkReal x11322=(cj5*r12);
IkReal x11323=((1.0)*sj0);
IkReal x11324=(cj5*r02);
IkReal x11325=(cj0*sj6);
IkReal x11326=((1.0)*r10);
IkReal x11327=((1.0)*r01);
IkReal x11328=(r00*sj5);
IkReal x11329=((1.0)*cj0);
IkReal x11330=((0.02626)*r00);
evalcond[0]=(((sj0*x11316))+x11313+(((-1.0)*r00*x11320))+(((-1.0)*x11314*x11326))+((r01*x11325)));
evalcond[1]=(x11312+(((-1.0)*x11318*x11327))+((cj0*x11316))+(((-1.0)*x11320*x11326))+((r00*x11314)));
evalcond[2]=(((x11325*x11328))+((sj0*x11322))+x11312+((x11314*x11317))+((cj0*x11324))+((x11318*x11319))+((r01*sj5*x11320)));
evalcond[3]=(((cj0*x11322))+(((-1.0)*sj5*x11314*x11327))+((x11317*x11320))+((x11319*x11325))+(((-1.0)*x11313))+(((-1.0)*x11318*x11328))+(((-1.0)*x11323*x11324)));
evalcond[4]=((0.09736)+(((-1.0)*py*x11329))+(((0.02626)*x11312))+(((-1.0)*x11318*x11321))+((x11314*x11330))+(((0.02626)*cj0*x11316))+(((-1.0)*x11315*x11320))+((px*sj0))+(((0.0718)*x11313)));
evalcond[5]=((-0.0001)+(((-1.0)*px*x11329))+((x11321*x11325))+(((-1.0)*py*x11323))+(((0.02626)*x11313))+(((-1.0)*x11320*x11330))+(((-1.0)*x11314*x11315))+(((0.02626)*sj0*x11316))+(((-0.0718)*x11312)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11331=(cj5*cj6);
IkReal x11332=(r11*sj0);
IkReal x11333=(cj6*sj5);
IkReal x11334=((1.0)*cj0);
IkReal x11335=(r10*sj6);
IkReal x11336=(sj0*sj5);
IkReal x11337=(r00*sj6);
IkReal x11338=(cj0*sj5);
IkReal x11339=((0.02626)*cj0);
IkReal x11340=(r01*sj6);
IkReal x11341=((1.0)*sj0);
IkReal x11342=(cj6*r10);
IkReal x11343=(cj5*sj0);
IkReal x11344=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x11331)));
evalcond[2]=((((-1.0)*x11334*x11344))+((cj0*x11340))+((sj6*x11332))+(((-1.0)*x11341*x11342)));
evalcond[3]=((-1.0)+(((-1.0)*cj5*x11334*x11337))+(((-1.0)*cj5*x11335*x11341))+((r12*x11336))+(((-1.0)*x11331*x11332))+(((-1.0)*r01*x11331*x11334))+((r02*x11338)));
evalcond[4]=(((x11332*x11333))+((cj0*cj5*r02))+((r12*x11343))+((x11335*x11336))+((x11337*x11338))+((cj0*r01*x11333)));
evalcond[5]=(((r01*sj0*x11331))+(((-1.0)*cj5*x11334*x11335))+((r12*x11338))+((x11337*x11343))+(((-1.0)*r02*x11336))+(((-1.0)*r11*x11331*x11334)));
evalcond[6]=((-0.1168)+(((-1.0)*px*x11334))+((x11339*x11340))+(((-0.02626)*sj0*x11342))+(((-1.0)*py*x11341))+(((-1.0)*x11339*x11344))+(((0.02626)*sj6*x11332)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11345=IKcos(j4);
IkReal x11346=IKsin(j4);
IkReal x11347=(cj0*sj6);
IkReal x11348=((0.02626)*cj6);
IkReal x11349=(cj0*r10);
IkReal x11350=((0.02626)*sj6);
IkReal x11351=(r01*sj0);
IkReal x11352=((1.0)*cj5);
IkReal x11353=((1.0)*cj6);
IkReal x11354=((1.0)*sj6);
IkReal x11355=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x11354))+x11345+((cj6*r20)));
evalcond[1]=(x11346+(((-1.0)*r20*sj5*x11354))+(((-1.0)*r22*x11352))+(((-1.0)*r21*sj5*x11353)));
evalcond[2]=((0.1264)+(((-1.0)*r21*x11350))+((r20*x11348))+pz+(((-0.0718)*x11346))+(((0.02626)*x11345)));
evalcond[3]=(((r11*x11347))+(((-1.0)*x11351*x11354))+x11346+(((-1.0)*x11349*x11353))+((cj6*x11355)));
evalcond[4]=((((-1.0)*sj5*x11351*x11353))+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x11352))+((cj0*cj6*r11*sj5))+(((-1.0)*x11345))+(((-1.0)*sj5*x11354*x11355))+((r10*sj5*x11347)));
evalcond[5]=((0.09736)+(((-1.0)*x11348*x11349))+(((-1.0)*x11350*x11351))+(((0.02626)*r11*x11347))+((px*sj0))+(((-1.0)*cj0*py))+((x11348*x11355))+(((0.02626)*x11346))+(((0.0718)*x11345)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11356=(cj5*cj6);
IkReal x11357=(r11*sj0);
IkReal x11358=(cj6*sj5);
IkReal x11359=((1.0)*cj0);
IkReal x11360=(r10*sj6);
IkReal x11361=(sj0*sj5);
IkReal x11362=(r00*sj6);
IkReal x11363=(cj0*sj5);
IkReal x11364=((0.02626)*cj0);
IkReal x11365=(r01*sj6);
IkReal x11366=((1.0)*sj0);
IkReal x11367=(cj6*r10);
IkReal x11368=(cj5*sj0);
IkReal x11369=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x11356))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x11359*x11369))+((sj6*x11357))+(((-1.0)*x11366*x11367))+((cj0*x11365)));
evalcond[3]=((1.0)+(((-1.0)*r01*x11356*x11359))+(((-1.0)*cj5*x11360*x11366))+(((-1.0)*x11356*x11357))+((r12*x11361))+((r02*x11363))+(((-1.0)*cj5*x11359*x11362)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x11368))+((x11362*x11363))+((x11360*x11361))+((cj0*r01*x11358))+((x11357*x11358)));
evalcond[5]=((((-1.0)*r11*x11356*x11359))+(((-1.0)*r02*x11361))+((r12*x11363))+(((-1.0)*cj5*x11359*x11360))+((x11362*x11368))+((r01*sj0*x11356)));
evalcond[6]=((0.1148)+(((-1.0)*py*x11366))+(((0.02626)*sj6*x11357))+(((-1.0)*px*x11359))+(((-0.02626)*sj0*x11367))+((x11364*x11365))+(((-1.0)*x11364*x11369)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11370=IKsin(j4);
IkReal x11371=IKcos(j4);
IkReal x11372=(cj0*sj6);
IkReal x11373=((0.02626)*cj6);
IkReal x11374=(cj0*r10);
IkReal x11375=((0.02626)*sj6);
IkReal x11376=(r01*sj0);
IkReal x11377=((1.0)*cj5);
IkReal x11378=((1.0)*cj6);
IkReal x11379=((1.0)*sj6);
IkReal x11380=(r00*sj0);
IkReal x11381=((1.0)*x11371);
evalcond[0]=((((-1.0)*x11381))+((cj6*r20))+(((-1.0)*r21*x11379)));
evalcond[1]=((((-1.0)*x11370))+(((-1.0)*r20*sj5*x11379))+(((-1.0)*r22*x11377))+(((-1.0)*r21*sj5*x11378)));
evalcond[2]=((0.1246)+((r20*x11373))+(((-0.02626)*x11371))+(((0.0718)*x11370))+pz+(((-1.0)*r21*x11375)));
evalcond[3]=((((-1.0)*x11374*x11378))+x11370+((cj6*x11380))+((r11*x11372))+(((-1.0)*x11376*x11379)));
evalcond[4]=((((-1.0)*sj5*x11376*x11378))+((cj0*cj5*r12))+(((-1.0)*sj5*x11379*x11380))+(((-1.0)*x11381))+((cj0*cj6*r11*sj5))+((r10*sj5*x11372))+(((-1.0)*r02*sj0*x11377)));
evalcond[5]=((0.09736)+(((-1.0)*x11375*x11376))+((x11373*x11380))+(((0.02626)*x11370))+(((0.0718)*x11371))+(((-1.0)*x11373*x11374))+((px*sj0))+(((-1.0)*cj0*py))+(((0.02626)*r11*x11372)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11382=((1.0)*sj6);
CheckValue<IkReal> x11383=IKPowWithIntegerCheck(sj2,-1);
if(!x11383.valid){
continue;
}
CheckValue<IkReal> x11384=IKPowWithIntegerCheck(cj2,-1);
if(!x11384.valid){
continue;
}
if( IKabs(((x11383.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11384.value)*(((((-1.0)*r11*sj0*x11382))+((cj6*r10*sj0))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x11382)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11383.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x11384.value)*(((((-1.0)*r11*sj0*x11382))+((cj6*r10*sj0))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x11382))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x11383.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x11384.value)*(((((-1.0)*r11*sj0*x11382))+((cj6*r10*sj0))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x11382))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11385=IKsin(j4);
IkReal x11386=IKcos(j4);
IkReal x11387=((0.02626)*sj0);
IkReal x11388=(cj6*r10);
IkReal x11389=(r01*sj6);
IkReal x11390=(r11*sj0);
IkReal x11391=(cj0*cj5);
IkReal x11392=(cj6*sj5);
IkReal x11393=((0.02626)*cj0);
IkReal x11394=(cj0*sj6);
IkReal x11395=(r21*sj6);
IkReal x11396=((1.0)*sj0);
IkReal x11397=(cj6*r20);
IkReal x11398=(r00*sj5);
IkReal x11399=(cj6*r00);
IkReal x11400=((1.0)*cj0);
IkReal x11401=(r11*sj6);
IkReal x11402=(r10*sj5*sj6);
IkReal x11403=(cj2*x11385);
IkReal x11404=(cj2*x11386);
IkReal x11405=(sj2*x11385);
IkReal x11406=(sj2*x11386);
evalcond[0]=(x11406+x11397+(((-1.0)*x11395)));
evalcond[1]=(x11405+(((-1.0)*r21*x11392))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x11385+((r11*x11394))+((sj0*x11399))+(((-1.0)*x11388*x11400))+(((-1.0)*x11389*x11396)));
evalcond[3]=(((sj6*x11390))+((cj0*x11389))+x11404+(((-1.0)*x11399*x11400))+(((-1.0)*x11388*x11396)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((0.02626)*x11406))+(((-0.0718)*x11405))+pz+(((0.02626)*x11397))+(((0.0009)*sj2))+(((-0.02626)*x11395)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x11391))+x11403+((x11394*x11398))+((x11390*x11392))+((cj0*r01*x11392))+((sj0*x11402)));
evalcond[6]=((((-1.0)*cj5*r02*x11396))+((r12*x11391))+(((-1.0)*sj6*x11396*x11398))+((cj0*r11*x11392))+((r10*sj5*x11394))+(((-1.0)*r01*x11392*x11396))+(((-1.0)*x11386)));
evalcond[7]=((0.09736)+((x11387*x11399))+(((0.02626)*x11385))+((px*sj0))+(((-1.0)*py*x11400))+(((-1.0)*x11388*x11393))+((x11393*x11401))+(((-1.0)*x11387*x11389))+(((0.0718)*x11386)));
evalcond[8]=((-0.001)+(((-1.0)*py*x11396))+(((-1.0)*x11393*x11399))+(((-0.1158)*sj2))+(((-1.0)*px*x11400))+((x11387*x11401))+(((0.02626)*x11404))+(((0.0009)*cj2))+(((-0.0718)*x11403))+((x11389*x11393))+(((-1.0)*x11387*x11388)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11407=((1.0)*cj6);
CheckValue<IkReal> x11408=IKPowWithIntegerCheck(sj2,-1);
if(!x11408.valid){
continue;
}
if( IKabs(((((-1.0)*r00*sj0*x11407))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11408.value)*((((r21*sj6))+(((-1.0)*r20*x11407)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*sj0*x11407))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))))+IKsqr(((x11408.value)*((((r21*sj6))+(((-1.0)*r20*x11407))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r00*sj0*x11407))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))), ((x11408.value)*((((r21*sj6))+(((-1.0)*r20*x11407))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11409=IKsin(j4);
IkReal x11410=IKcos(j4);
IkReal x11411=((0.02626)*sj0);
IkReal x11412=(cj6*r10);
IkReal x11413=(r01*sj6);
IkReal x11414=(r11*sj0);
IkReal x11415=(cj0*cj5);
IkReal x11416=(cj6*sj5);
IkReal x11417=((0.02626)*cj0);
IkReal x11418=(cj0*sj6);
IkReal x11419=(r21*sj6);
IkReal x11420=((1.0)*sj0);
IkReal x11421=(cj6*r20);
IkReal x11422=(r00*sj5);
IkReal x11423=(cj6*r00);
IkReal x11424=((1.0)*cj0);
IkReal x11425=(r11*sj6);
IkReal x11426=(r10*sj5*sj6);
IkReal x11427=(cj2*x11409);
IkReal x11428=(cj2*x11410);
IkReal x11429=(sj2*x11409);
IkReal x11430=(sj2*x11410);
evalcond[0]=(x11421+x11430+(((-1.0)*x11419)));
evalcond[1]=((((-1.0)*r21*x11416))+x11429+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x11409+((sj0*x11423))+(((-1.0)*x11412*x11424))+(((-1.0)*x11413*x11420))+((r11*x11418)));
evalcond[3]=(x11428+((cj0*x11413))+(((-1.0)*x11412*x11420))+((sj6*x11414))+(((-1.0)*x11423*x11424)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((-0.02626)*x11419))+pz+(((-0.0718)*x11429))+(((0.02626)*x11430))+(((0.0009)*sj2))+(((0.02626)*x11421)));
evalcond[5]=(((cj5*r12*sj0))+x11427+((sj0*x11426))+((x11414*x11416))+((cj0*r01*x11416))+((r02*x11415))+((x11418*x11422)));
evalcond[6]=((((-1.0)*r01*x11416*x11420))+(((-1.0)*sj6*x11420*x11422))+((r12*x11415))+(((-1.0)*x11410))+((r10*sj5*x11418))+((cj0*r11*x11416))+(((-1.0)*cj5*r02*x11420)));
evalcond[7]=((0.09736)+(((-1.0)*x11412*x11417))+(((0.02626)*x11409))+((x11417*x11425))+((x11411*x11423))+((px*sj0))+(((0.0718)*x11410))+(((-1.0)*x11411*x11413))+(((-1.0)*py*x11424)));
evalcond[8]=((-0.001)+(((-1.0)*x11417*x11423))+(((-0.1158)*sj2))+(((-1.0)*px*x11424))+(((0.0009)*cj2))+((x11411*x11425))+(((-0.0718)*x11427))+(((-1.0)*x11411*x11412))+(((0.02626)*x11428))+(((-1.0)*py*x11420))+((x11413*x11417)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x11431=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x11431.valid){
continue;
}
CheckValue<IkReal> x11432 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x11432.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11431.value)))+(x11432.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11433=IKsin(j4);
IkReal x11434=IKcos(j4);
IkReal x11435=((0.02626)*sj0);
IkReal x11436=(cj6*r10);
IkReal x11437=(r01*sj6);
IkReal x11438=(r11*sj0);
IkReal x11439=(cj0*cj5);
IkReal x11440=(cj6*sj5);
IkReal x11441=((0.02626)*cj0);
IkReal x11442=(cj0*sj6);
IkReal x11443=(r21*sj6);
IkReal x11444=((1.0)*sj0);
IkReal x11445=(cj6*r20);
IkReal x11446=(r00*sj5);
IkReal x11447=(cj6*r00);
IkReal x11448=((1.0)*cj0);
IkReal x11449=(r11*sj6);
IkReal x11450=(r10*sj5*sj6);
IkReal x11451=(cj2*x11433);
IkReal x11452=(cj2*x11434);
IkReal x11453=(sj2*x11433);
IkReal x11454=(sj2*x11434);
evalcond[0]=((((-1.0)*x11443))+x11454+x11445);
evalcond[1]=(x11453+(((-1.0)*r21*x11440))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x11433+((r11*x11442))+((sj0*x11447))+(((-1.0)*x11437*x11444))+(((-1.0)*x11436*x11448)));
evalcond[3]=(((sj6*x11438))+(((-1.0)*x11447*x11448))+x11452+((cj0*x11437))+(((-1.0)*x11436*x11444)));
evalcond[4]=((0.1255)+(((0.02626)*x11454))+(((-0.02626)*x11443))+(((0.1158)*cj2))+(((0.02626)*x11445))+pz+(((-0.0718)*x11453))+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x11439))+x11451+((sj0*x11450))+((x11438*x11440))+((x11442*x11446))+((cj0*r01*x11440)));
evalcond[6]=((((-1.0)*sj6*x11444*x11446))+(((-1.0)*r01*x11440*x11444))+((r10*sj5*x11442))+(((-1.0)*cj5*r02*x11444))+((cj0*r11*x11440))+(((-1.0)*x11434))+((r12*x11439)));
evalcond[7]=((0.09736)+((x11441*x11449))+(((-1.0)*x11435*x11437))+((px*sj0))+(((-1.0)*py*x11448))+(((-1.0)*x11436*x11441))+(((0.02626)*x11433))+(((0.0718)*x11434))+((x11435*x11447)));
evalcond[8]=((-0.001)+(((0.02626)*x11452))+((x11437*x11441))+(((-0.1158)*sj2))+(((-1.0)*x11435*x11436))+(((0.0009)*cj2))+(((-1.0)*x11441*x11447))+(((-1.0)*py*x11444))+(((-0.0718)*x11451))+(((-1.0)*px*x11448))+((x11435*x11449)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11455=(cj0*sj5);
IkReal x11456=(cj5*cj6);
IkReal x11457=((1.0)*sj5);
IkReal x11458=((1.0)*cj0);
IkReal x11459=((1.0)*sj0);
IkReal x11460=(cj5*sj6);
IkReal x11461=(r10*x11460);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=(((r21*x11456))+((r20*x11460))+(((-1.0)*cj2))+(((-1.0)*r22*x11457)));
evalcond[2]=(sj2+((r02*x11455))+((r12*sj0*sj5))+(((-1.0)*r00*x11458*x11460))+(((-1.0)*r01*x11456*x11458))+(((-1.0)*r11*x11456*x11459))+(((-1.0)*x11459*x11461)));
evalcond[3]=(((r00*sj0*x11460))+(((-1.0)*x11458*x11461))+(((-1.0)*r02*sj0*x11457))+((r12*x11455))+(((-1.0)*r11*x11456*x11458))+((r01*sj0*x11456)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x11462=(cj5*cj6);
IkReal x11463=((1.0)*sj0);
IkReal x11464=(r21*sj6);
IkReal x11465=(cj0*sj5);
IkReal x11466=((1.0)*r22);
IkReal x11467=(cj6*r20);
IkReal x11468=(cj5*sj6);
IkReal x11469=((1.0)*cj0);
IkReal x11470=((1.0)*sj5);
IkReal x11471=(x11468*x11469);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x11466))+((r20*x11468))+((r21*x11462)));
evalcond[2]=(x11467+(((-1.0)*x11464)));
evalcond[3]=((((-1.0)*r20*sj6*x11470))+(((-1.0)*cj6*r21*x11470))+(((-1.0)*cj5*x11466)));
evalcond[4]=(((r12*sj0*sj5))+(((-1.0)*r11*x11462*x11463))+(((-1.0)*r10*x11463*x11468))+(((-1.0)*r00*x11471))+(((-1.0)*r01*x11462*x11469))+((r02*x11465)));
evalcond[5]=(((r00*sj0*x11468))+((r12*x11465))+(((-1.0)*r02*sj5*x11463))+((r01*sj0*x11462))+(((-1.0)*r11*x11462*x11469))+(((-1.0)*r10*x11471)));
evalcond[6]=((0.2413)+(((-0.02626)*x11464))+(((0.02626)*x11467))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11472=(cj0*cj6);
IkReal x11473=(cj6*sj0);
IkReal x11474=(cj0*sj6);
IkReal x11475=((1.0)*sj0*sj6);
if( IKabs((((r00*x11473))+(((-1.0)*r10*x11472))+((r11*x11474))+(((-1.0)*r01*x11475)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x11472))+(((-1.0)*r11*x11475))+(((-1.0)*r01*x11474))+((r10*x11473)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x11473))+(((-1.0)*r10*x11472))+((r11*x11474))+(((-1.0)*r01*x11475))))+IKsqr((((r00*x11472))+(((-1.0)*r11*x11475))+(((-1.0)*r01*x11474))+((r10*x11473))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r00*x11473))+(((-1.0)*r10*x11472))+((r11*x11474))+(((-1.0)*r01*x11475))), (((r00*x11472))+(((-1.0)*r11*x11475))+(((-1.0)*r01*x11474))+((r10*x11473))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11476=IKsin(j4);
IkReal x11477=IKcos(j4);
IkReal x11478=(cj6*sj0);
IkReal x11479=((0.02626)*r10);
IkReal x11480=(r11*sj6);
IkReal x11481=(r11*sj5);
IkReal x11482=(sj0*sj6);
IkReal x11483=(r10*sj5);
IkReal x11484=((0.02626)*r01);
IkReal x11485=(cj5*r12);
IkReal x11486=(cj0*cj6);
IkReal x11487=((1.0)*sj0);
IkReal x11488=(cj5*r02);
IkReal x11489=(cj0*sj6);
IkReal x11490=((1.0)*r10);
IkReal x11491=((1.0)*r01);
IkReal x11492=(r00*sj5);
IkReal x11493=((1.0)*cj0);
IkReal x11494=((0.02626)*r00);
evalcond[0]=((((-1.0)*r00*x11486))+x11477+((r01*x11489))+(((-1.0)*x11478*x11490))+((sj0*x11480)));
evalcond[1]=(((r00*x11478))+(((-1.0)*x11476))+((cj0*x11480))+(((-1.0)*x11482*x11491))+(((-1.0)*x11486*x11490)));
evalcond[2]=(((cj0*x11488))+x11476+((x11482*x11483))+((x11489*x11492))+((r01*sj5*x11486))+((x11478*x11481))+((sj0*x11485)));
evalcond[3]=(((cj0*x11485))+((x11481*x11486))+x11477+((x11483*x11489))+(((-1.0)*sj5*x11478*x11491))+(((-1.0)*x11487*x11488))+(((-1.0)*x11482*x11492)));
evalcond[4]=((-0.09756)+((x11478*x11494))+(((0.02626)*cj0*x11480))+(((-1.0)*x11482*x11484))+(((-1.0)*x11479*x11486))+(((-0.0718)*x11477))+(((-1.0)*py*x11493))+((px*sj0))+(((-0.02626)*x11476)));
evalcond[5]=((-0.0001)+(((-1.0)*px*x11493))+((x11484*x11489))+(((-1.0)*py*x11487))+(((-0.0718)*x11476))+(((0.02626)*x11477))+(((0.02626)*sj0*x11480))+(((-1.0)*x11478*x11479))+(((-1.0)*x11486*x11494)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11495=(cj5*cj6);
IkReal x11496=(r11*sj0);
IkReal x11497=(cj6*sj5);
IkReal x11498=((1.0)*cj0);
IkReal x11499=(r10*sj6);
IkReal x11500=(sj0*sj5);
IkReal x11501=(r00*sj6);
IkReal x11502=(cj0*sj5);
IkReal x11503=((0.02626)*cj0);
IkReal x11504=(r01*sj6);
IkReal x11505=((1.0)*sj0);
IkReal x11506=(cj6*r10);
IkReal x11507=(cj5*sj0);
IkReal x11508=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x11495))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x11498*x11508))+(((-1.0)*x11505*x11506))+((sj6*x11496))+((cj0*x11504)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x11498*x11501))+(((-1.0)*r01*x11495*x11498))+((r12*x11500))+(((-1.0)*x11495*x11496))+(((-1.0)*cj5*x11499*x11505))+((r02*x11502)));
evalcond[4]=(((cj0*cj5*r02))+((x11501*x11502))+((r12*x11507))+((cj0*r01*x11497))+((x11496*x11497))+((x11499*x11500)));
evalcond[5]=(((x11501*x11507))+((r12*x11502))+((r01*sj0*x11495))+(((-1.0)*r02*x11500))+(((-1.0)*r11*x11495*x11498))+(((-1.0)*cj5*x11498*x11499)));
evalcond[6]=((-0.1168)+(((-1.0)*px*x11498))+(((-1.0)*py*x11505))+((x11503*x11504))+(((-1.0)*x11503*x11508))+(((0.02626)*sj6*x11496))+(((-0.02626)*sj0*x11506)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11509=IKcos(j4);
IkReal x11510=IKsin(j4);
IkReal x11511=(cj0*sj6);
IkReal x11512=((0.02626)*sj6);
IkReal x11513=(r01*sj0);
IkReal x11514=((0.02626)*cj6);
IkReal x11515=(cj0*r10);
IkReal x11516=((1.0)*cj5);
IkReal x11517=((1.0)*cj6);
IkReal x11518=((1.0)*sj6);
IkReal x11519=(r00*sj0);
evalcond[0]=(x11509+(((-1.0)*r21*x11518))+((cj6*r20)));
evalcond[1]=((((-1.0)*r21*sj5*x11517))+x11510+(((-1.0)*r22*x11516))+(((-1.0)*r20*sj5*x11518)));
evalcond[2]=((0.1264)+((r20*x11514))+(((-1.0)*r21*x11512))+(((0.02626)*x11509))+pz+(((-0.0718)*x11510)));
evalcond[3]=((((-1.0)*x11510))+(((-1.0)*x11513*x11518))+(((-1.0)*x11515*x11517))+((r11*x11511))+((cj6*x11519)));
evalcond[4]=((((-1.0)*r02*sj0*x11516))+x11509+((cj0*cj5*r12))+(((-1.0)*sj5*x11518*x11519))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x11513*x11517))+((r10*sj5*x11511)));
evalcond[5]=((-0.09756)+(((-0.0718)*x11509))+(((-1.0)*x11512*x11513))+((x11514*x11519))+((px*sj0))+(((0.02626)*r11*x11511))+(((-1.0)*x11514*x11515))+(((-1.0)*cj0*py))+(((-0.02626)*x11510)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11520=(cj5*cj6);
IkReal x11521=(r11*sj0);
IkReal x11522=(cj6*sj5);
IkReal x11523=((1.0)*cj0);
IkReal x11524=(r10*sj6);
IkReal x11525=(sj0*sj5);
IkReal x11526=(r00*sj6);
IkReal x11527=(cj0*sj5);
IkReal x11528=((0.02626)*cj0);
IkReal x11529=(r01*sj6);
IkReal x11530=((1.0)*sj0);
IkReal x11531=(cj6*r10);
IkReal x11532=(cj5*sj0);
IkReal x11533=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x11520))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x11530*x11531))+((sj6*x11521))+(((-1.0)*x11523*x11533))+((cj0*x11529)));
evalcond[3]=((-1.0)+(((-1.0)*cj5*x11523*x11526))+(((-1.0)*r01*x11520*x11523))+(((-1.0)*cj5*x11524*x11530))+((r12*x11525))+((r02*x11527))+(((-1.0)*x11520*x11521)));
evalcond[4]=(((cj0*cj5*r02))+((x11524*x11525))+((r12*x11532))+((x11521*x11522))+((cj0*r01*x11522))+((x11526*x11527)));
evalcond[5]=((((-1.0)*cj5*x11523*x11524))+(((-1.0)*r11*x11520*x11523))+(((-1.0)*r02*x11525))+((r12*x11527))+((r01*sj0*x11520))+((x11526*x11532)));
evalcond[6]=((0.1148)+(((-1.0)*py*x11530))+(((0.02626)*sj6*x11521))+(((-1.0)*px*x11523))+(((-1.0)*x11528*x11533))+(((-0.02626)*sj0*x11531))+((x11528*x11529)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11534=IKsin(j4);
IkReal x11535=IKcos(j4);
IkReal x11536=(cj0*sj6);
IkReal x11537=((0.02626)*sj6);
IkReal x11538=(r01*sj0);
IkReal x11539=((0.02626)*cj6);
IkReal x11540=(cj0*r10);
IkReal x11541=((1.0)*cj5);
IkReal x11542=((1.0)*cj6);
IkReal x11543=((1.0)*sj6);
IkReal x11544=(r00*sj0);
IkReal x11545=((1.0)*x11534);
evalcond[0]=((((-1.0)*r21*x11543))+((cj6*r20))+(((-1.0)*x11535)));
evalcond[1]=((((-1.0)*r21*sj5*x11542))+(((-1.0)*r20*sj5*x11543))+(((-1.0)*x11545))+(((-1.0)*r22*x11541)));
evalcond[2]=((0.1246)+(((-0.02626)*x11535))+(((0.0718)*x11534))+pz+((r20*x11539))+(((-1.0)*r21*x11537)));
evalcond[3]=((((-1.0)*x11540*x11542))+((r11*x11536))+(((-1.0)*x11538*x11543))+(((-1.0)*x11545))+((cj6*x11544)));
evalcond[4]=(((r10*sj5*x11536))+x11535+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x11541))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x11543*x11544))+(((-1.0)*sj5*x11538*x11542)));
evalcond[5]=((-0.09756)+((x11539*x11544))+(((0.02626)*r11*x11536))+(((-0.02626)*x11534))+(((-0.0718)*x11535))+(((-1.0)*x11539*x11540))+(((-1.0)*x11537*x11538))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11546=((1.0)*sj6);
CheckValue<IkReal> x11547=IKPowWithIntegerCheck(sj2,-1);
if(!x11547.valid){
continue;
}
CheckValue<IkReal> x11548=IKPowWithIntegerCheck(cj2,-1);
if(!x11548.valid){
continue;
}
if( IKabs(((x11547.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11548.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x11546))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x11546)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11547.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x11548.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x11546))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x11546))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x11547.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x11548.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x11546))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x11546))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11549=IKcos(j4);
IkReal x11550=IKsin(j4);
IkReal x11551=((0.02626)*sj0);
IkReal x11552=(cj6*r10);
IkReal x11553=(r01*sj6);
IkReal x11554=(r11*sj0);
IkReal x11555=(cj0*cj5);
IkReal x11556=(cj6*sj5);
IkReal x11557=(cj0*sj6);
IkReal x11558=((0.02626)*cj0);
IkReal x11559=((1.0)*cj5);
IkReal x11560=(cj6*r20);
IkReal x11561=((1.0)*sj0);
IkReal x11562=(r21*sj6);
IkReal x11563=(r00*sj5);
IkReal x11564=(cj6*r00);
IkReal x11565=((1.0)*cj0);
IkReal x11566=(r10*sj5*sj6);
IkReal x11567=(cj2*x11550);
IkReal x11568=(cj2*x11549);
IkReal x11569=(sj2*x11550);
IkReal x11570=(sj2*x11549);
evalcond[0]=(x11570+x11560+(((-1.0)*x11562)));
evalcond[1]=(x11569+(((-1.0)*r21*x11556))+(((-1.0)*r22*x11559))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x11568+(((-1.0)*x11552*x11561))+((sj6*x11554))+(((-1.0)*x11564*x11565))+((cj0*x11553)));
evalcond[3]=(((r11*x11557))+((sj0*x11564))+(((-1.0)*x11552*x11565))+(((-1.0)*x11553*x11561))+(((-1.0)*x11550)));
evalcond[4]=((0.1255)+(((0.02626)*x11560))+(((0.02626)*x11570))+(((0.1158)*cj2))+(((-0.02626)*x11562))+(((-0.0718)*x11569))+pz+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+x11567+((r02*x11555))+((sj0*x11566))+((x11557*x11563))+((x11554*x11556))+((cj0*r01*x11556)));
evalcond[6]=(((r12*x11555))+((r10*sj5*x11557))+x11549+(((-1.0)*sj6*x11561*x11563))+(((-1.0)*r01*x11556*x11561))+((cj0*r11*x11556))+(((-1.0)*r02*sj0*x11559)));
evalcond[7]=((-0.09756)+(((-1.0)*py*x11565))+(((-1.0)*x11551*x11553))+(((0.02626)*r11*x11557))+(((-0.0718)*x11549))+(((-0.02626)*x11550))+((px*sj0))+((x11551*x11564))+(((-1.0)*x11552*x11558)));
evalcond[8]=((-0.001)+(((0.02626)*x11568))+(((-1.0)*px*x11565))+((r11*sj6*x11551))+(((-0.1158)*sj2))+(((-1.0)*py*x11561))+(((-1.0)*x11551*x11552))+(((-1.0)*x11558*x11564))+(((0.0009)*cj2))+(((-0.0718)*x11567))+((x11553*x11558)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11571=((1.0)*cj6);
CheckValue<IkReal> x11572=IKPowWithIntegerCheck(sj2,-1);
if(!x11572.valid){
continue;
}
if( IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x11571))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11572.value)*((((r21*sj6))+(((-1.0)*r20*x11571)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x11571))+(((-1.0)*r01*sj0*sj6))))+IKsqr(((x11572.value)*((((r21*sj6))+(((-1.0)*r20*x11571))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x11571))+(((-1.0)*r01*sj0*sj6))), ((x11572.value)*((((r21*sj6))+(((-1.0)*r20*x11571))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11573=IKcos(j4);
IkReal x11574=IKsin(j4);
IkReal x11575=((0.02626)*sj0);
IkReal x11576=(cj6*r10);
IkReal x11577=(r01*sj6);
IkReal x11578=(r11*sj0);
IkReal x11579=(cj0*cj5);
IkReal x11580=(cj6*sj5);
IkReal x11581=(cj0*sj6);
IkReal x11582=((0.02626)*cj0);
IkReal x11583=((1.0)*cj5);
IkReal x11584=(cj6*r20);
IkReal x11585=((1.0)*sj0);
IkReal x11586=(r21*sj6);
IkReal x11587=(r00*sj5);
IkReal x11588=(cj6*r00);
IkReal x11589=((1.0)*cj0);
IkReal x11590=(r10*sj5*sj6);
IkReal x11591=(cj2*x11574);
IkReal x11592=(cj2*x11573);
IkReal x11593=(sj2*x11574);
IkReal x11594=(sj2*x11573);
evalcond[0]=(x11584+x11594+(((-1.0)*x11586)));
evalcond[1]=((((-1.0)*r21*x11580))+x11593+(((-1.0)*r22*x11583))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x11592+(((-1.0)*x11588*x11589))+((cj0*x11577))+(((-1.0)*x11576*x11585))+((sj6*x11578)));
evalcond[3]=((((-1.0)*x11577*x11585))+((sj0*x11588))+(((-1.0)*x11574))+(((-1.0)*x11576*x11589))+((r11*x11581)));
evalcond[4]=((0.1255)+(((0.02626)*x11594))+(((0.1158)*cj2))+(((-0.0718)*x11593))+pz+(((0.02626)*x11584))+(((0.0009)*sj2))+(((-0.02626)*x11586)));
evalcond[5]=(((cj5*r12*sj0))+((cj0*r01*x11580))+x11591+((sj0*x11590))+((x11578*x11580))+((x11581*x11587))+((r02*x11579)));
evalcond[6]=(((r10*sj5*x11581))+x11573+(((-1.0)*sj6*x11585*x11587))+((r12*x11579))+((cj0*r11*x11580))+(((-1.0)*r02*sj0*x11583))+(((-1.0)*r01*x11580*x11585)));
evalcond[7]=((-0.09756)+(((-0.02626)*x11574))+((x11575*x11588))+(((-1.0)*py*x11589))+(((-0.0718)*x11573))+(((-1.0)*x11576*x11582))+((px*sj0))+(((0.02626)*r11*x11581))+(((-1.0)*x11575*x11577)));
evalcond[8]=((-0.001)+(((-1.0)*px*x11589))+(((0.02626)*x11592))+(((-0.1158)*sj2))+((x11577*x11582))+(((0.0009)*cj2))+(((-1.0)*py*x11585))+(((-0.0718)*x11591))+((r11*sj6*x11575))+(((-1.0)*x11582*x11588))+(((-1.0)*x11575*x11576)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x11595=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x11595.valid){
continue;
}
CheckValue<IkReal> x11596 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x11596.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11595.value)))+(x11596.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11597=IKcos(j4);
IkReal x11598=IKsin(j4);
IkReal x11599=((0.02626)*sj0);
IkReal x11600=(cj6*r10);
IkReal x11601=(r01*sj6);
IkReal x11602=(r11*sj0);
IkReal x11603=(cj0*cj5);
IkReal x11604=(cj6*sj5);
IkReal x11605=(cj0*sj6);
IkReal x11606=((0.02626)*cj0);
IkReal x11607=((1.0)*cj5);
IkReal x11608=(cj6*r20);
IkReal x11609=((1.0)*sj0);
IkReal x11610=(r21*sj6);
IkReal x11611=(r00*sj5);
IkReal x11612=(cj6*r00);
IkReal x11613=((1.0)*cj0);
IkReal x11614=(r10*sj5*sj6);
IkReal x11615=(cj2*x11598);
IkReal x11616=(cj2*x11597);
IkReal x11617=(sj2*x11598);
IkReal x11618=(sj2*x11597);
evalcond[0]=(x11618+x11608+(((-1.0)*x11610)));
evalcond[1]=(x11617+(((-1.0)*r22*x11607))+(((-1.0)*r21*x11604))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x11616+(((-1.0)*x11612*x11613))+((cj0*x11601))+((sj6*x11602))+(((-1.0)*x11600*x11609)));
evalcond[3]=((((-1.0)*x11600*x11613))+((sj0*x11612))+(((-1.0)*x11598))+((r11*x11605))+(((-1.0)*x11601*x11609)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((0.02626)*x11618))+(((0.02626)*x11608))+(((-0.02626)*x11610))+pz+(((0.0009)*sj2))+(((-0.0718)*x11617)));
evalcond[5]=(((cj5*r12*sj0))+x11615+((x11602*x11604))+((sj0*x11614))+((r02*x11603))+((x11605*x11611))+((cj0*r01*x11604)));
evalcond[6]=(x11597+(((-1.0)*r01*x11604*x11609))+(((-1.0)*sj6*x11609*x11611))+((r10*sj5*x11605))+((cj0*r11*x11604))+(((-1.0)*r02*sj0*x11607))+((r12*x11603)));
evalcond[7]=((-0.09756)+(((-1.0)*py*x11613))+(((-0.02626)*x11598))+(((0.02626)*r11*x11605))+(((-1.0)*x11599*x11601))+(((-0.0718)*x11597))+((px*sj0))+((x11599*x11612))+(((-1.0)*x11600*x11606)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-1.0)*x11599*x11600))+(((-1.0)*px*x11613))+(((-1.0)*py*x11609))+(((0.02626)*x11616))+(((0.0009)*cj2))+((r11*sj6*x11599))+((x11601*x11606))+(((-1.0)*x11606*x11612))+(((-0.0718)*x11615)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11619=cj3*cj3;
IkReal x11620=(cj2*cj6);
IkReal x11621=((1.0)*sj5);
IkReal x11622=(cj1*sj0);
IkReal x11623=(cj2*sj6);
IkReal x11624=(r11*sj6);
IkReal x11625=(sj1*sj3);
IkReal x11626=((1.0)*cj6);
IkReal x11627=(cj0*r00);
IkReal x11628=((1.0)*cj3);
IkReal x11629=(cj5*r22);
IkReal x11630=(cj1*cj2);
IkReal x11631=(sj2*x11630);
IkReal x11632=((1.0)*x11619);
IkReal x11633=(cj0*cj1*r01);
CheckValue<IkReal> x11634=IKPowWithIntegerCheck((x11631+(((-1.0)*x11631*x11632))+((cj3*sj2*x11625))),-1);
if(!x11634.valid){
continue;
}
CheckValue<IkReal> x11635=IKPowWithIntegerCheck((x11630+((cj3*x11625))+(((-1.0)*x11630*x11632))),-1);
if(!x11635.valid){
continue;
}
if( IKabs(((x11634.value)*(((((-1.0)*x11623*x11628*x11633))+(((-1.0)*r11*x11622*x11623*x11628))+((cj3*r10*x11620*x11622))+(((-1.0)*r20*x11621*x11623))+(((-1.0)*x11625*x11626*x11627))+(((-1.0)*cj2*x11629))+((sj0*x11624*x11625))+(((-1.0)*r21*x11620*x11621))+((cj0*r01*sj6*x11625))+(((-1.0)*r10*sj0*x11625*x11626))+((cj1*cj3*x11620*x11627)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11635.value)*(((((-1.0)*x11628*x11629))+((cj1*cj6*x11627))+((cj6*r10*x11622))+(((-1.0)*cj3*cj6*r21*x11621))+(((-1.0)*x11622*x11624))+(((-1.0)*cj3*r20*sj6*x11621))+(((-1.0)*sj6*x11633)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11634.value)*(((((-1.0)*x11623*x11628*x11633))+(((-1.0)*r11*x11622*x11623*x11628))+((cj3*r10*x11620*x11622))+(((-1.0)*r20*x11621*x11623))+(((-1.0)*x11625*x11626*x11627))+(((-1.0)*cj2*x11629))+((sj0*x11624*x11625))+(((-1.0)*r21*x11620*x11621))+((cj0*r01*sj6*x11625))+(((-1.0)*r10*sj0*x11625*x11626))+((cj1*cj3*x11620*x11627))))))+IKsqr(((x11635.value)*(((((-1.0)*x11628*x11629))+((cj1*cj6*x11627))+((cj6*r10*x11622))+(((-1.0)*cj3*cj6*r21*x11621))+(((-1.0)*x11622*x11624))+(((-1.0)*cj3*r20*sj6*x11621))+(((-1.0)*sj6*x11633))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x11634.value)*(((((-1.0)*x11623*x11628*x11633))+(((-1.0)*r11*x11622*x11623*x11628))+((cj3*r10*x11620*x11622))+(((-1.0)*r20*x11621*x11623))+(((-1.0)*x11625*x11626*x11627))+(((-1.0)*cj2*x11629))+((sj0*x11624*x11625))+(((-1.0)*r21*x11620*x11621))+((cj0*r01*sj6*x11625))+(((-1.0)*r10*sj0*x11625*x11626))+((cj1*cj3*x11620*x11627))))), ((x11635.value)*(((((-1.0)*x11628*x11629))+((cj1*cj6*x11627))+((cj6*r10*x11622))+(((-1.0)*cj3*cj6*r21*x11621))+(((-1.0)*x11622*x11624))+(((-1.0)*cj3*r20*sj6*x11621))+(((-1.0)*sj6*x11633))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11636=IKsin(j4);
IkReal x11637=IKcos(j4);
IkReal x11638=(cj0*sj6);
IkReal x11639=((1.0)*cj5);
IkReal x11640=(cj2*sj1);
IkReal x11641=((1.0)*cj3);
IkReal x11642=((0.0718)*cj1);
IkReal x11643=(cj6*sj0);
IkReal x11644=(cj5*r12);
IkReal x11645=((0.02626)*r10);
IkReal x11646=((1.0)*r21);
IkReal x11647=((1.0)*sj5);
IkReal x11648=((0.02626)*cj3);
IkReal x11649=(sj0*sj6);
IkReal x11650=(r10*sj5);
IkReal x11651=((0.02626)*r01);
IkReal x11652=(cj0*cj6);
IkReal x11653=((0.0009)*sj2);
IkReal x11654=((0.02626)*r11);
IkReal x11655=((1.0)*sj1);
IkReal x11656=((1.0)*py);
IkReal x11657=(cj1*cj2);
IkReal x11658=((0.02626)*r00);
IkReal x11659=(cj6*r20);
IkReal x11660=((0.09746)*cj3);
IkReal x11661=(r11*sj5);
IkReal x11662=((0.09746)*sj3);
IkReal x11663=((1.0)*cj1);
IkReal x11664=((0.02626)*cj1);
IkReal x11665=((0.0718)*sj1);
IkReal x11666=((1.0)*r10);
IkReal x11667=(cj2*x11636);
IkReal x11668=(cj3*x11637);
IkReal x11669=(sj2*x11636);
IkReal x11670=(cj2*x11637);
IkReal x11671=(sj2*x11637);
IkReal x11672=(sj3*x11636);
IkReal x11673=(sj3*x11637);
IkReal x11674=(sj1*x11672);
evalcond[0]=(x11674+x11659+(((-1.0)*sj6*x11646))+(((-1.0)*x11663*x11671))+(((-1.0)*x11636*x11641*x11657)));
evalcond[1]=(x11670+((r11*x11649))+(((-1.0)*x11641*x11669))+(((-1.0)*x11643*x11666))+((r01*x11638))+(((-1.0)*r00*x11652)));
evalcond[2]=((((-1.0)*r22*x11639))+(((-1.0)*r20*sj6*x11647))+(((-1.0)*cj6*sj5*x11646))+(((-1.0)*x11663*x11669))+((x11657*x11668))+(((-1.0)*x11655*x11673)));
evalcond[3]=(((sj2*x11668))+x11667+((cj0*cj5*r02))+((r00*sj5*x11638))+((r01*sj5*x11652))+((sj0*x11644))+((x11649*x11650))+((x11643*x11661)));
evalcond[4]=(((r11*x11638))+(((-1.0)*x11663*x11672))+(((-1.0)*x11652*x11666))+(((-1.0)*x11636*x11640*x11641))+(((-1.0)*r01*x11649))+(((-1.0)*x11655*x11671))+((r00*x11643)));
evalcond[5]=((((-1.0)*x11655*x11669))+(((-1.0)*r00*x11647*x11649))+((cj0*x11644))+((x11640*x11668))+((cj1*x11673))+((x11638*x11650))+(((-1.0)*r01*x11643*x11647))+(((-1.0)*r02*sj0*x11639))+((x11652*x11661)));
evalcond[6]=((-0.001)+(((0.02626)*x11670))+(((-0.1158)*sj2))+(((-1.0)*x11643*x11645))+(((-1.0)*x11648*x11669))+(((-0.0718)*x11667))+(((-0.0718)*sj2*x11668))+(((0.0009)*cj2))+(((-1.0)*sj2*x11660))+((x11649*x11654))+(((-1.0)*sj0*x11656))+((x11638*x11651))+(((-1.0)*x11652*x11658))+(((-1.0)*cj0*px)));
evalcond[7]=((((-0.02626)*r21*sj6))+(((0.02626)*x11674))+(((0.02626)*x11659))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-1.0)*x11664*x11671))+((x11665*x11673))+pz+(((-0.1158)*x11657))+((x11642*x11669))+(((-1.0)*x11636*x11648*x11657))+(((-1.0)*cj1*x11653))+(((-1.0)*x11657*x11660))+(((-1.0)*cj2*x11642*x11668))+((sj1*x11662)));
evalcond[8]=((((-0.1255)*sj1))+((x11643*x11658))+(((-1.0)*cj0*x11656))+(((-1.0)*cj1*x11662))+(((-1.0)*x11640*x11660))+(((-1.0)*x11664*x11672))+(((-1.0)*x11636*x11640*x11648))+(((-0.1158)*x11640))+((x11665*x11669))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x11649*x11651))+((x11638*x11654))+(((-1.0)*x11642*x11673))+(((-1.0)*sj1*x11653))+(((-0.02626)*sj1*x11671))+(((-0.0718)*x11640*x11668))+(((-1.0)*x11645*x11652)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11675=cj1*cj1;
IkReal x11676=cj3*cj3;
IkReal x11677=cj2*cj2;
IkReal x11678=((1.0)*sj5);
IkReal x11679=(cj1*sj2);
IkReal x11680=(r20*sj6);
IkReal x11681=(sj1*sj3);
IkReal x11682=(cj6*r20);
IkReal x11683=(cj6*r21);
IkReal x11684=(r21*x11681);
IkReal x11685=(cj1*cj2*cj3);
IkReal x11686=((1.0)*r21*sj6);
IkReal x11687=((1.0)*cj5*r22);
IkReal x11688=(x11675*x11676);
CheckValue<IkReal> x11689=IKPowWithIntegerCheck(IKsign(((1.0)+((x11677*x11688))+x11688+(((-2.0)*x11681*x11685))+(((-1.0)*x11675*x11677))+(((-1.0)*x11676)))),-1);
if(!x11689.valid){
continue;
}
CheckValue<IkReal> x11690 = IKatan2WithCheck(IkReal((((sj6*x11684))+((x11682*x11685))+(((-1.0)*x11685*x11686))+(((-1.0)*x11681*x11682))+(((-1.0)*x11678*x11679*x11683))+(((-1.0)*x11678*x11679*x11680))+(((-1.0)*x11679*x11687)))),(((sj5*x11680*x11685))+(((-1.0)*x11678*x11680*x11681))+(((-1.0)*x11678*x11681*x11683))+(((-1.0)*x11681*x11687))+((sj5*x11683*x11685))+((x11679*x11682))+(((-1.0)*x11679*x11686))+((cj5*r22*x11685))),IKFAST_ATAN2_MAGTHRESH);
if(!x11690.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11689.value)))+(x11690.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11691=IKsin(j4);
IkReal x11692=IKcos(j4);
IkReal x11693=(cj0*sj6);
IkReal x11694=((1.0)*cj5);
IkReal x11695=(cj2*sj1);
IkReal x11696=((1.0)*cj3);
IkReal x11697=((0.0718)*cj1);
IkReal x11698=(cj6*sj0);
IkReal x11699=(cj5*r12);
IkReal x11700=((0.02626)*r10);
IkReal x11701=((1.0)*r21);
IkReal x11702=((1.0)*sj5);
IkReal x11703=((0.02626)*cj3);
IkReal x11704=(sj0*sj6);
IkReal x11705=(r10*sj5);
IkReal x11706=((0.02626)*r01);
IkReal x11707=(cj0*cj6);
IkReal x11708=((0.0009)*sj2);
IkReal x11709=((0.02626)*r11);
IkReal x11710=((1.0)*sj1);
IkReal x11711=((1.0)*py);
IkReal x11712=(cj1*cj2);
IkReal x11713=((0.02626)*r00);
IkReal x11714=(cj6*r20);
IkReal x11715=((0.09746)*cj3);
IkReal x11716=(r11*sj5);
IkReal x11717=((0.09746)*sj3);
IkReal x11718=((1.0)*cj1);
IkReal x11719=((0.02626)*cj1);
IkReal x11720=((0.0718)*sj1);
IkReal x11721=((1.0)*r10);
IkReal x11722=(cj2*x11691);
IkReal x11723=(cj3*x11692);
IkReal x11724=(sj2*x11691);
IkReal x11725=(cj2*x11692);
IkReal x11726=(sj2*x11692);
IkReal x11727=(sj3*x11691);
IkReal x11728=(sj3*x11692);
IkReal x11729=(sj1*x11727);
evalcond[0]=(x11729+x11714+(((-1.0)*sj6*x11701))+(((-1.0)*x11691*x11696*x11712))+(((-1.0)*x11718*x11726)));
evalcond[1]=(x11725+((r01*x11693))+(((-1.0)*x11696*x11724))+(((-1.0)*x11698*x11721))+((r11*x11704))+(((-1.0)*r00*x11707)));
evalcond[2]=((((-1.0)*r22*x11694))+(((-1.0)*r20*sj6*x11702))+((x11712*x11723))+(((-1.0)*x11718*x11724))+(((-1.0)*x11710*x11728))+(((-1.0)*cj6*sj5*x11701)));
evalcond[3]=(x11722+((cj0*cj5*r02))+((x11698*x11716))+((x11704*x11705))+((r01*sj5*x11707))+((r00*sj5*x11693))+((sj0*x11699))+((sj2*x11723)));
evalcond[4]=((((-1.0)*r01*x11704))+(((-1.0)*x11707*x11721))+((r00*x11698))+(((-1.0)*x11718*x11727))+(((-1.0)*x11710*x11726))+(((-1.0)*x11691*x11695*x11696))+((r11*x11693)));
evalcond[5]=(((cj0*x11699))+(((-1.0)*r02*sj0*x11694))+(((-1.0)*r00*x11702*x11704))+((x11693*x11705))+((x11707*x11716))+(((-1.0)*x11710*x11724))+(((-1.0)*r01*x11698*x11702))+((cj1*x11728))+((x11695*x11723)));
evalcond[6]=((-0.001)+(((-1.0)*x11703*x11724))+(((-1.0)*x11707*x11713))+(((-0.1158)*sj2))+((x11704*x11709))+(((-1.0)*x11698*x11700))+((x11693*x11706))+(((-0.0718)*sj2*x11723))+(((-1.0)*sj2*x11715))+(((0.0009)*cj2))+(((0.02626)*x11725))+(((-1.0)*sj0*x11711))+(((-0.0718)*x11722))+(((-1.0)*cj0*px)));
evalcond[7]=((((-0.02626)*r21*sj6))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+((sj1*x11717))+(((-1.0)*x11691*x11703*x11712))+(((-1.0)*x11712*x11715))+(((-0.1158)*x11712))+pz+(((0.02626)*x11714))+(((0.02626)*x11729))+((x11720*x11728))+((x11697*x11724))+(((-1.0)*cj1*x11708))+(((-1.0)*x11719*x11726))+(((-1.0)*cj2*x11697*x11723)));
evalcond[8]=((((-1.0)*cj0*x11711))+(((-0.1255)*sj1))+(((-0.0718)*x11695*x11723))+(((-1.0)*x11704*x11706))+(((-0.1158)*x11695))+((x11698*x11713))+((x11693*x11709))+(((-0.02626)*sj1*x11726))+(((-1.0)*x11695*x11715))+(((-1.0)*cj1*x11717))+(((-1.0)*x11691*x11695*x11703))+(((0.0001)*cj1))+((px*sj0))+((x11720*x11724))+(((-1.0)*x11697*x11728))+(((-1.0)*x11700*x11707))+(((-1.0)*x11719*x11727))+(((-1.0)*sj1*x11708)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11730=(cj0*r00);
IkReal x11731=(r10*sj0);
IkReal x11732=(sj1*sj3);
IkReal x11733=((1.0)*cj2);
IkReal x11734=((1.0)*cj6);
IkReal x11735=(cj1*sj2);
IkReal x11736=(r21*sj6);
IkReal x11737=(cj3*sj2);
IkReal x11738=(cj1*cj3);
IkReal x11739=(cj6*r20);
IkReal x11740=(r11*sj0*sj6);
IkReal x11741=(cj0*r01*sj6);
IkReal x11742=(x11734*x11735);
IkReal x11743=(cj2*cj6*x11738);
CheckValue<IkReal> x11744 = IKatan2WithCheck(IkReal((((x11735*x11741))+((x11735*x11740))+(((-1.0)*x11731*x11742))+(((-1.0)*x11730*x11742))+((cj2*x11739))+(((-1.0)*x11733*x11736)))),((((-1.0)*x11730*x11732*x11734))+((x11737*x11739))+(((-1.0)*x11733*x11738*x11740))+(((-1.0)*x11733*x11738*x11741))+((x11731*x11743))+((x11732*x11741))+((x11732*x11740))+(((-1.0)*x11731*x11732*x11734))+((x11730*x11743))+(((-1.0)*x11736*x11737))),IKFAST_ATAN2_MAGTHRESH);
if(!x11744.valid){
continue;
}
CheckValue<IkReal> x11745=IKPowWithIntegerCheck(IKsign((x11738+(((-1.0)*x11732*x11733)))),-1);
if(!x11745.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x11744.value)+(((1.5707963267949)*(x11745.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11746=IKsin(j4);
IkReal x11747=IKcos(j4);
IkReal x11748=(cj0*sj6);
IkReal x11749=((1.0)*cj5);
IkReal x11750=(cj2*sj1);
IkReal x11751=((1.0)*cj3);
IkReal x11752=((0.0718)*cj1);
IkReal x11753=(cj6*sj0);
IkReal x11754=(cj5*r12);
IkReal x11755=((0.02626)*r10);
IkReal x11756=((1.0)*r21);
IkReal x11757=((1.0)*sj5);
IkReal x11758=((0.02626)*cj3);
IkReal x11759=(sj0*sj6);
IkReal x11760=(r10*sj5);
IkReal x11761=((0.02626)*r01);
IkReal x11762=(cj0*cj6);
IkReal x11763=((0.0009)*sj2);
IkReal x11764=((0.02626)*r11);
IkReal x11765=((1.0)*sj1);
IkReal x11766=((1.0)*py);
IkReal x11767=(cj1*cj2);
IkReal x11768=((0.02626)*r00);
IkReal x11769=(cj6*r20);
IkReal x11770=((0.09746)*cj3);
IkReal x11771=(r11*sj5);
IkReal x11772=((0.09746)*sj3);
IkReal x11773=((1.0)*cj1);
IkReal x11774=((0.02626)*cj1);
IkReal x11775=((0.0718)*sj1);
IkReal x11776=((1.0)*r10);
IkReal x11777=(cj2*x11746);
IkReal x11778=(cj3*x11747);
IkReal x11779=(sj2*x11746);
IkReal x11780=(cj2*x11747);
IkReal x11781=(sj2*x11747);
IkReal x11782=(sj3*x11746);
IkReal x11783=(sj3*x11747);
IkReal x11784=(sj1*x11782);
evalcond[0]=(x11769+x11784+(((-1.0)*x11773*x11781))+(((-1.0)*sj6*x11756))+(((-1.0)*x11746*x11751*x11767)));
evalcond[1]=(x11780+((r01*x11748))+((r11*x11759))+(((-1.0)*r00*x11762))+(((-1.0)*x11751*x11779))+(((-1.0)*x11753*x11776)));
evalcond[2]=((((-1.0)*x11765*x11783))+(((-1.0)*r20*sj6*x11757))+(((-1.0)*x11773*x11779))+(((-1.0)*cj6*sj5*x11756))+(((-1.0)*r22*x11749))+((x11767*x11778)));
evalcond[3]=(((x11759*x11760))+x11777+((cj0*cj5*r02))+((r00*sj5*x11748))+((r01*sj5*x11762))+((x11753*x11771))+((sj0*x11754))+((sj2*x11778)));
evalcond[4]=((((-1.0)*x11765*x11781))+(((-1.0)*r01*x11759))+(((-1.0)*x11773*x11782))+(((-1.0)*x11762*x11776))+(((-1.0)*x11746*x11750*x11751))+((r00*x11753))+((r11*x11748)));
evalcond[5]=(((cj0*x11754))+(((-1.0)*r02*sj0*x11749))+((x11748*x11760))+((x11762*x11771))+((x11750*x11778))+(((-1.0)*x11765*x11779))+(((-1.0)*r01*x11753*x11757))+((cj1*x11783))+(((-1.0)*r00*x11757*x11759)));
evalcond[6]=((-0.001)+((x11759*x11764))+((x11748*x11761))+(((-0.1158)*sj2))+(((-1.0)*sj0*x11766))+(((0.02626)*x11780))+(((-0.0718)*x11777))+(((0.0009)*cj2))+(((-1.0)*sj2*x11770))+(((-1.0)*x11758*x11779))+(((-1.0)*x11753*x11755))+(((-1.0)*x11762*x11768))+(((-0.0718)*sj2*x11778))+(((-1.0)*cj0*px)));
evalcond[7]=((((-1.0)*cj1*x11763))+(((-0.02626)*r21*sj6))+(((-1.0)*x11774*x11781))+(((-1.0)*x11767*x11770))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-1.0)*x11746*x11758*x11767))+(((0.02626)*x11769))+((sj1*x11772))+((x11752*x11779))+(((0.02626)*x11784))+pz+(((-1.0)*cj2*x11752*x11778))+(((-0.1158)*x11767))+((x11775*x11783)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*cj1*x11772))+((x11775*x11779))+(((-1.0)*x11774*x11782))+((x11748*x11764))+(((-1.0)*x11755*x11762))+(((-0.02626)*sj1*x11781))+(((-1.0)*x11752*x11783))+(((-1.0)*sj1*x11763))+(((-0.0718)*x11750*x11778))+((x11753*x11768))+(((-1.0)*x11750*x11770))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x11746*x11750*x11758))+(((-1.0)*cj0*x11766))+(((-0.1158)*x11750))+(((-1.0)*x11759*x11761)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
CheckValue<IkReal> x11796=IKPowWithIntegerCheck(sj2,-1);
if(!x11796.valid){
continue;
}
IkReal x11785=x11796.value;
IkReal x11786=(cj5*sj6);
IkReal x11787=(cj5*cj6);
IkReal x11788=((1.0)*cj0);
IkReal x11789=(r10*sj0);
IkReal x11790=(cj1*cj2);
IkReal x11791=(r11*sj0);
IkReal x11792=((1.0)*sj5);
IkReal x11793=(r12*sj0);
IkReal x11794=(cj0*r02*sj5);
IkReal x11795=(cj0*x11790);
CheckValue<IkReal> x11797=IKPowWithIntegerCheck(sj1,-1);
if(!x11797.valid){
continue;
}
if( IKabs((x11785*((x11794+(((-1.0)*x11787*x11791))+(((-1.0)*r01*x11787*x11788))+((sj5*x11793))+(((-1.0)*x11786*x11789))+(((-1.0)*r00*x11786*x11788)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((x11785*(x11797.value)*((((r00*x11786*x11795))+(((-1.0)*r02*sj5*x11788*x11790))+((x11786*x11789*x11790))+((r21*sj2*x11787))+((r20*sj2*x11786))+((r01*x11787*x11795))+(((-1.0)*r22*sj2*x11792))+(((-1.0)*x11790*x11792*x11793))+((x11787*x11790*x11791)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x11785*((x11794+(((-1.0)*x11787*x11791))+(((-1.0)*r01*x11787*x11788))+((sj5*x11793))+(((-1.0)*x11786*x11789))+(((-1.0)*r00*x11786*x11788))))))+IKsqr((x11785*(x11797.value)*((((r00*x11786*x11795))+(((-1.0)*r02*sj5*x11788*x11790))+((x11786*x11789*x11790))+((r21*sj2*x11787))+((r20*sj2*x11786))+((r01*x11787*x11795))+(((-1.0)*r22*sj2*x11792))+(((-1.0)*x11790*x11792*x11793))+((x11787*x11790*x11791))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2((x11785*((x11794+(((-1.0)*x11787*x11791))+(((-1.0)*r01*x11787*x11788))+((sj5*x11793))+(((-1.0)*x11786*x11789))+(((-1.0)*r00*x11786*x11788))))), (x11785*(x11797.value)*((((r00*x11786*x11795))+(((-1.0)*r02*sj5*x11788*x11790))+((x11786*x11789*x11790))+((r21*sj2*x11787))+((r20*sj2*x11786))+((r01*x11787*x11795))+(((-1.0)*r22*sj2*x11792))+(((-1.0)*x11790*x11792*x11793))+((x11787*x11790*x11791))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x11798=IKsin(j3);
IkReal x11799=IKcos(j3);
IkReal x11800=((1.0)*sj1);
IkReal x11801=(cj0*sj5);
IkReal x11802=(cj5*cj6);
IkReal x11803=((1.0)*sj5);
IkReal x11804=((1.0)*cj0);
IkReal x11805=((1.0)*sj0);
IkReal x11806=(cj5*sj6);
IkReal x11807=((1.0)*x11798);
evalcond[0]=(((r21*x11802))+(((-1.0)*r22*x11803))+((r20*x11806))+(((-1.0)*cj1*cj2*x11807))+(((-1.0)*x11799*x11800)));
evalcond[1]=(((r02*x11801))+(((-1.0)*r10*x11805*x11806))+(((-1.0)*r11*x11802*x11805))+((r12*sj0*sj5))+(((-1.0)*sj2*x11807))+(((-1.0)*r01*x11802*x11804))+(((-1.0)*r00*x11804*x11806)));
evalcond[2]=(((r00*sj0*x11806))+(((-1.0)*r10*x11804*x11806))+(((-1.0)*r11*x11802*x11804))+((cj1*x11799))+(((-1.0)*r02*sj0*x11803))+((r01*sj0*x11802))+((r12*x11801))+(((-1.0)*cj2*x11798*x11800)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[2];
IkReal x11808=((((-1.0)*cj2*sj1*sj3))+((cj1*cj3)));
j4eval[0]=x11808;
j4eval[1]=IKsign(x11808);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
IkReal x11809=cj1*cj1;
IkReal x11810=cj3*cj3;
IkReal x11811=cj2*cj2;
IkReal x11812=(x11809*x11810);
IkReal x11813=((1.0)+(((-2.0)*cj1*cj2*cj3*sj1*sj3))+(((-1.0)*x11810))+((x11811*x11812))+(((-1.0)*x11809*x11811))+x11812);
j4eval[0]=x11813;
j4eval[1]=IKsign(x11813);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
IkReal x11814=cj3*cj3;
IkReal x11815=(cj1*cj2);
IkReal x11816=(cj3*sj1*sj3);
IkReal x11817=(sj2*x11815);
IkReal x11818=((1.0)*x11814);
j4eval[0]=((((-1.0)*x11817*x11818))+((sj2*x11816))+x11817);
j4eval[1]=((((-1.0)*x11815*x11818))+x11816+x11815);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x11819=(cj0*sj5);
IkReal x11820=(cj5*cj6);
IkReal x11821=((1.0)*sj3);
IkReal x11822=((1.0)*cj0);
IkReal x11823=((1.0)*sj0);
IkReal x11824=(cj5*sj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((((-1.0)*cj3*sj1))+(((-1.0)*r22*sj5))+((r20*x11824))+((r21*x11820))+(((-1.0)*cj1*x11821)));
evalcond[2]=((((-1.0)*r00*x11822*x11824))+((r12*sj0*sj5))+(((-1.0)*r11*x11820*x11823))+((r02*x11819))+(((-1.0)*r10*x11823*x11824))+(((-1.0)*r01*x11820*x11822)));
evalcond[3]=((((-1.0)*r02*sj5*x11823))+((r00*sj0*x11824))+(((-1.0)*r10*x11822*x11824))+((r01*sj0*x11820))+(((-1.0)*r11*x11820*x11822))+(((-1.0)*sj1*x11821))+((cj1*cj3))+((r12*x11819)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x11825=(cj0*cj6);
IkReal x11826=((1.0)*cj5);
IkReal x11827=((1.0)*sj5);
IkReal x11828=(sj0*sj6);
IkReal x11829=(cj6*sj0);
IkReal x11830=(cj0*sj6);
if( IKabs(((((-1.0)*r01*x11825*x11827))+(((-1.0)*r00*x11827*x11830))+(((-1.0)*r12*sj0*x11826))+(((-1.0)*r10*x11827*x11828))+(((-1.0)*cj0*r02*x11826))+(((-1.0)*r11*x11827*x11829)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x11829))+(((-1.0)*r11*x11828))+(((-1.0)*r01*x11830))+((r00*x11825)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x11825*x11827))+(((-1.0)*r00*x11827*x11830))+(((-1.0)*r12*sj0*x11826))+(((-1.0)*r10*x11827*x11828))+(((-1.0)*cj0*r02*x11826))+(((-1.0)*r11*x11827*x11829))))+IKsqr((((r10*x11829))+(((-1.0)*r11*x11828))+(((-1.0)*r01*x11830))+((r00*x11825))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*x11825*x11827))+(((-1.0)*r00*x11827*x11830))+(((-1.0)*r12*sj0*x11826))+(((-1.0)*r10*x11827*x11828))+(((-1.0)*cj0*r02*x11826))+(((-1.0)*r11*x11827*x11829))), (((r10*x11829))+(((-1.0)*r11*x11828))+(((-1.0)*r01*x11830))+((r00*x11825))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x11831=IKsin(j4);
IkReal x11832=IKcos(j4);
IkReal x11833=(r11*sj0);
IkReal x11834=(sj1*sj3);
IkReal x11835=(cj5*r12);
IkReal x11836=(cj6*sj5);
IkReal x11837=(sj0*sj6);
IkReal x11838=(r10*sj5);
IkReal x11839=((0.02626)*r01);
IkReal x11840=(cj0*sj6);
IkReal x11841=((1.0)*cj5);
IkReal x11842=(cj1*sj3);
IkReal x11843=((0.02626)*cj6);
IkReal x11844=((0.02626)*sj6);
IkReal x11845=((1.0)*r01);
IkReal x11846=(r00*sj5);
IkReal x11847=(cj3*sj1);
IkReal x11848=(cj1*cj3);
IkReal x11849=((1.0)*py);
IkReal x11850=(r00*sj0);
IkReal x11851=((1.0)*r21);
IkReal x11852=((1.0)*cj0);
IkReal x11853=((1.0)*cj6*r10);
IkReal x11854=((0.02626)*x11831);
IkReal x11855=((1.0)*x11831);
IkReal x11856=((0.0718)*x11832);
IkReal x11857=(x11832*x11848);
evalcond[0]=((((-1.0)*sj6*x11851))+((x11831*x11834))+((cj6*r20))+(((-1.0)*x11848*x11855)));
evalcond[1]=(((sj6*x11833))+(((-1.0)*cj6*r00*x11852))+((r01*x11840))+x11832+(((-1.0)*sj0*x11853)));
evalcond[2]=((((-1.0)*x11836*x11851))+(((-1.0)*x11832*x11834))+x11857+(((-1.0)*r20*sj5*sj6))+(((-1.0)*r22*x11841)));
evalcond[3]=(((x11837*x11838))+((x11840*x11846))+((cj0*cj5*r02))+((cj0*r01*x11836))+((sj0*x11835))+((x11833*x11836))+x11831);
evalcond[4]=((((-1.0)*cj6*r10*x11852))+((r11*x11840))+(((-1.0)*x11837*x11845))+(((-1.0)*x11842*x11855))+((cj6*x11850))+(((-1.0)*x11847*x11855)));
evalcond[5]=((-0.0001)+((x11839*x11840))+(((-1.0)*r10*sj0*x11843))+(((-1.0)*px*x11852))+(((-1.0)*cj0*r00*x11843))+(((-0.0718)*x11831))+((x11833*x11844))+(((0.02626)*x11832))+(((-1.0)*sj0*x11849)));
evalcond[6]=(((cj0*r11*x11836))+((x11838*x11840))+((x11832*x11842))+((x11832*x11847))+(((-1.0)*x11837*x11846))+((cj0*x11835))+(((-1.0)*r02*sj0*x11841))+(((-1.0)*sj0*x11836*x11845)));
evalcond[7]=(((r20*x11843))+(((0.09746)*x11834))+(((-0.0001)*sj1))+((x11834*x11856))+((x11834*x11854))+(((-1.0)*r21*x11844))+(((-0.2413)*cj1))+pz+(((-0.09746)*x11848))+(((-1.0)*x11848*x11856))+(((-1.0)*x11848*x11854)));
evalcond[8]=((((-1.0)*x11837*x11839))+(((-1.0)*cj0*r10*x11843))+(((0.02626)*r11*x11840))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x11842*x11856))+(((-1.0)*x11842*x11854))+(((-0.2413)*sj1))+(((-0.09746)*x11847))+(((-0.09746)*x11842))+((x11843*x11850))+(((-1.0)*cj0*x11849))+(((-1.0)*x11847*x11854))+(((-1.0)*x11847*x11856)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11858=(cj0*sj5);
IkReal x11859=(cj5*cj6);
IkReal x11860=((1.0)*sj5);
IkReal x11861=((1.0)*cj0);
IkReal x11862=((1.0)*sj0);
IkReal x11863=(cj5*sj6);
IkReal x11864=(r10*x11863);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x11859))+(((-1.0)*r22*x11860))+((cj1*sj3))+((r20*x11863))+(((-1.0)*cj3*sj1)));
evalcond[2]=((((-1.0)*x11862*x11864))+((r12*sj0*sj5))+(((-1.0)*r00*x11861*x11863))+((r02*x11858))+(((-1.0)*r01*x11859*x11861))+(((-1.0)*r11*x11859*x11862)));
evalcond[3]=((((-1.0)*x11861*x11864))+((r01*sj0*x11859))+((sj1*sj3))+((r12*x11858))+((cj1*cj3))+(((-1.0)*r11*x11859*x11861))+(((-1.0)*r02*sj0*x11860))+((r00*sj0*x11863)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x11865=((1.0)*sj5);
IkReal x11866=(((sj1*sj3))+((cj1*cj3)));
j4eval[0]=x11866;
j4eval[1]=IKsign(x11866);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*r20*sj6*x11865))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x11865))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=(((sj1*sj3))+((cj1*cj3)));
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=((((-1.0)*cj1*sj3))+((cj3*sj1)));
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x11867=(cj5*cj6);
IkReal x11868=(cj0*sj6);
IkReal x11869=(r01*sj0);
IkReal x11870=((1.0)*sj0);
IkReal x11871=((1.0)*cj5);
IkReal x11872=(cj0*r12);
IkReal x11873=(r02*sj5);
IkReal x11874=((1.0)*sj5);
IkReal x11875=(cj5*sj6);
IkReal x11876=((1.0)*cj0);
IkReal x11877=(cj0*cj6*r10);
IkReal x11878=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x11874))+((r20*x11875))+((r21*x11867)));
evalcond[2]=((((-1.0)*cj6*r10*x11876))+((r11*x11868))+(((-1.0)*sj6*x11869))+x11878);
evalcond[3]=((((-1.0)*r11*x11867*x11870))+(((-1.0)*r01*x11867*x11876))+((r12*sj0*sj5))+(((-1.0)*r10*x11870*x11875))+(((-1.0)*r00*x11868*x11871))+((cj0*x11873)));
evalcond[4]=((1.0)+(((-1.0)*r11*x11867*x11876))+(((-1.0)*x11870*x11873))+(((-1.0)*r10*x11868*x11871))+((x11867*x11869))+((sj5*x11872))+((r00*sj0*x11875)));
evalcond[5]=(((r10*sj5*x11868))+((cj5*x11872))+(((-1.0)*cj6*x11869*x11874))+(((-1.0)*cj5*r02*x11870))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x11870)));
evalcond[6]=((0.0001)+(((-0.02626)*x11877))+(((0.02626)*x11878))+(((-0.02626)*sj6*x11869))+((px*sj0))+(((0.02626)*r11*x11868))+(((-1.0)*py*x11876)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.22228412256267)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.22228412256267)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.22228412256267)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11879=IKcos(j4);
IkReal x11880=IKsin(j4);
IkReal x11881=(r11*sj0);
IkReal x11882=(cj6*sj5);
IkReal x11883=(r10*sj0);
IkReal x11884=(sj5*sj6);
IkReal x11885=((0.02626)*sj6);
IkReal x11886=(cj0*r01);
IkReal x11887=((0.02626)*cj6);
IkReal x11888=((1.0)*cj6);
IkReal x11889=(cj0*r00);
IkReal x11890=((1.0)*r21);
IkReal x11891=((1.0)*x11879);
evalcond[0]=(((cj6*r20))+(((-1.0)*sj6*x11890))+x11880);
evalcond[1]=((((-1.0)*x11882*x11890))+(((-1.0)*r20*x11884))+(((-1.0)*cj5*r22))+(((-1.0)*x11891)));
evalcond[2]=((0.08776)+(((0.02626)*x11880))+(((0.0718)*x11879))+pz+(((-1.0)*r21*x11885))+((r20*x11887)));
evalcond[3]=((((-1.0)*x11883*x11888))+(((-1.0)*x11888*x11889))+((sj6*x11886))+((sj6*x11881))+(((-1.0)*x11891)));
evalcond[4]=(((cj5*r12*sj0))+(((-1.0)*x11880))+((x11883*x11884))+((cj0*cj5*r02))+((x11881*x11882))+((x11882*x11886))+((x11884*x11889)));
evalcond[5]=((-0.0019)+(((-1.0)*x11883*x11887))+((x11881*x11885))+(((-1.0)*x11887*x11889))+(((-0.02626)*x11879))+(((-1.0)*py*sj0))+((x11885*x11886))+(((0.0718)*x11880))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11892=(cj5*cj6);
IkReal x11893=(cj0*sj6);
IkReal x11894=(r01*sj0);
IkReal x11895=((1.0)*sj0);
IkReal x11896=((1.0)*cj5);
IkReal x11897=(cj0*r12);
IkReal x11898=(r02*sj5);
IkReal x11899=((1.0)*sj5);
IkReal x11900=(cj5*sj6);
IkReal x11901=((1.0)*cj0);
IkReal x11902=(cj0*cj6*r10);
IkReal x11903=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x11899))+((r21*x11892))+((r20*x11900)));
evalcond[2]=(x11903+(((-1.0)*sj6*x11894))+((r11*x11893))+(((-1.0)*cj6*r10*x11901)));
evalcond[3]=((((-1.0)*r11*x11892*x11895))+((r12*sj0*sj5))+(((-1.0)*r00*x11893*x11896))+((cj0*x11898))+(((-1.0)*r10*x11895*x11900))+(((-1.0)*r01*x11892*x11901)));
evalcond[4]=((-1.0)+(((-1.0)*r11*x11892*x11901))+(((-1.0)*x11895*x11898))+((r00*sj0*x11900))+((x11892*x11894))+((sj5*x11897))+(((-1.0)*r10*x11893*x11896)));
evalcond[5]=(((r10*sj5*x11893))+(((-1.0)*cj5*r02*x11895))+(((-1.0)*r00*sj5*sj6*x11895))+((cj5*x11897))+(((-1.0)*cj6*x11894*x11899))+((cj0*cj6*r11*sj5)));
evalcond[6]=((0.0001)+(((-0.02626)*sj6*x11894))+(((-0.02626)*x11902))+(((0.02626)*x11903))+(((0.02626)*r11*x11893))+(((-1.0)*py*x11901))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.4924791086351)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.4924791086351)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.4924791086351)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11904=IKcos(j4);
IkReal x11905=IKsin(j4);
IkReal x11906=(r11*sj0);
IkReal x11907=(cj6*sj5);
IkReal x11908=(r10*sj0);
IkReal x11909=(sj5*sj6);
IkReal x11910=((0.02626)*sj6);
IkReal x11911=(cj0*r01);
IkReal x11912=((0.02626)*cj6);
IkReal x11913=((1.0)*cj6);
IkReal x11914=(cj0*r00);
IkReal x11915=((1.0)*r21);
IkReal x11916=((1.0)*x11905);
evalcond[0]=(((cj6*r20))+(((-1.0)*sj6*x11915))+(((-1.0)*x11916)));
evalcond[1]=(x11904+(((-1.0)*r20*x11909))+(((-1.0)*cj5*r22))+(((-1.0)*x11907*x11915)));
evalcond[2]=((-0.10716)+(((-0.02626)*x11905))+(((-0.0718)*x11904))+(((-1.0)*r21*x11910))+pz+((r20*x11912)));
evalcond[3]=((((-1.0)*x11908*x11913))+(((-1.0)*x11913*x11914))+((sj6*x11906))+(((-1.0)*x11904))+((sj6*x11911)));
evalcond[4]=(((x11908*x11909))+((cj5*r12*sj0))+((x11907*x11911))+((x11906*x11907))+((cj0*cj5*r02))+((x11909*x11914))+(((-1.0)*x11916)));
evalcond[5]=((-0.0019)+(((-1.0)*x11908*x11912))+(((-0.02626)*x11904))+(((0.0718)*x11905))+(((-1.0)*x11912*x11914))+(((-1.0)*py*sj0))+((x11910*x11911))+(((-1.0)*cj0*px))+((x11906*x11910)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11917=(cj5*cj6);
IkReal x11918=(cj0*sj6);
IkReal x11919=(r01*sj0);
IkReal x11920=((1.0)*sj0);
IkReal x11921=((1.0)*cj5);
IkReal x11922=(cj0*r12);
IkReal x11923=(r02*sj5);
IkReal x11924=((1.0)*sj5);
IkReal x11925=(cj5*sj6);
IkReal x11926=((1.0)*cj0);
IkReal x11927=(cj0*cj6*r10);
IkReal x11928=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x11925))+((r21*x11917))+(((-1.0)*r22*x11924)));
evalcond[2]=(x11928+((r11*x11918))+(((-1.0)*sj6*x11919))+(((-1.0)*cj6*r10*x11926)));
evalcond[3]=(((cj0*x11923))+(((-1.0)*r10*x11920*x11925))+(((-1.0)*r01*x11917*x11926))+((r12*sj0*sj5))+(((-1.0)*r11*x11917*x11920))+(((-1.0)*r00*x11918*x11921)));
evalcond[4]=((1.0)+((sj5*x11922))+(((-1.0)*r11*x11917*x11926))+((x11917*x11919))+(((-1.0)*r10*x11918*x11921))+(((-1.0)*x11920*x11923))+((r00*sj0*x11925)));
evalcond[5]=(((cj5*x11922))+(((-1.0)*cj6*x11919*x11924))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x11920))+((r10*sj5*x11918))+(((-1.0)*cj5*r02*x11920)));
evalcond[6]=((-0.0097)+(((0.02626)*r11*x11918))+(((-0.02626)*x11927))+(((-1.0)*py*x11926))+((px*sj0))+(((-0.02626)*sj6*x11919))+(((0.02626)*x11928)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11929=IKcos(j4);
IkReal x11930=IKsin(j4);
IkReal x11931=(r11*sj0);
IkReal x11932=(cj6*sj5);
IkReal x11933=(r10*sj0);
IkReal x11934=(sj5*sj6);
IkReal x11935=((0.02626)*sj6);
IkReal x11936=(cj0*r01);
IkReal x11937=((0.02626)*cj6);
IkReal x11938=((1.0)*cj6);
IkReal x11939=(cj0*r00);
IkReal x11940=((1.0)*r21);
IkReal x11941=((1.0)*x11929);
evalcond[0]=(x11930+((cj6*r20))+(((-1.0)*sj6*x11940)));
evalcond[1]=((((-1.0)*x11941))+(((-1.0)*x11932*x11940))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x11934)));
evalcond[2]=((0.09736)+(((-1.0)*r21*x11935))+((r20*x11937))+pz+(((0.0718)*x11929))+(((0.02626)*x11930)));
evalcond[3]=((((-1.0)*x11941))+(((-1.0)*x11933*x11938))+(((-1.0)*x11938*x11939))+((sj6*x11936))+((sj6*x11931)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x11932*x11936))+((x11933*x11934))+((x11931*x11932))+(((-1.0)*x11930))+((x11934*x11939)));
evalcond[5]=((-0.0019)+(((-1.0)*x11937*x11939))+(((-1.0)*x11933*x11937))+((x11931*x11935))+(((-0.02626)*x11929))+(((-1.0)*py*sj0))+(((0.0718)*x11930))+((x11935*x11936))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11942=(cj5*cj6);
IkReal x11943=(cj0*sj6);
IkReal x11944=(r01*sj0);
IkReal x11945=((1.0)*sj0);
IkReal x11946=((1.0)*cj5);
IkReal x11947=(cj0*r12);
IkReal x11948=(r02*sj5);
IkReal x11949=((1.0)*sj5);
IkReal x11950=(cj5*sj6);
IkReal x11951=((1.0)*cj0);
IkReal x11952=(cj0*cj6*r10);
IkReal x11953=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x11950))+(((-1.0)*r22*x11949))+((r21*x11942)));
evalcond[2]=(x11953+(((-1.0)*sj6*x11944))+((r11*x11943))+(((-1.0)*cj6*r10*x11951)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r10*x11945*x11950))+(((-1.0)*r01*x11942*x11951))+((cj0*x11948))+(((-1.0)*r11*x11942*x11945))+(((-1.0)*r00*x11943*x11946)));
evalcond[4]=((-1.0)+(((-1.0)*x11945*x11948))+((r00*sj0*x11950))+(((-1.0)*r11*x11942*x11951))+((x11942*x11944))+(((-1.0)*r10*x11943*x11946))+((sj5*x11947)));
evalcond[5]=(((cj5*x11947))+(((-1.0)*cj5*r02*x11945))+(((-1.0)*cj6*x11944*x11949))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x11945))+((r10*sj5*x11943)));
evalcond[6]=((-0.0097)+(((0.02626)*r11*x11943))+(((-0.02626)*sj6*x11944))+(((0.02626)*x11953))+((px*sj0))+(((-1.0)*py*x11951))+(((-0.02626)*x11952)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11954=IKcos(j4);
IkReal x11955=IKsin(j4);
IkReal x11956=(r11*sj0);
IkReal x11957=(cj6*sj5);
IkReal x11958=(r10*sj0);
IkReal x11959=(sj5*sj6);
IkReal x11960=((0.02626)*sj6);
IkReal x11961=(cj0*r01);
IkReal x11962=((0.02626)*cj6);
IkReal x11963=((1.0)*cj6);
IkReal x11964=(cj0*r00);
IkReal x11965=((1.0)*r21);
IkReal x11966=((1.0)*x11955);
evalcond[0]=((((-1.0)*sj6*x11965))+(((-1.0)*x11966))+((cj6*r20)));
evalcond[1]=(x11954+(((-1.0)*x11957*x11965))+(((-1.0)*r20*x11959))+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.09756)+(((-1.0)*r21*x11960))+((r20*x11962))+pz+(((-0.0718)*x11954))+(((-0.02626)*x11955)));
evalcond[3]=(((sj6*x11956))+(((-1.0)*x11958*x11963))+(((-1.0)*x11954))+((sj6*x11961))+(((-1.0)*x11963*x11964)));
evalcond[4]=(((cj5*r12*sj0))+((x11957*x11961))+((cj0*cj5*r02))+((x11959*x11964))+((x11958*x11959))+(((-1.0)*x11966))+((x11956*x11957)));
evalcond[5]=((-0.0019)+(((-1.0)*x11958*x11962))+(((0.0718)*x11955))+((x11956*x11960))+(((-1.0)*x11962*x11964))+(((-1.0)*py*sj0))+((x11960*x11961))+(((-0.02626)*x11954))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11967=(cj5*cj6);
IkReal x11968=(cj0*sj6);
IkReal x11969=(r01*sj0);
IkReal x11970=((1.0)*sj0);
IkReal x11971=((1.0)*cj5);
IkReal x11972=(cj0*r12);
IkReal x11973=(r02*sj5);
IkReal x11974=((1.0)*sj5);
IkReal x11975=(cj5*sj6);
IkReal x11976=((1.0)*cj0);
IkReal x11977=(cj0*cj6*r10);
IkReal x11978=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959))))));
evalcond[1]=(((r20*x11975))+(((-1.0)*r22*x11974))+((r21*x11967)));
evalcond[2]=(x11978+(((-1.0)*cj6*r10*x11976))+((r11*x11968))+(((-1.0)*sj6*x11969)));
evalcond[3]=((((-1.0)*r01*x11967*x11976))+((cj0*x11973))+(((-1.0)*r10*x11970*x11975))+((r12*sj0*sj5))+(((-1.0)*r00*x11968*x11971))+(((-1.0)*r11*x11967*x11970)));
evalcond[4]=((-1.0)+((r00*sj0*x11975))+(((-1.0)*r10*x11968*x11971))+((sj5*x11972))+(((-1.0)*x11970*x11973))+(((-1.0)*r11*x11967*x11976))+((x11967*x11969)));
evalcond[5]=((((-1.0)*cj5*r02*x11970))+(((-1.0)*cj6*x11969*x11974))+((cj0*cj6*r11*sj5))+((cj5*x11972))+(((-1.0)*r00*sj5*sj6*x11970))+((r10*sj5*x11968)));
evalcond[6]=((-0.0001)+(((0.02626)*x11978))+(((-0.02626)*sj6*x11969))+(((0.02626)*r11*x11968))+(((-1.0)*py*x11976))+((px*sj0))+(((-0.02626)*x11977)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.22228412256267)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.22228412256267)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.22228412256267)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x11979=IKcos(j4);
IkReal x11980=IKsin(j4);
IkReal x11981=(r11*sj0);
IkReal x11982=(cj6*sj5);
IkReal x11983=(r10*sj0);
IkReal x11984=(sj5*sj6);
IkReal x11985=((0.02626)*sj6);
IkReal x11986=(cj0*r01);
IkReal x11987=((0.02626)*cj6);
IkReal x11988=((1.0)*cj6);
IkReal x11989=(cj0*r00);
IkReal x11990=((1.0)*r21);
IkReal x11991=((1.0)*x11980);
evalcond[0]=((((-1.0)*sj6*x11990))+((cj6*r20))+(((-1.0)*x11991)));
evalcond[1]=(x11979+(((-1.0)*x11982*x11990))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x11984)));
evalcond[2]=((-0.08776)+(((-0.02626)*x11980))+((r20*x11987))+(((-0.0718)*x11979))+pz+(((-1.0)*r21*x11985)));
evalcond[3]=((((-1.0)*x11979))+(((-1.0)*x11988*x11989))+(((-1.0)*x11983*x11988))+((sj6*x11986))+((sj6*x11981)));
evalcond[4]=(((cj5*r12*sj0))+((x11983*x11984))+((cj0*cj5*r02))+((x11984*x11989))+((x11981*x11982))+((x11982*x11986))+(((-1.0)*x11991)));
evalcond[5]=((-0.0019)+(((-1.0)*x11987*x11989))+((x11981*x11985))+(((-1.0)*py*sj0))+((x11985*x11986))+(((-0.02626)*x11979))+(((0.0718)*x11980))+(((-1.0)*cj0*px))+(((-1.0)*x11983*x11987)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x11992=(cj5*cj6);
IkReal x11993=(cj0*sj6);
IkReal x11994=(r01*sj0);
IkReal x11995=((1.0)*sj0);
IkReal x11996=((1.0)*cj5);
IkReal x11997=(cj0*r12);
IkReal x11998=(r02*sj5);
IkReal x11999=((1.0)*sj5);
IkReal x12000=(cj5*sj6);
IkReal x12001=((1.0)*cj0);
IkReal x12002=(cj0*cj6*r10);
IkReal x12003=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=(((r20*x12000))+((r21*x11992))+(((-1.0)*r22*x11999)));
evalcond[2]=(x12003+(((-1.0)*sj6*x11994))+(((-1.0)*cj6*r10*x12001))+((r11*x11993)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r01*x11992*x12001))+(((-1.0)*r11*x11992*x11995))+((cj0*x11998))+(((-1.0)*r00*x11993*x11996))+(((-1.0)*r10*x11995*x12000)));
evalcond[4]=((1.0)+(((-1.0)*r10*x11993*x11996))+((x11992*x11994))+((r00*sj0*x12000))+(((-1.0)*x11995*x11998))+((sj5*x11997))+(((-1.0)*r11*x11992*x12001)));
evalcond[5]=((((-1.0)*cj6*x11994*x11999))+(((-1.0)*r00*sj5*sj6*x11995))+((r10*sj5*x11993))+((cj5*x11997))+((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x11995)));
evalcond[6]=((-0.0001)+(((-0.02626)*x12002))+(((-1.0)*py*x12001))+(((0.02626)*x12003))+((px*sj0))+(((-0.02626)*sj6*x11994))+(((0.02626)*r11*x11993)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.4924791086351)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.4924791086351)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.4924791086351)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12004=IKcos(j4);
IkReal x12005=IKsin(j4);
IkReal x12006=(r11*sj0);
IkReal x12007=(cj6*sj5);
IkReal x12008=(r10*sj0);
IkReal x12009=(sj5*sj6);
IkReal x12010=((0.02626)*sj6);
IkReal x12011=(cj0*r01);
IkReal x12012=((0.02626)*cj6);
IkReal x12013=((1.0)*cj6);
IkReal x12014=(cj0*r00);
IkReal x12015=((1.0)*r21);
IkReal x12016=((1.0)*x12004);
evalcond[0]=((((-1.0)*sj6*x12015))+x12005+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x12009))+(((-1.0)*x12007*x12015))+(((-1.0)*cj5*r22))+(((-1.0)*x12016)));
evalcond[2]=((0.10716)+(((0.0718)*x12004))+pz+(((-1.0)*r21*x12010))+(((0.02626)*x12005))+((r20*x12012)));
evalcond[3]=((((-1.0)*x12008*x12013))+((sj6*x12006))+(((-1.0)*x12013*x12014))+(((-1.0)*x12016))+((sj6*x12011)));
evalcond[4]=(((cj5*r12*sj0))+(((-1.0)*x12005))+((cj0*cj5*r02))+((x12009*x12014))+((x12007*x12011))+((x12006*x12007))+((x12008*x12009)));
evalcond[5]=((-0.0019)+(((0.0718)*x12005))+(((-1.0)*x12008*x12012))+(((-0.02626)*x12004))+((x12010*x12011))+(((-1.0)*py*sj0))+(((-1.0)*x12012*x12014))+(((-1.0)*cj0*px))+((x12006*x12010)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12017=(cj5*cj6);
IkReal x12018=(cj0*sj6);
IkReal x12019=(r01*sj0);
IkReal x12020=((1.0)*sj0);
IkReal x12021=((1.0)*cj5);
IkReal x12022=(cj0*r12);
IkReal x12023=(r02*sj5);
IkReal x12024=((1.0)*sj5);
IkReal x12025=(cj5*sj6);
IkReal x12026=((1.0)*cj0);
IkReal x12027=(cj0*cj6*r10);
IkReal x12028=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x12025))+((r21*x12017))+(((-1.0)*r22*x12024)));
evalcond[2]=(((r11*x12018))+(((-1.0)*sj6*x12019))+x12028+(((-1.0)*cj6*r10*x12026)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r10*x12020*x12025))+(((-1.0)*r01*x12017*x12026))+(((-1.0)*r11*x12017*x12020))+(((-1.0)*r00*x12018*x12021))+((cj0*x12023)));
evalcond[4]=((-1.0)+((r00*sj0*x12025))+(((-1.0)*r10*x12018*x12021))+(((-1.0)*x12020*x12023))+((x12017*x12019))+(((-1.0)*r11*x12017*x12026))+((sj5*x12022)));
evalcond[5]=((((-1.0)*r00*sj5*sj6*x12020))+((cj5*x12022))+((r10*sj5*x12018))+((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x12020))+(((-1.0)*cj6*x12019*x12024)));
evalcond[6]=((0.0097)+(((-0.02626)*x12027))+(((-1.0)*py*x12026))+(((0.02626)*r11*x12018))+(((0.02626)*x12028))+(((-0.02626)*sj6*x12019))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12029=IKcos(j4);
IkReal x12030=IKsin(j4);
IkReal x12031=(r11*sj0);
IkReal x12032=(cj6*sj5);
IkReal x12033=(r10*sj0);
IkReal x12034=(sj5*sj6);
IkReal x12035=((0.02626)*sj6);
IkReal x12036=(cj0*r01);
IkReal x12037=((0.02626)*cj6);
IkReal x12038=((1.0)*cj6);
IkReal x12039=(cj0*r00);
IkReal x12040=((1.0)*r21);
IkReal x12041=((1.0)*x12030);
evalcond[0]=((((-1.0)*x12041))+(((-1.0)*sj6*x12040))+((cj6*r20)));
evalcond[1]=((((-1.0)*x12032*x12040))+(((-1.0)*r20*x12034))+x12029+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.09736)+((r20*x12037))+(((-0.02626)*x12030))+pz+(((-0.0718)*x12029))+(((-1.0)*r21*x12035)));
evalcond[3]=((((-1.0)*x12033*x12038))+(((-1.0)*x12029))+((sj6*x12031))+((sj6*x12036))+(((-1.0)*x12038*x12039)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x12033*x12034))+(((-1.0)*x12041))+((x12034*x12039))+((x12031*x12032))+((x12032*x12036)));
evalcond[5]=((-0.0019)+(((-1.0)*x12033*x12037))+(((-0.02626)*x12029))+((x12031*x12035))+(((-1.0)*x12037*x12039))+(((-1.0)*py*sj0))+((x12035*x12036))+(((-1.0)*cj0*px))+(((0.0718)*x12030)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12042=(cj5*cj6);
IkReal x12043=(cj0*sj6);
IkReal x12044=(r01*sj0);
IkReal x12045=((1.0)*sj0);
IkReal x12046=((1.0)*cj5);
IkReal x12047=(cj0*r12);
IkReal x12048=(r02*sj5);
IkReal x12049=((1.0)*sj5);
IkReal x12050=(cj5*sj6);
IkReal x12051=((1.0)*cj0);
IkReal x12052=(cj0*cj6*r10);
IkReal x12053=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x12050))+((r21*x12042))+(((-1.0)*r22*x12049)));
evalcond[2]=((((-1.0)*sj6*x12044))+(((-1.0)*cj6*r10*x12051))+x12053+((r11*x12043)));
evalcond[3]=((((-1.0)*r11*x12042*x12045))+((cj0*x12048))+(((-1.0)*r00*x12043*x12046))+((r12*sj0*sj5))+(((-1.0)*r10*x12045*x12050))+(((-1.0)*r01*x12042*x12051)));
evalcond[4]=((1.0)+((sj5*x12047))+((r00*sj0*x12050))+(((-1.0)*x12045*x12048))+(((-1.0)*r10*x12043*x12046))+(((-1.0)*r11*x12042*x12051))+((x12042*x12044)));
evalcond[5]=((((-1.0)*cj5*r02*x12045))+(((-1.0)*r00*sj5*sj6*x12045))+((cj0*cj6*r11*sj5))+((r10*sj5*x12043))+(((-1.0)*cj6*x12044*x12049))+((cj5*x12047)));
evalcond[6]=((0.0097)+(((0.02626)*r11*x12043))+(((-1.0)*py*x12051))+(((-0.02626)*x12052))+(((0.02626)*x12053))+((px*sj0))+(((-0.02626)*sj6*x12044)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12054=IKcos(j4);
IkReal x12055=IKsin(j4);
IkReal x12056=(r11*sj0);
IkReal x12057=(cj6*sj5);
IkReal x12058=(r10*sj0);
IkReal x12059=(sj5*sj6);
IkReal x12060=((0.02626)*sj6);
IkReal x12061=(cj0*r01);
IkReal x12062=((0.02626)*cj6);
IkReal x12063=((1.0)*cj6);
IkReal x12064=(cj0*r00);
IkReal x12065=((1.0)*r21);
IkReal x12066=((1.0)*x12054);
evalcond[0]=((((-1.0)*sj6*x12065))+x12055+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x12059))+(((-1.0)*x12057*x12065))+(((-1.0)*x12066))+(((-1.0)*cj5*r22)));
evalcond[2]=((0.09756)+(((0.02626)*x12055))+(((-1.0)*r21*x12060))+pz+((r20*x12062))+(((0.0718)*x12054)));
evalcond[3]=(((sj6*x12056))+((sj6*x12061))+(((-1.0)*x12066))+(((-1.0)*x12063*x12064))+(((-1.0)*x12058*x12063)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x12058*x12059))+((x12057*x12061))+((x12056*x12057))+(((-1.0)*x12055))+((x12059*x12064)));
evalcond[5]=((-0.0019)+((x12056*x12060))+((x12060*x12061))+(((-1.0)*x12062*x12064))+(((-0.02626)*x12054))+(((-1.0)*py*sj0))+(((0.0718)*x12055))+(((-1.0)*x12058*x12062))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12067=(cj5*cj6);
IkReal x12068=((1.0)*sj0);
IkReal x12069=(r21*sj6);
IkReal x12070=(cj0*sj5);
IkReal x12071=((1.0)*r22);
IkReal x12072=(cj6*r20);
IkReal x12073=(cj5*sj6);
IkReal x12074=((1.0)*cj0);
IkReal x12075=((1.0)*sj5);
IkReal x12076=(x12073*x12074);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+((r21*x12067))+(((-1.0)*sj5*x12071))+((r20*x12073)));
evalcond[2]=((((-1.0)*x12069))+x12072);
evalcond[3]=((((-1.0)*cj5*x12071))+(((-1.0)*r20*sj6*x12075))+(((-1.0)*cj6*r21*x12075)));
evalcond[4]=(((r12*sj0*sj5))+(((-1.0)*r10*x12068*x12073))+(((-1.0)*r11*x12067*x12068))+(((-1.0)*r00*x12076))+((r02*x12070))+(((-1.0)*r01*x12067*x12074)));
evalcond[5]=(((r01*sj0*x12067))+(((-1.0)*r10*x12076))+(((-1.0)*r02*sj5*x12068))+((r00*sj0*x12073))+(((-1.0)*r11*x12067*x12074))+((r12*x12070)));
evalcond[6]=((-0.0097)+(((0.02626)*x12072))+(((-0.02626)*x12069))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12077=(sj0*sj6);
IkReal x12078=(cj0*sj6);
IkReal x12079=(cj6*r00);
IkReal x12080=((1.0)*cj6*r10);
if( IKabs((((r11*x12078))+(((-1.0)*r01*x12077))+((sj0*x12079))+(((-1.0)*cj0*x12080)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x12077))+(((-1.0)*sj0*x12080))+((r01*x12078))+(((-1.0)*cj0*x12079)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x12078))+(((-1.0)*r01*x12077))+((sj0*x12079))+(((-1.0)*cj0*x12080))))+IKsqr((((r11*x12077))+(((-1.0)*sj0*x12080))+((r01*x12078))+(((-1.0)*cj0*x12079))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x12078))+(((-1.0)*r01*x12077))+((sj0*x12079))+(((-1.0)*cj0*x12080))), (((r11*x12077))+(((-1.0)*sj0*x12080))+((r01*x12078))+(((-1.0)*cj0*x12079))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12081=IKcos(j4);
IkReal x12082=IKsin(j4);
IkReal x12083=(cj6*sj0);
IkReal x12084=((0.02626)*r10);
IkReal x12085=(r11*sj6);
IkReal x12086=(r11*sj5);
IkReal x12087=(sj0*sj6);
IkReal x12088=(r10*sj5);
IkReal x12089=((0.02626)*r01);
IkReal x12090=(cj5*r12);
IkReal x12091=(cj0*cj6);
IkReal x12092=((1.0)*sj0);
IkReal x12093=(cj5*r02);
IkReal x12094=(cj0*sj6);
IkReal x12095=((1.0)*r10);
IkReal x12096=((1.0)*r01);
IkReal x12097=(r00*sj5);
IkReal x12098=((1.0)*cj0);
IkReal x12099=((0.02626)*r00);
IkReal x12100=((1.0)*x12082);
evalcond[0]=(((r01*x12094))+(((-1.0)*x12081))+(((-1.0)*r00*x12091))+((sj0*x12085))+(((-1.0)*x12083*x12095)));
evalcond[1]=((((-1.0)*x12087*x12096))+((r00*x12083))+(((-1.0)*x12100))+((cj0*x12085))+(((-1.0)*x12091*x12095)));
evalcond[2]=(((x12083*x12086))+((x12094*x12097))+((cj0*x12093))+((r01*sj5*x12091))+(((-1.0)*x12100))+((x12087*x12088))+((sj0*x12090)));
evalcond[3]=((((-1.0)*x12092*x12093))+((x12086*x12091))+((x12088*x12094))+(((-1.0)*x12087*x12097))+x12081+((cj0*x12090))+(((-1.0)*sj5*x12083*x12096)));
evalcond[4]=((-0.09736)+(((-1.0)*x12084*x12091))+(((-0.02626)*x12082))+(((-1.0)*x12087*x12089))+(((-1.0)*py*x12098))+((x12083*x12099))+(((0.02626)*cj0*x12085))+((px*sj0))+(((-0.0718)*x12081)));
evalcond[5]=((-0.0019)+(((0.0718)*x12082))+((x12089*x12094))+(((0.02626)*sj0*x12085))+(((-0.02626)*x12081))+(((-1.0)*py*x12092))+(((-1.0)*px*x12098))+(((-1.0)*x12083*x12084))+(((-1.0)*x12091*x12099)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12101=(cj5*cj6);
IkReal x12102=((1.0)*sj0);
IkReal x12103=(r21*sj6);
IkReal x12104=(cj0*sj5);
IkReal x12105=((1.0)*r22);
IkReal x12106=(cj6*r20);
IkReal x12107=(cj5*sj6);
IkReal x12108=((1.0)*cj0);
IkReal x12109=((1.0)*sj5);
IkReal x12110=(x12107*x12108);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x12105))+((r20*x12107))+((r21*x12101)));
evalcond[2]=(x12106+(((-1.0)*x12103)));
evalcond[3]=((((-1.0)*cj6*r21*x12109))+(((-1.0)*cj5*x12105))+(((-1.0)*r20*sj6*x12109)));
evalcond[4]=(((r02*x12104))+(((-1.0)*r11*x12101*x12102))+(((-1.0)*r01*x12101*x12108))+(((-1.0)*r00*x12110))+((r12*sj0*sj5))+(((-1.0)*r10*x12102*x12107)));
evalcond[5]=((((-1.0)*r02*sj5*x12102))+((r00*sj0*x12107))+(((-1.0)*r11*x12101*x12108))+(((-1.0)*r10*x12110))+((r01*sj0*x12101))+((r12*x12104)));
evalcond[6]=((-0.0097)+(((0.02626)*x12106))+pz+(((-0.02626)*x12103)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12111=(sj0*sj6);
IkReal x12112=(cj6*r10);
IkReal x12113=((1.0)*sj0);
IkReal x12114=(cj6*r00);
IkReal x12115=(cj0*sj6);
if( IKabs((((cj0*x12112))+((r01*x12111))+(((-1.0)*r11*x12115))+(((-1.0)*x12113*x12114)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x12115))+(((-1.0)*x12112*x12113))+(((-1.0)*cj0*x12114))+((r11*x12111)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj0*x12112))+((r01*x12111))+(((-1.0)*r11*x12115))+(((-1.0)*x12113*x12114))))+IKsqr((((r01*x12115))+(((-1.0)*x12112*x12113))+(((-1.0)*cj0*x12114))+((r11*x12111))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj0*x12112))+((r01*x12111))+(((-1.0)*r11*x12115))+(((-1.0)*x12113*x12114))), (((r01*x12115))+(((-1.0)*x12112*x12113))+(((-1.0)*cj0*x12114))+((r11*x12111))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12116=IKsin(j4);
IkReal x12117=IKcos(j4);
IkReal x12118=(cj6*sj0);
IkReal x12119=((0.02626)*r10);
IkReal x12120=(r11*sj6);
IkReal x12121=(r11*sj5);
IkReal x12122=(sj0*sj6);
IkReal x12123=(r10*sj5);
IkReal x12124=(cj0*cj6);
IkReal x12125=((0.02626)*r01);
IkReal x12126=(cj5*r12);
IkReal x12127=((1.0)*sj0);
IkReal x12128=(cj5*r02);
IkReal x12129=(cj0*sj6);
IkReal x12130=((1.0)*r10);
IkReal x12131=((1.0)*r01);
IkReal x12132=(r00*sj5);
IkReal x12133=((1.0)*cj0);
IkReal x12134=((0.02626)*r00);
IkReal x12135=((1.0)*x12117);
evalcond[0]=(((cj0*x12120))+((r00*x12118))+(((-1.0)*x12124*x12130))+x12116+(((-1.0)*x12122*x12131)));
evalcond[1]=((((-1.0)*r00*x12124))+(((-1.0)*x12135))+((r01*x12129))+(((-1.0)*x12118*x12130))+((sj0*x12120)));
evalcond[2]=((((-1.0)*x12116))+((cj0*x12128))+((r01*sj5*x12124))+((x12118*x12121))+((x12129*x12132))+((sj0*x12126))+((x12122*x12123)));
evalcond[3]=((((-1.0)*x12122*x12132))+((cj0*x12126))+(((-1.0)*x12135))+(((-1.0)*sj5*x12118*x12131))+((x12123*x12129))+(((-1.0)*x12127*x12128))+((x12121*x12124)));
evalcond[4]=((0.09756)+(((0.02626)*x12116))+(((0.02626)*cj0*x12120))+(((0.0718)*x12117))+((x12118*x12134))+(((-1.0)*x12119*x12124))+((px*sj0))+(((-1.0)*x12122*x12125))+(((-1.0)*py*x12133)));
evalcond[5]=((-0.0019)+((x12125*x12129))+(((-1.0)*x12118*x12119))+(((0.02626)*sj0*x12120))+(((-1.0)*px*x12133))+(((-1.0)*x12124*x12134))+(((0.0718)*x12116))+(((-0.02626)*x12117))+(((-1.0)*py*x12127)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12136=(cj5*cj6);
IkReal x12137=((1.0)*sj0);
IkReal x12138=(r21*sj6);
IkReal x12139=(cj0*sj5);
IkReal x12140=((1.0)*r22);
IkReal x12141=(cj6*r20);
IkReal x12142=(cj5*sj6);
IkReal x12143=((1.0)*cj0);
IkReal x12144=((1.0)*sj5);
IkReal x12145=(x12142*x12143);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x12140))+((r21*x12136))+((r20*x12142)));
evalcond[2]=(x12141+(((-1.0)*x12138)));
evalcond[3]=((((-1.0)*cj5*x12140))+(((-1.0)*r20*sj6*x12144))+(((-1.0)*cj6*r21*x12144)));
evalcond[4]=((((-1.0)*r00*x12145))+(((-1.0)*r10*x12137*x12142))+((r12*sj0*sj5))+((r02*x12139))+(((-1.0)*r11*x12136*x12137))+(((-1.0)*r01*x12136*x12143)));
evalcond[5]=(((r01*sj0*x12136))+((r12*x12139))+(((-1.0)*r02*sj5*x12137))+(((-1.0)*r11*x12136*x12143))+((r00*sj0*x12142))+(((-1.0)*r10*x12145)));
evalcond[6]=((-0.0001)+(((0.02626)*x12141))+pz+(((-0.02626)*x12138)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12146=(sj0*sj6);
IkReal x12147=(cj6*r10);
IkReal x12148=((1.0)*sj0);
IkReal x12149=(cj6*r00);
IkReal x12150=(cj0*sj6);
if( IKabs((((cj0*x12147))+(((-1.0)*r11*x12150))+((r01*x12146))+(((-1.0)*x12148*x12149)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x12146))+((r01*x12150))+(((-1.0)*x12147*x12148))+(((-1.0)*cj0*x12149)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj0*x12147))+(((-1.0)*r11*x12150))+((r01*x12146))+(((-1.0)*x12148*x12149))))+IKsqr((((r11*x12146))+((r01*x12150))+(((-1.0)*x12147*x12148))+(((-1.0)*cj0*x12149))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj0*x12147))+(((-1.0)*r11*x12150))+((r01*x12146))+(((-1.0)*x12148*x12149))), (((r11*x12146))+((r01*x12150))+(((-1.0)*x12147*x12148))+(((-1.0)*cj0*x12149))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12151=IKsin(j4);
IkReal x12152=IKcos(j4);
IkReal x12153=(cj6*sj0);
IkReal x12154=((0.02626)*r10);
IkReal x12155=(r11*sj6);
IkReal x12156=(r11*sj5);
IkReal x12157=(sj0*sj6);
IkReal x12158=(r10*sj5);
IkReal x12159=(cj0*cj6);
IkReal x12160=((0.02626)*r01);
IkReal x12161=(cj5*r12);
IkReal x12162=((1.0)*sj0);
IkReal x12163=(cj5*r02);
IkReal x12164=(cj0*sj6);
IkReal x12165=((1.0)*r10);
IkReal x12166=((1.0)*r01);
IkReal x12167=(r00*sj5);
IkReal x12168=((1.0)*cj0);
IkReal x12169=((0.02626)*r00);
IkReal x12170=((1.0)*x12152);
evalcond[0]=(((cj0*x12155))+(((-1.0)*x12157*x12166))+x12151+((r00*x12153))+(((-1.0)*x12159*x12165)));
evalcond[1]=(((sj0*x12155))+(((-1.0)*r00*x12159))+(((-1.0)*x12170))+((r01*x12164))+(((-1.0)*x12153*x12165)));
evalcond[2]=((((-1.0)*x12151))+((sj0*x12161))+((cj0*x12163))+((x12164*x12167))+((x12153*x12156))+((x12157*x12158))+((r01*sj5*x12159)));
evalcond[3]=(((x12156*x12159))+(((-1.0)*sj5*x12153*x12166))+((x12158*x12164))+(((-1.0)*x12170))+(((-1.0)*x12162*x12163))+((cj0*x12161))+(((-1.0)*x12157*x12167)));
evalcond[4]=((0.08776)+(((0.02626)*x12151))+(((0.0718)*x12152))+(((-1.0)*x12157*x12160))+(((0.02626)*cj0*x12155))+(((-1.0)*py*x12168))+(((-1.0)*x12154*x12159))+((px*sj0))+((x12153*x12169)));
evalcond[5]=((-0.0019)+(((-1.0)*px*x12168))+(((-0.02626)*x12152))+(((0.0718)*x12151))+(((0.02626)*sj0*x12155))+(((-1.0)*x12153*x12154))+((x12160*x12164))+(((-1.0)*py*x12162))+(((-1.0)*x12159*x12169)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12171=(cj5*cj6);
IkReal x12172=((1.0)*sj0);
IkReal x12173=(r21*sj6);
IkReal x12174=(cj0*sj5);
IkReal x12175=((1.0)*r22);
IkReal x12176=(cj6*r20);
IkReal x12177=(cj5*sj6);
IkReal x12178=((1.0)*cj0);
IkReal x12179=((1.0)*sj5);
IkReal x12180=(x12177*x12178);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+((r21*x12171))+((r20*x12177))+(((-1.0)*sj5*x12175)));
evalcond[2]=((((-1.0)*x12173))+x12176);
evalcond[3]=((((-1.0)*cj5*x12175))+(((-1.0)*cj6*r21*x12179))+(((-1.0)*r20*sj6*x12179)));
evalcond[4]=((((-1.0)*r11*x12171*x12172))+(((-1.0)*r10*x12172*x12177))+((r12*sj0*sj5))+(((-1.0)*r01*x12171*x12178))+(((-1.0)*r00*x12180))+((r02*x12174)));
evalcond[5]=((((-1.0)*r11*x12171*x12178))+((r00*sj0*x12177))+((r01*sj0*x12171))+(((-1.0)*r10*x12180))+((r12*x12174))+(((-1.0)*r02*sj5*x12172)));
evalcond[6]=((-0.0001)+(((-0.02626)*x12173))+pz+(((0.02626)*x12176)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12181=(sj0*sj6);
IkReal x12182=(cj0*sj6);
IkReal x12183=(cj6*r00);
IkReal x12184=((1.0)*cj6*r10);
if( IKabs((((r11*x12182))+(((-1.0)*cj0*x12184))+(((-1.0)*r01*x12181))+((sj0*x12183)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x12183))+((r11*x12181))+(((-1.0)*sj0*x12184))+((r01*x12182)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x12182))+(((-1.0)*cj0*x12184))+(((-1.0)*r01*x12181))+((sj0*x12183))))+IKsqr(((((-1.0)*cj0*x12183))+((r11*x12181))+(((-1.0)*sj0*x12184))+((r01*x12182))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x12182))+(((-1.0)*cj0*x12184))+(((-1.0)*r01*x12181))+((sj0*x12183))), ((((-1.0)*cj0*x12183))+((r11*x12181))+(((-1.0)*sj0*x12184))+((r01*x12182))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12185=IKcos(j4);
IkReal x12186=IKsin(j4);
IkReal x12187=(cj6*sj0);
IkReal x12188=((0.02626)*r10);
IkReal x12189=(r11*sj6);
IkReal x12190=(r11*sj5);
IkReal x12191=(sj0*sj6);
IkReal x12192=(r10*sj5);
IkReal x12193=((0.02626)*r01);
IkReal x12194=(cj5*r12);
IkReal x12195=(cj0*cj6);
IkReal x12196=((1.0)*sj0);
IkReal x12197=(cj5*r02);
IkReal x12198=(cj0*sj6);
IkReal x12199=((1.0)*r10);
IkReal x12200=((1.0)*r01);
IkReal x12201=(r00*sj5);
IkReal x12202=((1.0)*cj0);
IkReal x12203=((0.02626)*r00);
IkReal x12204=((1.0)*x12186);
evalcond[0]=((((-1.0)*x12187*x12199))+(((-1.0)*r00*x12195))+(((-1.0)*x12185))+((r01*x12198))+((sj0*x12189)));
evalcond[1]=((((-1.0)*x12191*x12200))+((cj0*x12189))+((r00*x12187))+(((-1.0)*x12195*x12199))+(((-1.0)*x12204)));
evalcond[2]=(((x12191*x12192))+((x12187*x12190))+((cj0*x12197))+((r01*sj5*x12195))+((sj0*x12194))+(((-1.0)*x12204))+((x12198*x12201)));
evalcond[3]=(((x12190*x12195))+x12185+(((-1.0)*x12196*x12197))+(((-1.0)*sj5*x12187*x12200))+((cj0*x12194))+((x12192*x12198))+(((-1.0)*x12191*x12201)));
evalcond[4]=((-0.10716)+(((-0.0718)*x12185))+(((-1.0)*py*x12202))+(((0.02626)*cj0*x12189))+((x12187*x12203))+(((-0.02626)*x12186))+(((-1.0)*x12188*x12195))+((px*sj0))+(((-1.0)*x12191*x12193)));
evalcond[5]=((-0.0019)+(((0.0718)*x12186))+(((0.02626)*sj0*x12189))+(((-1.0)*py*x12196))+((x12193*x12198))+(((-0.02626)*x12185))+(((-1.0)*x12187*x12188))+(((-1.0)*x12195*x12203))+(((-1.0)*px*x12202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12205=(cj5*cj6);
IkReal x12206=((1.0)*sj0);
IkReal x12207=(r21*sj6);
IkReal x12208=(cj0*sj5);
IkReal x12209=((1.0)*r22);
IkReal x12210=(cj6*r20);
IkReal x12211=(cj5*sj6);
IkReal x12212=((1.0)*cj0);
IkReal x12213=((1.0)*sj5);
IkReal x12214=(x12211*x12212);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x12209))+((r21*x12205))+((r20*x12211)));
evalcond[2]=((((-1.0)*x12207))+x12210);
evalcond[3]=((((-1.0)*r20*sj6*x12213))+(((-1.0)*cj6*r21*x12213))+(((-1.0)*cj5*x12209)));
evalcond[4]=(((r02*x12208))+(((-1.0)*r10*x12206*x12211))+((r12*sj0*sj5))+(((-1.0)*r11*x12205*x12206))+(((-1.0)*r00*x12214))+(((-1.0)*r01*x12205*x12212)));
evalcond[5]=(((r12*x12208))+((r00*sj0*x12211))+((r01*sj0*x12205))+(((-1.0)*r02*sj5*x12206))+(((-1.0)*r11*x12205*x12212))+(((-1.0)*r10*x12214)));
evalcond[6]=((0.0097)+pz+(((0.02626)*x12210))+(((-0.02626)*x12207)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12215=(sj0*sj6);
IkReal x12216=(cj6*r10);
IkReal x12217=((1.0)*sj0);
IkReal x12218=(cj6*r00);
IkReal x12219=(cj0*sj6);
if( IKabs(((((-1.0)*r11*x12219))+((cj0*x12216))+(((-1.0)*x12217*x12218))+((r01*x12215)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x12218))+(((-1.0)*x12216*x12217))+((r01*x12219))+((r11*x12215)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x12219))+((cj0*x12216))+(((-1.0)*x12217*x12218))+((r01*x12215))))+IKsqr(((((-1.0)*cj0*x12218))+(((-1.0)*x12216*x12217))+((r01*x12219))+((r11*x12215))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r11*x12219))+((cj0*x12216))+(((-1.0)*x12217*x12218))+((r01*x12215))), ((((-1.0)*cj0*x12218))+(((-1.0)*x12216*x12217))+((r01*x12219))+((r11*x12215))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12220=IKsin(j4);
IkReal x12221=IKcos(j4);
IkReal x12222=(cj6*sj0);
IkReal x12223=((0.02626)*r10);
IkReal x12224=(r11*sj6);
IkReal x12225=(r11*sj5);
IkReal x12226=(sj0*sj6);
IkReal x12227=(r10*sj5);
IkReal x12228=(cj0*cj6);
IkReal x12229=((0.02626)*r01);
IkReal x12230=(cj5*r12);
IkReal x12231=((1.0)*sj0);
IkReal x12232=(cj5*r02);
IkReal x12233=(cj0*sj6);
IkReal x12234=((1.0)*r10);
IkReal x12235=((1.0)*r01);
IkReal x12236=(r00*sj5);
IkReal x12237=((1.0)*cj0);
IkReal x12238=((0.02626)*r00);
IkReal x12239=((1.0)*x12221);
evalcond[0]=(x12220+((r00*x12222))+((cj0*x12224))+(((-1.0)*x12226*x12235))+(((-1.0)*x12228*x12234)));
evalcond[1]=(((r01*x12233))+(((-1.0)*x12222*x12234))+(((-1.0)*x12239))+(((-1.0)*r00*x12228))+((sj0*x12224)));
evalcond[2]=(((x12226*x12227))+((sj0*x12230))+((cj0*x12232))+((x12233*x12236))+((x12222*x12225))+((r01*sj5*x12228))+(((-1.0)*x12220)));
evalcond[3]=(((cj0*x12230))+((x12227*x12233))+(((-1.0)*x12239))+((x12225*x12228))+(((-1.0)*x12231*x12232))+(((-1.0)*x12226*x12236))+(((-1.0)*sj5*x12222*x12235)));
evalcond[4]=((0.09736)+((x12222*x12238))+(((0.02626)*cj0*x12224))+(((-1.0)*x12223*x12228))+(((-1.0)*x12226*x12229))+(((0.02626)*x12220))+((px*sj0))+(((0.0718)*x12221))+(((-1.0)*py*x12237)));
evalcond[5]=((-0.0019)+(((-1.0)*px*x12237))+(((-0.02626)*x12221))+(((0.02626)*sj0*x12224))+((x12229*x12233))+(((0.0718)*x12220))+(((-1.0)*py*x12231))+(((-1.0)*x12222*x12223))+(((-1.0)*x12228*x12238)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12240=(cj5*cj6);
IkReal x12241=((1.0)*sj0);
IkReal x12242=(r21*sj6);
IkReal x12243=(cj0*sj5);
IkReal x12244=((1.0)*r22);
IkReal x12245=(cj6*r20);
IkReal x12246=(cj5*sj6);
IkReal x12247=((1.0)*cj0);
IkReal x12248=((1.0)*sj5);
IkReal x12249=(x12246*x12247);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((1.0)+((r20*x12246))+(((-1.0)*sj5*x12244))+((r21*x12240)));
evalcond[2]=(x12245+(((-1.0)*x12242)));
evalcond[3]=((((-1.0)*cj5*x12244))+(((-1.0)*r20*sj6*x12248))+(((-1.0)*cj6*r21*x12248)));
evalcond[4]=((((-1.0)*r11*x12240*x12241))+(((-1.0)*r10*x12241*x12246))+(((-1.0)*r01*x12240*x12247))+((r12*sj0*sj5))+((r02*x12243))+(((-1.0)*r00*x12249)));
evalcond[5]=((((-1.0)*r10*x12249))+(((-1.0)*r11*x12240*x12247))+((r12*x12243))+((r00*sj0*x12246))+((r01*sj0*x12240))+(((-1.0)*r02*sj5*x12241)));
evalcond[6]=((0.0097)+(((0.02626)*x12245))+(((-0.02626)*x12242))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12250=(sj0*sj6);
IkReal x12251=(cj0*sj6);
IkReal x12252=(cj6*r00);
IkReal x12253=((1.0)*cj6*r10);
if( IKabs((((sj0*x12252))+(((-1.0)*cj0*x12253))+((r11*x12251))+(((-1.0)*r01*x12250)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x12250))+((r01*x12251))+(((-1.0)*cj0*x12252))+(((-1.0)*sj0*x12253)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj0*x12252))+(((-1.0)*cj0*x12253))+((r11*x12251))+(((-1.0)*r01*x12250))))+IKsqr((((r11*x12250))+((r01*x12251))+(((-1.0)*cj0*x12252))+(((-1.0)*sj0*x12253))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj0*x12252))+(((-1.0)*cj0*x12253))+((r11*x12251))+(((-1.0)*r01*x12250))), (((r11*x12250))+((r01*x12251))+(((-1.0)*cj0*x12252))+(((-1.0)*sj0*x12253))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12254=IKcos(j4);
IkReal x12255=IKsin(j4);
IkReal x12256=(cj6*sj0);
IkReal x12257=((0.02626)*r10);
IkReal x12258=(r11*sj6);
IkReal x12259=(r11*sj5);
IkReal x12260=(sj0*sj6);
IkReal x12261=(r10*sj5);
IkReal x12262=((0.02626)*r01);
IkReal x12263=(cj5*r12);
IkReal x12264=(cj0*cj6);
IkReal x12265=((1.0)*sj0);
IkReal x12266=(cj5*r02);
IkReal x12267=(cj0*sj6);
IkReal x12268=((1.0)*r10);
IkReal x12269=((1.0)*r01);
IkReal x12270=(r00*sj5);
IkReal x12271=((1.0)*cj0);
IkReal x12272=((0.02626)*r00);
IkReal x12273=((1.0)*x12255);
evalcond[0]=((((-1.0)*x12256*x12268))+((sj0*x12258))+(((-1.0)*r00*x12264))+((r01*x12267))+(((-1.0)*x12254)));
evalcond[1]=((((-1.0)*x12273))+(((-1.0)*x12264*x12268))+((r00*x12256))+(((-1.0)*x12260*x12269))+((cj0*x12258)));
evalcond[2]=(((r01*sj5*x12264))+((sj0*x12263))+(((-1.0)*x12273))+((x12267*x12270))+((x12256*x12259))+((x12260*x12261))+((cj0*x12266)));
evalcond[3]=((((-1.0)*sj5*x12256*x12269))+x12254+(((-1.0)*x12260*x12270))+(((-1.0)*x12265*x12266))+((x12261*x12267))+((cj0*x12263))+((x12259*x12264)));
evalcond[4]=((-0.09756)+(((-1.0)*py*x12271))+(((-0.02626)*x12255))+(((-0.0718)*x12254))+(((0.02626)*cj0*x12258))+(((-1.0)*x12260*x12262))+((px*sj0))+(((-1.0)*x12257*x12264))+((x12256*x12272)));
evalcond[5]=((-0.0019)+(((-1.0)*x12264*x12272))+(((0.0718)*x12255))+(((-1.0)*x12256*x12257))+(((-0.02626)*x12254))+(((-1.0)*py*x12265))+((x12262*x12267))+(((0.02626)*sj0*x12258))+(((-1.0)*px*x12271)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12274=(cj5*cj6);
IkReal x12275=((1.0)*sj0);
IkReal x12276=(r21*sj6);
IkReal x12277=(cj0*sj5);
IkReal x12278=((1.0)*r22);
IkReal x12279=(cj6*r20);
IkReal x12280=(cj5*sj6);
IkReal x12281=((1.0)*cj0);
IkReal x12282=((1.0)*sj5);
IkReal x12283=(x12280*x12281);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+(((-1.0)*sj5*x12278))+((r21*x12274))+((r20*x12280)));
evalcond[2]=((((-1.0)*x12276))+x12279);
evalcond[3]=((((-1.0)*cj6*r21*x12282))+(((-1.0)*cj5*x12278))+(((-1.0)*r20*sj6*x12282)));
evalcond[4]=((((-1.0)*r10*x12275*x12280))+((r12*sj0*sj5))+(((-1.0)*r01*x12274*x12281))+((r02*x12277))+(((-1.0)*r00*x12283))+(((-1.0)*r11*x12274*x12275)));
evalcond[5]=((((-1.0)*r10*x12283))+((r01*sj0*x12274))+(((-1.0)*r02*sj5*x12275))+(((-1.0)*r11*x12274*x12281))+((r12*x12277))+((r00*sj0*x12280)));
evalcond[6]=((0.0001)+pz+(((-0.02626)*x12276))+(((0.02626)*x12279)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12284=(sj0*sj6);
IkReal x12285=(cj0*sj6);
IkReal x12286=(cj6*r00);
IkReal x12287=((1.0)*cj6*r10);
if( IKabs((((sj0*x12286))+((r11*x12285))+(((-1.0)*r01*x12284))+(((-1.0)*cj0*x12287)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x12285))+(((-1.0)*sj0*x12287))+((r11*x12284))+(((-1.0)*cj0*x12286)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj0*x12286))+((r11*x12285))+(((-1.0)*r01*x12284))+(((-1.0)*cj0*x12287))))+IKsqr((((r01*x12285))+(((-1.0)*sj0*x12287))+((r11*x12284))+(((-1.0)*cj0*x12286))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj0*x12286))+((r11*x12285))+(((-1.0)*r01*x12284))+(((-1.0)*cj0*x12287))), (((r01*x12285))+(((-1.0)*sj0*x12287))+((r11*x12284))+(((-1.0)*cj0*x12286))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12288=IKcos(j4);
IkReal x12289=IKsin(j4);
IkReal x12290=(cj6*sj0);
IkReal x12291=((0.02626)*r10);
IkReal x12292=(r11*sj6);
IkReal x12293=(r11*sj5);
IkReal x12294=(sj0*sj6);
IkReal x12295=(r10*sj5);
IkReal x12296=((0.02626)*r01);
IkReal x12297=(cj5*r12);
IkReal x12298=(cj0*cj6);
IkReal x12299=((1.0)*sj0);
IkReal x12300=(cj5*r02);
IkReal x12301=(cj0*sj6);
IkReal x12302=((1.0)*r10);
IkReal x12303=((1.0)*r01);
IkReal x12304=(r00*sj5);
IkReal x12305=((1.0)*cj0);
IkReal x12306=((0.02626)*r00);
IkReal x12307=((1.0)*x12289);
evalcond[0]=((((-1.0)*r00*x12298))+(((-1.0)*x12288))+((sj0*x12292))+(((-1.0)*x12290*x12302))+((r01*x12301)));
evalcond[1]=(((r00*x12290))+(((-1.0)*x12294*x12303))+((cj0*x12292))+(((-1.0)*x12307))+(((-1.0)*x12298*x12302)));
evalcond[2]=(((x12301*x12304))+((sj0*x12297))+((r01*sj5*x12298))+((x12290*x12293))+((cj0*x12300))+((x12294*x12295))+(((-1.0)*x12307)));
evalcond[3]=(((x12295*x12301))+x12288+((x12293*x12298))+((cj0*x12297))+(((-1.0)*x12294*x12304))+(((-1.0)*sj5*x12290*x12303))+(((-1.0)*x12299*x12300)));
evalcond[4]=((-0.08776)+(((-1.0)*x12294*x12296))+((x12290*x12306))+(((-1.0)*x12291*x12298))+(((-0.02626)*x12289))+(((-1.0)*py*x12305))+((px*sj0))+(((-0.0718)*x12288))+(((0.02626)*cj0*x12292)));
evalcond[5]=((-0.0019)+(((-1.0)*x12290*x12291))+(((-1.0)*px*x12305))+(((-0.02626)*x12288))+(((0.02626)*sj0*x12292))+(((0.0718)*x12289))+((x12296*x12301))+(((-1.0)*py*x12299))+(((-1.0)*x12298*x12306)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12308=(cj5*cj6);
IkReal x12309=((1.0)*sj0);
IkReal x12310=(r21*sj6);
IkReal x12311=(cj0*sj5);
IkReal x12312=((1.0)*r22);
IkReal x12313=(cj6*r20);
IkReal x12314=(cj5*sj6);
IkReal x12315=((1.0)*cj0);
IkReal x12316=((1.0)*sj5);
IkReal x12317=(x12314*x12315);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+((r21*x12308))+((r20*x12314))+(((-1.0)*sj5*x12312)));
evalcond[2]=(x12313+(((-1.0)*x12310)));
evalcond[3]=((((-1.0)*cj5*x12312))+(((-1.0)*cj6*r21*x12316))+(((-1.0)*r20*sj6*x12316)));
evalcond[4]=((((-1.0)*r00*x12317))+(((-1.0)*r10*x12309*x12314))+(((-1.0)*r11*x12308*x12309))+((r02*x12311))+((r12*sj0*sj5))+(((-1.0)*r01*x12308*x12315)));
evalcond[5]=((((-1.0)*r10*x12317))+((r12*x12311))+(((-1.0)*r11*x12308*x12315))+((r00*sj0*x12314))+(((-1.0)*r02*sj5*x12309))+((r01*sj0*x12308)));
evalcond[6]=((0.0001)+(((0.02626)*x12313))+(((-0.02626)*x12310))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12318=(sj0*sj6);
IkReal x12319=(cj6*r10);
IkReal x12320=((1.0)*sj0);
IkReal x12321=(cj6*r00);
IkReal x12322=(cj0*sj6);
if( IKabs(((((-1.0)*r11*x12322))+(((-1.0)*x12320*x12321))+((cj0*x12319))+((r01*x12318)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x12319*x12320))+((r11*x12318))+((r01*x12322))+(((-1.0)*cj0*x12321)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x12322))+(((-1.0)*x12320*x12321))+((cj0*x12319))+((r01*x12318))))+IKsqr(((((-1.0)*x12319*x12320))+((r11*x12318))+((r01*x12322))+(((-1.0)*cj0*x12321))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r11*x12322))+(((-1.0)*x12320*x12321))+((cj0*x12319))+((r01*x12318))), ((((-1.0)*x12319*x12320))+((r11*x12318))+((r01*x12322))+(((-1.0)*cj0*x12321))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12323=IKsin(j4);
IkReal x12324=IKcos(j4);
IkReal x12325=(cj6*sj0);
IkReal x12326=((0.02626)*r10);
IkReal x12327=(r11*sj6);
IkReal x12328=(r11*sj5);
IkReal x12329=(sj0*sj6);
IkReal x12330=(r10*sj5);
IkReal x12331=(cj0*cj6);
IkReal x12332=((0.02626)*r01);
IkReal x12333=(cj5*r12);
IkReal x12334=((1.0)*sj0);
IkReal x12335=(cj5*r02);
IkReal x12336=(cj0*sj6);
IkReal x12337=((1.0)*r10);
IkReal x12338=((1.0)*r01);
IkReal x12339=(r00*sj5);
IkReal x12340=((1.0)*cj0);
IkReal x12341=((0.02626)*r00);
IkReal x12342=((1.0)*x12324);
evalcond[0]=(((cj0*x12327))+((r00*x12325))+(((-1.0)*x12331*x12337))+x12323+(((-1.0)*x12329*x12338)));
evalcond[1]=(((r01*x12336))+(((-1.0)*x12342))+((sj0*x12327))+(((-1.0)*r00*x12331))+(((-1.0)*x12325*x12337)));
evalcond[2]=(((cj0*x12335))+((x12336*x12339))+((r01*sj5*x12331))+((x12329*x12330))+((x12325*x12328))+((sj0*x12333))+(((-1.0)*x12323)));
evalcond[3]=((((-1.0)*sj5*x12325*x12338))+(((-1.0)*x12334*x12335))+((x12330*x12336))+((cj0*x12333))+(((-1.0)*x12329*x12339))+(((-1.0)*x12342))+((x12328*x12331)));
evalcond[4]=((0.10716)+(((-1.0)*x12326*x12331))+(((-1.0)*x12329*x12332))+((x12325*x12341))+(((-1.0)*py*x12340))+(((0.02626)*x12323))+((px*sj0))+(((0.0718)*x12324))+(((0.02626)*cj0*x12327)));
evalcond[5]=((-0.0019)+((x12332*x12336))+(((-1.0)*x12331*x12341))+(((-1.0)*px*x12340))+(((-0.02626)*x12324))+(((-1.0)*py*x12334))+(((0.0718)*x12323))+(((-1.0)*x12325*x12326))+(((0.02626)*sj0*x12327)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12343=(cj6*r10);
IkReal x12344=((1.0)*sj0);
IkReal x12345=(sj0*sj6);
IkReal x12346=(cj6*r00);
IkReal x12347=(cj0*sj6);
CheckValue<IkReal> x12348=IKPowWithIntegerCheck(((((-1.0)*cj1*sj3))+((cj3*sj1))),-1);
if(!x12348.valid){
continue;
}
if( IKabs(((x12348.value)*(((((-1.0)*r11*x12347))+(((-1.0)*x12344*x12346))+((cj0*x12343))+((r01*x12345)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x12343*x12344))+((r01*x12347))+((r11*x12345))+(((-1.0)*cj0*x12346)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x12348.value)*(((((-1.0)*r11*x12347))+(((-1.0)*x12344*x12346))+((cj0*x12343))+((r01*x12345))))))+IKsqr(((((-1.0)*x12343*x12344))+((r01*x12347))+((r11*x12345))+(((-1.0)*cj0*x12346))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x12348.value)*(((((-1.0)*r11*x12347))+(((-1.0)*x12344*x12346))+((cj0*x12343))+((r01*x12345))))), ((((-1.0)*x12343*x12344))+((r01*x12347))+((r11*x12345))+(((-1.0)*cj0*x12346))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12349=IKsin(j4);
IkReal x12350=IKcos(j4);
IkReal x12351=((1.0)*sj1);
IkReal x12352=(cj6*sj0);
IkReal x12353=((0.02626)*r10);
IkReal x12354=(sj0*sj6);
IkReal x12355=(sj1*sj3);
IkReal x12356=(cj5*r12);
IkReal x12357=(r11*sj5);
IkReal x12358=(r10*sj5);
IkReal x12359=((0.02626)*r01);
IkReal x12360=(cj0*sj6);
IkReal x12361=((1.0)*cj5);
IkReal x12362=(cj1*sj3);
IkReal x12363=((0.02626)*cj6);
IkReal x12364=((1.0)*r10);
IkReal x12365=(r21*sj6);
IkReal x12366=((1.0)*r01);
IkReal x12367=(r00*sj5);
IkReal x12368=(cj1*cj3);
IkReal x12369=((1.0)*py);
IkReal x12370=(cj0*cj6);
IkReal x12371=(cj3*sj1);
IkReal x12372=((1.0)*sj5);
IkReal x12373=((0.02626)*r11);
IkReal x12374=(cj3*x12350);
IkReal x12375=((0.02626)*x12349);
IkReal x12376=((1.0)*x12349);
IkReal x12377=((0.0718)*x12350);
evalcond[0]=(((cj6*r20))+(((-1.0)*x12365))+((x12349*x12355))+((x12349*x12368)));
evalcond[1]=((((-1.0)*x12350))+(((-1.0)*r00*x12370))+((r11*x12354))+(((-1.0)*x12352*x12364))+((r01*x12360)));
evalcond[2]=((((-1.0)*r22*x12361))+(((-1.0)*r20*sj6*x12372))+(((-1.0)*cj6*r21*x12372))+(((-1.0)*sj3*x12350*x12351))+(((-1.0)*x12350*x12368)));
evalcond[3]=(((r11*x12360))+(((-1.0)*x12354*x12366))+((r00*x12352))+(((-1.0)*x12364*x12370))+((x12349*x12371))+(((-1.0)*x12362*x12376)));
evalcond[4]=((((-1.0)*x12376))+((cj0*cj5*r02))+((x12352*x12357))+((x12354*x12358))+((x12360*x12367))+((sj0*x12356))+((r01*sj5*x12370)));
evalcond[5]=((-0.0019)+(((-1.0)*cj0*r00*x12363))+(((-1.0)*sj0*x12369))+(((-1.0)*x12352*x12353))+(((0.0718)*x12349))+((x12354*x12373))+(((-0.02626)*x12350))+(((-1.0)*cj0*px))+((x12359*x12360)));
evalcond[6]=(((cj0*x12356))+(((-1.0)*sj5*x12352*x12366))+(((-1.0)*x12351*x12374))+(((-1.0)*x12354*x12367))+((x12350*x12362))+(((-1.0)*r02*sj0*x12361))+((x12357*x12370))+((x12358*x12360)));
evalcond[7]=((((0.09746)*x12355))+(((-0.0001)*sj1))+((x12368*x12375))+((x12368*x12377))+(((-0.0097)*cj1))+(((0.09746)*x12368))+pz+(((-0.02626)*x12365))+((x12355*x12375))+((x12355*x12377))+((r20*x12363)));
evalcond[8]=((((-1.0)*x12354*x12359))+(((-1.0)*x12353*x12370))+(((-0.0097)*sj1))+(((-0.09746)*x12362))+(((0.09746)*x12371))+((x12371*x12377))+((x12371*x12375))+(((0.0001)*cj1))+((px*sj0))+(((0.02626)*r00*x12352))+((x12360*x12373))+(((-1.0)*cj0*x12369))+(((-1.0)*x12362*x12375))+(((-1.0)*x12362*x12377)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12378=((1.0)*cj6);
CheckValue<IkReal> x12379=IKPowWithIntegerCheck((((sj1*sj3))+((cj1*cj3))),-1);
if(!x12379.valid){
continue;
}
if( IKabs(((x12379.value)*((((r21*sj6))+(((-1.0)*r20*x12378)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x12378))+(((-1.0)*r10*sj0*x12378))+((cj0*r01*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x12379.value)*((((r21*sj6))+(((-1.0)*r20*x12378))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*cj0*r00*x12378))+(((-1.0)*r10*sj0*x12378))+((cj0*r01*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x12379.value)*((((r21*sj6))+(((-1.0)*r20*x12378))))), (((r11*sj0*sj6))+(((-1.0)*cj0*r00*x12378))+(((-1.0)*r10*sj0*x12378))+((cj0*r01*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12380=IKsin(j4);
IkReal x12381=IKcos(j4);
IkReal x12382=((1.0)*sj1);
IkReal x12383=(cj6*sj0);
IkReal x12384=((0.02626)*r10);
IkReal x12385=(sj0*sj6);
IkReal x12386=(sj1*sj3);
IkReal x12387=(cj5*r12);
IkReal x12388=(r11*sj5);
IkReal x12389=(r10*sj5);
IkReal x12390=((0.02626)*r01);
IkReal x12391=(cj0*sj6);
IkReal x12392=((1.0)*cj5);
IkReal x12393=(cj1*sj3);
IkReal x12394=((0.02626)*cj6);
IkReal x12395=((1.0)*r10);
IkReal x12396=(r21*sj6);
IkReal x12397=((1.0)*r01);
IkReal x12398=(r00*sj5);
IkReal x12399=(cj1*cj3);
IkReal x12400=((1.0)*py);
IkReal x12401=(cj0*cj6);
IkReal x12402=(cj3*sj1);
IkReal x12403=((1.0)*sj5);
IkReal x12404=((0.02626)*r11);
IkReal x12405=(cj3*x12381);
IkReal x12406=((0.02626)*x12380);
IkReal x12407=((1.0)*x12380);
IkReal x12408=((0.0718)*x12381);
evalcond[0]=(((x12380*x12386))+((x12380*x12399))+((cj6*r20))+(((-1.0)*x12396)));
evalcond[1]=(((r11*x12385))+(((-1.0)*x12383*x12395))+((r01*x12391))+(((-1.0)*x12381))+(((-1.0)*r00*x12401)));
evalcond[2]=((((-1.0)*r20*sj6*x12403))+(((-1.0)*r22*x12392))+(((-1.0)*x12381*x12399))+(((-1.0)*cj6*r21*x12403))+(((-1.0)*sj3*x12381*x12382)));
evalcond[3]=((((-1.0)*x12395*x12401))+(((-1.0)*x12385*x12397))+((r11*x12391))+(((-1.0)*x12393*x12407))+((r00*x12383))+((x12380*x12402)));
evalcond[4]=((((-1.0)*x12407))+((cj0*cj5*r02))+((x12385*x12389))+((x12391*x12398))+((x12383*x12388))+((r01*sj5*x12401))+((sj0*x12387)));
evalcond[5]=((-0.0019)+((x12385*x12404))+(((-1.0)*x12383*x12384))+(((0.0718)*x12380))+(((-1.0)*sj0*x12400))+((x12390*x12391))+(((-1.0)*cj0*r00*x12394))+(((-0.02626)*x12381))+(((-1.0)*cj0*px)));
evalcond[6]=(((x12389*x12391))+((x12381*x12393))+(((-1.0)*sj5*x12383*x12397))+(((-1.0)*x12385*x12398))+(((-1.0)*r02*sj0*x12392))+(((-1.0)*x12382*x12405))+((cj0*x12387))+((x12388*x12401)));
evalcond[7]=((((-0.0001)*sj1))+((r20*x12394))+(((0.09746)*x12386))+(((-0.02626)*x12396))+(((-0.0097)*cj1))+(((0.09746)*x12399))+pz+((x12386*x12406))+((x12386*x12408))+((x12399*x12406))+((x12399*x12408)));
evalcond[8]=((((-1.0)*x12385*x12390))+(((-1.0)*x12393*x12408))+(((-1.0)*x12393*x12406))+((x12391*x12404))+(((-0.0097)*sj1))+(((0.02626)*r00*x12383))+(((0.09746)*x12402))+(((0.0001)*cj1))+(((-1.0)*x12384*x12401))+((px*sj0))+((x12402*x12406))+((x12402*x12408))+(((-0.09746)*x12393))+(((-1.0)*cj0*x12400)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12409=((1.0)*sj5);
CheckValue<IkReal> x12410=IKPowWithIntegerCheck(IKsign((((sj1*sj3))+((cj1*cj3)))),-1);
if(!x12410.valid){
continue;
}
CheckValue<IkReal> x12411 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*r20*sj6*x12409))+(((-1.0)*cj6*r21*x12409))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x12411.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12410.value)))+(x12411.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12412=IKsin(j4);
IkReal x12413=IKcos(j4);
IkReal x12414=((1.0)*sj1);
IkReal x12415=(cj6*sj0);
IkReal x12416=((0.02626)*r10);
IkReal x12417=(sj0*sj6);
IkReal x12418=(sj1*sj3);
IkReal x12419=(cj5*r12);
IkReal x12420=(r11*sj5);
IkReal x12421=(r10*sj5);
IkReal x12422=((0.02626)*r01);
IkReal x12423=(cj0*sj6);
IkReal x12424=((1.0)*cj5);
IkReal x12425=(cj1*sj3);
IkReal x12426=((0.02626)*cj6);
IkReal x12427=((1.0)*r10);
IkReal x12428=(r21*sj6);
IkReal x12429=((1.0)*r01);
IkReal x12430=(r00*sj5);
IkReal x12431=(cj1*cj3);
IkReal x12432=((1.0)*py);
IkReal x12433=(cj0*cj6);
IkReal x12434=(cj3*sj1);
IkReal x12435=((1.0)*sj5);
IkReal x12436=((0.02626)*r11);
IkReal x12437=(cj3*x12413);
IkReal x12438=((0.02626)*x12412);
IkReal x12439=((1.0)*x12412);
IkReal x12440=((0.0718)*x12413);
evalcond[0]=(((x12412*x12431))+(((-1.0)*x12428))+((cj6*r20))+((x12412*x12418)));
evalcond[1]=(((r11*x12417))+(((-1.0)*x12413))+((r01*x12423))+(((-1.0)*x12415*x12427))+(((-1.0)*r00*x12433)));
evalcond[2]=((((-1.0)*cj6*r21*x12435))+(((-1.0)*r22*x12424))+(((-1.0)*sj3*x12413*x12414))+(((-1.0)*x12413*x12431))+(((-1.0)*r20*sj6*x12435)));
evalcond[3]=(((x12412*x12434))+(((-1.0)*x12427*x12433))+((r00*x12415))+(((-1.0)*x12425*x12439))+(((-1.0)*x12417*x12429))+((r11*x12423)));
evalcond[4]=(((x12423*x12430))+((cj0*cj5*r02))+(((-1.0)*x12439))+((r01*sj5*x12433))+((x12417*x12421))+((x12415*x12420))+((sj0*x12419)));
evalcond[5]=((-0.0019)+(((-0.02626)*x12413))+(((0.0718)*x12412))+(((-1.0)*x12415*x12416))+((x12422*x12423))+((x12417*x12436))+(((-1.0)*cj0*r00*x12426))+(((-1.0)*sj0*x12432))+(((-1.0)*cj0*px)));
evalcond[6]=((((-1.0)*r02*sj0*x12424))+((x12420*x12433))+(((-1.0)*x12414*x12437))+((x12421*x12423))+((cj0*x12419))+(((-1.0)*sj5*x12415*x12429))+(((-1.0)*x12417*x12430))+((x12413*x12425)));
evalcond[7]=((((0.09746)*x12418))+((r20*x12426))+(((-0.0001)*sj1))+(((-0.0097)*cj1))+(((-0.02626)*x12428))+((x12431*x12438))+pz+(((0.09746)*x12431))+((x12418*x12438))+((x12418*x12440))+((x12431*x12440)));
evalcond[8]=((((0.02626)*r00*x12415))+((x12423*x12436))+((x12434*x12440))+(((-1.0)*x12425*x12440))+(((-1.0)*cj0*x12432))+(((-1.0)*x12425*x12438))+(((-0.0097)*sj1))+(((0.09746)*x12434))+(((-1.0)*x12416*x12433))+(((-1.0)*x12417*x12422))+(((0.0001)*cj1))+((px*sj0))+((x12434*x12438))+(((-0.09746)*x12425)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12441=(cj0*sj5);
IkReal x12442=(cj5*cj6);
IkReal x12443=((1.0)*sj5);
IkReal x12444=((1.0)*sj0);
IkReal x12445=((1.0)*cj0);
IkReal x12446=(cj5*sj6);
IkReal x12447=(r10*x12446);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj1))+(((-1.0)*r22*x12443))+((r21*x12442))+((r20*x12446)));
evalcond[2]=((((-1.0)*x12444*x12447))+(((-1.0)*r11*x12442*x12444))+((r02*x12441))+((r12*sj0*sj5))+(((-1.0)*r01*x12442*x12445))+(((-1.0)*r00*x12445*x12446)));
evalcond[3]=(cj1+(((-1.0)*r11*x12442*x12445))+((r01*sj0*x12442))+(((-1.0)*x12445*x12447))+((r12*x12441))+((r00*sj0*x12446))+(((-1.0)*r02*sj0*x12443)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj3=0;
cj3=1.0;
j3=0;
IkReal x12448=(cj2*sj6);
IkReal x12449=((1.0)*r21);
IkReal x12450=(r20*sj5);
IkReal x12451=(sj2*sj6);
IkReal x12452=(cj2*cj6);
IkReal x12453=(cj5*r22);
IkReal x12454=(cj6*sj2);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs((((r21*sj5*x12452))+((cj2*x12453))+((r20*x12454))+(((-1.0)*x12449*x12451))+((x12448*x12450)))))+(IKabs(((((-1.0)*x12448*x12449))+(((-1.0)*x12450*x12451))+(((-1.0)*sj2*x12453))+((r20*x12452))+(((-1.0)*sj5*x12449*x12454))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=1.0;
j3=0;
IkReal x12455=(cj1*sj1);
j4eval[0]=x12455;
j4eval[1]=IKsign(x12455);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x12456=(cj5*cj6);
IkReal x12457=(cj0*sj6);
IkReal x12458=(r01*sj0);
IkReal x12459=((1.0)*sj0);
IkReal x12460=((1.0)*cj5);
IkReal x12461=(cj0*r12);
IkReal x12462=(r02*sj5);
IkReal x12463=((1.0)*sj5);
IkReal x12464=(cj5*sj6);
IkReal x12465=((1.0)*cj0);
IkReal x12466=(cj0*cj6*r10);
IkReal x12467=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j1))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x12463))+((r20*x12464))+((r21*x12456)));
evalcond[2]=((((-1.0)*cj6*r10*x12465))+((r11*x12457))+(((-1.0)*sj6*x12458))+x12467);
evalcond[3]=((((-1.0)*r01*x12456*x12465))+(((-1.0)*r10*x12459*x12464))+((cj0*x12462))+((r12*sj0*sj5))+(((-1.0)*r11*x12456*x12459))+(((-1.0)*r00*x12457*x12460)));
evalcond[4]=((1.0)+((sj5*x12461))+((x12456*x12458))+(((-1.0)*x12459*x12462))+(((-1.0)*r10*x12457*x12460))+(((-1.0)*r11*x12456*x12465))+((r00*sj0*x12464)));
evalcond[5]=(((r10*sj5*x12457))+(((-1.0)*cj6*x12458*x12463))+((cj0*cj6*r11*sj5))+((cj5*x12461))+(((-1.0)*cj5*r02*x12459))+(((-1.0)*r00*sj5*sj6*x12459)));
evalcond[6]=((0.0001)+(((-1.0)*py*x12465))+(((0.02626)*r11*x12457))+(((-0.02626)*sj6*x12458))+(((0.02626)*x12467))+((px*sj0))+(((-0.02626)*x12466)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12468=((1.0)*r21);
IkReal x12469=(cj2*sj6);
IkReal x12470=(cj5*r22);
IkReal x12471=(cj6*sj5);
IkReal x12472=(r20*sj2);
if( IKabs(((((-1.0)*sj5*sj6*x12472))+(((-1.0)*sj2*x12470))+((cj2*cj6*r20))+(((-1.0)*x12468*x12469))+(((-1.0)*sj2*x12468*x12471)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*x12472))+((cj2*x12470))+(((-1.0)*sj2*sj6*x12468))+((cj2*r21*x12471))+((r20*sj5*x12469)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*sj6*x12472))+(((-1.0)*sj2*x12470))+((cj2*cj6*r20))+(((-1.0)*x12468*x12469))+(((-1.0)*sj2*x12468*x12471))))+IKsqr((((cj6*x12472))+((cj2*x12470))+(((-1.0)*sj2*sj6*x12468))+((cj2*r21*x12471))+((r20*sj5*x12469))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj5*sj6*x12472))+(((-1.0)*sj2*x12470))+((cj2*cj6*r20))+(((-1.0)*x12468*x12469))+(((-1.0)*sj2*x12468*x12471))), (((cj6*x12472))+((cj2*x12470))+(((-1.0)*sj2*sj6*x12468))+((cj2*r21*x12471))+((r20*sj5*x12469))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12473=IKcos(j4);
IkReal x12474=IKsin(j4);
IkReal x12475=(cj6*sj0);
IkReal x12476=(sj0*sj6);
IkReal x12477=(cj6*r20);
IkReal x12478=((0.02626)*sj6);
IkReal x12479=(cj0*r01);
IkReal x12480=(cj0*r00);
IkReal x12481=(sj5*sj6);
IkReal x12482=((1.0)*r21);
IkReal x12483=(cj6*sj5);
IkReal x12484=(cj2*x12473);
IkReal x12485=((0.02626)*x12474);
IkReal x12486=(cj2*x12474);
IkReal x12487=((0.0718)*x12473);
IkReal x12488=(sj2*x12473);
IkReal x12489=(sj2*x12474);
IkReal x12490=((1.0)*x12489);
evalcond[0]=((((-1.0)*x12486))+(((-1.0)*x12488))+(((-1.0)*sj6*x12482))+x12477);
evalcond[1]=((((-1.0)*x12482*x12483))+(((-1.0)*x12490))+(((-1.0)*cj5*r22))+x12484+(((-1.0)*r20*x12481)));
evalcond[2]=((((-1.0)*r10*x12475))+((r11*x12476))+(((-1.0)*x12490))+x12484+(((-1.0)*cj6*x12480))+((sj6*x12479)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x12479*x12483))+((x12480*x12481))+x12486+x12488+((r10*sj5*x12476))+((r11*sj5*x12475)));
evalcond[4]=((-0.1255)+(((-0.21326)*cj2))+(((-1.0)*r21*x12478))+(((-0.0718)*x12484))+(((0.0718)*x12489))+(((-0.0009)*sj2))+(((-1.0)*cj2*x12485))+pz+(((0.02626)*x12477))+(((-0.02626)*x12488)));
evalcond[5]=((-0.001)+((x12478*x12479))+(((0.02626)*r11*x12476))+(((-0.0718)*x12486))+(((0.0009)*cj2))+(((0.02626)*x12484))+(((-0.21326)*sj2))+(((-1.0)*py*sj0))+(((-1.0)*sj2*x12485))+(((-1.0)*sj2*x12487))+(((-0.02626)*cj6*x12480))+(((-0.02626)*r10*x12475))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12491=(cj5*cj6);
IkReal x12492=((1.0)*sj0);
IkReal x12493=(r21*sj6);
IkReal x12494=(cj0*sj5);
IkReal x12495=((1.0)*r22);
IkReal x12496=(cj6*r20);
IkReal x12497=(cj5*sj6);
IkReal x12498=((1.0)*cj0);
IkReal x12499=((1.0)*sj5);
IkReal x12500=(x12497*x12498);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x12495))+((r20*x12497))+((r21*x12491)));
evalcond[2]=(x12496+(((-1.0)*x12493)));
evalcond[3]=((((-1.0)*cj5*x12495))+(((-1.0)*r20*sj6*x12499))+(((-1.0)*cj6*r21*x12499)));
evalcond[4]=((((-1.0)*r00*x12500))+((r12*sj0*sj5))+(((-1.0)*r10*x12492*x12497))+(((-1.0)*r01*x12491*x12498))+(((-1.0)*r11*x12491*x12492))+((r02*x12494)));
evalcond[5]=((((-1.0)*r02*sj5*x12492))+(((-1.0)*r11*x12491*x12498))+(((-1.0)*r10*x12500))+((r00*sj0*x12497))+((r12*x12494))+((r01*sj0*x12491)));
evalcond[6]=((-0.0001)+(((0.02626)*x12496))+(((-0.02626)*x12493))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12501=((1.0)*r10);
IkReal x12502=((1.0)*cj2);
IkReal x12503=(r11*sj6);
IkReal x12504=(sj0*sj2);
IkReal x12505=(cj0*cj2);
IkReal x12506=(r01*sj6);
IkReal x12507=(cj0*x12506);
IkReal x12508=(cj6*x12504);
IkReal x12509=(cj0*cj6*sj2);
IkReal x12510=(cj2*cj6*sj0);
if( IKabs((((sj2*x12507))+((r00*x12510))+(((-1.0)*x12501*x12508))+(((-1.0)*sj0*x12502*x12506))+(((-1.0)*r00*x12509))+((x12503*x12505))+((x12503*x12504))+(((-1.0)*cj6*x12501*x12505)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x12504*x12506))+((cj6*r00*x12505))+((r00*x12508))+((cj0*sj2*x12503))+(((-1.0)*x12501*x12509))+((r10*x12510))+(((-1.0)*sj0*x12502*x12503))+(((-1.0)*x12502*x12507)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj2*x12507))+((r00*x12510))+(((-1.0)*x12501*x12508))+(((-1.0)*sj0*x12502*x12506))+(((-1.0)*r00*x12509))+((x12503*x12505))+((x12503*x12504))+(((-1.0)*cj6*x12501*x12505))))+IKsqr(((((-1.0)*x12504*x12506))+((cj6*r00*x12505))+((r00*x12508))+((cj0*sj2*x12503))+(((-1.0)*x12501*x12509))+((r10*x12510))+(((-1.0)*sj0*x12502*x12503))+(((-1.0)*x12502*x12507))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj2*x12507))+((r00*x12510))+(((-1.0)*x12501*x12508))+(((-1.0)*sj0*x12502*x12506))+(((-1.0)*r00*x12509))+((x12503*x12505))+((x12503*x12504))+(((-1.0)*cj6*x12501*x12505))), ((((-1.0)*x12504*x12506))+((cj6*r00*x12505))+((r00*x12508))+((cj0*sj2*x12503))+(((-1.0)*x12501*x12509))+((r10*x12510))+(((-1.0)*sj0*x12502*x12503))+(((-1.0)*x12502*x12507))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12511=IKsin(j4);
IkReal x12512=IKcos(j4);
IkReal x12513=(sj0*sj6);
IkReal x12514=((0.02626)*r01);
IkReal x12515=(cj0*sj6);
IkReal x12516=(cj6*sj0);
IkReal x12517=(r11*sj5);
IkReal x12518=(r10*sj5);
IkReal x12519=(cj0*cj5);
IkReal x12520=((1.0)*sj0);
IkReal x12521=((0.02626)*r11);
IkReal x12522=((1.0)*r01);
IkReal x12523=(r00*sj5);
IkReal x12524=((1.0)*cj0);
IkReal x12525=((0.02626)*r00);
IkReal x12526=(cj0*cj6);
IkReal x12527=(cj2*x12512);
IkReal x12528=(r10*x12526);
IkReal x12529=((0.02626)*x12511);
IkReal x12530=(cj2*x12511);
IkReal x12531=((0.0718)*x12512);
IkReal x12532=(sj2*x12512);
IkReal x12533=(sj2*x12511);
IkReal x12534=((1.0)*x12533);
evalcond[0]=((((-1.0)*cj6*r00*x12524))+(((-1.0)*r10*x12516))+((r01*x12515))+x12527+(((-1.0)*x12534))+((r11*x12513)));
evalcond[1]=(((r00*x12516))+(((-1.0)*cj6*r10*x12524))+(((-1.0)*x12530))+(((-1.0)*x12532))+(((-1.0)*x12513*x12522))+((r11*x12515)));
evalcond[2]=(((cj5*r12*sj0))+((r01*sj5*x12526))+((x12515*x12523))+((x12516*x12517))+x12530+x12532+((r02*x12519))+((x12513*x12518)));
evalcond[3]=(((x12515*x12518))+(((-1.0)*sj5*x12516*x12522))+(((-1.0)*x12513*x12523))+((r12*x12519))+((x12517*x12526))+(((-1.0)*cj5*r02*x12520))+x12527+(((-1.0)*x12534)));
evalcond[4]=((-0.1255)+((x12516*x12525))+(((-1.0)*py*x12524))+((x12515*x12521))+(((-1.0)*cj2*x12529))+(((-0.02626)*x12532))+(((-0.21326)*cj2))+(((-0.02626)*x12528))+(((-1.0)*x12513*x12514))+(((-0.0009)*sj2))+((px*sj0))+(((-0.0718)*x12527))+(((0.0718)*x12533)));
evalcond[5]=((-0.001)+(((-1.0)*py*x12520))+(((-0.0718)*x12530))+(((-0.02626)*r10*x12516))+(((0.02626)*x12527))+(((0.0009)*cj2))+((x12513*x12521))+(((-1.0)*sj2*x12531))+(((-0.21326)*sj2))+(((-1.0)*px*x12524))+(((-1.0)*x12525*x12526))+((x12514*x12515))+(((-1.0)*sj2*x12529)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12535=(cj5*cj6);
IkReal x12536=(cj0*sj6);
IkReal x12537=(r01*sj0);
IkReal x12538=((1.0)*sj0);
IkReal x12539=((1.0)*cj5);
IkReal x12540=(cj0*r12);
IkReal x12541=(r02*sj5);
IkReal x12542=((1.0)*sj5);
IkReal x12543=(cj5*sj6);
IkReal x12544=((1.0)*cj0);
IkReal x12545=(cj0*cj6*r10);
IkReal x12546=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j1)))), 6.28318530717959)));
evalcond[1]=(((r20*x12543))+((r21*x12535))+(((-1.0)*r22*x12542)));
evalcond[2]=(((r11*x12536))+(((-1.0)*sj6*x12537))+(((-1.0)*cj6*r10*x12544))+x12546);
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r11*x12535*x12538))+(((-1.0)*r01*x12535*x12544))+((cj0*x12541))+(((-1.0)*r10*x12538*x12543))+(((-1.0)*r00*x12536*x12539)));
evalcond[4]=((-1.0)+(((-1.0)*x12538*x12541))+(((-1.0)*r10*x12536*x12539))+((r00*sj0*x12543))+((x12535*x12537))+(((-1.0)*r11*x12535*x12544))+((sj5*x12540)));
evalcond[5]=((((-1.0)*cj5*r02*x12538))+((r10*sj5*x12536))+((cj0*cj6*r11*sj5))+(((-1.0)*cj6*x12537*x12542))+(((-1.0)*r00*sj5*sj6*x12538))+((cj5*x12540)));
evalcond[6]=((-0.0001)+(((-0.02626)*sj6*x12537))+(((0.02626)*x12546))+(((0.02626)*r11*x12536))+(((-1.0)*py*x12544))+((px*sj0))+(((-0.02626)*x12545)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12547=(cj2*r21);
IkReal x12548=(cj6*sj5);
IkReal x12549=(cj5*r22);
IkReal x12550=(r21*sj2);
IkReal x12551=((1.0)*cj2);
IkReal x12552=(cj6*r20);
IkReal x12553=(r20*sj5*sj6);
if( IKabs((((x12548*x12550))+((sj6*x12547))+((sj2*x12553))+((sj2*x12549))+(((-1.0)*x12551*x12552)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj6*x12550))+(((-1.0)*sj2*x12552))+(((-1.0)*x12551*x12553))+(((-1.0)*x12549*x12551))+(((-1.0)*x12547*x12548)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x12548*x12550))+((sj6*x12547))+((sj2*x12553))+((sj2*x12549))+(((-1.0)*x12551*x12552))))+IKsqr((((sj6*x12550))+(((-1.0)*sj2*x12552))+(((-1.0)*x12551*x12553))+(((-1.0)*x12549*x12551))+(((-1.0)*x12547*x12548))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x12548*x12550))+((sj6*x12547))+((sj2*x12553))+((sj2*x12549))+(((-1.0)*x12551*x12552))), (((sj6*x12550))+(((-1.0)*sj2*x12552))+(((-1.0)*x12551*x12553))+(((-1.0)*x12549*x12551))+(((-1.0)*x12547*x12548))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12554=IKsin(j4);
IkReal x12555=IKcos(j4);
IkReal x12556=(cj6*sj0);
IkReal x12557=(sj0*sj6);
IkReal x12558=((0.02626)*cj6);
IkReal x12559=(r21*sj6);
IkReal x12560=(cj0*r00);
IkReal x12561=(sj5*sj6);
IkReal x12562=((1.0)*cj6);
IkReal x12563=(sj2*x12555);
IkReal x12564=(cj2*x12554);
IkReal x12565=((0.02626)*x12554);
IkReal x12566=(cj2*x12555);
IkReal x12567=(sj2*x12554);
IkReal x12568=(cj0*r01*sj6);
IkReal x12569=(x12563+x12564);
evalcond[0]=((((-1.0)*x12559))+((cj6*r20))+x12569);
evalcond[1]=((((-1.0)*r21*sj5*x12562))+(((-1.0)*x12566))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x12561))+x12567);
evalcond[2]=((((-1.0)*x12560*x12562))+(((-1.0)*r10*x12556))+((r11*x12557))+(((-1.0)*x12567))+x12568+x12566);
evalcond[3]=(((cj5*r12*sj0))+((r11*sj5*x12556))+((cj0*cj5*r02))+((x12560*x12561))+((cj0*cj6*r01*sj5))+x12569+((r10*sj5*x12557)));
evalcond[4]=((0.1255)+(((-0.0718)*x12567))+((r20*x12558))+(((0.02626)*x12563))+(((0.02626)*x12564))+pz+(((-0.02626)*x12559))+(((0.21326)*cj2))+(((0.0009)*sj2))+(((0.0718)*x12566)));
evalcond[5]=((-0.001)+(((-0.0718)*x12563))+(((-0.0718)*x12564))+(((0.02626)*x12568))+(((0.02626)*x12566))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-1.0)*x12558*x12560))+(((-1.0)*py*sj0))+(((-1.0)*sj2*x12565))+(((0.02626)*r11*x12557))+(((-1.0)*cj0*px))+(((-0.02626)*r10*x12556)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12570=(cj5*cj6);
IkReal x12571=((1.0)*sj0);
IkReal x12572=(r21*sj6);
IkReal x12573=(cj0*sj5);
IkReal x12574=((1.0)*r22);
IkReal x12575=(cj6*r20);
IkReal x12576=(cj5*sj6);
IkReal x12577=((1.0)*cj0);
IkReal x12578=((1.0)*sj5);
IkReal x12579=(x12576*x12577);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x12574))+((r21*x12570))+((r20*x12576)));
evalcond[2]=((((-1.0)*x12572))+x12575);
evalcond[3]=((((-1.0)*r20*sj6*x12578))+(((-1.0)*cj6*r21*x12578))+(((-1.0)*cj5*x12574)));
evalcond[4]=((((-1.0)*r11*x12570*x12571))+((r02*x12573))+(((-1.0)*r10*x12571*x12576))+((r12*sj0*sj5))+(((-1.0)*r01*x12570*x12577))+(((-1.0)*r00*x12579)));
evalcond[5]=((((-1.0)*r02*sj5*x12571))+(((-1.0)*r11*x12570*x12577))+((r01*sj0*x12570))+(((-1.0)*r10*x12579))+((r12*x12573))+((r00*sj0*x12576)));
evalcond[6]=((0.0001)+(((-0.02626)*x12572))+pz+(((0.02626)*x12575)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12580=(cj0*sj6);
IkReal x12581=(r01*sj2);
IkReal x12582=(sj0*sj2);
IkReal x12583=((1.0)*cj6);
IkReal x12584=(sj0*sj6);
IkReal x12585=(cj0*sj2);
IkReal x12586=(cj6*r10);
IkReal x12587=(cj2*sj0);
IkReal x12588=(cj2*r01);
IkReal x12589=(cj0*cj2);
IkReal x12590=((1.0)*cj2*r11);
if( IKabs(((((-1.0)*x12580*x12590))+((x12584*x12588))+((r11*sj6*x12582))+(((-1.0)*r00*x12583*x12585))+(((-1.0)*r00*x12583*x12587))+(((-1.0)*r10*x12582*x12583))+((x12586*x12589))+((x12580*x12581)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x12585*x12586))+((cj6*r00*x12589))+(((-1.0)*r00*x12582*x12583))+(((-1.0)*x12580*x12588))+(((-1.0)*x12584*x12590))+(((-1.0)*r11*sj2*x12580))+((x12586*x12587))+((x12581*x12584)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x12580*x12590))+((x12584*x12588))+((r11*sj6*x12582))+(((-1.0)*r00*x12583*x12585))+(((-1.0)*r00*x12583*x12587))+(((-1.0)*r10*x12582*x12583))+((x12586*x12589))+((x12580*x12581))))+IKsqr((((x12585*x12586))+((cj6*r00*x12589))+(((-1.0)*r00*x12582*x12583))+(((-1.0)*x12580*x12588))+(((-1.0)*x12584*x12590))+(((-1.0)*r11*sj2*x12580))+((x12586*x12587))+((x12581*x12584))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x12580*x12590))+((x12584*x12588))+((r11*sj6*x12582))+(((-1.0)*r00*x12583*x12585))+(((-1.0)*r00*x12583*x12587))+(((-1.0)*r10*x12582*x12583))+((x12586*x12589))+((x12580*x12581))), (((x12585*x12586))+((cj6*r00*x12589))+(((-1.0)*r00*x12582*x12583))+(((-1.0)*x12580*x12588))+(((-1.0)*x12584*x12590))+(((-1.0)*r11*sj2*x12580))+((x12586*x12587))+((x12581*x12584))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12591=IKcos(j4);
IkReal x12592=IKsin(j4);
IkReal x12593=(sj0*sj6);
IkReal x12594=((0.02626)*r01);
IkReal x12595=(cj6*sj0);
IkReal x12596=(r11*sj5);
IkReal x12597=(r10*sj5);
IkReal x12598=(cj5*r12);
IkReal x12599=((1.0)*sj0);
IkReal x12600=(cj5*r02);
IkReal x12601=((1.0)*r01);
IkReal x12602=(cj0*sj6);
IkReal x12603=(r00*sj5);
IkReal x12604=((1.0)*cj0);
IkReal x12605=((0.02626)*r00);
IkReal x12606=(cj0*cj6);
IkReal x12607=(sj2*x12591);
IkReal x12608=(cj2*x12592);
IkReal x12609=(sj2*x12592);
IkReal x12610=(r11*x12602);
IkReal x12611=(r10*x12606);
IkReal x12612=((0.0718)*x12591);
IkReal x12613=(cj2*x12591);
IkReal x12614=(x12608+x12607);
evalcond[0]=(((r00*x12595))+x12614+x12610+(((-1.0)*x12593*x12601))+(((-1.0)*cj6*r10*x12604)));
evalcond[1]=(((r01*x12602))+(((-1.0)*x12609))+x12613+(((-1.0)*r10*x12595))+(((-1.0)*cj6*r00*x12604))+((r11*x12593)));
evalcond[2]=(((x12602*x12603))+((cj0*x12600))+((x12595*x12596))+x12614+((r01*sj5*x12606))+((x12593*x12597))+((sj0*x12598)));
evalcond[3]=(((cj0*x12598))+(((-1.0)*x12593*x12603))+(((-1.0)*x12613))+(((-1.0)*sj5*x12595*x12601))+((x12597*x12602))+(((-1.0)*x12599*x12600))+x12609+((x12596*x12606)));
evalcond[4]=((0.1255)+(((0.02626)*x12610))+(((-1.0)*py*x12604))+((x12595*x12605))+(((-0.02626)*x12611))+((cj2*x12612))+(((0.02626)*x12608))+(((0.02626)*x12607))+(((-0.0718)*x12609))+((px*sj0))+(((-1.0)*x12593*x12594))+(((0.21326)*cj2))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-0.02626)*r10*x12595))+(((-0.02626)*x12609))+(((0.02626)*x12613))+(((0.02626)*r11*x12593))+(((-1.0)*py*x12599))+(((-1.0)*px*x12604))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-0.0718)*x12607))+(((-0.0718)*x12608))+((x12594*x12602))+(((-1.0)*x12605*x12606)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12615=(cj1*cj2);
IkReal x12616=((1.0)*sj6);
IkReal x12617=(r01*sj0);
IkReal x12618=(cj0*r10);
IkReal x12619=(cj1*sj2);
IkReal x12620=(cj6*r00*sj0);
IkReal x12621=(cj0*r11*sj6);
IkReal x12622=((1.0)*cj6*sj2);
IkReal x12623=(r21*sj1*sj5);
IkReal x12624=(cj5*r22*sj1);
IkReal x12625=(r20*sj1*sj5);
CheckValue<IkReal> x12626 = IKatan2WithCheck(IkReal(((((-1.0)*x12622*x12623))+(((-1.0)*sj2*x12624))+((x12615*x12621))+((x12615*x12620))+(((-1.0)*sj2*x12616*x12625))+(((-1.0)*cj6*x12615*x12618))+(((-1.0)*x12615*x12616*x12617)))),(((x12619*x12620))+((x12619*x12621))+((cj2*sj6*x12625))+((cj2*x12624))+(((-1.0)*x12616*x12617*x12619))+((cj2*cj6*x12623))+(((-1.0)*cj6*x12618*x12619))),IKFAST_ATAN2_MAGTHRESH);
if(!x12626.valid){
continue;
}
CheckValue<IkReal> x12627=IKPowWithIntegerCheck(IKsign((cj1*sj1)),-1);
if(!x12627.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x12626.value)+(((1.5707963267949)*(x12627.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12628=IKcos(j4);
IkReal x12629=IKsin(j4);
IkReal x12630=((0.0718)*sj1);
IkReal x12631=(r11*sj0);
IkReal x12632=(cj5*r12);
IkReal x12633=(cj6*sj5);
IkReal x12634=(cj1*cj2);
IkReal x12635=(cj6*r20);
IkReal x12636=(cj0*sj6);
IkReal x12637=((1.0)*sj1);
IkReal x12638=((1.0)*cj5);
IkReal x12639=((0.0009)*sj2);
IkReal x12640=((0.02626)*sj1);
IkReal x12641=((1.0)*sj0);
IkReal x12642=(cj6*r10);
IkReal x12643=(sj5*sj6);
IkReal x12644=((0.0718)*cj1);
IkReal x12645=(cj6*r00);
IkReal x12646=((1.0)*r21);
IkReal x12647=((0.02626)*sj6);
IkReal x12648=((1.0)*cj0);
IkReal x12649=((0.02626)*sj0);
IkReal x12650=((1.0)*cj1);
IkReal x12651=(cj2*x12628);
IkReal x12652=(cj0*x12642);
IkReal x12653=(sj2*x12629);
IkReal x12654=(sj2*x12628);
IkReal x12655=(r01*x12647);
IkReal x12656=(cj2*x12629);
evalcond[0]=((((-1.0)*x12629*x12634))+(((-1.0)*x12650*x12654))+x12635+(((-1.0)*sj6*x12646)));
evalcond[1]=(((x12628*x12634))+(((-1.0)*r22*x12638))+(((-1.0)*x12633*x12646))+(((-1.0)*x12650*x12653))+(((-1.0)*r20*x12643)));
evalcond[2]=(((sj6*x12631))+((r01*x12636))+(((-1.0)*x12645*x12648))+(((-1.0)*x12641*x12642))+x12651+(((-1.0)*x12653)));
evalcond[3]=(((r11*x12636))+(((-1.0)*r01*sj6*x12641))+(((-1.0)*x12637*x12654))+(((-1.0)*x12637*x12656))+(((-1.0)*x12642*x12648))+((sj0*x12645)));
evalcond[4]=(((cj0*r01*x12633))+((cj0*cj5*r02))+((sj0*x12632))+((r10*sj0*x12643))+x12654+x12656+((r00*sj5*x12636))+((x12631*x12633)));
evalcond[5]=(((sj1*x12651))+(((-1.0)*r01*x12633*x12641))+((cj0*r11*x12633))+(((-1.0)*r02*sj0*x12638))+((cj0*x12632))+(((-1.0)*x12637*x12653))+(((-1.0)*r00*x12641*x12643))+((r10*sj5*x12636)));
evalcond[6]=((((-0.1255)*cj1))+(((-1.0)*r21*x12647))+(((-0.0001)*sj1))+(((-0.21326)*x12634))+((x12644*x12653))+(((-0.0718)*x12628*x12634))+pz+(((-0.02626)*cj1*x12654))+(((-1.0)*cj1*x12639))+(((0.02626)*x12635))+(((-0.02626)*x12629*x12634)));
evalcond[7]=((-0.001)+(((-0.02626)*cj0*x12645))+(((0.02626)*x12651))+(((-1.0)*px*x12648))+(((0.0009)*cj2))+(((-1.0)*x12642*x12649))+(((0.02626)*r01*x12636))+(((-0.21326)*sj2))+(((-0.02626)*x12653))+(((-1.0)*py*x12641))+((x12631*x12647))+(((-0.0718)*x12654))+(((-0.0718)*x12656)));
evalcond[8]=((((-1.0)*x12640*x12656))+(((-1.0)*x12640*x12654))+(((-0.1255)*sj1))+(((-1.0)*sj0*x12655))+(((-1.0)*sj1*x12639))+(((0.02626)*r11*x12636))+(((-1.0)*x12630*x12651))+((x12630*x12653))+((x12645*x12649))+(((0.0001)*cj1))+(((-0.02626)*x12652))+((px*sj0))+(((-1.0)*py*x12648))+(((-0.21326)*cj2*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12657=(cj0*r00);
IkReal x12658=(r10*sj0);
IkReal x12659=(cj1*cj2);
IkReal x12660=(cj1*sj2);
IkReal x12661=(cj6*r20);
IkReal x12662=(r11*sj0*sj6);
IkReal x12663=((1.0)*r21*sj6);
IkReal x12664=(cj0*r01*sj6);
IkReal x12665=((1.0)*cj6*x12660);
CheckValue<IkReal> x12666=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x12666.valid){
continue;
}
CheckValue<IkReal> x12667 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*x12663))+(((-1.0)*x12657*x12665))+((cj2*x12661))+(((-1.0)*x12658*x12665))+((x12660*x12664))+((x12660*x12662)))),(((cj6*x12657*x12659))+(((-1.0)*x12659*x12664))+(((-1.0)*x12659*x12662))+((cj6*x12658*x12659))+((sj2*x12661))+(((-1.0)*sj2*x12663))),IKFAST_ATAN2_MAGTHRESH);
if(!x12667.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12666.value)))+(x12667.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12668=IKcos(j4);
IkReal x12669=IKsin(j4);
IkReal x12670=((0.0718)*sj1);
IkReal x12671=(r11*sj0);
IkReal x12672=(cj5*r12);
IkReal x12673=(cj6*sj5);
IkReal x12674=(cj1*cj2);
IkReal x12675=(cj6*r20);
IkReal x12676=(cj0*sj6);
IkReal x12677=((1.0)*sj1);
IkReal x12678=((1.0)*cj5);
IkReal x12679=((0.0009)*sj2);
IkReal x12680=((0.02626)*sj1);
IkReal x12681=((1.0)*sj0);
IkReal x12682=(cj6*r10);
IkReal x12683=(sj5*sj6);
IkReal x12684=((0.0718)*cj1);
IkReal x12685=(cj6*r00);
IkReal x12686=((1.0)*r21);
IkReal x12687=((0.02626)*sj6);
IkReal x12688=((1.0)*cj0);
IkReal x12689=((0.02626)*sj0);
IkReal x12690=((1.0)*cj1);
IkReal x12691=(cj2*x12668);
IkReal x12692=(cj0*x12682);
IkReal x12693=(sj2*x12669);
IkReal x12694=(sj2*x12668);
IkReal x12695=(r01*x12687);
IkReal x12696=(cj2*x12669);
evalcond[0]=((((-1.0)*sj6*x12686))+x12675+(((-1.0)*x12690*x12694))+(((-1.0)*x12669*x12674)));
evalcond[1]=((((-1.0)*r22*x12678))+(((-1.0)*x12673*x12686))+((x12668*x12674))+(((-1.0)*x12690*x12693))+(((-1.0)*r20*x12683)));
evalcond[2]=((((-1.0)*x12685*x12688))+x12691+(((-1.0)*x12693))+((sj6*x12671))+((r01*x12676))+(((-1.0)*x12681*x12682)));
evalcond[3]=((((-1.0)*x12677*x12696))+(((-1.0)*x12677*x12694))+((r11*x12676))+((sj0*x12685))+(((-1.0)*r01*sj6*x12681))+(((-1.0)*x12682*x12688)));
evalcond[4]=(((sj0*x12672))+((cj0*cj5*r02))+((r00*sj5*x12676))+((r10*sj0*x12683))+x12694+x12696+((cj0*r01*x12673))+((x12671*x12673)));
evalcond[5]=((((-1.0)*r02*sj0*x12678))+(((-1.0)*x12677*x12693))+((cj0*r11*x12673))+((sj1*x12691))+(((-1.0)*r01*x12673*x12681))+((r10*sj5*x12676))+((cj0*x12672))+(((-1.0)*r00*x12681*x12683)));
evalcond[6]=((((-1.0)*cj1*x12679))+(((-1.0)*r21*x12687))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.02626)*cj1*x12694))+((x12684*x12693))+(((0.02626)*x12675))+pz+(((-0.0718)*x12668*x12674))+(((-0.02626)*x12669*x12674))+(((-0.21326)*x12674)));
evalcond[7]=((-0.001)+(((-1.0)*px*x12688))+(((-1.0)*py*x12681))+(((0.02626)*x12691))+(((-0.02626)*cj0*x12685))+((x12671*x12687))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-0.02626)*x12693))+(((0.02626)*r01*x12676))+(((-0.0718)*x12694))+(((-0.0718)*x12696))+(((-1.0)*x12682*x12689)));
evalcond[8]=((((0.02626)*r11*x12676))+(((-0.1255)*sj1))+((x12670*x12693))+(((-1.0)*py*x12688))+(((-1.0)*x12670*x12691))+((x12685*x12689))+(((-0.02626)*x12692))+(((0.0001)*cj1))+((px*sj0))+(((-0.21326)*cj2*sj1))+(((-1.0)*x12680*x12694))+(((-1.0)*x12680*x12696))+(((-1.0)*sj1*x12679))+(((-1.0)*sj0*x12695)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12697=(cj2*r21);
IkReal x12698=((1.0)*sj6);
IkReal x12699=(cj5*r22);
IkReal x12700=(cj6*sj5);
IkReal x12701=(r20*sj5);
IkReal x12702=(cj6*r20);
IkReal x12703=(r21*sj2);
CheckValue<IkReal> x12704=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x12704.valid){
continue;
}
CheckValue<IkReal> x12705 = IKatan2WithCheck(IkReal(((((-1.0)*sj2*x12699))+(((-1.0)*x12700*x12703))+((cj2*x12702))+(((-1.0)*x12697*x12698))+(((-1.0)*sj2*x12698*x12701)))),(((sj2*x12702))+((x12697*x12700))+((cj2*x12699))+(((-1.0)*x12698*x12703))+((cj2*sj6*x12701))),IKFAST_ATAN2_MAGTHRESH);
if(!x12705.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12704.value)))+(x12705.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12706=IKcos(j4);
IkReal x12707=IKsin(j4);
IkReal x12708=((0.0718)*sj1);
IkReal x12709=(r11*sj0);
IkReal x12710=(cj5*r12);
IkReal x12711=(cj6*sj5);
IkReal x12712=(cj1*cj2);
IkReal x12713=(cj6*r20);
IkReal x12714=(cj0*sj6);
IkReal x12715=((1.0)*sj1);
IkReal x12716=((1.0)*cj5);
IkReal x12717=((0.0009)*sj2);
IkReal x12718=((0.02626)*sj1);
IkReal x12719=((1.0)*sj0);
IkReal x12720=(cj6*r10);
IkReal x12721=(sj5*sj6);
IkReal x12722=((0.0718)*cj1);
IkReal x12723=(cj6*r00);
IkReal x12724=((1.0)*r21);
IkReal x12725=((0.02626)*sj6);
IkReal x12726=((1.0)*cj0);
IkReal x12727=((0.02626)*sj0);
IkReal x12728=((1.0)*cj1);
IkReal x12729=(cj2*x12706);
IkReal x12730=(cj0*x12720);
IkReal x12731=(sj2*x12707);
IkReal x12732=(sj2*x12706);
IkReal x12733=(r01*x12725);
IkReal x12734=(cj2*x12707);
evalcond[0]=((((-1.0)*sj6*x12724))+(((-1.0)*x12728*x12732))+x12713+(((-1.0)*x12707*x12712)));
evalcond[1]=((((-1.0)*x12728*x12731))+(((-1.0)*r20*x12721))+(((-1.0)*r22*x12716))+((x12706*x12712))+(((-1.0)*x12711*x12724)));
evalcond[2]=((((-1.0)*x12731))+((sj6*x12709))+(((-1.0)*x12723*x12726))+(((-1.0)*x12719*x12720))+((r01*x12714))+x12729);
evalcond[3]=((((-1.0)*x12715*x12732))+(((-1.0)*x12715*x12734))+((r11*x12714))+((sj0*x12723))+(((-1.0)*r01*sj6*x12719))+(((-1.0)*x12720*x12726)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x12711))+((x12709*x12711))+((r10*sj0*x12721))+((r00*sj5*x12714))+((sj0*x12710))+x12732+x12734);
evalcond[5]=(((r10*sj5*x12714))+(((-1.0)*r01*x12711*x12719))+(((-1.0)*x12715*x12731))+((cj0*r11*x12711))+(((-1.0)*r02*sj0*x12716))+((sj1*x12729))+(((-1.0)*r00*x12719*x12721))+((cj0*x12710)));
evalcond[6]=(((x12722*x12731))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((0.02626)*x12713))+pz+(((-0.21326)*x12712))+(((-0.02626)*x12707*x12712))+(((-1.0)*r21*x12725))+(((-1.0)*cj1*x12717))+(((-0.0718)*x12706*x12712))+(((-0.02626)*cj1*x12732)));
evalcond[7]=((-0.001)+((x12709*x12725))+(((-1.0)*py*x12719))+(((-0.0718)*x12734))+(((-0.0718)*x12732))+(((0.02626)*r01*x12714))+(((0.02626)*x12729))+(((-0.02626)*x12731))+(((-1.0)*px*x12726))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-0.02626)*cj0*x12723))+(((-1.0)*x12720*x12727)));
evalcond[8]=((((-1.0)*py*x12726))+(((-0.1255)*sj1))+((x12723*x12727))+(((-1.0)*sj0*x12733))+((x12708*x12731))+(((-1.0)*sj1*x12717))+(((-0.02626)*x12730))+(((-1.0)*x12718*x12732))+(((-1.0)*x12718*x12734))+(((0.02626)*r11*x12714))+(((0.0001)*cj1))+((px*sj0))+(((-0.21326)*cj2*sj1))+(((-1.0)*x12708*x12729)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12735=(cj0*sj5);
IkReal x12736=(cj5*cj6);
IkReal x12737=((1.0)*sj5);
IkReal x12738=((1.0)*cj0);
IkReal x12739=((1.0)*sj0);
IkReal x12740=(cj5*sj6);
IkReal x12741=(r10*x12740);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(sj1+((r21*x12736))+(((-1.0)*r22*x12737))+((r20*x12740)));
evalcond[2]=((((-1.0)*r11*x12736*x12739))+((r02*x12735))+((r12*sj0*sj5))+(((-1.0)*r00*x12738*x12740))+(((-1.0)*x12739*x12741))+(((-1.0)*r01*x12736*x12738)));
evalcond[3]=(((r01*sj0*x12736))+(((-1.0)*r11*x12736*x12738))+((r00*sj0*x12740))+((r12*x12735))+(((-1.0)*r02*sj0*x12737))+(((-1.0)*x12738*x12741))+(((-1.0)*cj1)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x12742=(cj2*r21);
IkReal x12743=((1.0)*cj6);
IkReal x12744=((1.0)*cj2);
IkReal x12745=(cj5*r22);
IkReal x12746=(r20*sj2);
IkReal x12747=(sj5*sj6);
IkReal x12748=(r21*sj2);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*sj5*x12743*x12748))+(((-1.0)*sj2*x12745))+(((-1.0)*x12746*x12747))+(((-1.0)*cj2*r20*x12743))+((sj6*x12742)))))+(IKabs(((((-1.0)*r20*x12744*x12747))+((cj6*x12746))+(((-1.0)*sj5*x12742*x12743))+(((-1.0)*sj6*x12748))+(((-1.0)*x12744*x12745))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x12749=(cj1*sj1);
j4eval[0]=x12749;
j4eval[1]=IKsign(x12749);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x12750=(cj5*cj6);
IkReal x12751=(cj0*sj6);
IkReal x12752=(r01*sj0);
IkReal x12753=((1.0)*sj0);
IkReal x12754=((1.0)*cj5);
IkReal x12755=(cj0*r12);
IkReal x12756=(r02*sj5);
IkReal x12757=((1.0)*sj5);
IkReal x12758=(cj5*sj6);
IkReal x12759=((1.0)*cj0);
IkReal x12760=(cj0*cj6*r10);
IkReal x12761=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j1))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x12757))+((r20*x12758))+((r21*x12750)));
evalcond[2]=(((r11*x12751))+(((-1.0)*sj6*x12752))+x12761+(((-1.0)*cj6*r10*x12759)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r01*x12750*x12759))+(((-1.0)*r11*x12750*x12753))+(((-1.0)*r00*x12751*x12754))+((cj0*x12756))+(((-1.0)*r10*x12753*x12758)));
evalcond[4]=((-1.0)+((r00*sj0*x12758))+((sj5*x12755))+(((-1.0)*x12753*x12756))+(((-1.0)*r11*x12750*x12759))+(((-1.0)*r10*x12751*x12754))+((x12750*x12752)));
evalcond[5]=((((-1.0)*cj6*x12752*x12757))+((cj5*x12755))+(((-1.0)*r00*sj5*sj6*x12753))+(((-1.0)*cj5*r02*x12753))+((cj0*cj6*r11*sj5))+((r10*sj5*x12751)));
evalcond[6]=((0.0001)+(((-0.02626)*sj6*x12752))+(((0.02626)*x12761))+(((-0.02626)*x12760))+((px*sj0))+(((0.02626)*r11*x12751))+(((-1.0)*py*x12759)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12762=(cj2*r21);
IkReal x12763=((1.0)*cj6);
IkReal x12764=((1.0)*cj2);
IkReal x12765=(cj5*r22);
IkReal x12766=(r20*sj2);
IkReal x12767=(sj5*sj6);
IkReal x12768=(r21*sj2);
if( IKabs(((((-1.0)*sj2*x12765))+(((-1.0)*x12766*x12767))+(((-1.0)*sj5*x12763*x12768))+(((-1.0)*cj2*r20*x12763))+((sj6*x12762)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x12762*x12763))+(((-1.0)*r20*x12764*x12767))+(((-1.0)*sj6*x12768))+((cj6*x12766))+(((-1.0)*x12764*x12765)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj2*x12765))+(((-1.0)*x12766*x12767))+(((-1.0)*sj5*x12763*x12768))+(((-1.0)*cj2*r20*x12763))+((sj6*x12762))))+IKsqr(((((-1.0)*sj5*x12762*x12763))+(((-1.0)*r20*x12764*x12767))+(((-1.0)*sj6*x12768))+((cj6*x12766))+(((-1.0)*x12764*x12765))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj2*x12765))+(((-1.0)*x12766*x12767))+(((-1.0)*sj5*x12763*x12768))+(((-1.0)*cj2*r20*x12763))+((sj6*x12762))), ((((-1.0)*sj5*x12762*x12763))+(((-1.0)*r20*x12764*x12767))+(((-1.0)*sj6*x12768))+((cj6*x12766))+(((-1.0)*x12764*x12765))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12769=IKcos(j4);
IkReal x12770=IKsin(j4);
IkReal x12771=(cj6*sj0);
IkReal x12772=(sj0*sj6);
IkReal x12773=((0.02626)*cj6);
IkReal x12774=(r21*sj6);
IkReal x12775=(cj0*r00);
IkReal x12776=(sj5*sj6);
IkReal x12777=((1.0)*cj6);
IkReal x12778=(cj2*x12770);
IkReal x12779=((0.02626)*x12770);
IkReal x12780=(cj2*x12769);
IkReal x12781=(sj2*x12770);
IkReal x12782=(sj2*x12769);
IkReal x12783=(cj0*r01*sj6);
IkReal x12784=((1.0)*x12782);
evalcond[0]=((((-1.0)*x12774))+x12778+((cj6*r20))+(((-1.0)*x12784)));
evalcond[1]=((((-1.0)*r21*sj5*x12777))+(((-1.0)*cj5*r22))+(((-1.0)*x12781))+(((-1.0)*x12780))+(((-1.0)*r20*x12776)));
evalcond[2]=((((-1.0)*r10*x12771))+x12783+x12781+x12780+((r11*x12772))+(((-1.0)*x12775*x12777)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+x12778+((cj0*cj6*r01*sj5))+((r10*sj5*x12772))+(((-1.0)*x12784))+((r11*sj5*x12771))+((x12775*x12776)));
evalcond[4]=((-0.1255)+((r20*x12773))+(((-0.02626)*x12782))+(((0.0718)*x12780))+(((0.0718)*x12781))+(((-0.0009)*sj2))+pz+(((-0.01834)*cj2))+(((-0.02626)*x12774))+(((0.02626)*x12778)));
evalcond[5]=((-0.001)+(((0.02626)*r11*x12772))+(((-0.01834)*sj2))+(((0.0718)*x12782))+(((-1.0)*x12773*x12775))+(((0.0009)*cj2))+((sj2*x12779))+(((-0.0718)*x12778))+(((-1.0)*py*sj0))+(((-0.02626)*r10*x12771))+(((0.02626)*x12783))+(((0.02626)*x12780))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12785=(cj5*cj6);
IkReal x12786=((1.0)*sj0);
IkReal x12787=(r21*sj6);
IkReal x12788=(cj0*sj5);
IkReal x12789=((1.0)*r22);
IkReal x12790=(cj6*r20);
IkReal x12791=(cj5*sj6);
IkReal x12792=((1.0)*cj0);
IkReal x12793=((1.0)*sj5);
IkReal x12794=(x12791*x12792);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x12791))+((r21*x12785))+(((-1.0)*sj5*x12789)));
evalcond[2]=(x12790+(((-1.0)*x12787)));
evalcond[3]=((((-1.0)*cj5*x12789))+(((-1.0)*r20*sj6*x12793))+(((-1.0)*cj6*r21*x12793)));
evalcond[4]=((((-1.0)*r10*x12786*x12791))+(((-1.0)*r11*x12785*x12786))+((r12*sj0*sj5))+(((-1.0)*r00*x12794))+(((-1.0)*r01*x12785*x12792))+((r02*x12788)));
evalcond[5]=((((-1.0)*r02*sj5*x12786))+(((-1.0)*r10*x12794))+(((-1.0)*r11*x12785*x12792))+((r12*x12788))+((r01*sj0*x12785))+((r00*sj0*x12791)));
evalcond[6]=((-0.0001)+(((-0.02626)*x12787))+pz+(((0.02626)*x12790)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12795=(sj0*sj2);
IkReal x12796=(cj0*cj2);
IkReal x12797=(r01*sj6);
IkReal x12798=(cj6*r10);
IkReal x12799=(cj2*sj0);
IkReal x12800=(cj0*sj2);
IkReal x12801=(cj6*r00);
IkReal x12802=((1.0)*r11*sj6);
IkReal x12803=((1.0)*x12800);
if( IKabs((((x12797*x12799))+((x12800*x12801))+(((-1.0)*x12796*x12802))+(((-1.0)*x12795*x12802))+((x12795*x12798))+((x12796*x12798))+(((-1.0)*x12797*x12803))+(((-1.0)*x12799*x12801)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x12799*x12802))+(((-1.0)*x12796*x12797))+(((-1.0)*x12795*x12797))+((x12795*x12801))+((r11*sj6*x12800))+((x12796*x12801))+((x12798*x12799))+(((-1.0)*x12798*x12803)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x12797*x12799))+((x12800*x12801))+(((-1.0)*x12796*x12802))+(((-1.0)*x12795*x12802))+((x12795*x12798))+((x12796*x12798))+(((-1.0)*x12797*x12803))+(((-1.0)*x12799*x12801))))+IKsqr(((((-1.0)*x12799*x12802))+(((-1.0)*x12796*x12797))+(((-1.0)*x12795*x12797))+((x12795*x12801))+((r11*sj6*x12800))+((x12796*x12801))+((x12798*x12799))+(((-1.0)*x12798*x12803))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x12797*x12799))+((x12800*x12801))+(((-1.0)*x12796*x12802))+(((-1.0)*x12795*x12802))+((x12795*x12798))+((x12796*x12798))+(((-1.0)*x12797*x12803))+(((-1.0)*x12799*x12801))), ((((-1.0)*x12799*x12802))+(((-1.0)*x12796*x12797))+(((-1.0)*x12795*x12797))+((x12795*x12801))+((r11*sj6*x12800))+((x12796*x12801))+((x12798*x12799))+(((-1.0)*x12798*x12803))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12804=IKsin(j4);
IkReal x12805=IKcos(j4);
IkReal x12806=(sj0*sj6);
IkReal x12807=((0.02626)*r01);
IkReal x12808=(cj6*sj0);
IkReal x12809=(r11*sj5);
IkReal x12810=(r10*sj5);
IkReal x12811=(cj5*r12);
IkReal x12812=((1.0)*sj0);
IkReal x12813=(cj5*r02);
IkReal x12814=((1.0)*r01);
IkReal x12815=(cj0*sj6);
IkReal x12816=(r00*sj5);
IkReal x12817=((1.0)*cj0);
IkReal x12818=((0.02626)*r00);
IkReal x12819=(cj0*cj6);
IkReal x12820=(cj2*x12804);
IkReal x12821=(sj2*x12804);
IkReal x12822=(r11*x12815);
IkReal x12823=(r10*x12819);
IkReal x12824=((0.0718)*x12805);
IkReal x12825=(cj2*x12805);
IkReal x12826=(sj2*x12805);
IkReal x12827=((1.0)*x12826);
evalcond[0]=(x12825+x12821+((r01*x12815))+(((-1.0)*cj6*r00*x12817))+((r11*x12806))+(((-1.0)*r10*x12808)));
evalcond[1]=(x12822+x12820+((r00*x12808))+(((-1.0)*cj6*r10*x12817))+(((-1.0)*x12806*x12814))+(((-1.0)*x12827)));
evalcond[2]=(((x12806*x12810))+((x12815*x12816))+x12820+((sj0*x12811))+((r01*sj5*x12819))+((x12808*x12809))+(((-1.0)*x12827))+((cj0*x12813)));
evalcond[3]=((((-1.0)*sj5*x12808*x12814))+(((-1.0)*x12812*x12813))+((x12810*x12815))+(((-1.0)*x12821))+(((-1.0)*x12825))+((x12809*x12819))+((cj0*x12811))+(((-1.0)*x12806*x12816)));
evalcond[4]=((-0.1255)+((cj2*x12824))+(((-1.0)*py*x12817))+(((-0.0009)*sj2))+((x12808*x12818))+(((-0.02626)*x12823))+(((-0.02626)*x12826))+((px*sj0))+(((0.0718)*x12821))+(((-0.01834)*cj2))+(((-1.0)*x12806*x12807))+(((0.02626)*x12822))+(((0.02626)*x12820)));
evalcond[5]=((-0.001)+((x12807*x12815))+(((-0.01834)*sj2))+(((-1.0)*py*x12812))+(((0.0009)*cj2))+(((-1.0)*px*x12817))+(((-0.02626)*r10*x12808))+(((-0.0718)*x12820))+(((0.02626)*r11*x12806))+((sj2*x12824))+(((-1.0)*x12818*x12819))+(((0.02626)*x12825))+(((0.02626)*x12821)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12828=(cj5*cj6);
IkReal x12829=(cj0*sj6);
IkReal x12830=(r01*sj0);
IkReal x12831=((1.0)*sj0);
IkReal x12832=((1.0)*cj5);
IkReal x12833=(cj0*r12);
IkReal x12834=(r02*sj5);
IkReal x12835=((1.0)*sj5);
IkReal x12836=(cj5*sj6);
IkReal x12837=((1.0)*cj0);
IkReal x12838=(cj0*cj6*r10);
IkReal x12839=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j1)))), 6.28318530717959)));
evalcond[1]=(((r21*x12828))+(((-1.0)*r22*x12835))+((r20*x12836)));
evalcond[2]=(x12839+(((-1.0)*sj6*x12830))+(((-1.0)*cj6*r10*x12837))+((r11*x12829)));
evalcond[3]=((((-1.0)*r01*x12828*x12837))+(((-1.0)*r11*x12828*x12831))+(((-1.0)*r00*x12829*x12832))+((cj0*x12834))+((r12*sj0*sj5))+(((-1.0)*r10*x12831*x12836)));
evalcond[4]=((1.0)+(((-1.0)*r11*x12828*x12837))+(((-1.0)*r10*x12829*x12832))+((sj5*x12833))+((x12828*x12830))+((r00*sj0*x12836))+(((-1.0)*x12831*x12834)));
evalcond[5]=((((-1.0)*cj6*x12830*x12835))+((r10*sj5*x12829))+((cj0*cj6*r11*sj5))+((cj5*x12833))+(((-1.0)*cj5*r02*x12831))+(((-1.0)*r00*sj5*sj6*x12831)));
evalcond[6]=((-0.0001)+(((0.02626)*x12839))+(((-1.0)*py*x12837))+(((0.02626)*r11*x12829))+((px*sj0))+(((-0.02626)*sj6*x12830))+(((-0.02626)*x12838)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12840=(cj5*r22);
IkReal x12841=(cj6*sj2);
IkReal x12842=(r21*sj5);
IkReal x12843=(r21*sj6);
IkReal x12844=(cj2*cj6);
IkReal x12845=(r20*sj5*sj6);
if( IKabs((((x12841*x12842))+(((-1.0)*cj2*x12843))+((sj2*x12840))+((sj2*x12845))+((r20*x12844)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*x12841))+((x12842*x12844))+((sj2*x12843))+((cj2*x12840))+((cj2*x12845)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x12841*x12842))+(((-1.0)*cj2*x12843))+((sj2*x12840))+((sj2*x12845))+((r20*x12844))))+IKsqr(((((-1.0)*r20*x12841))+((x12842*x12844))+((sj2*x12843))+((cj2*x12840))+((cj2*x12845))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x12841*x12842))+(((-1.0)*cj2*x12843))+((sj2*x12840))+((sj2*x12845))+((r20*x12844))), ((((-1.0)*r20*x12841))+((x12842*x12844))+((sj2*x12843))+((cj2*x12840))+((cj2*x12845))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12846=IKcos(j4);
IkReal x12847=IKsin(j4);
IkReal x12848=(r11*sj0);
IkReal x12849=(cj6*sj5);
IkReal x12850=(r10*sj0);
IkReal x12851=(sj5*sj6);
IkReal x12852=(cj6*r20);
IkReal x12853=((1.0)*cj6);
IkReal x12854=((0.02626)*sj6);
IkReal x12855=(cj0*r00);
IkReal x12856=((0.02626)*cj6);
IkReal x12857=((1.0)*r21);
IkReal x12858=(cj0*r01);
IkReal x12859=(cj2*x12846);
IkReal x12860=(sj2*x12847);
IkReal x12861=((0.02626)*x12847);
IkReal x12862=(cj2*x12847);
IkReal x12863=((0.0718)*x12846);
IkReal x12864=(sj2*x12846);
IkReal x12865=(x12860+x12859);
evalcond[0]=((((-1.0)*x12862))+x12864+x12852+(((-1.0)*sj6*x12857)));
evalcond[1]=(x12865+(((-1.0)*cj5*r22))+(((-1.0)*r20*x12851))+(((-1.0)*x12849*x12857)));
evalcond[2]=((((-1.0)*x12850*x12853))+x12865+(((-1.0)*x12853*x12855))+((sj6*x12848))+((sj6*x12858)));
evalcond[3]=((((-1.0)*x12864))+((cj5*r12*sj0))+x12862+((cj0*cj5*r02))+((x12849*x12858))+((x12848*x12849))+((x12851*x12855))+((x12850*x12851)));
evalcond[4]=((0.1255)+(((0.02626)*x12864))+(((-0.0718)*x12859))+(((-1.0)*r21*x12854))+pz+(((0.01834)*cj2))+(((0.0009)*sj2))+(((0.02626)*x12852))+(((-1.0)*cj2*x12861))+(((-0.0718)*x12860)));
evalcond[5]=((-0.001)+(((-1.0)*x12850*x12856))+(((-0.01834)*sj2))+(((-1.0)*x12855*x12856))+(((0.02626)*x12860))+(((0.0009)*cj2))+(((-1.0)*py*sj0))+((x12848*x12854))+((x12854*x12858))+(((0.02626)*x12859))+(((-1.0)*cj0*px))+(((-0.0718)*x12862))+((sj2*x12863)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12866=(cj5*cj6);
IkReal x12867=((1.0)*sj0);
IkReal x12868=(r21*sj6);
IkReal x12869=(cj0*sj5);
IkReal x12870=((1.0)*r22);
IkReal x12871=(cj6*r20);
IkReal x12872=(cj5*sj6);
IkReal x12873=((1.0)*cj0);
IkReal x12874=((1.0)*sj5);
IkReal x12875=(x12872*x12873);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x12866))+((r20*x12872))+(((-1.0)*sj5*x12870)));
evalcond[2]=((((-1.0)*x12868))+x12871);
evalcond[3]=((((-1.0)*cj6*r21*x12874))+(((-1.0)*cj5*x12870))+(((-1.0)*r20*sj6*x12874)));
evalcond[4]=((((-1.0)*r11*x12866*x12867))+(((-1.0)*r01*x12866*x12873))+((r12*sj0*sj5))+(((-1.0)*r10*x12867*x12872))+(((-1.0)*r00*x12875))+((r02*x12869)));
evalcond[5]=(((r12*x12869))+((r01*sj0*x12866))+(((-1.0)*r10*x12875))+(((-1.0)*r02*sj5*x12867))+(((-1.0)*r11*x12866*x12873))+((r00*sj0*x12872)));
evalcond[6]=((0.0001)+(((-0.02626)*x12868))+pz+(((0.02626)*x12871)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12876=(cj6*r10);
IkReal x12877=(r11*sj0);
IkReal x12878=(r01*sj6);
IkReal x12879=((1.0)*sj0);
IkReal x12880=(cj2*sj6);
IkReal x12881=(cj0*r11);
IkReal x12882=(cj2*sj0);
IkReal x12883=(cj6*r00);
IkReal x12884=(sj0*sj2);
IkReal x12885=((1.0)*cj0*cj2);
IkReal x12886=((1.0)*sj2*sj6);
IkReal x12887=(sj2*x12883);
if( IKabs(((((-1.0)*x12877*x12886))+(((-1.0)*x12876*x12885))+((x12880*x12881))+((x12882*x12883))+(((-1.0)*cj2*x12878*x12879))+(((-1.0)*cj0*sj2*x12878))+((cj0*x12887))+((x12876*x12884)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x12877*x12880))+((cj0*cj2*x12883))+(((-1.0)*x12879*x12887))+(((-1.0)*x12878*x12885))+(((-1.0)*x12881*x12886))+((cj0*sj2*x12876))+((x12878*x12884))+((x12876*x12882)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x12877*x12886))+(((-1.0)*x12876*x12885))+((x12880*x12881))+((x12882*x12883))+(((-1.0)*cj2*x12878*x12879))+(((-1.0)*cj0*sj2*x12878))+((cj0*x12887))+((x12876*x12884))))+IKsqr(((((-1.0)*x12877*x12880))+((cj0*cj2*x12883))+(((-1.0)*x12879*x12887))+(((-1.0)*x12878*x12885))+(((-1.0)*x12881*x12886))+((cj0*sj2*x12876))+((x12878*x12884))+((x12876*x12882))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x12877*x12886))+(((-1.0)*x12876*x12885))+((x12880*x12881))+((x12882*x12883))+(((-1.0)*cj2*x12878*x12879))+(((-1.0)*cj0*sj2*x12878))+((cj0*x12887))+((x12876*x12884))), ((((-1.0)*x12877*x12880))+((cj0*cj2*x12883))+(((-1.0)*x12879*x12887))+(((-1.0)*x12878*x12885))+(((-1.0)*x12881*x12886))+((cj0*sj2*x12876))+((x12878*x12884))+((x12876*x12882))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x12888=IKcos(j4);
IkReal x12889=IKsin(j4);
IkReal x12890=((0.02626)*sj0);
IkReal x12891=(cj6*r10);
IkReal x12892=(r01*sj6);
IkReal x12893=(r11*sj6);
IkReal x12894=(sj0*sj5);
IkReal x12895=(cj6*r11);
IkReal x12896=(r10*sj6);
IkReal x12897=(cj5*r12);
IkReal x12898=((0.02626)*cj0);
IkReal x12899=((1.0)*sj0);
IkReal x12900=(cj5*r02);
IkReal x12901=(cj0*sj5);
IkReal x12902=(r00*sj6);
IkReal x12903=(cj6*r00);
IkReal x12904=((1.0)*cj0);
IkReal x12905=(cj6*r01);
IkReal x12906=(cj2*x12888);
IkReal x12907=(sj2*x12889);
IkReal x12908=((0.02626)*x12889);
IkReal x12909=(cj2*x12889);
IkReal x12910=((0.0718)*x12888);
IkReal x12911=(sj2*x12888);
IkReal x12912=(x12907+x12906);
evalcond[0]=(x12912+(((-1.0)*x12891*x12899))+(((-1.0)*x12903*x12904))+((cj0*x12892))+((sj0*x12893)));
evalcond[1]=(x12911+(((-1.0)*x12892*x12899))+(((-1.0)*x12909))+(((-1.0)*x12891*x12904))+((cj0*x12893))+((sj0*x12903)));
evalcond[2]=(x12909+(((-1.0)*x12911))+((x12894*x12895))+((x12894*x12896))+((sj0*x12897))+((x12901*x12905))+((x12901*x12902))+((cj0*x12900)));
evalcond[3]=(x12912+(((-1.0)*x12894*x12905))+(((-1.0)*x12894*x12902))+((x12895*x12901))+(((-1.0)*x12899*x12900))+((x12896*x12901))+((cj0*x12897)));
evalcond[4]=((0.1255)+(((-1.0)*x12891*x12898))+((x12890*x12903))+(((-1.0)*py*x12904))+(((-1.0)*x12890*x12892))+(((0.02626)*x12911))+(((0.01834)*cj2))+((px*sj0))+(((-0.0718)*x12907))+(((-0.0718)*x12906))+((x12893*x12898))+(((0.0009)*sj2))+(((-1.0)*cj2*x12908)));
evalcond[5]=((-0.001)+(((-0.01834)*sj2))+(((-1.0)*px*x12904))+(((-1.0)*x12898*x12903))+(((-1.0)*py*x12899))+((x12890*x12893))+(((0.0009)*cj2))+(((-1.0)*x12890*x12891))+((sj2*x12910))+(((0.02626)*x12907))+(((0.02626)*x12906))+(((-0.0718)*x12909))+((x12892*x12898)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12913=(cj0*cj1);
IkReal x12914=(cj5*r22);
IkReal x12915=(r21*sj5);
IkReal x12916=((1.0)*cj2);
IkReal x12917=(r11*sj6);
IkReal x12918=(cj1*sj0);
IkReal x12919=(cj6*r00);
IkReal x12920=(r01*sj6);
IkReal x12921=((1.0)*cj6*sj2);
IkReal x12922=(sj1*x12916);
IkReal x12923=(r20*sj5*sj6);
IkReal x12924=((1.0)*sj1*sj2);
CheckValue<IkReal> x12925=IKPowWithIntegerCheck(IKsign((cj1*sj1)),-1);
if(!x12925.valid){
continue;
}
CheckValue<IkReal> x12926 = IKatan2WithCheck(IkReal(((((-1.0)*x12916*x12918*x12919))+(((-1.0)*x12914*x12924))+(((-1.0)*x12913*x12916*x12917))+(((-1.0)*sj1*x12915*x12921))+((cj2*x12918*x12920))+((cj2*cj6*r10*x12913))+(((-1.0)*x12923*x12924)))),((((-1.0)*x12914*x12922))+((sj2*x12913*x12917))+(((-1.0)*r10*x12913*x12921))+((sj2*x12918*x12919))+(((-1.0)*cj6*x12915*x12922))+(((-1.0)*x12922*x12923))+(((-1.0)*sj2*x12918*x12920))),IKFAST_ATAN2_MAGTHRESH);
if(!x12926.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12925.value)))+(x12926.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12927=IKcos(j4);
IkReal x12928=IKsin(j4);
IkReal x12929=((0.0718)*sj1);
IkReal x12930=((0.02626)*sj0);
IkReal x12931=(cj6*r10);
IkReal x12932=(sj0*sj6);
IkReal x12933=(cj5*r12);
IkReal x12934=((1.0)*cj1);
IkReal x12935=(r01*sj6);
IkReal x12936=(r10*sj5);
IkReal x12937=(cj0*sj6);
IkReal x12938=((0.02626)*cj0);
IkReal x12939=(cj6*r20);
IkReal x12940=((1.0)*cj5);
IkReal x12941=(cj1*sj2);
IkReal x12942=((0.02626)*sj1);
IkReal x12943=((1.0)*sj0);
IkReal x12944=((1.0)*sj1);
IkReal x12945=((0.01834)*cj2);
IkReal x12946=(r00*sj5);
IkReal x12947=((0.0718)*cj1);
IkReal x12948=(cj6*sj0);
IkReal x12949=((1.0)*cj0);
IkReal x12950=((1.0)*sj5);
IkReal x12951=(r21*sj6);
IkReal x12952=(r11*sj5);
IkReal x12953=(cj6*r00);
IkReal x12954=(cj2*x12927);
IkReal x12955=(sj2*x12928);
IkReal x12956=(cj2*x12928);
IkReal x12957=(sj2*x12927);
IkReal x12958=(cj6*r01*sj5);
IkReal x12959=(cj1*x12956);
evalcond[0]=(x12939+x12959+(((-1.0)*x12934*x12957))+(((-1.0)*x12951)));
evalcond[1]=(x12954+x12955+((r11*x12932))+(((-1.0)*x12931*x12943))+((cj0*x12935))+(((-1.0)*x12949*x12953)));
evalcond[2]=((((-1.0)*cj6*r21*x12950))+(((-1.0)*r20*sj6*x12950))+(((-1.0)*r22*x12940))+(((-1.0)*x12934*x12955))+(((-1.0)*x12934*x12954)));
evalcond[3]=(((r11*x12937))+((r00*x12948))+(((-1.0)*x12931*x12949))+((sj1*x12956))+(((-1.0)*x12944*x12957))+(((-1.0)*r01*x12932)));
evalcond[4]=(((sj0*x12933))+x12956+((cj0*x12958))+((cj0*cj5*r02))+((x12937*x12946))+((x12932*x12936))+((x12948*x12952))+(((-1.0)*x12957)));
evalcond[5]=((((-1.0)*x12943*x12958))+(((-1.0)*r02*sj0*x12940))+((cj0*cj6*x12952))+(((-1.0)*x12944*x12955))+(((-1.0)*x12944*x12954))+((x12936*x12937))+((cj0*x12933))+(((-1.0)*x12932*x12946)));
evalcond[6]=((((0.02626)*x12939))+(((-0.1255)*cj1))+(((-1.0)*cj1*x12945))+(((-0.0001)*sj1))+(((-0.02626)*x12951))+((x12947*x12954))+(((-0.0009)*x12941))+(((0.0718)*x12928*x12941))+pz+(((0.02626)*x12959))+(((-0.02626)*x12927*x12941)));
evalcond[7]=((-0.001)+((r11*sj6*x12930))+(((0.0718)*x12957))+(((-0.01834)*sj2))+(((-1.0)*py*x12943))+(((-1.0)*x12930*x12931))+(((0.0009)*cj2))+(((-0.0718)*x12956))+((x12935*x12938))+(((0.02626)*x12954))+(((0.02626)*x12955))+(((-1.0)*x12938*x12953))+(((-1.0)*px*x12949)));
evalcond[8]=((((-0.1255)*sj1))+(((0.02626)*r11*x12937))+(((-1.0)*py*x12949))+((x12929*x12954))+((x12929*x12955))+(((-1.0)*x12930*x12935))+((x12930*x12953))+(((-0.0009)*sj1*sj2))+(((0.0001)*cj1))+((px*sj0))+((x12942*x12956))+(((-1.0)*x12931*x12938))+(((-1.0)*x12942*x12957))+(((-1.0)*sj1*x12945)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x12960=(cj1*sj2);
IkReal x12961=(cj2*sj6);
IkReal x12962=(cj1*cj2);
IkReal x12963=(cj6*r20);
IkReal x12964=((1.0)*sj6);
IkReal x12965=(cj0*r01);
IkReal x12966=(cj0*cj6*r00);
IkReal x12967=((1.0)*r11*sj0);
IkReal x12968=(cj6*r10*sj0);
CheckValue<IkReal> x12969=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x12969.valid){
continue;
}
CheckValue<IkReal> x12970 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*x12963))+(((-1.0)*x12960*x12964*x12965))+(((-1.0)*r11*sj0*x12960*x12964))+((x12960*x12968))+((x12960*x12966))+((r21*x12961)))),((((-1.0)*cj1*x12961*x12965))+(((-1.0)*cj1*x12961*x12967))+((sj2*x12963))+((x12962*x12968))+((x12962*x12966))+(((-1.0)*r21*sj2*x12964))),IKFAST_ATAN2_MAGTHRESH);
if(!x12970.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12969.value)))+(x12970.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x12971=IKcos(j4);
IkReal x12972=IKsin(j4);
IkReal x12973=((0.0718)*sj1);
IkReal x12974=((0.02626)*sj0);
IkReal x12975=(cj6*r10);
IkReal x12976=(sj0*sj6);
IkReal x12977=(cj5*r12);
IkReal x12978=((1.0)*cj1);
IkReal x12979=(r01*sj6);
IkReal x12980=(r10*sj5);
IkReal x12981=(cj0*sj6);
IkReal x12982=((0.02626)*cj0);
IkReal x12983=(cj6*r20);
IkReal x12984=((1.0)*cj5);
IkReal x12985=(cj1*sj2);
IkReal x12986=((0.02626)*sj1);
IkReal x12987=((1.0)*sj0);
IkReal x12988=((1.0)*sj1);
IkReal x12989=((0.01834)*cj2);
IkReal x12990=(r00*sj5);
IkReal x12991=((0.0718)*cj1);
IkReal x12992=(cj6*sj0);
IkReal x12993=((1.0)*cj0);
IkReal x12994=((1.0)*sj5);
IkReal x12995=(r21*sj6);
IkReal x12996=(r11*sj5);
IkReal x12997=(cj6*r00);
IkReal x12998=(cj2*x12971);
IkReal x12999=(sj2*x12972);
IkReal x13000=(cj2*x12972);
IkReal x13001=(sj2*x12971);
IkReal x13002=(cj6*r01*sj5);
IkReal x13003=(cj1*x13000);
evalcond[0]=(x12983+(((-1.0)*x12978*x13001))+x13003+(((-1.0)*x12995)));
evalcond[1]=((((-1.0)*x12975*x12987))+x12998+x12999+((r11*x12976))+(((-1.0)*x12993*x12997))+((cj0*x12979)));
evalcond[2]=((((-1.0)*r22*x12984))+(((-1.0)*r20*sj6*x12994))+(((-1.0)*cj6*r21*x12994))+(((-1.0)*x12978*x12999))+(((-1.0)*x12978*x12998)));
evalcond[3]=((((-1.0)*x12975*x12993))+((r00*x12992))+(((-1.0)*r01*x12976))+((r11*x12981))+(((-1.0)*x12988*x13001))+((sj1*x13000)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*x13002))+(((-1.0)*x13001))+x13000+((x12976*x12980))+((x12981*x12990))+((x12992*x12996))+((sj0*x12977)));
evalcond[5]=((((-1.0)*r02*sj0*x12984))+(((-1.0)*x12976*x12990))+(((-1.0)*x12988*x12999))+(((-1.0)*x12988*x12998))+((cj0*cj6*x12996))+((x12980*x12981))+(((-1.0)*x12987*x13002))+((cj0*x12977)));
evalcond[6]=((((-0.0009)*x12985))+(((-1.0)*cj1*x12989))+(((-0.02626)*x12971*x12985))+((x12991*x12998))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.02626)*x12995))+pz+(((0.02626)*x12983))+(((0.02626)*x13003))+(((0.0718)*x12972*x12985)));
evalcond[7]=((-0.001)+(((0.0718)*x13001))+(((-1.0)*x12974*x12975))+(((-0.01834)*sj2))+(((-1.0)*py*x12987))+(((-1.0)*x12982*x12997))+((x12979*x12982))+(((0.0009)*cj2))+((r11*sj6*x12974))+(((-1.0)*px*x12993))+(((0.02626)*x12998))+(((0.02626)*x12999))+(((-0.0718)*x13000)));
evalcond[8]=((((-1.0)*x12975*x12982))+(((-0.1255)*sj1))+(((-1.0)*x12974*x12979))+((x12986*x13000))+((x12973*x12998))+((x12973*x12999))+(((-1.0)*py*x12993))+(((0.02626)*r11*x12981))+(((-1.0)*x12986*x13001))+(((-0.0009)*sj1*sj2))+(((0.0001)*cj1))+((px*sj0))+((x12974*x12997))+(((-1.0)*sj1*x12989)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13004=(cj2*r21);
IkReal x13005=((1.0)*cj6);
IkReal x13006=((1.0)*cj2);
IkReal x13007=(cj5*r22);
IkReal x13008=(r20*sj2);
IkReal x13009=(sj5*sj6);
IkReal x13010=(r21*sj2);
CheckValue<IkReal> x13011=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x13011.valid){
continue;
}
CheckValue<IkReal> x13012 = IKatan2WithCheck(IkReal(((((-1.0)*sj5*x13005*x13010))+(((-1.0)*x13008*x13009))+((sj6*x13004))+(((-1.0)*sj2*x13007))+(((-1.0)*cj2*r20*x13005)))),(((cj6*x13008))+(((-1.0)*sj5*x13004*x13005))+(((-1.0)*r20*x13006*x13009))+(((-1.0)*x13006*x13007))+(((-1.0)*sj6*x13010))),IKFAST_ATAN2_MAGTHRESH);
if(!x13012.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13011.value)))+(x13012.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13013=IKcos(j4);
IkReal x13014=IKsin(j4);
IkReal x13015=((0.0718)*sj1);
IkReal x13016=((0.02626)*sj0);
IkReal x13017=(cj6*r10);
IkReal x13018=(sj0*sj6);
IkReal x13019=(cj5*r12);
IkReal x13020=((1.0)*cj1);
IkReal x13021=(r01*sj6);
IkReal x13022=(r10*sj5);
IkReal x13023=(cj0*sj6);
IkReal x13024=((0.02626)*cj0);
IkReal x13025=(cj6*r20);
IkReal x13026=((1.0)*cj5);
IkReal x13027=(cj1*sj2);
IkReal x13028=((0.02626)*sj1);
IkReal x13029=((1.0)*sj0);
IkReal x13030=((1.0)*sj1);
IkReal x13031=((0.01834)*cj2);
IkReal x13032=(r00*sj5);
IkReal x13033=((0.0718)*cj1);
IkReal x13034=(cj6*sj0);
IkReal x13035=((1.0)*cj0);
IkReal x13036=((1.0)*sj5);
IkReal x13037=(r21*sj6);
IkReal x13038=(r11*sj5);
IkReal x13039=(cj6*r00);
IkReal x13040=(cj2*x13013);
IkReal x13041=(sj2*x13014);
IkReal x13042=(cj2*x13014);
IkReal x13043=(sj2*x13013);
IkReal x13044=(cj6*r01*sj5);
IkReal x13045=(cj1*x13042);
evalcond[0]=((((-1.0)*x13037))+x13045+x13025+(((-1.0)*x13020*x13043)));
evalcond[1]=((((-1.0)*x13035*x13039))+((cj0*x13021))+((r11*x13018))+x13041+x13040+(((-1.0)*x13017*x13029)));
evalcond[2]=((((-1.0)*r22*x13026))+(((-1.0)*cj6*r21*x13036))+(((-1.0)*x13020*x13041))+(((-1.0)*x13020*x13040))+(((-1.0)*r20*sj6*x13036)));
evalcond[3]=((((-1.0)*x13017*x13035))+(((-1.0)*r01*x13018))+(((-1.0)*x13030*x13043))+((r11*x13023))+((r00*x13034))+((sj1*x13042)));
evalcond[4]=(((x13023*x13032))+((cj0*x13044))+(((-1.0)*x13043))+((cj0*cj5*r02))+((x13034*x13038))+((x13018*x13022))+x13042+((sj0*x13019)));
evalcond[5]=((((-1.0)*r02*sj0*x13026))+(((-1.0)*x13018*x13032))+((cj0*cj6*x13038))+((x13022*x13023))+(((-1.0)*x13029*x13044))+((cj0*x13019))+(((-1.0)*x13030*x13040))+(((-1.0)*x13030*x13041)));
evalcond[6]=((((-0.1255)*cj1))+(((-0.0001)*sj1))+(((0.0718)*x13014*x13027))+(((-0.02626)*x13037))+(((-0.02626)*x13013*x13027))+(((0.02626)*x13045))+pz+(((0.02626)*x13025))+(((-1.0)*cj1*x13031))+(((-0.0009)*x13027))+((x13033*x13040)));
evalcond[7]=((-0.001)+(((-0.0718)*x13042))+(((-1.0)*x13016*x13017))+(((-0.01834)*sj2))+(((-1.0)*py*x13029))+(((0.0718)*x13043))+((r11*sj6*x13016))+(((-1.0)*px*x13035))+(((0.0009)*cj2))+(((0.02626)*x13040))+(((0.02626)*x13041))+((x13021*x13024))+(((-1.0)*x13024*x13039)));
evalcond[8]=((((-0.1255)*sj1))+(((0.02626)*r11*x13023))+((x13015*x13040))+((x13015*x13041))+((x13028*x13042))+(((-1.0)*x13028*x13043))+(((-0.0009)*sj1*sj2))+(((-1.0)*py*x13035))+((x13016*x13039))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*sj1*x13031))+(((-1.0)*x13017*x13024))+(((-1.0)*x13016*x13021)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13046=(cj0*sj5);
IkReal x13047=(cj5*cj6);
IkReal x13048=((1.0)*sj5);
IkReal x13049=((1.0)*cj0);
IkReal x13050=((1.0)*sj0);
IkReal x13051=(cj5*sj6);
IkReal x13052=(r10*x13051);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x13051))+((r21*x13047))+(((-1.0)*r22*x13048))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*sj3))+((r02*x13046))+((r12*sj0*sj5))+(((-1.0)*x13050*x13052))+(((-1.0)*r11*x13047*x13050))+(((-1.0)*r00*x13049*x13051))+(((-1.0)*r01*x13047*x13049)));
evalcond[3]=((((-1.0)*r02*sj0*x13048))+(((-1.0)*x13049*x13052))+((r00*sj0*x13051))+(((-1.0)*r11*x13047*x13049))+((r12*x13046))+((r01*sj0*x13047)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
IkReal x13053=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*r20*sj6*x13053))+(((-1.0)*cj5*r22))+(((-1.0)*cj6*r21*x13053))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x13054=(cj5*cj6);
IkReal x13055=((1.0)*sj0);
IkReal x13056=(r21*sj6);
IkReal x13057=(cj0*sj5);
IkReal x13058=((1.0)*r22);
IkReal x13059=(cj6*r20);
IkReal x13060=(cj5*sj6);
IkReal x13061=((1.0)*cj0);
IkReal x13062=((1.0)*sj5);
IkReal x13063=(x13060*x13061);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x13060))+(((-1.0)*sj5*x13058))+((r21*x13054)));
evalcond[2]=((((-1.0)*x13056))+x13059);
evalcond[3]=((((-1.0)*r20*sj6*x13062))+(((-1.0)*cj5*x13058))+(((-1.0)*cj6*r21*x13062)));
evalcond[4]=((((-1.0)*r00*x13063))+((r02*x13057))+((r12*sj0*sj5))+(((-1.0)*r10*x13055*x13060))+(((-1.0)*r01*x13054*x13061))+(((-1.0)*r11*x13054*x13055)));
evalcond[5]=(((r01*sj0*x13054))+((r12*x13057))+((r00*sj0*x13060))+(((-1.0)*r02*sj5*x13055))+(((-1.0)*r10*x13063))+(((-1.0)*r11*x13054*x13061)));
evalcond[6]=((-0.0001)+(((0.02626)*x13059))+pz+(((-0.02626)*x13056)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13064=(sj0*sj6);
IkReal x13065=(cj0*sj6);
IkReal x13066=(cj6*r00);
IkReal x13067=((1.0)*cj6*r10);
if( IKabs(((((-1.0)*cj0*x13066))+(((-1.0)*sj0*x13067))+((r01*x13065))+((r11*x13064)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x13064))+((sj0*x13066))+(((-1.0)*cj0*x13067))+((r11*x13065)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*x13066))+(((-1.0)*sj0*x13067))+((r01*x13065))+((r11*x13064))))+IKsqr(((((-1.0)*r01*x13064))+((sj0*x13066))+(((-1.0)*cj0*x13067))+((r11*x13065))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*x13066))+(((-1.0)*sj0*x13067))+((r01*x13065))+((r11*x13064))), ((((-1.0)*r01*x13064))+((sj0*x13066))+(((-1.0)*cj0*x13067))+((r11*x13065))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13068=IKcos(j4);
IkReal x13069=IKsin(j4);
IkReal x13070=(cj6*sj0);
IkReal x13071=((0.02626)*r10);
IkReal x13072=(r11*sj6);
IkReal x13073=(r11*sj5);
IkReal x13074=(sj0*sj6);
IkReal x13075=(r10*sj5);
IkReal x13076=((0.02626)*r01);
IkReal x13077=(cj5*r12);
IkReal x13078=(cj0*cj6);
IkReal x13079=((1.0)*sj0);
IkReal x13080=(cj5*r02);
IkReal x13081=(cj0*sj6);
IkReal x13082=((1.0)*r10);
IkReal x13083=((1.0)*r01);
IkReal x13084=(r00*sj5);
IkReal x13085=((1.0)*cj0);
IkReal x13086=((0.02626)*r00);
IkReal x13087=((1.0)*x13069);
evalcond[0]=((((-1.0)*x13087))+(((-1.0)*x13070*x13082))+((sj0*x13072))+((r01*x13081))+(((-1.0)*r00*x13078)));
evalcond[1]=((((-1.0)*x13068))+((r00*x13070))+(((-1.0)*x13074*x13083))+((cj0*x13072))+(((-1.0)*x13078*x13082)));
evalcond[2]=(((x13074*x13075))+((sj0*x13077))+((cj0*x13080))+x13068+((x13070*x13073))+((r01*sj5*x13078))+((x13081*x13084)));
evalcond[3]=((((-1.0)*x13087))+(((-1.0)*x13074*x13084))+((x13075*x13081))+(((-1.0)*sj5*x13070*x13083))+((x13073*x13078))+(((-1.0)*x13079*x13080))+((cj0*x13077)));
evalcond[4]=((-0.1264)+((x13070*x13086))+(((0.0718)*x13069))+(((-1.0)*py*x13085))+(((0.02626)*cj0*x13072))+(((-1.0)*x13074*x13076))+((px*sj0))+(((-0.02626)*x13068))+(((-1.0)*x13071*x13078)));
evalcond[5]=((-0.21426)+(((-1.0)*x13070*x13071))+(((-1.0)*px*x13085))+(((-0.02626)*x13069))+(((-0.0718)*x13068))+((x13076*x13081))+(((-1.0)*x13078*x13086))+(((-1.0)*py*x13079))+(((0.02626)*sj0*x13072)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13088=(cj5*cj6);
IkReal x13089=((1.0)*sj0);
IkReal x13090=(r21*sj6);
IkReal x13091=(cj0*sj5);
IkReal x13092=((1.0)*r22);
IkReal x13093=(cj6*r20);
IkReal x13094=(cj5*sj6);
IkReal x13095=((1.0)*cj0);
IkReal x13096=((1.0)*sj5);
IkReal x13097=(x13094*x13095);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x13092))+((r21*x13088))+((r20*x13094)));
evalcond[2]=(x13093+(((-1.0)*x13090)));
evalcond[3]=((((-1.0)*cj6*r21*x13096))+(((-1.0)*r20*sj6*x13096))+(((-1.0)*cj5*x13092)));
evalcond[4]=((((-1.0)*r01*x13088*x13095))+((r02*x13091))+(((-1.0)*r11*x13088*x13089))+((r12*sj0*sj5))+(((-1.0)*r00*x13097))+(((-1.0)*r10*x13089*x13094)));
evalcond[5]=((((-1.0)*r11*x13088*x13095))+((r01*sj0*x13088))+(((-1.0)*r02*sj5*x13089))+(((-1.0)*r10*x13097))+((r12*x13091))+((r00*sj0*x13094)));
evalcond[6]=((-0.0001)+(((-0.02626)*x13090))+pz+(((0.02626)*x13093)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13098=(cj0*cj6);
IkReal x13099=(cj6*sj0);
IkReal x13100=(cj0*sj6);
IkReal x13101=((1.0)*sj0*sj6);
if( IKabs(((((-1.0)*r01*x13100))+(((-1.0)*r11*x13101))+((r00*x13098))+((r10*x13099)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x13101))+(((-1.0)*r10*x13098))+((r11*x13100))+((r00*x13099)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x13100))+(((-1.0)*r11*x13101))+((r00*x13098))+((r10*x13099))))+IKsqr(((((-1.0)*r01*x13101))+(((-1.0)*r10*x13098))+((r11*x13100))+((r00*x13099))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*x13100))+(((-1.0)*r11*x13101))+((r00*x13098))+((r10*x13099))), ((((-1.0)*r01*x13101))+(((-1.0)*r10*x13098))+((r11*x13100))+((r00*x13099))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13102=IKsin(j4);
IkReal x13103=IKcos(j4);
IkReal x13104=(cj6*sj0);
IkReal x13105=((0.02626)*r10);
IkReal x13106=(r11*sj6);
IkReal x13107=(r11*sj5);
IkReal x13108=(sj0*sj6);
IkReal x13109=(r10*sj5);
IkReal x13110=((0.02626)*r01);
IkReal x13111=(cj5*r12);
IkReal x13112=(cj0*cj6);
IkReal x13113=((1.0)*sj0);
IkReal x13114=(cj5*r02);
IkReal x13115=(cj0*sj6);
IkReal x13116=((1.0)*r10);
IkReal x13117=((1.0)*r01);
IkReal x13118=(r00*sj5);
IkReal x13119=((1.0)*cj0);
IkReal x13120=((0.02626)*r00);
IkReal x13121=((1.0)*x13103);
evalcond[0]=((((-1.0)*x13104*x13116))+(((-1.0)*r00*x13112))+x13102+((sj0*x13106))+((r01*x13115)));
evalcond[1]=(((r00*x13104))+(((-1.0)*x13108*x13117))+(((-1.0)*x13112*x13116))+(((-1.0)*x13121))+((cj0*x13106)));
evalcond[2]=(((x13104*x13107))+((sj0*x13111))+((r01*sj5*x13112))+((x13115*x13118))+((cj0*x13114))+(((-1.0)*x13121))+((x13108*x13109)));
evalcond[3]=((((-1.0)*sj5*x13104*x13117))+((x13107*x13112))+((x13109*x13115))+(((-1.0)*x13108*x13118))+((cj0*x13111))+(((-1.0)*x13102))+(((-1.0)*x13113*x13114)));
evalcond[4]=((-0.1264)+(((-1.0)*x13108*x13110))+(((-1.0)*py*x13119))+(((-1.0)*x13105*x13112))+((x13104*x13120))+(((0.02626)*cj0*x13106))+(((0.0718)*x13102))+(((-0.02626)*x13103))+((px*sj0)));
evalcond[5]=((-0.01934)+(((-1.0)*py*x13113))+(((-1.0)*x13112*x13120))+(((0.0718)*x13103))+(((-1.0)*x13104*x13105))+(((0.02626)*x13102))+((x13110*x13115))+(((-1.0)*px*x13119))+(((0.02626)*sj0*x13106)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13122=((1.0)*cj6);
CheckValue<IkReal> x13123=IKPowWithIntegerCheck(sj3,-1);
if(!x13123.valid){
continue;
}
if( IKabs(((x13123.value)*((((r21*sj6))+(((-1.0)*r20*x13122)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x13122))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13123.value)*((((r21*sj6))+(((-1.0)*r20*x13122))))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x13122))+(((-1.0)*r01*sj0*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x13123.value)*((((r21*sj6))+(((-1.0)*r20*x13122))))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x13122))+(((-1.0)*r01*sj0*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13124=IKcos(j4);
IkReal x13125=IKsin(j4);
IkReal x13126=(cj6*sj0);
IkReal x13127=((0.02626)*r10);
IkReal x13128=(sj0*sj6);
IkReal x13129=(r11*sj5);
IkReal x13130=(r10*sj5);
IkReal x13131=((0.02626)*r01);
IkReal x13132=(cj0*sj6);
IkReal x13133=(cj0*cj6);
IkReal x13134=(r21*sj6);
IkReal x13135=((1.0)*cj5);
IkReal x13136=(cj6*r20);
IkReal x13137=((1.0)*r10);
IkReal x13138=((1.0)*r01);
IkReal x13139=(r00*sj5);
IkReal x13140=((1.0)*py);
IkReal x13141=(cj5*r12);
IkReal x13142=((1.0)*sj5);
IkReal x13143=((0.02626)*r00);
IkReal x13144=((0.02626)*r11);
IkReal x13145=(cj3*x13125);
IkReal x13146=(sj3*x13125);
IkReal x13147=(cj3*x13124);
IkReal x13148=((1.0)*x13124);
evalcond[0]=(x13146+x13136+(((-1.0)*x13134)));
evalcond[1]=((((-1.0)*cj6*r21*x13142))+(((-1.0)*sj3*x13148))+(((-1.0)*r20*sj6*x13142))+(((-1.0)*r22*x13135)));
evalcond[2]=((((-1.0)*x13133*x13137))+((r00*x13126))+((r11*x13132))+(((-1.0)*x13148))+(((-1.0)*x13128*x13138)));
evalcond[3]=(((r01*x13132))+((r11*x13128))+(((-1.0)*r00*x13133))+(((-1.0)*x13145))+(((-1.0)*x13126*x13137)));
evalcond[4]=((-0.0001)+(((0.0718)*sj3*x13124))+pz+(((0.02626)*x13136))+(((0.09746)*sj3))+(((0.02626)*x13146))+(((-0.02626)*x13134)));
evalcond[5]=(((cj0*cj5*r02))+((x13128*x13130))+((x13132*x13139))+((x13126*x13129))+x13147+((r01*sj5*x13133))+((sj0*x13141)));
evalcond[6]=((((-1.0)*r02*sj0*x13135))+((x13129*x13133))+((x13130*x13132))+(((-1.0)*x13128*x13139))+(((-1.0)*sj5*x13126*x13138))+((cj0*x13141))+(((-1.0)*x13125)));
evalcond[7]=((-0.1264)+(((-0.02626)*x13124))+((x13126*x13143))+((x13132*x13144))+(((0.0718)*x13125))+(((-1.0)*cj0*x13140))+((px*sj0))+(((-1.0)*x13127*x13133))+(((-1.0)*x13128*x13131)));
evalcond[8]=((-0.1168)+((x13131*x13132))+(((-1.0)*x13126*x13127))+((x13128*x13144))+(((-1.0)*sj0*x13140))+(((-0.09746)*cj3))+(((-0.02626)*x13145))+(((-0.0718)*x13147))+(((-1.0)*cj0*px))+(((-1.0)*x13133*x13143)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13149=((1.0)*sj5);
CheckValue<IkReal> x13150=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x13150.valid){
continue;
}
CheckValue<IkReal> x13151 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x13149))+(((-1.0)*r20*sj6*x13149))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x13151.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13150.value)))+(x13151.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13152=IKcos(j4);
IkReal x13153=IKsin(j4);
IkReal x13154=(cj6*sj0);
IkReal x13155=((0.02626)*r10);
IkReal x13156=(sj0*sj6);
IkReal x13157=(r11*sj5);
IkReal x13158=(r10*sj5);
IkReal x13159=((0.02626)*r01);
IkReal x13160=(cj0*sj6);
IkReal x13161=(cj0*cj6);
IkReal x13162=(r21*sj6);
IkReal x13163=((1.0)*cj5);
IkReal x13164=(cj6*r20);
IkReal x13165=((1.0)*r10);
IkReal x13166=((1.0)*r01);
IkReal x13167=(r00*sj5);
IkReal x13168=((1.0)*py);
IkReal x13169=(cj5*r12);
IkReal x13170=((1.0)*sj5);
IkReal x13171=((0.02626)*r00);
IkReal x13172=((0.02626)*r11);
IkReal x13173=(cj3*x13153);
IkReal x13174=(sj3*x13153);
IkReal x13175=(cj3*x13152);
IkReal x13176=((1.0)*x13152);
evalcond[0]=((((-1.0)*x13162))+x13174+x13164);
evalcond[1]=((((-1.0)*sj3*x13176))+(((-1.0)*r20*sj6*x13170))+(((-1.0)*cj6*r21*x13170))+(((-1.0)*r22*x13163)));
evalcond[2]=((((-1.0)*x13156*x13166))+(((-1.0)*x13176))+(((-1.0)*x13161*x13165))+((r11*x13160))+((r00*x13154)));
evalcond[3]=((((-1.0)*x13154*x13165))+((r01*x13160))+(((-1.0)*r00*x13161))+((r11*x13156))+(((-1.0)*x13173)));
evalcond[4]=((-0.0001)+(((0.0718)*sj3*x13152))+(((0.02626)*x13164))+(((0.02626)*x13174))+pz+(((0.09746)*sj3))+(((-0.02626)*x13162)));
evalcond[5]=(((r01*sj5*x13161))+((sj0*x13169))+((cj0*cj5*r02))+((x13160*x13167))+((x13154*x13157))+x13175+((x13156*x13158)));
evalcond[6]=(((x13158*x13160))+((x13157*x13161))+(((-1.0)*x13156*x13167))+(((-1.0)*x13153))+((cj0*x13169))+(((-1.0)*r02*sj0*x13163))+(((-1.0)*sj5*x13154*x13166)));
evalcond[7]=((-0.1264)+(((-1.0)*x13156*x13159))+(((0.0718)*x13153))+(((-1.0)*x13155*x13161))+(((-0.02626)*x13152))+((x13160*x13172))+(((-1.0)*cj0*x13168))+((px*sj0))+((x13154*x13171)));
evalcond[8]=((-0.1168)+(((-1.0)*sj0*x13168))+(((-0.0718)*x13175))+(((-1.0)*x13161*x13171))+(((-0.02626)*x13173))+((x13156*x13172))+(((-1.0)*x13154*x13155))+(((-0.09746)*cj3))+((x13159*x13160))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13177=(cj0*sj5);
IkReal x13178=(cj5*cj6);
IkReal x13179=((1.0)*sj5);
IkReal x13180=((1.0)*cj0);
IkReal x13181=((1.0)*sj0);
IkReal x13182=(cj5*sj6);
IkReal x13183=(r10*x13182);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(cj3+((r20*x13182))+(((-1.0)*r22*x13179))+((r21*x13178)));
evalcond[2]=((((-1.0)*sj3))+(((-1.0)*r01*x13178*x13180))+((r12*sj0*sj5))+((r02*x13177))+(((-1.0)*r11*x13178*x13181))+(((-1.0)*x13181*x13183))+(((-1.0)*r00*x13180*x13182)));
evalcond[3]=(((r01*sj0*x13178))+((r00*sj0*x13182))+(((-1.0)*r11*x13178*x13180))+((r12*x13177))+(((-1.0)*x13180*x13183))+(((-1.0)*r02*sj0*x13179)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x13184=(cj5*cj6);
IkReal x13185=((1.0)*sj0);
IkReal x13186=(r21*sj6);
IkReal x13187=(cj0*sj5);
IkReal x13188=((1.0)*r22);
IkReal x13189=(cj6*r20);
IkReal x13190=(cj5*sj6);
IkReal x13191=((1.0)*cj0);
IkReal x13192=((1.0)*sj5);
IkReal x13193=(x13190*x13191);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x13184))+((r20*x13190))+(((-1.0)*sj5*x13188)));
evalcond[2]=((((-1.0)*x13186))+x13189);
evalcond[3]=((((-1.0)*r20*sj6*x13192))+(((-1.0)*cj5*x13188))+(((-1.0)*cj6*r21*x13192)));
evalcond[4]=(((r02*x13187))+((r12*sj0*sj5))+(((-1.0)*r11*x13184*x13185))+(((-1.0)*r00*x13193))+(((-1.0)*r01*x13184*x13191))+(((-1.0)*r10*x13185*x13190)));
evalcond[5]=((((-1.0)*r02*sj5*x13185))+((r12*x13187))+(((-1.0)*r10*x13193))+((r00*sj0*x13190))+(((-1.0)*r11*x13184*x13191))+((r01*sj0*x13184)));
evalcond[6]=((0.0001)+(((0.02626)*x13189))+(((-0.02626)*x13186))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13194=(sj0*sj6);
IkReal x13195=(cj6*r10);
IkReal x13196=((1.0)*sj0);
IkReal x13197=(cj6*r00);
IkReal x13198=(cj0*sj6);
if( IKabs(((((-1.0)*x13195*x13196))+((r11*x13194))+(((-1.0)*cj0*x13197))+((r01*x13198)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj0*x13195))+((r01*x13194))+(((-1.0)*r11*x13198))+(((-1.0)*x13196*x13197)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x13195*x13196))+((r11*x13194))+(((-1.0)*cj0*x13197))+((r01*x13198))))+IKsqr((((cj0*x13195))+((r01*x13194))+(((-1.0)*r11*x13198))+(((-1.0)*x13196*x13197))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x13195*x13196))+((r11*x13194))+(((-1.0)*cj0*x13197))+((r01*x13198))), (((cj0*x13195))+((r01*x13194))+(((-1.0)*r11*x13198))+(((-1.0)*x13196*x13197))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13199=IKcos(j4);
IkReal x13200=IKsin(j4);
IkReal x13201=(cj6*sj0);
IkReal x13202=((0.02626)*r10);
IkReal x13203=(r11*sj6);
IkReal x13204=(r11*sj5);
IkReal x13205=(sj0*sj6);
IkReal x13206=(r10*sj5);
IkReal x13207=((0.02626)*r01);
IkReal x13208=(cj5*r12);
IkReal x13209=(cj0*cj6);
IkReal x13210=((1.0)*sj0);
IkReal x13211=(cj5*r02);
IkReal x13212=(cj0*sj6);
IkReal x13213=((1.0)*r10);
IkReal x13214=((1.0)*r01);
IkReal x13215=(r00*sj5);
IkReal x13216=((1.0)*cj0);
IkReal x13217=((0.02626)*r00);
evalcond[0]=(((r00*x13201))+((cj0*x13203))+x13199+(((-1.0)*x13209*x13213))+(((-1.0)*x13205*x13214)));
evalcond[1]=(((r01*x13212))+(((-1.0)*x13201*x13213))+((sj0*x13203))+(((-1.0)*r00*x13209))+(((-1.0)*x13200)));
evalcond[2]=(((x13205*x13206))+((x13201*x13204))+((sj0*x13208))+((r01*sj5*x13209))+x13199+((cj0*x13211))+((x13212*x13215)));
evalcond[3]=(((x13204*x13209))+(((-1.0)*x13205*x13215))+((x13206*x13212))+(((-1.0)*x13210*x13211))+((cj0*x13208))+x13200+(((-1.0)*sj5*x13201*x13214)));
evalcond[4]=((0.1264)+(((0.02626)*x13199))+(((0.02626)*cj0*x13203))+(((-1.0)*py*x13216))+(((-1.0)*x13202*x13209))+(((-0.0718)*x13200))+((px*sj0))+(((-1.0)*x13205*x13207))+((x13201*x13217)));
evalcond[5]=((-0.21426)+(((-1.0)*py*x13210))+(((0.02626)*sj0*x13203))+(((-0.0718)*x13199))+(((-1.0)*px*x13216))+((x13207*x13212))+(((-1.0)*x13201*x13202))+(((-0.02626)*x13200))+(((-1.0)*x13209*x13217)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13218=(cj5*cj6);
IkReal x13219=((1.0)*sj0);
IkReal x13220=(r21*sj6);
IkReal x13221=(cj0*sj5);
IkReal x13222=((1.0)*r22);
IkReal x13223=(cj6*r20);
IkReal x13224=(cj5*sj6);
IkReal x13225=((1.0)*cj0);
IkReal x13226=((1.0)*sj5);
IkReal x13227=(x13224*x13225);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x13218))+(((-1.0)*sj5*x13222))+((r20*x13224)));
evalcond[2]=((((-1.0)*x13220))+x13223);
evalcond[3]=((((-1.0)*cj5*x13222))+(((-1.0)*cj6*r21*x13226))+(((-1.0)*r20*sj6*x13226)));
evalcond[4]=((((-1.0)*r10*x13219*x13224))+(((-1.0)*r00*x13227))+((r02*x13221))+(((-1.0)*r11*x13218*x13219))+((r12*sj0*sj5))+(((-1.0)*r01*x13218*x13225)));
evalcond[5]=(((r00*sj0*x13224))+((r01*sj0*x13218))+(((-1.0)*r10*x13227))+((r12*x13221))+(((-1.0)*r02*sj5*x13219))+(((-1.0)*r11*x13218*x13225)));
evalcond[6]=((0.0001)+(((-0.02626)*x13220))+(((0.02626)*x13223))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13228=(cj0*cj6);
IkReal x13229=(sj0*sj6);
IkReal x13230=((1.0)*r11);
IkReal x13231=(cj6*sj0);
IkReal x13232=(cj0*sj6);
if( IKabs((((r10*x13231))+(((-1.0)*x13229*x13230))+(((-1.0)*r01*x13232))+((r00*x13228)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x13228))+(((-1.0)*r00*x13231))+((r01*x13229))+(((-1.0)*x13230*x13232)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x13231))+(((-1.0)*x13229*x13230))+(((-1.0)*r01*x13232))+((r00*x13228))))+IKsqr((((r10*x13228))+(((-1.0)*r00*x13231))+((r01*x13229))+(((-1.0)*x13230*x13232))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x13231))+(((-1.0)*x13229*x13230))+(((-1.0)*r01*x13232))+((r00*x13228))), (((r10*x13228))+(((-1.0)*r00*x13231))+((r01*x13229))+(((-1.0)*x13230*x13232))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13233=IKcos(j4);
IkReal x13234=IKsin(j4);
IkReal x13235=(cj6*sj0);
IkReal x13236=((0.02626)*r10);
IkReal x13237=(r11*sj6);
IkReal x13238=(r11*sj5);
IkReal x13239=(sj0*sj6);
IkReal x13240=(r10*sj5);
IkReal x13241=((0.02626)*r01);
IkReal x13242=(cj5*r12);
IkReal x13243=(cj0*cj6);
IkReal x13244=((1.0)*sj0);
IkReal x13245=(cj5*r02);
IkReal x13246=(cj0*sj6);
IkReal x13247=((1.0)*r10);
IkReal x13248=((1.0)*r01);
IkReal x13249=(r00*sj5);
IkReal x13250=((1.0)*cj0);
IkReal x13251=((0.02626)*r00);
evalcond[0]=((((-1.0)*x13235*x13247))+(((-1.0)*r00*x13243))+((r01*x13246))+((sj0*x13237))+x13234);
evalcond[1]=((((-1.0)*x13243*x13247))+((cj0*x13237))+x13233+(((-1.0)*x13239*x13248))+((r00*x13235)));
evalcond[2]=(((x13246*x13249))+((sj0*x13242))+((r01*sj5*x13243))+((x13239*x13240))+((x13235*x13238))+((cj0*x13245))+(((-1.0)*x13233)));
evalcond[3]=((((-1.0)*sj5*x13235*x13248))+(((-1.0)*x13239*x13249))+((x13238*x13243))+((x13240*x13246))+(((-1.0)*x13244*x13245))+((cj0*x13242))+x13234);
evalcond[4]=((0.1264)+(((0.02626)*x13233))+(((0.02626)*cj0*x13237))+((x13235*x13251))+(((-1.0)*x13236*x13243))+(((-1.0)*py*x13250))+(((-0.0718)*x13234))+((px*sj0))+(((-1.0)*x13239*x13241)));
evalcond[5]=((-0.01934)+(((0.02626)*x13234))+(((0.0718)*x13233))+(((-1.0)*x13235*x13236))+(((-1.0)*x13243*x13251))+(((-1.0)*py*x13244))+((x13241*x13246))+(((0.02626)*sj0*x13237))+(((-1.0)*px*x13250)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13252=((1.0)*sj6);
CheckValue<IkReal> x13253=IKPowWithIntegerCheck(sj3,-1);
if(!x13253.valid){
continue;
}
if( IKabs(((x13253.value)*((((cj6*r20))+(((-1.0)*r21*x13252)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*r11*x13252))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13253.value)*((((cj6*r20))+(((-1.0)*r21*x13252))))))+IKsqr(((((-1.0)*cj0*r11*x13252))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x13253.value)*((((cj6*r20))+(((-1.0)*r21*x13252))))), ((((-1.0)*cj0*r11*x13252))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13254=IKcos(j4);
IkReal x13255=IKsin(j4);
IkReal x13256=(cj6*sj0);
IkReal x13257=((0.02626)*r10);
IkReal x13258=(sj0*sj6);
IkReal x13259=(r11*sj5);
IkReal x13260=(r10*sj5);
IkReal x13261=(cj0*cj6);
IkReal x13262=((0.02626)*r01);
IkReal x13263=(cj0*sj6);
IkReal x13264=(r21*sj6);
IkReal x13265=((1.0)*cj5);
IkReal x13266=(cj6*r20);
IkReal x13267=((1.0)*r10);
IkReal x13268=((1.0)*r01);
IkReal x13269=(r00*sj5);
IkReal x13270=((1.0)*py);
IkReal x13271=(cj5*r12);
IkReal x13272=((1.0)*sj5);
IkReal x13273=((0.02626)*r00);
IkReal x13274=((0.02626)*r11);
IkReal x13275=((1.0)*x13255);
IkReal x13276=((0.02626)*x13255);
IkReal x13277=(sj3*x13254);
IkReal x13278=(cj3*x13254);
evalcond[0]=((((-1.0)*x13264))+(((-1.0)*sj3*x13275))+x13266);
evalcond[1]=((((-1.0)*r22*x13265))+x13277+(((-1.0)*cj6*r21*x13272))+(((-1.0)*r20*sj6*x13272)));
evalcond[2]=(((r11*x13263))+(((-1.0)*x13261*x13267))+((r00*x13256))+x13254+(((-1.0)*x13258*x13268)));
evalcond[3]=((((-1.0)*r00*x13261))+(((-1.0)*x13256*x13267))+((r01*x13263))+(((-1.0)*cj3*x13275))+((r11*x13258)));
evalcond[4]=((0.0001)+(((-0.02626)*x13264))+(((-0.0718)*x13277))+(((0.02626)*x13266))+(((-1.0)*sj3*x13276))+pz+(((-0.09746)*sj3)));
evalcond[5]=(((cj0*cj5*r02))+((x13258*x13260))+((x13256*x13259))+((r01*sj5*x13261))+((sj0*x13271))+x13278+((x13263*x13269)));
evalcond[6]=(((x13260*x13263))+((x13259*x13261))+(((-1.0)*x13258*x13269))+(((-1.0)*sj5*x13256*x13268))+(((-1.0)*r02*sj0*x13265))+x13255+((cj0*x13271)));
evalcond[7]=((0.1264)+((x13263*x13274))+(((0.02626)*x13254))+(((-0.0718)*x13255))+((x13256*x13273))+((px*sj0))+(((-1.0)*x13257*x13261))+(((-1.0)*cj0*x13270))+(((-1.0)*x13258*x13262)));
evalcond[8]=((-0.1168)+(((-1.0)*sj0*x13270))+((x13258*x13274))+(((-0.0718)*x13278))+(((-1.0)*x13261*x13273))+(((-1.0)*cj3*x13276))+(((-0.09746)*cj3))+((x13262*x13263))+(((-1.0)*cj0*px))+(((-1.0)*x13256*x13257)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x13279=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x13279.valid){
continue;
}
CheckValue<IkReal> x13280 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x13280.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13279.value)))+(x13280.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13281=IKcos(j4);
IkReal x13282=IKsin(j4);
IkReal x13283=(cj6*sj0);
IkReal x13284=((0.02626)*r10);
IkReal x13285=(sj0*sj6);
IkReal x13286=(r11*sj5);
IkReal x13287=(r10*sj5);
IkReal x13288=(cj0*cj6);
IkReal x13289=((0.02626)*r01);
IkReal x13290=(cj0*sj6);
IkReal x13291=(r21*sj6);
IkReal x13292=((1.0)*cj5);
IkReal x13293=(cj6*r20);
IkReal x13294=((1.0)*r10);
IkReal x13295=((1.0)*r01);
IkReal x13296=(r00*sj5);
IkReal x13297=((1.0)*py);
IkReal x13298=(cj5*r12);
IkReal x13299=((1.0)*sj5);
IkReal x13300=((0.02626)*r00);
IkReal x13301=((0.02626)*r11);
IkReal x13302=((1.0)*x13282);
IkReal x13303=((0.02626)*x13282);
IkReal x13304=(sj3*x13281);
IkReal x13305=(cj3*x13281);
evalcond[0]=((((-1.0)*x13291))+x13293+(((-1.0)*sj3*x13302)));
evalcond[1]=((((-1.0)*cj6*r21*x13299))+(((-1.0)*r22*x13292))+(((-1.0)*r20*sj6*x13299))+x13304);
evalcond[2]=(((r11*x13290))+(((-1.0)*x13285*x13295))+x13281+((r00*x13283))+(((-1.0)*x13288*x13294)));
evalcond[3]=(((r11*x13285))+(((-1.0)*cj3*x13302))+(((-1.0)*r00*x13288))+(((-1.0)*x13283*x13294))+((r01*x13290)));
evalcond[4]=((0.0001)+(((-0.0718)*x13304))+(((0.02626)*x13293))+(((-0.02626)*x13291))+pz+(((-0.09746)*sj3))+(((-1.0)*sj3*x13303)));
evalcond[5]=(((sj0*x13298))+((x13285*x13287))+((cj0*cj5*r02))+((x13283*x13286))+((x13290*x13296))+x13305+((r01*sj5*x13288)));
evalcond[6]=(((x13287*x13290))+(((-1.0)*x13285*x13296))+((cj0*x13298))+(((-1.0)*r02*sj0*x13292))+(((-1.0)*sj5*x13283*x13295))+((x13286*x13288))+x13282);
evalcond[7]=((0.1264)+((x13290*x13301))+(((-1.0)*x13284*x13288))+(((-0.0718)*x13282))+(((0.02626)*x13281))+((px*sj0))+(((-1.0)*cj0*x13297))+(((-1.0)*x13285*x13289))+((x13283*x13300)));
evalcond[8]=((-0.1168)+(((-0.0718)*x13305))+(((-1.0)*x13288*x13300))+(((-1.0)*cj3*x13303))+((x13285*x13301))+(((-1.0)*x13283*x13284))+(((-0.09746)*cj3))+(((-1.0)*sj0*x13297))+(((-1.0)*cj0*px))+((x13289*x13290)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13306=(cj5*cj6);
IkReal x13307=(r11*sj0);
IkReal x13308=(cj6*sj5);
IkReal x13309=((1.0)*cj0);
IkReal x13310=(r10*sj6);
IkReal x13311=(sj0*sj5);
IkReal x13312=(r00*sj6);
IkReal x13313=(cj0*sj5);
IkReal x13314=((0.02626)*cj0);
IkReal x13315=(r01*sj6);
IkReal x13316=((1.0)*sj0);
IkReal x13317=(cj6*r10);
IkReal x13318=(cj5*sj0);
IkReal x13319=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959))))));
evalcond[1]=(((r21*x13306))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x13316*x13317))+(((-1.0)*x13309*x13319))+((cj0*x13315))+((sj6*x13307)));
evalcond[3]=((-1.0)+(((-1.0)*r01*x13306*x13309))+(((-1.0)*x13306*x13307))+(((-1.0)*cj5*x13309*x13312))+(((-1.0)*cj5*x13310*x13316))+((r12*x13311))+((r02*x13313)));
evalcond[4]=(((cj0*cj5*r02))+((x13312*x13313))+((x13310*x13311))+((cj0*r01*x13308))+((r12*x13318))+((x13307*x13308)));
evalcond[5]=((((-1.0)*r02*x13311))+((x13312*x13318))+((r01*sj0*x13306))+(((-1.0)*r11*x13306*x13309))+(((-1.0)*cj5*x13309*x13310))+((r12*x13313)));
evalcond[6]=((-0.1168)+(((-1.0)*py*x13316))+((x13314*x13315))+(((-0.02626)*sj0*x13317))+(((0.02626)*sj6*x13307))+(((-1.0)*px*x13309))+(((-1.0)*x13314*x13319)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13320=(cj1*r20);
IkReal x13321=((1.0)*sj6);
IkReal x13322=(r20*sj1);
IkReal x13323=((1.0)*cj5*r22);
IkReal x13324=((1.0)*cj6*r21*sj5);
if( IKabs(((((-1.0)*cj6*x13322))+((r21*sj1*sj6))+(((-1.0)*cj1*x13324))+(((-1.0)*cj1*x13323))+(((-1.0)*sj5*x13320*x13321)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x13323))+(((-1.0)*sj1*x13324))+(((-1.0)*cj1*r21*x13321))+((cj6*x13320))+(((-1.0)*sj5*x13321*x13322)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*x13322))+((r21*sj1*sj6))+(((-1.0)*cj1*x13324))+(((-1.0)*cj1*x13323))+(((-1.0)*sj5*x13320*x13321))))+IKsqr(((((-1.0)*sj1*x13323))+(((-1.0)*sj1*x13324))+(((-1.0)*cj1*r21*x13321))+((cj6*x13320))+(((-1.0)*sj5*x13321*x13322))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*x13322))+((r21*sj1*sj6))+(((-1.0)*cj1*x13324))+(((-1.0)*cj1*x13323))+(((-1.0)*sj5*x13320*x13321))), ((((-1.0)*sj1*x13323))+(((-1.0)*sj1*x13324))+(((-1.0)*cj1*r21*x13321))+((cj6*x13320))+(((-1.0)*sj5*x13321*x13322))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13325=IKcos(j4);
IkReal x13326=IKsin(j4);
IkReal x13327=((1.0)*cj1);
IkReal x13328=((0.02626)*sj6);
IkReal x13329=(r01*sj0);
IkReal x13330=(cj0*sj6);
IkReal x13331=((0.02626)*cj6);
IkReal x13332=(cj0*r10);
IkReal x13333=((1.0)*cj5);
IkReal x13334=((1.0)*cj6);
IkReal x13335=((1.0)*sj6);
IkReal x13336=(r00*sj0);
IkReal x13337=(cj0*r11);
IkReal x13338=(sj1*x13325);
IkReal x13339=(cj1*x13326);
IkReal x13340=(sj1*x13326);
IkReal x13341=(cj1*x13325);
IkReal x13342=((1.0)*x13338);
IkReal x13343=(x13326*x13327);
IkReal x13344=(x13342+x13343);
evalcond[0]=((((-1.0)*x13325*x13327))+((cj6*r20))+(((-1.0)*r21*x13335))+x13340);
evalcond[1]=((((-1.0)*r21*sj5*x13334))+(((-1.0)*r22*x13333))+(((-1.0)*r20*sj5*x13335))+(((-1.0)*x13344)));
evalcond[2]=(((cj6*x13336))+(((-1.0)*x13344))+(((-1.0)*x13332*x13334))+(((-1.0)*x13329*x13335))+((r11*x13330)));
evalcond[3]=((((0.0718)*x13338))+(((0.0718)*x13339))+(((0.09736)*sj1))+(((-0.02626)*x13341))+(((-0.1264)*cj1))+((r20*x13331))+pz+(((0.02626)*x13340))+(((-1.0)*r21*x13328)));
evalcond[4]=(((r10*sj5*x13330))+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x13333))+(((-1.0)*sj5*x13335*x13336))+(((-1.0)*x13340))+(((-1.0)*sj5*x13329*x13334))+((cj6*sj5*x13337))+x13341);
evalcond[5]=((((-0.0718)*x13341))+(((-0.02626)*x13339))+(((-0.02626)*x13338))+(((-0.1264)*sj1))+(((-0.09736)*cj1))+(((-1.0)*x13328*x13329))+(((0.0718)*x13340))+((px*sj0))+((x13331*x13336))+((x13328*x13337))+(((-1.0)*x13331*x13332))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13345=(cj5*cj6);
IkReal x13346=(r11*sj0);
IkReal x13347=(cj6*sj5);
IkReal x13348=((1.0)*cj0);
IkReal x13349=(r10*sj6);
IkReal x13350=(sj0*sj5);
IkReal x13351=(r00*sj6);
IkReal x13352=(cj0*sj5);
IkReal x13353=((0.02626)*cj0);
IkReal x13354=(r01*sj6);
IkReal x13355=((1.0)*sj0);
IkReal x13356=(cj6*r10);
IkReal x13357=(cj5*sj0);
IkReal x13358=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959))))));
evalcond[1]=(((cj5*r20*sj6))+((r21*x13345))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x13354))+(((-1.0)*x13355*x13356))+((sj6*x13346))+(((-1.0)*x13348*x13358)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x13349*x13355))+((r02*x13352))+(((-1.0)*cj5*x13348*x13351))+(((-1.0)*r01*x13345*x13348))+((r12*x13350))+(((-1.0)*x13345*x13346)));
evalcond[4]=(((cj0*cj5*r02))+((x13351*x13352))+((x13346*x13347))+((x13349*x13350))+((cj0*r01*x13347))+((r12*x13357)));
evalcond[5]=((((-1.0)*r11*x13345*x13348))+((r01*sj0*x13345))+(((-1.0)*cj5*x13348*x13349))+((x13351*x13357))+(((-1.0)*r02*x13350))+((r12*x13352)));
evalcond[6]=((-0.1168)+(((-0.02626)*sj0*x13356))+((x13353*x13354))+(((-1.0)*x13353*x13358))+(((0.02626)*sj6*x13346))+(((-1.0)*py*x13355))+(((-1.0)*px*x13348)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13359=(sj1*sj6);
IkReal x13360=(r20*sj5);
IkReal x13361=(cj1*cj6);
IkReal x13362=((1.0)*r21);
IkReal x13363=(cj5*r22);
IkReal x13364=(cj1*sj6);
IkReal x13365=(cj6*sj1);
if( IKabs(((((-1.0)*x13360*x13364))+((r20*x13365))+(((-1.0)*sj5*x13361*x13362))+(((-1.0)*cj1*x13363))+(((-1.0)*x13359*x13362)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x13363))+((r20*x13361))+(((-1.0)*x13362*x13364))+((r21*sj5*x13365))+((x13359*x13360)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x13360*x13364))+((r20*x13365))+(((-1.0)*sj5*x13361*x13362))+(((-1.0)*cj1*x13363))+(((-1.0)*x13359*x13362))))+IKsqr((((sj1*x13363))+((r20*x13361))+(((-1.0)*x13362*x13364))+((r21*sj5*x13365))+((x13359*x13360))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x13360*x13364))+((r20*x13365))+(((-1.0)*sj5*x13361*x13362))+(((-1.0)*cj1*x13363))+(((-1.0)*x13359*x13362))), (((sj1*x13363))+((r20*x13361))+(((-1.0)*x13362*x13364))+((r21*sj5*x13365))+((x13359*x13360))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13366=IKcos(j4);
IkReal x13367=IKsin(j4);
IkReal x13368=((1.0)*cj1);
IkReal x13369=((0.02626)*sj6);
IkReal x13370=(r01*sj0);
IkReal x13371=(cj0*sj6);
IkReal x13372=((0.02626)*cj6);
IkReal x13373=(cj0*r10);
IkReal x13374=((1.0)*cj5);
IkReal x13375=((1.0)*sj6);
IkReal x13376=(r00*sj0);
IkReal x13377=((1.0)*cj6);
IkReal x13378=(cj0*r11);
IkReal x13379=(sj1*x13366);
IkReal x13380=(cj1*x13367);
IkReal x13381=(sj1*x13367);
IkReal x13382=(cj1*x13366);
IkReal x13383=((1.0)*x13381);
IkReal x13384=(x13366*x13368);
IkReal x13385=(x13384+x13383);
evalcond[0]=((((-1.0)*r21*x13375))+(((-1.0)*x13385))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj5*x13375))+(((-1.0)*r22*x13374))+(((-1.0)*x13367*x13368))+(((-1.0)*r21*sj5*x13377))+x13379);
evalcond[2]=((((-1.0)*x13370*x13375))+(((-1.0)*x13373*x13377))+((r11*x13371))+((cj6*x13376))+x13380+(((-1.0)*x13379)));
evalcond[3]=((((0.0718)*x13380))+((r20*x13372))+(((-0.1264)*cj1))+(((-1.0)*r21*x13369))+(((-0.09756)*sj1))+(((-0.0718)*x13379))+pz+(((-0.02626)*x13381))+(((-0.02626)*x13382)));
evalcond[4]=(((cj6*sj5*x13378))+(((-1.0)*sj5*x13370*x13377))+((cj0*cj5*r12))+((r10*sj5*x13371))+(((-1.0)*r02*sj0*x13374))+(((-1.0)*x13385))+(((-1.0)*sj5*x13375*x13376)));
evalcond[5]=((((0.02626)*x13380))+(((0.0718)*x13382))+(((0.0718)*x13381))+((x13369*x13378))+(((-1.0)*x13372*x13373))+(((-0.1264)*sj1))+(((0.09756)*cj1))+(((-1.0)*x13369*x13370))+((x13372*x13376))+((px*sj0))+(((-0.02626)*x13379))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13386=(cj0*sj5);
IkReal x13387=(cj5*cj6);
IkReal x13388=((1.0)*sj5);
IkReal x13389=((1.0)*cj0);
IkReal x13390=((1.0)*sj0);
IkReal x13391=(cj5*sj6);
IkReal x13392=(r10*x13391);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x13388))+((r20*x13391))+(((-1.0)*cj3))+((r21*x13387)));
evalcond[2]=(sj3+(((-1.0)*r01*x13387*x13389))+(((-1.0)*r11*x13387*x13390))+((r12*sj0*sj5))+(((-1.0)*x13390*x13392))+((r02*x13386))+(((-1.0)*r00*x13389*x13391)));
evalcond[3]=((((-1.0)*r02*sj0*x13388))+((r01*sj0*x13387))+((r12*x13386))+(((-1.0)*x13389*x13392))+((r00*sj0*x13391))+(((-1.0)*r11*x13387*x13389)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
IkReal x13393=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*r20*sj6*x13393))+(((-1.0)*cj6*r21*x13393))+(((-1.0)*cj5*r22))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x13394=(cj5*cj6);
IkReal x13395=(r11*sj0);
IkReal x13396=(cj6*sj5);
IkReal x13397=((1.0)*cj0);
IkReal x13398=(r10*sj6);
IkReal x13399=(sj0*sj5);
IkReal x13400=(r00*sj6);
IkReal x13401=(cj0*sj5);
IkReal x13402=((0.02626)*cj0);
IkReal x13403=(r01*sj6);
IkReal x13404=((1.0)*sj0);
IkReal x13405=(cj6*r10);
IkReal x13406=(cj5*sj0);
IkReal x13407=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x13394))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=(((sj6*x13395))+(((-1.0)*x13397*x13407))+((cj0*x13403))+(((-1.0)*x13404*x13405)));
evalcond[3]=((1.0)+((r12*x13399))+(((-1.0)*cj5*x13397*x13400))+(((-1.0)*cj5*x13398*x13404))+(((-1.0)*x13394*x13395))+((r02*x13401))+(((-1.0)*r01*x13394*x13397)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x13396))+((x13400*x13401))+((r12*x13406))+((x13398*x13399))+((x13395*x13396)));
evalcond[5]=(((r01*sj0*x13394))+((x13400*x13406))+((r12*x13401))+(((-1.0)*cj5*x13397*x13398))+(((-1.0)*r02*x13399))+(((-1.0)*r11*x13394*x13397)));
evalcond[6]=((0.1148)+((x13402*x13403))+(((-1.0)*py*x13404))+(((-1.0)*x13402*x13407))+(((0.02626)*sj6*x13395))+(((-0.02626)*sj0*x13405))+(((-1.0)*px*x13397)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13408=IKcos(j4);
IkReal x13409=IKsin(j4);
IkReal x13410=(cj0*sj6);
IkReal x13411=((0.02626)*cj6);
IkReal x13412=(cj0*r10);
IkReal x13413=((0.02626)*sj6);
IkReal x13414=(r01*sj0);
IkReal x13415=((1.0)*cj5);
IkReal x13416=((1.0)*cj6);
IkReal x13417=((1.0)*sj6);
IkReal x13418=(r00*sj0);
evalcond[0]=(x13409+(((-1.0)*r21*x13417))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj5*x13417))+(((-1.0)*r22*x13415))+(((-1.0)*x13408))+(((-1.0)*r21*sj5*x13416)));
evalcond[2]=((0.09736)+(((0.02626)*x13409))+(((-1.0)*r21*x13413))+((r20*x13411))+(((0.0718)*x13408))+pz);
evalcond[3]=(x13408+(((-1.0)*x13414*x13417))+((cj6*x13418))+(((-1.0)*x13412*x13416))+((r11*x13410)));
evalcond[4]=(x13409+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x13415))+(((-1.0)*sj5*x13414*x13416))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x13417*x13418))+((r10*sj5*x13410)));
evalcond[5]=((-0.1246)+(((-0.0718)*x13409))+(((0.02626)*x13408))+(((-1.0)*x13413*x13414))+(((0.02626)*r11*x13410))+((x13411*x13418))+(((-1.0)*x13411*x13412))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13419=(cj5*cj6);
IkReal x13420=(r11*sj0);
IkReal x13421=(cj6*sj5);
IkReal x13422=((1.0)*cj0);
IkReal x13423=(r10*sj6);
IkReal x13424=(sj0*sj5);
IkReal x13425=(r00*sj6);
IkReal x13426=(cj0*sj5);
IkReal x13427=((0.02626)*cj0);
IkReal x13428=(r01*sj6);
IkReal x13429=((1.0)*sj0);
IkReal x13430=(cj6*r10);
IkReal x13431=(cj5*sj0);
IkReal x13432=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x13419)));
evalcond[2]=(((sj6*x13420))+((cj0*x13428))+(((-1.0)*x13429*x13430))+(((-1.0)*x13422*x13432)));
evalcond[3]=((-1.0)+(((-1.0)*x13419*x13420))+((r02*x13426))+((r12*x13424))+(((-1.0)*cj5*x13422*x13425))+(((-1.0)*cj5*x13423*x13429))+(((-1.0)*r01*x13419*x13422)));
evalcond[4]=(((cj0*cj5*r02))+((x13420*x13421))+((x13425*x13426))+((cj0*r01*x13421))+((r12*x13431))+((x13423*x13424)));
evalcond[5]=((((-1.0)*r02*x13424))+((x13425*x13431))+((r01*sj0*x13419))+(((-1.0)*r11*x13419*x13422))+((r12*x13426))+(((-1.0)*cj5*x13422*x13423)));
evalcond[6]=((0.1148)+(((-1.0)*x13427*x13432))+(((-1.0)*py*x13429))+(((0.02626)*sj6*x13420))+((x13427*x13428))+(((-0.02626)*sj0*x13430))+(((-1.0)*px*x13422)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13433=IKcos(j4);
IkReal x13434=IKsin(j4);
IkReal x13435=(cj0*sj6);
IkReal x13436=((0.02626)*cj6);
IkReal x13437=(cj0*r10);
IkReal x13438=((0.02626)*sj6);
IkReal x13439=(r01*sj0);
IkReal x13440=((1.0)*cj5);
IkReal x13441=((1.0)*cj6);
IkReal x13442=((1.0)*sj6);
IkReal x13443=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x13442))+(((-1.0)*x13434))+((cj6*r20)));
evalcond[1]=(x13433+(((-1.0)*r21*sj5*x13441))+(((-1.0)*r22*x13440))+(((-1.0)*r20*sj5*x13442)));
evalcond[2]=((-0.09756)+(((-0.0718)*x13433))+(((-0.02626)*x13434))+(((-1.0)*r21*x13438))+pz+((r20*x13436)));
evalcond[3]=(x13433+(((-1.0)*x13439*x13442))+(((-1.0)*x13437*x13441))+((cj6*x13443))+((r11*x13435)));
evalcond[4]=(x13434+((cj0*cj5*r12))+(((-1.0)*r02*sj0*x13440))+(((-1.0)*sj5*x13442*x13443))+((cj0*cj6*r11*sj5))+((r10*sj5*x13435))+(((-1.0)*sj5*x13439*x13441)));
evalcond[5]=((-0.1246)+(((0.02626)*x13433))+(((-0.0718)*x13434))+(((0.02626)*r11*x13435))+(((-1.0)*x13436*x13437))+((x13436*x13443))+((px*sj0))+(((-1.0)*cj0*py))+(((-1.0)*x13438*x13439)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13444=(cj5*cj6);
IkReal x13445=((1.0)*sj0);
IkReal x13446=(r21*sj6);
IkReal x13447=(cj0*sj5);
IkReal x13448=((1.0)*r22);
IkReal x13449=(cj6*r20);
IkReal x13450=(cj5*sj6);
IkReal x13451=((1.0)*cj0);
IkReal x13452=((1.0)*sj5);
IkReal x13453=(x13450*x13451);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x13450))+(((-1.0)*sj5*x13448))+((r21*x13444)));
evalcond[2]=(x13449+(((-1.0)*x13446)));
evalcond[3]=((((-1.0)*cj6*r21*x13452))+(((-1.0)*cj5*x13448))+(((-1.0)*r20*sj6*x13452)));
evalcond[4]=(((r02*x13447))+(((-1.0)*r01*x13444*x13451))+(((-1.0)*r10*x13445*x13450))+(((-1.0)*r11*x13444*x13445))+((r12*sj0*sj5))+(((-1.0)*r00*x13453)));
evalcond[5]=(((r01*sj0*x13444))+(((-1.0)*r11*x13444*x13451))+(((-1.0)*r10*x13453))+((r00*sj0*x13450))+(((-1.0)*r02*sj5*x13445))+((r12*x13447)));
evalcond[6]=((-0.0001)+(((0.02626)*x13449))+pz+(((-0.02626)*x13446)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13454=(cj0*cj6);
IkReal x13455=(sj0*sj6);
IkReal x13456=((1.0)*r11);
IkReal x13457=(cj6*sj0);
IkReal x13458=(cj0*sj6);
if( IKabs((((r10*x13457))+(((-1.0)*x13455*x13456))+(((-1.0)*r01*x13458))+((r00*x13454)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x13454))+(((-1.0)*x13456*x13458))+(((-1.0)*r00*x13457))+((r01*x13455)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x13457))+(((-1.0)*x13455*x13456))+(((-1.0)*r01*x13458))+((r00*x13454))))+IKsqr((((r10*x13454))+(((-1.0)*x13456*x13458))+(((-1.0)*r00*x13457))+((r01*x13455))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x13457))+(((-1.0)*x13455*x13456))+(((-1.0)*r01*x13458))+((r00*x13454))), (((r10*x13454))+(((-1.0)*x13456*x13458))+(((-1.0)*r00*x13457))+((r01*x13455))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13459=IKcos(j4);
IkReal x13460=IKsin(j4);
IkReal x13461=(cj6*sj0);
IkReal x13462=((0.02626)*r10);
IkReal x13463=(r11*sj6);
IkReal x13464=(r11*sj5);
IkReal x13465=(sj0*sj6);
IkReal x13466=(r10*sj5);
IkReal x13467=((0.02626)*r01);
IkReal x13468=(cj5*r12);
IkReal x13469=(cj0*cj6);
IkReal x13470=((1.0)*sj0);
IkReal x13471=(cj5*r02);
IkReal x13472=(cj0*sj6);
IkReal x13473=((1.0)*r10);
IkReal x13474=((1.0)*r01);
IkReal x13475=(r00*sj5);
IkReal x13476=((1.0)*cj0);
IkReal x13477=((0.02626)*r00);
evalcond[0]=(x13460+((r01*x13472))+((sj0*x13463))+(((-1.0)*r00*x13469))+(((-1.0)*x13461*x13473)));
evalcond[1]=(x13459+(((-1.0)*x13465*x13474))+((cj0*x13463))+(((-1.0)*x13469*x13473))+((r00*x13461)));
evalcond[2]=(((r01*sj5*x13469))+((sj0*x13468))+((x13472*x13475))+((x13465*x13466))+(((-1.0)*x13459))+((x13461*x13464))+((cj0*x13471)));
evalcond[3]=(x13460+((x13466*x13472))+((x13464*x13469))+(((-1.0)*sj5*x13461*x13474))+((cj0*x13468))+(((-1.0)*x13465*x13475))+(((-1.0)*x13470*x13471)));
evalcond[4]=((-0.1246)+(((-1.0)*x13465*x13467))+(((-1.0)*py*x13476))+(((-1.0)*x13462*x13469))+(((-0.0718)*x13460))+(((0.02626)*x13459))+((x13461*x13477))+((px*sj0))+(((0.02626)*cj0*x13463)));
evalcond[5]=((0.21226)+(((-1.0)*x13461*x13462))+(((-1.0)*py*x13470))+(((-1.0)*px*x13476))+(((0.02626)*x13460))+(((-1.0)*x13469*x13477))+(((0.0718)*x13459))+(((0.02626)*sj0*x13463))+((x13467*x13472)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13478=(cj5*cj6);
IkReal x13479=((1.0)*sj0);
IkReal x13480=(r21*sj6);
IkReal x13481=(cj0*sj5);
IkReal x13482=((1.0)*r22);
IkReal x13483=(cj6*r20);
IkReal x13484=(cj5*sj6);
IkReal x13485=((1.0)*cj0);
IkReal x13486=((1.0)*sj5);
IkReal x13487=(x13484*x13485);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x13482))+((r21*x13478))+((r20*x13484)));
evalcond[2]=(x13483+(((-1.0)*x13480)));
evalcond[3]=((((-1.0)*r20*sj6*x13486))+(((-1.0)*cj6*r21*x13486))+(((-1.0)*cj5*x13482)));
evalcond[4]=((((-1.0)*r00*x13487))+((r02*x13481))+(((-1.0)*r11*x13478*x13479))+(((-1.0)*r10*x13479*x13484))+((r12*sj0*sj5))+(((-1.0)*r01*x13478*x13485)));
evalcond[5]=((((-1.0)*r10*x13487))+(((-1.0)*r02*sj5*x13479))+(((-1.0)*r11*x13478*x13485))+((r12*x13481))+((r01*sj0*x13478))+((r00*sj0*x13484)));
evalcond[6]=((-0.0001)+(((-0.02626)*x13480))+pz+(((0.02626)*x13483)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13488=(sj0*sj6);
IkReal x13489=(cj6*r10);
IkReal x13490=((1.0)*sj0);
IkReal x13491=(cj6*r00);
IkReal x13492=(cj0*sj6);
if( IKabs(((((-1.0)*x13489*x13490))+((r01*x13492))+((r11*x13488))+(((-1.0)*cj0*x13491)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj0*x13489))+(((-1.0)*x13490*x13491))+(((-1.0)*r11*x13492))+((r01*x13488)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x13489*x13490))+((r01*x13492))+((r11*x13488))+(((-1.0)*cj0*x13491))))+IKsqr((((cj0*x13489))+(((-1.0)*x13490*x13491))+(((-1.0)*r11*x13492))+((r01*x13488))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x13489*x13490))+((r01*x13492))+((r11*x13488))+(((-1.0)*cj0*x13491))), (((cj0*x13489))+(((-1.0)*x13490*x13491))+(((-1.0)*r11*x13492))+((r01*x13488))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13493=IKcos(j4);
IkReal x13494=IKsin(j4);
IkReal x13495=(cj6*sj0);
IkReal x13496=((0.02626)*r10);
IkReal x13497=(r11*sj6);
IkReal x13498=(r11*sj5);
IkReal x13499=(sj0*sj6);
IkReal x13500=(r10*sj5);
IkReal x13501=((0.02626)*r01);
IkReal x13502=(cj5*r12);
IkReal x13503=(cj0*cj6);
IkReal x13504=((1.0)*sj0);
IkReal x13505=(cj5*r02);
IkReal x13506=(cj0*sj6);
IkReal x13507=((1.0)*r10);
IkReal x13508=((1.0)*r01);
IkReal x13509=(r00*sj5);
IkReal x13510=((1.0)*cj0);
IkReal x13511=((0.02626)*r00);
evalcond[0]=(x13493+((cj0*x13497))+(((-1.0)*x13499*x13508))+(((-1.0)*x13503*x13507))+((r00*x13495)));
evalcond[1]=((((-1.0)*x13495*x13507))+(((-1.0)*r00*x13503))+(((-1.0)*x13494))+((sj0*x13497))+((r01*x13506)));
evalcond[2]=(x13493+((r01*sj5*x13503))+((cj0*x13505))+((x13499*x13500))+((x13506*x13509))+((sj0*x13502))+((x13495*x13498)));
evalcond[3]=(x13494+((x13498*x13503))+((cj0*x13502))+(((-1.0)*sj5*x13495*x13508))+((x13500*x13506))+(((-1.0)*x13504*x13505))+(((-1.0)*x13499*x13509)));
evalcond[4]=((-0.1246)+((x13495*x13511))+(((-1.0)*py*x13510))+(((-1.0)*x13499*x13501))+(((-1.0)*x13496*x13503))+(((0.02626)*cj0*x13497))+(((-0.0718)*x13494))+((px*sj0))+(((0.02626)*x13493)));
evalcond[5]=((0.01734)+(((-1.0)*x13495*x13496))+(((-0.02626)*x13494))+(((-1.0)*py*x13504))+(((0.02626)*sj0*x13497))+(((-1.0)*x13503*x13511))+(((-0.0718)*x13493))+((x13501*x13506))+(((-1.0)*px*x13510)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13512=((1.0)*sj5);
IkReal x13513=((1.0)*sj6);
CheckValue<IkReal> x13514=IKPowWithIntegerCheck(cj3,-1);
if(!x13514.valid){
continue;
}
CheckValue<IkReal> x13515=IKPowWithIntegerCheck(sj3,-1);
if(!x13515.valid){
continue;
}
if( IKabs(((x13514.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x13513))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x13513)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13515.value)*(((((-1.0)*cj6*r21*x13512))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x13512)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13514.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x13513))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x13513))))))+IKsqr(((x13515.value)*(((((-1.0)*cj6*r21*x13512))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x13512))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x13514.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x13513))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x13513))))), ((x13515.value)*(((((-1.0)*cj6*r21*x13512))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x13512))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13516=IKcos(j4);
IkReal x13517=IKsin(j4);
IkReal x13518=(cj6*sj0);
IkReal x13519=((0.02626)*r10);
IkReal x13520=(sj0*sj6);
IkReal x13521=(cj5*r12);
IkReal x13522=(r11*sj5);
IkReal x13523=(r10*sj5);
IkReal x13524=((0.02626)*r01);
IkReal x13525=(cj0*sj6);
IkReal x13526=(cj0*cj6);
IkReal x13527=(r21*sj6);
IkReal x13528=((1.0)*cj5);
IkReal x13529=(cj6*r20);
IkReal x13530=((1.0)*r10);
IkReal x13531=((1.0)*r01);
IkReal x13532=(r00*sj5);
IkReal x13533=((1.0)*py);
IkReal x13534=((1.0)*sj5);
IkReal x13535=((0.02626)*r00);
IkReal x13536=((0.02626)*r11);
IkReal x13537=((0.02626)*x13517);
IkReal x13538=(cj3*x13516);
IkReal x13539=(sj3*x13516);
evalcond[0]=(x13529+(((-1.0)*x13527))+((sj3*x13517)));
evalcond[1]=((((-1.0)*r22*x13528))+(((-1.0)*r20*sj6*x13534))+(((-1.0)*x13539))+(((-1.0)*cj6*r21*x13534)));
evalcond[2]=(x13516+(((-1.0)*x13520*x13531))+((r11*x13525))+(((-1.0)*x13526*x13530))+((r00*x13518)));
evalcond[3]=(((r01*x13525))+(((-1.0)*r00*x13526))+((r11*x13520))+((cj3*x13517))+(((-1.0)*x13518*x13530)));
evalcond[4]=((-0.0001)+(((0.0718)*x13539))+((sj3*x13537))+(((0.02626)*x13529))+pz+(((0.09746)*sj3))+(((-0.02626)*x13527)));
evalcond[5]=(((x13520*x13523))+((cj0*cj5*r02))+((x13525*x13532))+((x13518*x13522))+(((-1.0)*x13538))+((sj0*x13521))+((r01*sj5*x13526)));
evalcond[6]=(((x13522*x13526))+x13517+((cj0*x13521))+((x13523*x13525))+(((-1.0)*x13520*x13532))+(((-1.0)*sj5*x13518*x13531))+(((-1.0)*r02*sj0*x13528)));
evalcond[7]=((-0.1246)+((x13525*x13536))+(((-1.0)*x13520*x13524))+((x13518*x13535))+(((0.02626)*x13516))+(((-1.0)*cj0*x13533))+(((-0.0718)*x13517))+((px*sj0))+(((-1.0)*x13519*x13526)));
evalcond[8]=((0.1148)+(((0.0718)*x13538))+((x13520*x13536))+(((-1.0)*x13518*x13519))+((x13524*x13525))+(((-1.0)*x13526*x13535))+(((-1.0)*sj0*x13533))+(((0.09746)*cj3))+((cj3*x13537))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13540=((1.0)*cj6);
CheckValue<IkReal> x13541=IKPowWithIntegerCheck(sj3,-1);
if(!x13541.valid){
continue;
}
if( IKabs(((x13541.value)*((((r21*sj6))+(((-1.0)*r20*x13540)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*sj0*x13540))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13541.value)*((((r21*sj6))+(((-1.0)*r20*x13540))))))+IKsqr(((((-1.0)*r00*sj0*x13540))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x13541.value)*((((r21*sj6))+(((-1.0)*r20*x13540))))), ((((-1.0)*r00*sj0*x13540))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13542=IKcos(j4);
IkReal x13543=IKsin(j4);
IkReal x13544=(cj6*sj0);
IkReal x13545=((0.02626)*r10);
IkReal x13546=(sj0*sj6);
IkReal x13547=(cj5*r12);
IkReal x13548=(r11*sj5);
IkReal x13549=(r10*sj5);
IkReal x13550=((0.02626)*r01);
IkReal x13551=(cj0*sj6);
IkReal x13552=(cj0*cj6);
IkReal x13553=(r21*sj6);
IkReal x13554=((1.0)*cj5);
IkReal x13555=(cj6*r20);
IkReal x13556=((1.0)*r10);
IkReal x13557=((1.0)*r01);
IkReal x13558=(r00*sj5);
IkReal x13559=((1.0)*py);
IkReal x13560=((1.0)*sj5);
IkReal x13561=((0.02626)*r00);
IkReal x13562=((0.02626)*r11);
IkReal x13563=((0.02626)*x13543);
IkReal x13564=(cj3*x13542);
IkReal x13565=(sj3*x13542);
evalcond[0]=(x13555+((sj3*x13543))+(((-1.0)*x13553)));
evalcond[1]=((((-1.0)*cj6*r21*x13560))+(((-1.0)*r20*sj6*x13560))+(((-1.0)*x13565))+(((-1.0)*r22*x13554)));
evalcond[2]=(x13542+((r11*x13551))+((r00*x13544))+(((-1.0)*x13546*x13557))+(((-1.0)*x13552*x13556)));
evalcond[3]=((((-1.0)*x13544*x13556))+((r11*x13546))+((r01*x13551))+((cj3*x13543))+(((-1.0)*r00*x13552)));
evalcond[4]=((-0.0001)+((sj3*x13563))+(((0.02626)*x13555))+(((-0.02626)*x13553))+pz+(((0.0718)*x13565))+(((0.09746)*sj3)));
evalcond[5]=(((sj0*x13547))+((cj0*cj5*r02))+((x13551*x13558))+((r01*sj5*x13552))+((x13544*x13548))+(((-1.0)*x13564))+((x13546*x13549)));
evalcond[6]=((((-1.0)*x13546*x13558))+x13543+(((-1.0)*sj5*x13544*x13557))+(((-1.0)*r02*sj0*x13554))+((cj0*x13547))+((x13548*x13552))+((x13549*x13551)));
evalcond[7]=((-0.1246)+((x13544*x13561))+(((0.02626)*x13542))+(((-1.0)*cj0*x13559))+(((-0.0718)*x13543))+(((-1.0)*x13546*x13550))+(((-1.0)*x13545*x13552))+((px*sj0))+((x13551*x13562)));
evalcond[8]=((0.1148)+(((-1.0)*x13544*x13545))+(((-1.0)*sj0*x13559))+((x13550*x13551))+((x13546*x13562))+((cj3*x13563))+(((-1.0)*x13552*x13561))+(((0.0718)*x13564))+(((0.09746)*cj3))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13566=((1.0)*sj5);
CheckValue<IkReal> x13567=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x13567.valid){
continue;
}
CheckValue<IkReal> x13568 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x13566))+(((-1.0)*r20*sj6*x13566))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x13568.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13567.value)))+(x13568.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13569=IKcos(j4);
IkReal x13570=IKsin(j4);
IkReal x13571=(cj6*sj0);
IkReal x13572=((0.02626)*r10);
IkReal x13573=(sj0*sj6);
IkReal x13574=(cj5*r12);
IkReal x13575=(r11*sj5);
IkReal x13576=(r10*sj5);
IkReal x13577=((0.02626)*r01);
IkReal x13578=(cj0*sj6);
IkReal x13579=(cj0*cj6);
IkReal x13580=(r21*sj6);
IkReal x13581=((1.0)*cj5);
IkReal x13582=(cj6*r20);
IkReal x13583=((1.0)*r10);
IkReal x13584=((1.0)*r01);
IkReal x13585=(r00*sj5);
IkReal x13586=((1.0)*py);
IkReal x13587=((1.0)*sj5);
IkReal x13588=((0.02626)*r00);
IkReal x13589=((0.02626)*r11);
IkReal x13590=((0.02626)*x13570);
IkReal x13591=(cj3*x13569);
IkReal x13592=(sj3*x13569);
evalcond[0]=(x13582+((sj3*x13570))+(((-1.0)*x13580)));
evalcond[1]=((((-1.0)*x13592))+(((-1.0)*r20*sj6*x13587))+(((-1.0)*r22*x13581))+(((-1.0)*cj6*r21*x13587)));
evalcond[2]=(((r00*x13571))+x13569+(((-1.0)*x13579*x13583))+((r11*x13578))+(((-1.0)*x13573*x13584)));
evalcond[3]=((((-1.0)*r00*x13579))+((r11*x13573))+(((-1.0)*x13571*x13583))+((cj3*x13570))+((r01*x13578)));
evalcond[4]=((-0.0001)+(((-0.02626)*x13580))+(((0.02626)*x13582))+(((0.0718)*x13592))+pz+((sj3*x13590))+(((0.09746)*sj3)));
evalcond[5]=(((cj0*cj5*r02))+((sj0*x13574))+(((-1.0)*x13591))+((x13573*x13576))+((x13571*x13575))+((r01*sj5*x13579))+((x13578*x13585)));
evalcond[6]=(x13570+(((-1.0)*x13573*x13585))+((cj0*x13574))+(((-1.0)*r02*sj0*x13581))+(((-1.0)*sj5*x13571*x13584))+((x13575*x13579))+((x13576*x13578)));
evalcond[7]=((-0.1246)+(((-1.0)*cj0*x13586))+(((-1.0)*x13572*x13579))+(((-1.0)*x13573*x13577))+((x13571*x13588))+(((-0.0718)*x13570))+(((0.02626)*x13569))+((px*sj0))+((x13578*x13589)));
evalcond[8]=((0.1148)+(((-1.0)*x13579*x13588))+(((-1.0)*sj0*x13586))+((x13577*x13578))+(((0.0718)*x13591))+(((-1.0)*x13571*x13572))+((cj3*x13590))+((x13573*x13589))+(((0.09746)*cj3))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13593=(cj0*sj5);
IkReal x13594=(cj5*cj6);
IkReal x13595=((1.0)*sj5);
IkReal x13596=((1.0)*cj0);
IkReal x13597=((1.0)*sj0);
IkReal x13598=(cj5*sj6);
IkReal x13599=(r10*x13598);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(cj3+((r21*x13594))+((r20*x13598))+(((-1.0)*r22*x13595)));
evalcond[2]=(sj3+(((-1.0)*x13597*x13599))+(((-1.0)*r00*x13596*x13598))+((r12*sj0*sj5))+(((-1.0)*r11*x13594*x13597))+(((-1.0)*r01*x13594*x13596))+((r02*x13593)));
evalcond[3]=((((-1.0)*x13596*x13599))+((r00*sj0*x13598))+(((-1.0)*r02*sj0*x13595))+(((-1.0)*r11*x13594*x13596))+((r01*sj0*x13594))+((r12*x13593)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x13600=(cj5*cj6);
IkReal x13601=(r11*sj0);
IkReal x13602=(cj6*sj5);
IkReal x13603=((1.0)*cj0);
IkReal x13604=(r10*sj6);
IkReal x13605=(sj0*sj5);
IkReal x13606=(r00*sj6);
IkReal x13607=(cj0*sj5);
IkReal x13608=((0.02626)*cj0);
IkReal x13609=(r01*sj6);
IkReal x13610=((1.0)*sj0);
IkReal x13611=(cj6*r10);
IkReal x13612=(cj5*sj0);
IkReal x13613=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x13600))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x13609))+((sj6*x13601))+(((-1.0)*x13603*x13613))+(((-1.0)*x13610*x13611)));
evalcond[3]=((1.0)+((r12*x13605))+(((-1.0)*cj5*x13603*x13606))+((r02*x13607))+(((-1.0)*r01*x13600*x13603))+(((-1.0)*x13600*x13601))+(((-1.0)*cj5*x13604*x13610)));
evalcond[4]=(((cj0*cj5*r02))+((x13601*x13602))+((x13604*x13605))+((x13606*x13607))+((cj0*r01*x13602))+((r12*x13612)));
evalcond[5]=((((-1.0)*r11*x13600*x13603))+((x13606*x13612))+((r12*x13607))+(((-1.0)*cj5*x13603*x13604))+((r01*sj0*x13600))+(((-1.0)*r02*x13605)));
evalcond[6]=((0.1148)+(((0.02626)*sj6*x13601))+(((-1.0)*x13608*x13613))+(((-0.02626)*sj0*x13611))+(((-1.0)*px*x13603))+(((-1.0)*py*x13610))+((x13608*x13609)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13614=IKcos(j4);
IkReal x13615=IKsin(j4);
IkReal x13616=(cj0*sj6);
IkReal x13617=((0.02626)*cj6);
IkReal x13618=(cj0*r10);
IkReal x13619=((0.02626)*sj6);
IkReal x13620=(r01*sj0);
IkReal x13621=((1.0)*cj5);
IkReal x13622=((1.0)*cj6);
IkReal x13623=((1.0)*sj6);
IkReal x13624=(r00*sj0);
IkReal x13625=((1.0)*x13615);
evalcond[0]=(((cj6*r20))+(((-1.0)*x13625))+(((-1.0)*r21*x13623)));
evalcond[1]=(x13614+(((-1.0)*r20*sj5*x13623))+(((-1.0)*r21*sj5*x13622))+(((-1.0)*r22*x13621)));
evalcond[2]=((-0.09736)+((r20*x13617))+(((-1.0)*r21*x13619))+pz+(((-0.0718)*x13614))+(((-0.02626)*x13615)));
evalcond[3]=((((-1.0)*x13620*x13623))+(((-1.0)*x13614))+((r11*x13616))+(((-1.0)*x13618*x13622))+((cj6*x13624)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*sj5*x13623*x13624))+((r10*sj5*x13616))+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x13621))+(((-1.0)*sj5*x13620*x13622))+(((-1.0)*x13625)));
evalcond[5]=((0.1246)+((x13617*x13624))+(((0.02626)*r11*x13616))+(((0.0718)*x13615))+((px*sj0))+(((-1.0)*x13619*x13620))+(((-1.0)*x13617*x13618))+(((-1.0)*cj0*py))+(((-0.02626)*x13614)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13626=(cj5*cj6);
IkReal x13627=(r11*sj0);
IkReal x13628=(cj6*sj5);
IkReal x13629=((1.0)*cj0);
IkReal x13630=(r10*sj6);
IkReal x13631=(sj0*sj5);
IkReal x13632=(r00*sj6);
IkReal x13633=(cj0*sj5);
IkReal x13634=((0.02626)*cj0);
IkReal x13635=(r01*sj6);
IkReal x13636=((1.0)*sj0);
IkReal x13637=(cj6*r10);
IkReal x13638=(cj5*sj0);
IkReal x13639=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x13626))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x13636*x13637))+((cj0*x13635))+((sj6*x13627))+(((-1.0)*x13629*x13639)));
evalcond[3]=((-1.0)+(((-1.0)*x13626*x13627))+(((-1.0)*cj5*x13629*x13632))+(((-1.0)*r01*x13626*x13629))+((r12*x13631))+((r02*x13633))+(((-1.0)*cj5*x13630*x13636)));
evalcond[4]=(((x13632*x13633))+((x13627*x13628))+((cj0*cj5*r02))+((r12*x13638))+((x13630*x13631))+((cj0*r01*x13628)));
evalcond[5]=(((x13632*x13638))+(((-1.0)*cj5*x13629*x13630))+((r12*x13633))+((r01*sj0*x13626))+(((-1.0)*r02*x13631))+(((-1.0)*r11*x13626*x13629)));
evalcond[6]=((0.1148)+(((-1.0)*x13634*x13639))+(((-1.0)*py*x13636))+(((0.02626)*sj6*x13627))+((x13634*x13635))+(((-1.0)*px*x13629))+(((-0.02626)*sj0*x13637)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13640=IKcos(j4);
IkReal x13641=IKsin(j4);
IkReal x13642=(cj0*sj6);
IkReal x13643=((0.02626)*cj6);
IkReal x13644=(cj0*r10);
IkReal x13645=((0.02626)*sj6);
IkReal x13646=(r01*sj0);
IkReal x13647=((1.0)*cj5);
IkReal x13648=((1.0)*cj6);
IkReal x13649=((1.0)*sj6);
IkReal x13650=(r00*sj0);
IkReal x13651=((1.0)*x13640);
evalcond[0]=(x13641+((cj6*r20))+(((-1.0)*r21*x13649)));
evalcond[1]=((((-1.0)*r21*sj5*x13648))+(((-1.0)*r20*sj5*x13649))+(((-1.0)*r22*x13647))+(((-1.0)*x13651)));
evalcond[2]=((0.09756)+(((0.02626)*x13641))+(((0.0718)*x13640))+((r20*x13643))+pz+(((-1.0)*r21*x13645)));
evalcond[3]=(((r11*x13642))+(((-1.0)*x13646*x13649))+((cj6*x13650))+(((-1.0)*x13644*x13648))+(((-1.0)*x13651)));
evalcond[4]=((((-1.0)*r02*sj0*x13647))+((cj0*cj5*r12))+(((-1.0)*sj5*x13646*x13648))+((r10*sj5*x13642))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x13649*x13650))+(((-1.0)*x13641)));
evalcond[5]=((0.1246)+(((-0.02626)*x13640))+(((-1.0)*x13643*x13644))+((x13643*x13650))+(((0.0718)*x13641))+((px*sj0))+(((0.02626)*r11*x13642))+(((-1.0)*x13645*x13646))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13652=(cj5*cj6);
IkReal x13653=((1.0)*sj0);
IkReal x13654=(r21*sj6);
IkReal x13655=(cj0*sj5);
IkReal x13656=((1.0)*r22);
IkReal x13657=(cj6*r20);
IkReal x13658=(cj5*sj6);
IkReal x13659=((1.0)*cj0);
IkReal x13660=((1.0)*sj5);
IkReal x13661=(x13658*x13659);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x13658))+((r21*x13652))+(((-1.0)*sj5*x13656)));
evalcond[2]=(x13657+(((-1.0)*x13654)));
evalcond[3]=((((-1.0)*cj6*r21*x13660))+(((-1.0)*r20*sj6*x13660))+(((-1.0)*cj5*x13656)));
evalcond[4]=((((-1.0)*r01*x13652*x13659))+((r12*sj0*sj5))+(((-1.0)*r00*x13661))+((r02*x13655))+(((-1.0)*r10*x13653*x13658))+(((-1.0)*r11*x13652*x13653)));
evalcond[5]=(((r12*x13655))+(((-1.0)*r02*sj5*x13653))+((r01*sj0*x13652))+((r00*sj0*x13658))+(((-1.0)*r11*x13652*x13659))+(((-1.0)*r10*x13661)));
evalcond[6]=((0.0001)+pz+(((-0.02626)*x13654))+(((0.02626)*x13657)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13662=(cj0*cj6);
IkReal x13663=(cj6*sj0);
IkReal x13664=(cj0*sj6);
IkReal x13665=((1.0)*sj0*sj6);
if( IKabs((((r00*x13662))+(((-1.0)*r11*x13665))+((r10*x13663))+(((-1.0)*r01*x13664)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r10*x13662))+((r00*x13663))+((r11*x13664))+(((-1.0)*r01*x13665)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x13662))+(((-1.0)*r11*x13665))+((r10*x13663))+(((-1.0)*r01*x13664))))+IKsqr(((((-1.0)*r10*x13662))+((r00*x13663))+((r11*x13664))+(((-1.0)*r01*x13665))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r00*x13662))+(((-1.0)*r11*x13665))+((r10*x13663))+(((-1.0)*r01*x13664))), ((((-1.0)*r10*x13662))+((r00*x13663))+((r11*x13664))+(((-1.0)*r01*x13665))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13666=IKsin(j4);
IkReal x13667=IKcos(j4);
IkReal x13668=(cj6*sj0);
IkReal x13669=((0.02626)*r10);
IkReal x13670=(r11*sj6);
IkReal x13671=(r11*sj5);
IkReal x13672=(sj0*sj6);
IkReal x13673=(r10*sj5);
IkReal x13674=((0.02626)*r01);
IkReal x13675=(cj5*r12);
IkReal x13676=(cj0*cj6);
IkReal x13677=((1.0)*sj0);
IkReal x13678=(cj5*r02);
IkReal x13679=(cj0*sj6);
IkReal x13680=((1.0)*r10);
IkReal x13681=((1.0)*r01);
IkReal x13682=(r00*sj5);
IkReal x13683=((1.0)*cj0);
IkReal x13684=((0.02626)*r00);
IkReal x13685=((1.0)*x13667);
evalcond[0]=(x13666+(((-1.0)*x13668*x13680))+((r01*x13679))+(((-1.0)*r00*x13676))+((sj0*x13670)));
evalcond[1]=((((-1.0)*x13676*x13680))+(((-1.0)*x13672*x13681))+((r00*x13668))+(((-1.0)*x13685))+((cj0*x13670)));
evalcond[2]=(((x13679*x13682))+((r01*sj5*x13676))+((x13668*x13671))+(((-1.0)*x13685))+((sj0*x13675))+((cj0*x13678))+((x13672*x13673)));
evalcond[3]=((((-1.0)*x13677*x13678))+(((-1.0)*sj5*x13668*x13681))+(((-1.0)*x13666))+((x13671*x13676))+((cj0*x13675))+(((-1.0)*x13672*x13682))+((x13673*x13679)));
evalcond[4]=((0.1246)+(((-1.0)*x13669*x13676))+(((0.02626)*cj0*x13670))+(((-0.02626)*x13667))+(((-1.0)*x13672*x13674))+(((-1.0)*py*x13683))+((x13668*x13684))+(((0.0718)*x13666))+((px*sj0)));
evalcond[5]=((0.21226)+(((0.02626)*sj0*x13670))+(((-1.0)*px*x13683))+(((-1.0)*x13668*x13669))+(((-1.0)*x13676*x13684))+(((0.02626)*x13666))+(((-1.0)*py*x13677))+(((0.0718)*x13667))+((x13674*x13679)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13686=(cj5*cj6);
IkReal x13687=((1.0)*sj0);
IkReal x13688=(r21*sj6);
IkReal x13689=(cj0*sj5);
IkReal x13690=((1.0)*r22);
IkReal x13691=(cj6*r20);
IkReal x13692=(cj5*sj6);
IkReal x13693=((1.0)*cj0);
IkReal x13694=((1.0)*sj5);
IkReal x13695=(x13692*x13693);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x13692))+(((-1.0)*sj5*x13690))+((r21*x13686)));
evalcond[2]=(x13691+(((-1.0)*x13688)));
evalcond[3]=((((-1.0)*cj5*x13690))+(((-1.0)*r20*sj6*x13694))+(((-1.0)*cj6*r21*x13694)));
evalcond[4]=(((r02*x13689))+(((-1.0)*r10*x13687*x13692))+((r12*sj0*sj5))+(((-1.0)*r01*x13686*x13693))+(((-1.0)*r00*x13695))+(((-1.0)*r11*x13686*x13687)));
evalcond[5]=(((r12*x13689))+(((-1.0)*r02*sj5*x13687))+(((-1.0)*r11*x13686*x13693))+(((-1.0)*r10*x13695))+((r01*sj0*x13686))+((r00*sj0*x13692)));
evalcond[6]=((0.0001)+(((-0.02626)*x13688))+(((0.02626)*x13691))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13696=(sj0*sj6);
IkReal x13697=(cj0*sj6);
IkReal x13698=(cj6*r00);
IkReal x13699=((1.0)*cj6*r10);
if( IKabs((((r01*x13697))+(((-1.0)*cj0*x13698))+(((-1.0)*sj0*x13699))+((r11*x13696)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x13699))+((sj0*x13698))+(((-1.0)*r01*x13696))+((r11*x13697)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x13697))+(((-1.0)*cj0*x13698))+(((-1.0)*sj0*x13699))+((r11*x13696))))+IKsqr(((((-1.0)*cj0*x13699))+((sj0*x13698))+(((-1.0)*r01*x13696))+((r11*x13697))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x13697))+(((-1.0)*cj0*x13698))+(((-1.0)*sj0*x13699))+((r11*x13696))), ((((-1.0)*cj0*x13699))+((sj0*x13698))+(((-1.0)*r01*x13696))+((r11*x13697))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13700=IKcos(j4);
IkReal x13701=IKsin(j4);
IkReal x13702=(cj6*sj0);
IkReal x13703=((0.02626)*r10);
IkReal x13704=(r11*sj6);
IkReal x13705=(r11*sj5);
IkReal x13706=(sj0*sj6);
IkReal x13707=(r10*sj5);
IkReal x13708=((0.02626)*r01);
IkReal x13709=(cj5*r12);
IkReal x13710=(cj0*cj6);
IkReal x13711=((1.0)*sj0);
IkReal x13712=(cj5*r02);
IkReal x13713=(cj0*sj6);
IkReal x13714=((1.0)*r10);
IkReal x13715=((1.0)*r01);
IkReal x13716=(r00*sj5);
IkReal x13717=((1.0)*cj0);
IkReal x13718=((0.02626)*r00);
IkReal x13719=((1.0)*x13701);
evalcond[0]=((((-1.0)*x13702*x13714))+((sj0*x13704))+(((-1.0)*r00*x13710))+((r01*x13713))+(((-1.0)*x13719)));
evalcond[1]=((((-1.0)*x13700))+((r00*x13702))+(((-1.0)*x13706*x13715))+((cj0*x13704))+(((-1.0)*x13710*x13714)));
evalcond[2]=(((x13702*x13705))+((sj0*x13709))+x13700+((x13706*x13707))+((r01*sj5*x13710))+((x13713*x13716))+((cj0*x13712)));
evalcond[3]=(((x13707*x13713))+((x13705*x13710))+(((-1.0)*x13706*x13716))+(((-1.0)*sj5*x13702*x13715))+((cj0*x13709))+(((-1.0)*x13719))+(((-1.0)*x13711*x13712)));
evalcond[4]=((0.1246)+((x13702*x13718))+(((-1.0)*py*x13717))+(((-1.0)*x13703*x13710))+(((-0.02626)*x13700))+(((-1.0)*x13706*x13708))+(((0.02626)*cj0*x13704))+((px*sj0))+(((0.0718)*x13701)));
evalcond[5]=((0.01734)+(((-1.0)*x13702*x13703))+(((-1.0)*py*x13711))+(((-0.0718)*x13700))+(((-0.02626)*x13701))+((x13708*x13713))+(((0.02626)*sj0*x13704))+(((-1.0)*px*x13717))+(((-1.0)*x13710*x13718)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13720=((1.0)*sj6);
CheckValue<IkReal> x13721=IKPowWithIntegerCheck(cj3,-1);
if(!x13721.valid){
continue;
}
CheckValue<IkReal> x13722=IKPowWithIntegerCheck(sj3,-1);
if(!x13722.valid){
continue;
}
if( IKabs(((x13721.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x13720))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x13720)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13722.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13721.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x13720))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x13720))))))+IKsqr(((x13722.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x13721.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x13720))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x13720))))), ((x13722.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13723=IKsin(j4);
IkReal x13724=IKcos(j4);
IkReal x13725=(cj6*sj0);
IkReal x13726=((0.02626)*r10);
IkReal x13727=(sj0*sj6);
IkReal x13728=(cj5*r12);
IkReal x13729=(r11*sj5);
IkReal x13730=(r10*sj5);
IkReal x13731=(cj0*cj6);
IkReal x13732=((0.02626)*r01);
IkReal x13733=(cj0*sj6);
IkReal x13734=(r21*sj6);
IkReal x13735=((1.0)*cj5);
IkReal x13736=(cj6*r20);
IkReal x13737=((1.0)*r10);
IkReal x13738=((1.0)*r01);
IkReal x13739=(r00*sj5);
IkReal x13740=((1.0)*py);
IkReal x13741=((1.0)*sj5);
IkReal x13742=((0.02626)*r00);
IkReal x13743=((0.02626)*r11);
IkReal x13744=(sj3*x13723);
IkReal x13745=(sj3*x13724);
IkReal x13746=(cj3*x13723);
IkReal x13747=((1.0)*x13724);
evalcond[0]=(x13736+(((-1.0)*x13744))+(((-1.0)*x13734)));
evalcond[1]=((((-1.0)*r22*x13735))+x13745+(((-1.0)*r20*sj6*x13741))+(((-1.0)*cj6*r21*x13741)));
evalcond[2]=((((-1.0)*x13725*x13737))+(((-1.0)*r00*x13731))+x13746+((r11*x13727))+((r01*x13733)));
evalcond[3]=(((r00*x13725))+(((-1.0)*x13727*x13738))+(((-1.0)*x13731*x13737))+((r11*x13733))+(((-1.0)*x13747)));
evalcond[4]=((0.0001)+(((-0.0718)*x13745))+(((-0.02626)*x13744))+(((0.02626)*x13736))+pz+(((-0.09746)*sj3))+(((-0.02626)*x13734)));
evalcond[5]=(((sj0*x13728))+((cj0*cj5*r02))+(((-1.0)*cj3*x13747))+((x13725*x13729))+((x13727*x13730))+((r01*sj5*x13731))+((x13733*x13739)));
evalcond[6]=((((-1.0)*r02*sj0*x13735))+((x13730*x13733))+((x13729*x13731))+((cj0*x13728))+(((-1.0)*sj5*x13725*x13738))+(((-1.0)*x13723))+(((-1.0)*x13727*x13739)));
evalcond[7]=((0.1246)+(((-1.0)*x13727*x13732))+(((-1.0)*x13726*x13731))+(((0.0718)*x13723))+(((-1.0)*cj0*x13740))+((x13725*x13742))+((px*sj0))+(((-0.02626)*x13724))+((x13733*x13743)));
evalcond[8]=((0.1148)+(((-1.0)*sj0*x13740))+(((-1.0)*x13725*x13726))+(((0.0718)*cj3*x13724))+(((-1.0)*x13731*x13742))+((x13727*x13743))+(((0.02626)*x13746))+((x13732*x13733))+(((0.09746)*cj3))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13748=((1.0)*sj6);
CheckValue<IkReal> x13749=IKPowWithIntegerCheck(sj3,-1);
if(!x13749.valid){
continue;
}
if( IKabs(((x13749.value)*(((((-1.0)*r21*x13748))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*sj0*x13748))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13749.value)*(((((-1.0)*r21*x13748))+((cj6*r20))))))+IKsqr(((((-1.0)*r01*sj0*x13748))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x13749.value)*(((((-1.0)*r21*x13748))+((cj6*r20))))), ((((-1.0)*r01*sj0*x13748))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13750=IKsin(j4);
IkReal x13751=IKcos(j4);
IkReal x13752=(cj6*sj0);
IkReal x13753=((0.02626)*r10);
IkReal x13754=(sj0*sj6);
IkReal x13755=(cj5*r12);
IkReal x13756=(r11*sj5);
IkReal x13757=(r10*sj5);
IkReal x13758=(cj0*cj6);
IkReal x13759=((0.02626)*r01);
IkReal x13760=(cj0*sj6);
IkReal x13761=(r21*sj6);
IkReal x13762=((1.0)*cj5);
IkReal x13763=(cj6*r20);
IkReal x13764=((1.0)*r10);
IkReal x13765=((1.0)*r01);
IkReal x13766=(r00*sj5);
IkReal x13767=((1.0)*py);
IkReal x13768=((1.0)*sj5);
IkReal x13769=((0.02626)*r00);
IkReal x13770=((0.02626)*r11);
IkReal x13771=(sj3*x13750);
IkReal x13772=(sj3*x13751);
IkReal x13773=(cj3*x13750);
IkReal x13774=((1.0)*x13751);
evalcond[0]=((((-1.0)*x13771))+(((-1.0)*x13761))+x13763);
evalcond[1]=((((-1.0)*r22*x13762))+x13772+(((-1.0)*r20*sj6*x13768))+(((-1.0)*cj6*r21*x13768)));
evalcond[2]=(((r11*x13754))+(((-1.0)*x13752*x13764))+x13773+((r01*x13760))+(((-1.0)*r00*x13758)));
evalcond[3]=((((-1.0)*x13774))+((r11*x13760))+(((-1.0)*x13758*x13764))+(((-1.0)*x13754*x13765))+((r00*x13752)));
evalcond[4]=((0.0001)+(((-0.02626)*x13761))+(((-0.02626)*x13771))+(((-0.0718)*x13772))+(((0.02626)*x13763))+pz+(((-0.09746)*sj3)));
evalcond[5]=(((x13754*x13757))+((x13760*x13766))+((cj0*cj5*r02))+(((-1.0)*cj3*x13774))+((x13752*x13756))+((r01*sj5*x13758))+((sj0*x13755)));
evalcond[6]=(((x13757*x13760))+(((-1.0)*r02*sj0*x13762))+(((-1.0)*x13750))+(((-1.0)*sj5*x13752*x13765))+((x13756*x13758))+(((-1.0)*x13754*x13766))+((cj0*x13755)));
evalcond[7]=((0.1246)+(((0.0718)*x13750))+(((-1.0)*x13754*x13759))+((x13760*x13770))+(((-0.02626)*x13751))+(((-1.0)*x13753*x13758))+(((-1.0)*cj0*x13767))+((px*sj0))+((x13752*x13769)));
evalcond[8]=((0.1148)+(((-1.0)*x13758*x13769))+(((-1.0)*x13752*x13753))+(((0.02626)*x13773))+((x13754*x13770))+(((0.09746)*cj3))+(((-1.0)*sj0*x13767))+(((0.0718)*cj3*x13751))+((x13759*x13760))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x13775=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x13775.valid){
continue;
}
CheckValue<IkReal> x13776 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x13776.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13775.value)))+(x13776.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13777=IKsin(j4);
IkReal x13778=IKcos(j4);
IkReal x13779=(cj6*sj0);
IkReal x13780=((0.02626)*r10);
IkReal x13781=(sj0*sj6);
IkReal x13782=(cj5*r12);
IkReal x13783=(r11*sj5);
IkReal x13784=(r10*sj5);
IkReal x13785=(cj0*cj6);
IkReal x13786=((0.02626)*r01);
IkReal x13787=(cj0*sj6);
IkReal x13788=(r21*sj6);
IkReal x13789=((1.0)*cj5);
IkReal x13790=(cj6*r20);
IkReal x13791=((1.0)*r10);
IkReal x13792=((1.0)*r01);
IkReal x13793=(r00*sj5);
IkReal x13794=((1.0)*py);
IkReal x13795=((1.0)*sj5);
IkReal x13796=((0.02626)*r00);
IkReal x13797=((0.02626)*r11);
IkReal x13798=(sj3*x13777);
IkReal x13799=(sj3*x13778);
IkReal x13800=(cj3*x13777);
IkReal x13801=((1.0)*x13778);
evalcond[0]=(x13790+(((-1.0)*x13798))+(((-1.0)*x13788)));
evalcond[1]=((((-1.0)*cj6*r21*x13795))+x13799+(((-1.0)*r20*sj6*x13795))+(((-1.0)*r22*x13789)));
evalcond[2]=(((r01*x13787))+x13800+(((-1.0)*x13779*x13791))+((r11*x13781))+(((-1.0)*r00*x13785)));
evalcond[3]=((((-1.0)*x13801))+((r00*x13779))+(((-1.0)*x13781*x13792))+(((-1.0)*x13785*x13791))+((r11*x13787)));
evalcond[4]=((0.0001)+(((-0.0718)*x13799))+(((0.02626)*x13790))+(((-0.02626)*x13798))+(((-0.02626)*x13788))+pz+(((-0.09746)*sj3)));
evalcond[5]=(((x13779*x13783))+((cj0*cj5*r02))+((sj0*x13782))+((r01*sj5*x13785))+(((-1.0)*cj3*x13801))+((x13787*x13793))+((x13781*x13784)));
evalcond[6]=((((-1.0)*x13777))+((cj0*x13782))+((x13784*x13787))+(((-1.0)*x13781*x13793))+((x13783*x13785))+(((-1.0)*sj5*x13779*x13792))+(((-1.0)*r02*sj0*x13789)));
evalcond[7]=((0.1246)+((x13779*x13796))+(((-0.02626)*x13778))+(((-1.0)*x13781*x13786))+(((-1.0)*cj0*x13794))+((px*sj0))+((x13787*x13797))+(((-1.0)*x13780*x13785))+(((0.0718)*x13777)));
evalcond[8]=((0.1148)+(((0.0718)*cj3*x13778))+(((-1.0)*sj0*x13794))+(((-1.0)*x13785*x13796))+(((-1.0)*x13779*x13780))+(((0.09746)*cj3))+((x13781*x13797))+(((0.02626)*x13800))+((x13786*x13787))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13802=(cj5*cj6);
IkReal x13803=(r11*sj0);
IkReal x13804=(cj6*sj5);
IkReal x13805=((1.0)*cj0);
IkReal x13806=(r10*sj6);
IkReal x13807=(sj0*sj5);
IkReal x13808=(r00*sj6);
IkReal x13809=(cj0*sj5);
IkReal x13810=((0.02626)*cj0);
IkReal x13811=(r01*sj6);
IkReal x13812=((1.0)*sj0);
IkReal x13813=(cj6*r10);
IkReal x13814=(cj5*sj0);
IkReal x13815=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959))))));
evalcond[1]=(((r21*x13802))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x13805*x13815))+((sj6*x13803))+((cj0*x13811))+(((-1.0)*x13812*x13813)));
evalcond[3]=((1.0)+((r12*x13807))+(((-1.0)*x13802*x13803))+(((-1.0)*r01*x13802*x13805))+(((-1.0)*cj5*x13806*x13812))+(((-1.0)*cj5*x13805*x13808))+((r02*x13809)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x13814))+((cj0*r01*x13804))+((x13803*x13804))+((x13808*x13809))+((x13806*x13807)));
evalcond[5]=((((-1.0)*r02*x13807))+((r12*x13809))+((x13808*x13814))+((r01*sj0*x13802))+(((-1.0)*r11*x13802*x13805))+(((-1.0)*cj5*x13805*x13806)));
evalcond[6]=((0.1148)+(((-0.02626)*sj0*x13813))+((x13810*x13811))+(((-1.0)*x13810*x13815))+(((-1.0)*py*x13812))+(((-1.0)*px*x13805))+(((0.02626)*sj6*x13803)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13816=(cj6*r21);
IkReal x13817=(r20*sj6);
IkReal x13818=(r21*sj6);
IkReal x13819=(cj1*sj5);
IkReal x13820=(cj5*r22);
IkReal x13821=((1.0)*sj1*sj5);
IkReal x13822=((1.0)*cj6*r20);
if( IKabs((((sj1*x13818))+((cj1*x13820))+((x13816*x13819))+((x13817*x13819))+(((-1.0)*sj1*x13822)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x13818))+(((-1.0)*sj1*x13820))+(((-1.0)*cj1*x13822))+(((-1.0)*x13816*x13821))+(((-1.0)*x13817*x13821)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x13818))+((cj1*x13820))+((x13816*x13819))+((x13817*x13819))+(((-1.0)*sj1*x13822))))+IKsqr((((cj1*x13818))+(((-1.0)*sj1*x13820))+(((-1.0)*cj1*x13822))+(((-1.0)*x13816*x13821))+(((-1.0)*x13817*x13821))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj1*x13818))+((cj1*x13820))+((x13816*x13819))+((x13817*x13819))+(((-1.0)*sj1*x13822))), (((cj1*x13818))+(((-1.0)*sj1*x13820))+(((-1.0)*cj1*x13822))+(((-1.0)*x13816*x13821))+(((-1.0)*x13817*x13821))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13823=IKsin(j4);
IkReal x13824=IKcos(j4);
IkReal x13825=((0.02626)*sj6);
IkReal x13826=(r01*sj0);
IkReal x13827=(cj0*r11);
IkReal x13828=((0.02626)*cj6);
IkReal x13829=(cj0*r10);
IkReal x13830=((1.0)*cj5);
IkReal x13831=((1.0)*sj6);
IkReal x13832=(r00*sj0);
IkReal x13833=((1.0)*cj6);
IkReal x13834=(cj1*x13824);
IkReal x13835=(sj1*x13823);
IkReal x13836=(sj1*x13824);
IkReal x13837=(cj1*x13823);
IkReal x13838=(x13834+x13835);
evalcond[0]=(x13838+(((-1.0)*r21*x13831))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj5*x13831))+x13837+(((-1.0)*r21*sj5*x13833))+(((-1.0)*r22*x13830))+(((-1.0)*x13836)));
evalcond[2]=(((sj6*x13827))+x13836+(((-1.0)*x13829*x13833))+(((-1.0)*x13826*x13831))+((cj6*x13832))+(((-1.0)*x13837)));
evalcond[3]=((((-1.0)*r21*x13825))+(((0.09736)*sj1))+(((-0.0718)*x13837))+(((0.0718)*x13836))+pz+((r20*x13828))+(((0.02626)*x13834))+(((0.02626)*x13835))+(((-0.1246)*cj1)));
evalcond[4]=((((-1.0)*sj5*x13826*x13833))+(((-1.0)*sj5*x13831*x13832))+(((-1.0)*r02*sj0*x13830))+x13838+((cj0*cj5*r12))+((sj5*sj6*x13829))+((cj6*sj5*x13827)));
evalcond[5]=((((-1.0)*x13825*x13826))+(((-0.1246)*sj1))+(((-0.09736)*cj1))+((x13825*x13827))+(((-1.0)*x13828*x13829))+(((-0.0718)*x13835))+(((-0.0718)*x13834))+((px*sj0))+(((0.02626)*x13836))+((x13828*x13832))+(((-0.02626)*x13837))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13839=(cj5*cj6);
IkReal x13840=(r11*sj0);
IkReal x13841=(cj6*sj5);
IkReal x13842=((1.0)*cj0);
IkReal x13843=(r10*sj6);
IkReal x13844=(sj0*sj5);
IkReal x13845=(r00*sj6);
IkReal x13846=(cj0*sj5);
IkReal x13847=((0.02626)*cj0);
IkReal x13848=(r01*sj6);
IkReal x13849=((1.0)*sj0);
IkReal x13850=(cj6*r10);
IkReal x13851=(cj5*sj0);
IkReal x13852=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959))))));
evalcond[1]=(((cj5*r20*sj6))+((r21*x13839))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x13848))+(((-1.0)*x13842*x13852))+((sj6*x13840))+(((-1.0)*x13849*x13850)));
evalcond[3]=((-1.0)+((r12*x13844))+(((-1.0)*cj5*x13842*x13845))+(((-1.0)*r01*x13839*x13842))+(((-1.0)*x13839*x13840))+(((-1.0)*cj5*x13843*x13849))+((r02*x13846)));
evalcond[4]=(((x13840*x13841))+((cj0*cj5*r02))+((cj0*r01*x13841))+((r12*x13851))+((x13843*x13844))+((x13845*x13846)));
evalcond[5]=(((r01*sj0*x13839))+(((-1.0)*r11*x13839*x13842))+((r12*x13846))+(((-1.0)*cj5*x13842*x13843))+((x13845*x13851))+(((-1.0)*r02*x13844)));
evalcond[6]=((0.1148)+(((0.02626)*sj6*x13840))+(((-1.0)*py*x13849))+(((-1.0)*x13847*x13852))+((x13847*x13848))+(((-0.02626)*sj0*x13850))+(((-1.0)*px*x13842)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13853=(cj5*r22);
IkReal x13854=(cj6*r20);
IkReal x13855=(r21*sj1);
IkReal x13856=(cj6*sj5);
IkReal x13857=(cj1*r21);
IkReal x13858=(r20*sj5*sj6);
if( IKabs((((sj1*x13854))+((x13856*x13857))+((cj1*x13858))+((cj1*x13853))+(((-1.0)*sj6*x13855)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x13858))+((sj1*x13853))+(((-1.0)*cj1*x13854))+((sj6*x13857))+((x13855*x13856)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x13854))+((x13856*x13857))+((cj1*x13858))+((cj1*x13853))+(((-1.0)*sj6*x13855))))+IKsqr((((sj1*x13858))+((sj1*x13853))+(((-1.0)*cj1*x13854))+((sj6*x13857))+((x13855*x13856))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj1*x13854))+((x13856*x13857))+((cj1*x13858))+((cj1*x13853))+(((-1.0)*sj6*x13855))), (((sj1*x13858))+((sj1*x13853))+(((-1.0)*cj1*x13854))+((sj6*x13857))+((x13855*x13856))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13859=IKcos(j4);
IkReal x13860=IKsin(j4);
IkReal x13861=((0.02626)*sj6);
IkReal x13862=(r01*sj0);
IkReal x13863=(cj0*sj6);
IkReal x13864=((0.02626)*cj6);
IkReal x13865=(cj0*r10);
IkReal x13866=((1.0)*cj5);
IkReal x13867=((1.0)*sj6);
IkReal x13868=(r00*sj0);
IkReal x13869=((1.0)*cj6);
IkReal x13870=(cj0*r11);
IkReal x13871=(sj1*x13859);
IkReal x13872=(cj1*x13860);
IkReal x13873=(cj1*x13859);
IkReal x13874=(sj1*x13860);
IkReal x13875=(x13872+x13871);
evalcond[0]=(x13873+(((-1.0)*x13874))+((cj6*r20))+(((-1.0)*r21*x13867)));
evalcond[1]=((((-1.0)*r20*sj5*x13867))+x13875+(((-1.0)*r22*x13866))+(((-1.0)*r21*sj5*x13869)));
evalcond[2]=(((cj6*x13868))+(((-1.0)*x13862*x13867))+x13875+((r11*x13863))+(((-1.0)*x13865*x13869)));
evalcond[3]=((((0.02626)*x13873))+(((-0.09756)*sj1))+((r20*x13864))+pz+(((-0.0718)*x13872))+(((-0.0718)*x13871))+(((-1.0)*r21*x13861))+(((-0.1246)*cj1))+(((-0.02626)*x13874)));
evalcond[4]=(x13874+((cj0*cj5*r12))+(((-1.0)*x13873))+(((-1.0)*sj5*x13862*x13869))+((cj6*sj5*x13870))+((r10*sj5*x13863))+(((-1.0)*sj5*x13867*x13868))+(((-1.0)*r02*sj0*x13866)));
evalcond[5]=((((0.02626)*x13871))+(((0.02626)*x13872))+(((-0.1246)*sj1))+(((0.0718)*x13873))+(((-1.0)*x13864*x13865))+(((0.09756)*cj1))+(((-1.0)*x13861*x13862))+((x13861*x13870))+(((-0.0718)*x13874))+((px*sj0))+((x13864*x13868))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13876=(cj0*sj5);
IkReal x13877=(cj5*cj6);
IkReal x13878=((1.0)*sj5);
IkReal x13879=((1.0)*cj0);
IkReal x13880=((1.0)*sj0);
IkReal x13881=(cj5*sj6);
IkReal x13882=(r10*x13881);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=(((r21*x13877))+(((-1.0)*r22*x13878))+((r20*x13881))+(((-1.0)*cj2)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r01*x13877*x13879))+(((-1.0)*r11*x13877*x13880))+((r12*sj0*sj5))+(((-1.0)*x13880*x13882))+((r02*x13876))+(((-1.0)*r00*x13879*x13881)));
evalcond[3]=((((-1.0)*x13879*x13882))+((r01*sj0*x13877))+((r00*sj0*x13881))+((r12*x13876))+(((-1.0)*r11*x13877*x13879))+(((-1.0)*r02*sj0*x13878)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
IkReal x13883=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x13883))+(((-1.0)*r20*sj5*sj6)))))+(IKabs((((cj6*r20))+(((-1.0)*sj6*x13883))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x13884=(cj5*cj6);
IkReal x13885=((1.0)*sj0);
IkReal x13886=(r21*sj6);
IkReal x13887=(cj0*sj5);
IkReal x13888=((1.0)*r22);
IkReal x13889=(cj6*r20);
IkReal x13890=(cj5*sj6);
IkReal x13891=((1.0)*cj0);
IkReal x13892=((1.0)*sj5);
IkReal x13893=(x13890*x13891);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x13888))+((r20*x13890))+((r21*x13884)));
evalcond[2]=(x13889+(((-1.0)*x13886)));
evalcond[3]=((((-1.0)*r20*sj6*x13892))+(((-1.0)*cj5*x13888))+(((-1.0)*cj6*r21*x13892)));
evalcond[4]=((((-1.0)*r01*x13884*x13891))+(((-1.0)*r00*x13893))+((r02*x13887))+((r12*sj0*sj5))+(((-1.0)*r10*x13885*x13890))+(((-1.0)*r11*x13884*x13885)));
evalcond[5]=((((-1.0)*r02*sj5*x13885))+((r00*sj0*x13890))+((r12*x13887))+(((-1.0)*r11*x13884*x13891))+(((-1.0)*r10*x13893))+((r01*sj0*x13884)));
evalcond[6]=((-0.2413)+(((0.02626)*x13889))+pz+(((-0.02626)*x13886)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13894=(cj0*cj6);
IkReal x13895=(cj6*sj0);
IkReal x13896=(cj0*sj6);
IkReal x13897=((1.0)*sj0*sj6);
if( IKabs(((((-1.0)*r01*x13897))+(((-1.0)*r10*x13894))+((r00*x13895))+((r11*x13896)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x13895))+((r00*x13894))+(((-1.0)*r01*x13896))+(((-1.0)*r11*x13897)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x13897))+(((-1.0)*r10*x13894))+((r00*x13895))+((r11*x13896))))+IKsqr((((r10*x13895))+((r00*x13894))+(((-1.0)*r01*x13896))+(((-1.0)*r11*x13897))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*x13897))+(((-1.0)*r10*x13894))+((r00*x13895))+((r11*x13896))), (((r10*x13895))+((r00*x13894))+(((-1.0)*r01*x13896))+(((-1.0)*r11*x13897))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13898=IKsin(j4);
IkReal x13899=IKcos(j4);
IkReal x13900=(cj6*sj0);
IkReal x13901=((0.02626)*r10);
IkReal x13902=(r11*sj6);
IkReal x13903=(r11*sj5);
IkReal x13904=(sj0*sj6);
IkReal x13905=(r10*sj5);
IkReal x13906=((0.02626)*r01);
IkReal x13907=(cj5*r12);
IkReal x13908=(cj0*cj6);
IkReal x13909=((1.0)*sj0);
IkReal x13910=(cj5*r02);
IkReal x13911=(cj0*sj6);
IkReal x13912=((1.0)*r10);
IkReal x13913=((1.0)*r01);
IkReal x13914=(r00*sj5);
IkReal x13915=((1.0)*cj0);
IkReal x13916=((0.02626)*r00);
evalcond[0]=((((-1.0)*x13900*x13912))+x13899+(((-1.0)*r00*x13908))+((r01*x13911))+((sj0*x13902)));
evalcond[1]=(((cj0*x13902))+(((-1.0)*x13904*x13913))+(((-1.0)*x13908*x13912))+((r00*x13900))+(((-1.0)*x13898)));
evalcond[2]=(x13898+((cj0*x13910))+((x13900*x13903))+((x13904*x13905))+((r01*sj5*x13908))+((sj0*x13907))+((x13911*x13914)));
evalcond[3]=((((-1.0)*x13909*x13910))+x13899+((cj0*x13907))+((x13903*x13908))+(((-1.0)*sj5*x13900*x13913))+(((-1.0)*x13904*x13914))+((x13905*x13911)));
evalcond[4]=((-0.09736)+(((-1.0)*py*x13915))+(((-1.0)*x13901*x13908))+((x13900*x13916))+(((-1.0)*x13904*x13906))+(((-0.02626)*x13898))+((px*sj0))+(((0.02626)*cj0*x13902))+(((-0.0718)*x13899)));
evalcond[5]=((-0.0001)+(((-1.0)*py*x13909))+((x13906*x13911))+(((0.02626)*x13899))+(((-1.0)*x13908*x13916))+(((0.02626)*sj0*x13902))+(((-0.0718)*x13898))+(((-1.0)*px*x13915))+(((-1.0)*x13900*x13901)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13917=(cj5*cj6);
IkReal x13918=(r11*sj0);
IkReal x13919=(cj6*sj5);
IkReal x13920=((1.0)*cj0);
IkReal x13921=(r10*sj6);
IkReal x13922=(sj0*sj5);
IkReal x13923=(r00*sj6);
IkReal x13924=(cj0*sj5);
IkReal x13925=((0.02626)*cj0);
IkReal x13926=(r01*sj6);
IkReal x13927=((1.0)*sj0);
IkReal x13928=(cj6*r10);
IkReal x13929=(cj5*sj0);
IkReal x13930=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x13917)));
evalcond[2]=((((-1.0)*x13927*x13928))+((cj0*x13926))+((sj6*x13918))+(((-1.0)*x13920*x13930)));
evalcond[3]=((-1.0)+(((-1.0)*cj5*x13920*x13923))+(((-1.0)*cj5*x13921*x13927))+((r02*x13924))+(((-1.0)*x13917*x13918))+((r12*x13922))+(((-1.0)*r01*x13917*x13920)));
evalcond[4]=(((cj0*cj5*r02))+((x13923*x13924))+((x13921*x13922))+((x13918*x13919))+((cj0*r01*x13919))+((r12*x13929)));
evalcond[5]=(((x13923*x13929))+(((-1.0)*r11*x13917*x13920))+((r01*sj0*x13917))+(((-1.0)*cj5*x13920*x13921))+((r12*x13924))+(((-1.0)*r02*x13922)));
evalcond[6]=((-0.1168)+(((-0.02626)*sj0*x13928))+(((-1.0)*py*x13927))+((x13925*x13926))+(((0.02626)*sj6*x13918))+(((-1.0)*px*x13920))+(((-1.0)*x13925*x13930)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13931=IKsin(j4);
IkReal x13932=IKcos(j4);
IkReal x13933=(cj0*sj6);
IkReal x13934=((0.02626)*sj6);
IkReal x13935=(r01*sj0);
IkReal x13936=((0.02626)*cj6);
IkReal x13937=(cj0*r10);
IkReal x13938=((1.0)*cj5);
IkReal x13939=((1.0)*cj6);
IkReal x13940=((1.0)*sj6);
IkReal x13941=(r00*sj0);
IkReal x13942=((1.0)*x13931);
evalcond[0]=((((-1.0)*r21*x13940))+((cj6*r20))+(((-1.0)*x13932)));
evalcond[1]=((((-1.0)*x13942))+(((-1.0)*r22*x13938))+(((-1.0)*r21*sj5*x13939))+(((-1.0)*r20*sj5*x13940)));
evalcond[2]=((-0.1264)+(((0.0718)*x13931))+((r20*x13936))+(((-1.0)*r21*x13934))+(((-0.02626)*x13932))+pz);
evalcond[3]=((((-1.0)*x13935*x13940))+((r11*x13933))+(((-1.0)*x13937*x13939))+(((-1.0)*x13942))+((cj6*x13941)));
evalcond[4]=((((-1.0)*r02*sj0*x13938))+(((-1.0)*sj5*x13940*x13941))+(((-1.0)*sj5*x13935*x13939))+((cj0*cj5*r12))+x13932+((cj0*cj6*r11*sj5))+((r10*sj5*x13933)));
evalcond[5]=((-0.09736)+(((-1.0)*x13936*x13937))+(((-1.0)*x13934*x13935))+((x13936*x13941))+(((-0.02626)*x13931))+(((0.02626)*r11*x13933))+(((-0.0718)*x13932))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13943=(cj5*cj6);
IkReal x13944=(r11*sj0);
IkReal x13945=(cj6*sj5);
IkReal x13946=((1.0)*cj0);
IkReal x13947=(r10*sj6);
IkReal x13948=(sj0*sj5);
IkReal x13949=(r00*sj6);
IkReal x13950=(cj0*sj5);
IkReal x13951=((0.02626)*cj0);
IkReal x13952=(r01*sj6);
IkReal x13953=((1.0)*sj0);
IkReal x13954=(cj6*r10);
IkReal x13955=(cj5*sj0);
IkReal x13956=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x13943)));
evalcond[2]=((((-1.0)*x13946*x13956))+((sj6*x13944))+(((-1.0)*x13953*x13954))+((cj0*x13952)));
evalcond[3]=((1.0)+((r02*x13950))+(((-1.0)*r01*x13943*x13946))+((r12*x13948))+(((-1.0)*cj5*x13947*x13953))+(((-1.0)*x13943*x13944))+(((-1.0)*cj5*x13946*x13949)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x13955))+((x13944*x13945))+((cj0*r01*x13945))+((x13947*x13948))+((x13949*x13950)));
evalcond[5]=(((r01*sj0*x13943))+((r12*x13950))+(((-1.0)*r11*x13943*x13946))+(((-1.0)*cj5*x13946*x13947))+((x13949*x13955))+(((-1.0)*r02*x13948)));
evalcond[6]=((0.1148)+(((-1.0)*px*x13946))+((x13951*x13952))+(((-1.0)*py*x13953))+(((-0.02626)*sj0*x13954))+(((0.02626)*sj6*x13944))+(((-1.0)*x13951*x13956)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x13957=IKcos(j4);
IkReal x13958=IKsin(j4);
IkReal x13959=(cj0*sj6);
IkReal x13960=((0.02626)*sj6);
IkReal x13961=(r01*sj0);
IkReal x13962=((0.02626)*cj6);
IkReal x13963=(cj0*r10);
IkReal x13964=((1.0)*cj5);
IkReal x13965=((1.0)*cj6);
IkReal x13966=((1.0)*sj6);
IkReal x13967=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x13966))+x13957+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj5*x13966))+(((-1.0)*r22*x13964))+x13958+(((-1.0)*r21*sj5*x13965)));
evalcond[2]=((-0.1246)+(((-1.0)*r21*x13960))+(((0.02626)*x13957))+((r20*x13962))+pz+(((-0.0718)*x13958)));
evalcond[3]=(((r11*x13959))+(((-1.0)*x13963*x13965))+((cj6*x13967))+(((-1.0)*x13958))+(((-1.0)*x13961*x13966)));
evalcond[4]=(((r10*sj5*x13959))+(((-1.0)*sj5*x13966*x13967))+((cj0*cj5*r12))+x13957+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x13961*x13965))+(((-1.0)*r02*sj0*x13964)));
evalcond[5]=((-0.09736)+(((0.02626)*r11*x13959))+((x13962*x13967))+(((-0.02626)*x13958))+(((-1.0)*x13960*x13961))+(((-0.0718)*x13957))+((px*sj0))+(((-1.0)*x13962*x13963))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13968=((1.0)*sj5);
IkReal x13969=((1.0)*sj6);
CheckValue<IkReal> x13970=IKPowWithIntegerCheck(sj2,-1);
if(!x13970.valid){
continue;
}
CheckValue<IkReal> x13971=IKPowWithIntegerCheck(cj2,-1);
if(!x13971.valid){
continue;
}
if( IKabs(((x13970.value)*(((((-1.0)*cj6*r21*x13968))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x13968)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13971.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x13969))+(((-1.0)*r11*sj0*x13969))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13970.value)*(((((-1.0)*cj6*r21*x13968))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x13968))))))+IKsqr(((x13971.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x13969))+(((-1.0)*r11*sj0*x13969))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x13970.value)*(((((-1.0)*cj6*r21*x13968))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x13968))))), ((x13971.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x13969))+(((-1.0)*r11*sj0*x13969))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13972=IKcos(j4);
IkReal x13973=IKsin(j4);
IkReal x13974=(sj0*sj6);
IkReal x13975=((0.02626)*r01);
IkReal x13976=(cj5*r12);
IkReal x13977=(cj6*sj0);
IkReal x13978=(r11*sj5);
IkReal x13979=(r10*sj5);
IkReal x13980=(cj0*sj6);
IkReal x13981=((1.0)*cj5);
IkReal x13982=((0.02626)*cj6);
IkReal x13983=(r21*sj6);
IkReal x13984=((1.0)*r01);
IkReal x13985=(r00*sj5);
IkReal x13986=((1.0)*py);
IkReal x13987=((1.0)*sj5);
IkReal x13988=((1.0)*cj0);
IkReal x13989=((0.02626)*r11);
IkReal x13990=(cj0*cj6);
IkReal x13991=(r10*x13990);
IkReal x13992=(cj2*x13973);
IkReal x13993=(cj2*x13972);
IkReal x13994=((1.0)*x13973);
IkReal x13995=(sj2*x13972);
evalcond[0]=(((cj6*r20))+(((-1.0)*x13983))+(((-1.0)*x13995)));
evalcond[1]=((((-1.0)*r20*sj6*x13987))+(((-1.0)*sj2*x13994))+(((-1.0)*r22*x13981))+(((-1.0)*cj6*r21*x13987)));
evalcond[2]=(((r01*x13980))+(((-1.0)*r10*x13977))+x13993+((r11*x13974))+(((-1.0)*cj6*r00*x13988)));
evalcond[3]=(((r11*x13980))+(((-1.0)*x13974*x13984))+(((-1.0)*cj6*r10*x13988))+((r00*x13977))+(((-1.0)*x13994)));
evalcond[4]=((-0.1255)+((r20*x13982))+(((-0.1158)*cj2))+(((-0.02626)*x13983))+(((-0.02626)*x13995))+(((0.0718)*sj2*x13973))+(((-0.0009)*sj2))+pz);
evalcond[5]=(((cj0*cj5*r02))+x13992+((x13980*x13985))+((x13974*x13979))+((r01*sj5*x13990))+((x13977*x13978))+((sj0*x13976)));
evalcond[6]=((((-1.0)*sj5*x13977*x13984))+(((-1.0)*x13974*x13985))+((x13978*x13990))+x13972+((cj0*x13976))+(((-1.0)*r02*sj0*x13981))+((x13979*x13980)));
evalcond[7]=((-0.09736)+(((-0.0718)*x13972))+(((-0.02626)*x13973))+(((-1.0)*cj0*r10*x13982))+((x13980*x13989))+(((-1.0)*x13974*x13975))+((px*sj0))+(((-1.0)*cj0*x13986))+(((0.02626)*r00*x13977)));
evalcond[8]=((-0.001)+(((-1.0)*cj0*r00*x13982))+((x13975*x13980))+(((-1.0)*sj0*x13986))+(((-0.1158)*sj2))+((x13974*x13989))+(((-1.0)*px*x13988))+(((-0.02626)*r10*x13977))+(((0.0009)*cj2))+(((0.02626)*x13993))+(((-0.0718)*x13992)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x13996=((1.0)*sj6);
CheckValue<IkReal> x13997=IKPowWithIntegerCheck(sj2,-1);
if(!x13997.valid){
continue;
}
if( IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x13996)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13997.value)*(((((-1.0)*r21*x13996))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x13996))))+IKsqr(((x13997.value)*(((((-1.0)*r21*x13996))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))+(((-1.0)*r01*sj0*x13996))), ((x13997.value)*(((((-1.0)*r21*x13996))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x13998=IKcos(j4);
IkReal x13999=IKsin(j4);
IkReal x14000=(sj0*sj6);
IkReal x14001=((0.02626)*r01);
IkReal x14002=(cj5*r12);
IkReal x14003=(cj6*sj0);
IkReal x14004=(r11*sj5);
IkReal x14005=(r10*sj5);
IkReal x14006=(cj0*sj6);
IkReal x14007=((1.0)*cj5);
IkReal x14008=((0.02626)*cj6);
IkReal x14009=(r21*sj6);
IkReal x14010=((1.0)*r01);
IkReal x14011=(r00*sj5);
IkReal x14012=((1.0)*py);
IkReal x14013=((1.0)*sj5);
IkReal x14014=((1.0)*cj0);
IkReal x14015=((0.02626)*r11);
IkReal x14016=(cj0*cj6);
IkReal x14017=(r10*x14016);
IkReal x14018=(cj2*x13999);
IkReal x14019=(cj2*x13998);
IkReal x14020=((1.0)*x13999);
IkReal x14021=(sj2*x13998);
evalcond[0]=((((-1.0)*x14021))+((cj6*r20))+(((-1.0)*x14009)));
evalcond[1]=((((-1.0)*cj6*r21*x14013))+(((-1.0)*r20*sj6*x14013))+(((-1.0)*sj2*x14020))+(((-1.0)*r22*x14007)));
evalcond[2]=((((-1.0)*r10*x14003))+(((-1.0)*cj6*r00*x14014))+((r11*x14000))+((r01*x14006))+x14019);
evalcond[3]=((((-1.0)*x14000*x14010))+(((-1.0)*cj6*r10*x14014))+((r11*x14006))+(((-1.0)*x14020))+((r00*x14003)));
evalcond[4]=((-0.1255)+(((0.0718)*sj2*x13999))+(((-0.1158)*cj2))+(((-0.02626)*x14009))+(((-0.0009)*sj2))+pz+((r20*x14008))+(((-0.02626)*x14021)));
evalcond[5]=(((x14006*x14011))+((cj0*cj5*r02))+((x14000*x14005))+((x14003*x14004))+((r01*sj5*x14016))+x14018+((sj0*x14002)));
evalcond[6]=((((-1.0)*sj5*x14003*x14010))+(((-1.0)*x14000*x14011))+x13998+(((-1.0)*r02*sj0*x14007))+((cj0*x14002))+((x14004*x14016))+((x14005*x14006)));
evalcond[7]=((-0.09736)+(((-1.0)*x14000*x14001))+(((-1.0)*cj0*x14012))+((x14006*x14015))+(((-0.02626)*x13999))+(((-1.0)*cj0*r10*x14008))+((px*sj0))+(((0.02626)*r00*x14003))+(((-0.0718)*x13998)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((0.02626)*x14019))+(((-1.0)*cj0*r00*x14008))+(((-0.0718)*x14018))+((x14000*x14015))+(((0.0009)*cj2))+(((-1.0)*sj0*x14012))+((x14001*x14006))+(((-0.02626)*r10*x14003))+(((-1.0)*px*x14014)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14022=((1.0)*r21);
CheckValue<IkReal> x14023=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x14023.valid){
continue;
}
CheckValue<IkReal> x14024 = IKatan2WithCheck(IkReal(((((-1.0)*cj5*r22))+(((-1.0)*cj6*sj5*x14022))+(((-1.0)*r20*sj5*sj6)))),(((cj6*r20))+(((-1.0)*sj6*x14022))),IKFAST_ATAN2_MAGTHRESH);
if(!x14024.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14023.value)))+(x14024.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14025=IKcos(j4);
IkReal x14026=IKsin(j4);
IkReal x14027=(sj0*sj6);
IkReal x14028=((0.02626)*r01);
IkReal x14029=(cj5*r12);
IkReal x14030=(cj6*sj0);
IkReal x14031=(r11*sj5);
IkReal x14032=(r10*sj5);
IkReal x14033=(cj0*sj6);
IkReal x14034=((1.0)*cj5);
IkReal x14035=((0.02626)*cj6);
IkReal x14036=(r21*sj6);
IkReal x14037=((1.0)*r01);
IkReal x14038=(r00*sj5);
IkReal x14039=((1.0)*py);
IkReal x14040=((1.0)*sj5);
IkReal x14041=((1.0)*cj0);
IkReal x14042=((0.02626)*r11);
IkReal x14043=(cj0*cj6);
IkReal x14044=(r10*x14043);
IkReal x14045=(cj2*x14026);
IkReal x14046=(cj2*x14025);
IkReal x14047=((1.0)*x14026);
IkReal x14048=(sj2*x14025);
evalcond[0]=((((-1.0)*x14048))+(((-1.0)*x14036))+((cj6*r20)));
evalcond[1]=((((-1.0)*cj6*r21*x14040))+(((-1.0)*r22*x14034))+(((-1.0)*r20*sj6*x14040))+(((-1.0)*sj2*x14047)));
evalcond[2]=(((r01*x14033))+((r11*x14027))+x14046+(((-1.0)*r10*x14030))+(((-1.0)*cj6*r00*x14041)));
evalcond[3]=(((r11*x14033))+((r00*x14030))+(((-1.0)*x14047))+(((-1.0)*cj6*r10*x14041))+(((-1.0)*x14027*x14037)));
evalcond[4]=((-0.1255)+(((0.0718)*sj2*x14026))+(((-0.1158)*cj2))+((r20*x14035))+(((-0.0009)*sj2))+pz+(((-0.02626)*x14036))+(((-0.02626)*x14048)));
evalcond[5]=(((cj0*cj5*r02))+((x14030*x14031))+((r01*sj5*x14043))+((x14027*x14032))+((sj0*x14029))+((x14033*x14038))+x14045);
evalcond[6]=((((-1.0)*x14027*x14038))+(((-1.0)*r02*sj0*x14034))+((x14031*x14043))+(((-1.0)*sj5*x14030*x14037))+((x14032*x14033))+x14025+((cj0*x14029)));
evalcond[7]=((-0.09736)+(((-1.0)*cj0*r10*x14035))+(((0.02626)*r00*x14030))+((x14033*x14042))+(((-1.0)*cj0*x14039))+((px*sj0))+(((-0.02626)*x14026))+(((-1.0)*x14027*x14028))+(((-0.0718)*x14025)));
evalcond[8]=((-0.001)+(((-1.0)*cj0*r00*x14035))+(((-0.1158)*sj2))+((x14027*x14042))+(((-1.0)*px*x14041))+(((0.0009)*cj2))+(((-0.02626)*r10*x14030))+((x14028*x14033))+(((0.02626)*x14046))+(((-0.0718)*x14045))+(((-1.0)*sj0*x14039)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14049=(cj0*sj5);
IkReal x14050=(cj5*cj6);
IkReal x14051=((1.0)*sj5);
IkReal x14052=((1.0)*cj0);
IkReal x14053=((1.0)*sj0);
IkReal x14054=(cj5*sj6);
IkReal x14055=(r10*x14054);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x14054))+cj2+(((-1.0)*r22*x14051))+((r21*x14050)));
evalcond[2]=((((-1.0)*r00*x14052*x14054))+sj2+(((-1.0)*x14053*x14055))+((r12*sj0*sj5))+(((-1.0)*r11*x14050*x14053))+(((-1.0)*r01*x14050*x14052))+((r02*x14049)));
evalcond[3]=((((-1.0)*r11*x14050*x14052))+(((-1.0)*x14052*x14055))+(((-1.0)*r02*sj0*x14051))+((r01*sj0*x14050))+((r12*x14049))+((r00*sj0*x14054)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
IkReal x14056=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*sj5*x14056))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))))+(IKabs((((cj6*r20))+(((-1.0)*sj6*x14056))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x14057=(cj5*cj6);
IkReal x14058=((1.0)*sj0);
IkReal x14059=(r21*sj6);
IkReal x14060=(cj0*sj5);
IkReal x14061=((1.0)*r22);
IkReal x14062=(cj6*r20);
IkReal x14063=(cj5*sj6);
IkReal x14064=((1.0)*cj0);
IkReal x14065=((1.0)*sj5);
IkReal x14066=(x14063*x14064);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x14061))+((r20*x14063))+((r21*x14057)));
evalcond[2]=((((-1.0)*x14059))+x14062);
evalcond[3]=((((-1.0)*cj5*x14061))+(((-1.0)*cj6*r21*x14065))+(((-1.0)*r20*sj6*x14065)));
evalcond[4]=(((r02*x14060))+(((-1.0)*r00*x14066))+(((-1.0)*r01*x14057*x14064))+((r12*sj0*sj5))+(((-1.0)*r11*x14057*x14058))+(((-1.0)*r10*x14058*x14063)));
evalcond[5]=((((-1.0)*r11*x14057*x14064))+(((-1.0)*r02*sj5*x14058))+((r00*sj0*x14063))+((r12*x14060))+(((-1.0)*r10*x14066))+((r01*sj0*x14057)));
evalcond[6]=((-0.2413)+pz+(((-0.02626)*x14059))+(((0.02626)*x14062)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14067=(cj0*cj6);
IkReal x14068=(sj0*sj6);
IkReal x14069=((1.0)*r11);
IkReal x14070=(cj6*sj0);
IkReal x14071=(cj0*sj6);
if( IKabs((((r01*x14068))+((r10*x14067))+(((-1.0)*r00*x14070))+(((-1.0)*x14069*x14071)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x14067))+(((-1.0)*r01*x14071))+((r10*x14070))+(((-1.0)*x14068*x14069)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x14068))+((r10*x14067))+(((-1.0)*r00*x14070))+(((-1.0)*x14069*x14071))))+IKsqr((((r00*x14067))+(((-1.0)*r01*x14071))+((r10*x14070))+(((-1.0)*x14068*x14069))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x14068))+((r10*x14067))+(((-1.0)*r00*x14070))+(((-1.0)*x14069*x14071))), (((r00*x14067))+(((-1.0)*r01*x14071))+((r10*x14070))+(((-1.0)*x14068*x14069))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14072=IKsin(j4);
IkReal x14073=IKcos(j4);
IkReal x14074=(cj6*sj0);
IkReal x14075=((0.02626)*r10);
IkReal x14076=(r11*sj6);
IkReal x14077=(r11*sj5);
IkReal x14078=(sj0*sj6);
IkReal x14079=(r10*sj5);
IkReal x14080=(cj0*cj6);
IkReal x14081=((0.02626)*r01);
IkReal x14082=(cj5*r12);
IkReal x14083=((1.0)*sj0);
IkReal x14084=(cj5*r02);
IkReal x14085=(cj0*sj6);
IkReal x14086=((1.0)*r10);
IkReal x14087=((1.0)*r01);
IkReal x14088=(r00*sj5);
IkReal x14089=((1.0)*cj0);
IkReal x14090=((0.02626)*r00);
evalcond[0]=((((-1.0)*x14074*x14086))+((r01*x14085))+((sj0*x14076))+(((-1.0)*r00*x14080))+x14073);
evalcond[1]=((((-1.0)*x14078*x14087))+(((-1.0)*x14080*x14086))+((cj0*x14076))+((r00*x14074))+x14072);
evalcond[2]=(((sj0*x14082))+((x14074*x14077))+((cj0*x14084))+((r01*sj5*x14080))+x14072+((x14078*x14079))+((x14085*x14088)));
evalcond[3]=((((-1.0)*sj5*x14074*x14087))+((x14077*x14080))+((cj0*x14082))+((x14079*x14085))+(((-1.0)*x14073))+(((-1.0)*x14078*x14088))+(((-1.0)*x14083*x14084)));
evalcond[4]=((0.09756)+(((-1.0)*x14075*x14080))+(((0.02626)*cj0*x14076))+(((-1.0)*x14078*x14081))+(((-1.0)*py*x14089))+(((0.0718)*x14073))+((px*sj0))+((x14074*x14090))+(((0.02626)*x14072)));
evalcond[5]=((-0.0001)+(((-1.0)*px*x14089))+((x14081*x14085))+(((-0.0718)*x14072))+(((-1.0)*py*x14083))+(((-1.0)*x14074*x14075))+(((-1.0)*x14080*x14090))+(((0.02626)*sj0*x14076))+(((0.02626)*x14073)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14091=(cj5*cj6);
IkReal x14092=(r11*sj0);
IkReal x14093=(cj6*sj5);
IkReal x14094=((1.0)*cj0);
IkReal x14095=(r10*sj6);
IkReal x14096=(sj0*sj5);
IkReal x14097=(r00*sj6);
IkReal x14098=(cj0*sj5);
IkReal x14099=((0.02626)*cj0);
IkReal x14100=(r01*sj6);
IkReal x14101=((1.0)*sj0);
IkReal x14102=(cj6*r10);
IkReal x14103=(cj5*sj0);
IkReal x14104=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x14091))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x14100))+((sj6*x14092))+(((-1.0)*x14101*x14102))+(((-1.0)*x14094*x14104)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x14095*x14101))+(((-1.0)*x14091*x14092))+(((-1.0)*cj5*x14094*x14097))+((r02*x14098))+((r12*x14096))+(((-1.0)*r01*x14091*x14094)));
evalcond[4]=(((x14097*x14098))+((cj0*cj5*r02))+((x14095*x14096))+((cj0*r01*x14093))+((x14092*x14093))+((r12*x14103)));
evalcond[5]=(((r01*sj0*x14091))+(((-1.0)*r11*x14091*x14094))+(((-1.0)*cj5*x14094*x14095))+((x14097*x14103))+((r12*x14098))+(((-1.0)*r02*x14096)));
evalcond[6]=((-0.1168)+(((-1.0)*px*x14094))+(((-1.0)*x14099*x14104))+((x14099*x14100))+(((-1.0)*py*x14101))+(((-0.02626)*sj0*x14102))+(((0.02626)*sj6*x14092)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14105=IKsin(j4);
IkReal x14106=IKcos(j4);
IkReal x14107=(cj0*sj6);
IkReal x14108=((0.02626)*cj6);
IkReal x14109=(cj0*r10);
IkReal x14110=((0.02626)*sj6);
IkReal x14111=(r01*sj0);
IkReal x14112=((1.0)*cj5);
IkReal x14113=((1.0)*cj6);
IkReal x14114=((1.0)*sj6);
IkReal x14115=(r00*sj0);
IkReal x14116=((1.0)*x14106);
evalcond[0]=((((-1.0)*r21*x14114))+(((-1.0)*x14116))+((cj6*r20)));
evalcond[1]=((((-1.0)*x14105))+(((-1.0)*r22*x14112))+(((-1.0)*r21*sj5*x14113))+(((-1.0)*r20*sj5*x14114)));
evalcond[2]=((-0.1264)+(((0.0718)*x14105))+(((-1.0)*r21*x14110))+(((-0.02626)*x14106))+pz+((r20*x14108)));
evalcond[3]=(((cj6*x14115))+(((-1.0)*x14111*x14114))+x14105+(((-1.0)*x14109*x14113))+((r11*x14107)));
evalcond[4]=(((r10*sj5*x14107))+(((-1.0)*sj5*x14114*x14115))+(((-1.0)*r02*sj0*x14112))+((cj0*cj5*r12))+(((-1.0)*x14116))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x14111*x14113)));
evalcond[5]=((0.09756)+(((0.0718)*x14106))+(((-1.0)*x14108*x14109))+(((-1.0)*x14110*x14111))+((x14108*x14115))+((px*sj0))+(((0.02626)*x14105))+(((0.02626)*r11*x14107))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14117=(cj5*cj6);
IkReal x14118=(r11*sj0);
IkReal x14119=(cj6*sj5);
IkReal x14120=((1.0)*cj0);
IkReal x14121=(r10*sj6);
IkReal x14122=(sj0*sj5);
IkReal x14123=(r00*sj6);
IkReal x14124=(cj0*sj5);
IkReal x14125=((0.02626)*cj0);
IkReal x14126=(r01*sj6);
IkReal x14127=((1.0)*sj0);
IkReal x14128=(cj6*r10);
IkReal x14129=(cj5*sj0);
IkReal x14130=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x14117)));
evalcond[2]=((((-1.0)*x14120*x14130))+((cj0*x14126))+(((-1.0)*x14127*x14128))+((sj6*x14118)));
evalcond[3]=((-1.0)+((r12*x14122))+(((-1.0)*r01*x14117*x14120))+(((-1.0)*cj5*x14121*x14127))+(((-1.0)*x14117*x14118))+(((-1.0)*cj5*x14120*x14123))+((r02*x14124)));
evalcond[4]=(((r12*x14129))+((cj0*cj5*r02))+((x14123*x14124))+((x14121*x14122))+((cj0*r01*x14119))+((x14118*x14119)));
evalcond[5]=(((r12*x14124))+((x14123*x14129))+(((-1.0)*r02*x14122))+(((-1.0)*cj5*x14120*x14121))+((r01*sj0*x14117))+(((-1.0)*r11*x14117*x14120)));
evalcond[6]=((0.1148)+(((-1.0)*py*x14127))+((x14125*x14126))+(((-1.0)*px*x14120))+(((-1.0)*x14125*x14130))+(((0.02626)*sj6*x14118))+(((-0.02626)*sj0*x14128)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14131=IKcos(j4);
IkReal x14132=IKsin(j4);
IkReal x14133=(cj0*sj6);
IkReal x14134=((0.02626)*cj6);
IkReal x14135=(cj0*r10);
IkReal x14136=((0.02626)*sj6);
IkReal x14137=(r01*sj0);
IkReal x14138=((1.0)*cj5);
IkReal x14139=((1.0)*cj6);
IkReal x14140=((1.0)*sj6);
IkReal x14141=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x14140))+((cj6*r20))+x14131);
evalcond[1]=((((-1.0)*r20*sj5*x14140))+x14132+(((-1.0)*r21*sj5*x14139))+(((-1.0)*r22*x14138)));
evalcond[2]=((-0.1246)+((r20*x14134))+(((0.02626)*x14131))+pz+(((-1.0)*r21*x14136))+(((-0.0718)*x14132)));
evalcond[3]=(((cj6*x14141))+((r11*x14133))+(((-1.0)*x14135*x14139))+x14132+(((-1.0)*x14137*x14140)));
evalcond[4]=((((-1.0)*sj5*x14140*x14141))+(((-1.0)*sj5*x14137*x14139))+(((-1.0)*x14131))+((cj0*cj5*r12))+((r10*sj5*x14133))+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x14138)));
evalcond[5]=((0.09756)+(((0.02626)*x14132))+(((0.02626)*r11*x14133))+(((0.0718)*x14131))+(((-1.0)*x14134*x14135))+((x14134*x14141))+(((-1.0)*x14136*x14137))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14142=((1.0)*sj5);
IkReal x14143=((1.0)*sj6);
CheckValue<IkReal> x14144=IKPowWithIntegerCheck(sj2,-1);
if(!x14144.valid){
continue;
}
CheckValue<IkReal> x14145=IKPowWithIntegerCheck(cj2,-1);
if(!x14145.valid){
continue;
}
if( IKabs(((x14144.value)*(((((-1.0)*r20*sj6*x14142))+(((-1.0)*cj6*r21*x14142))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14145.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x14143))+(((-1.0)*r11*sj0*x14143))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14144.value)*(((((-1.0)*r20*sj6*x14142))+(((-1.0)*cj6*r21*x14142))+(((-1.0)*cj5*r22))))))+IKsqr(((x14145.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x14143))+(((-1.0)*r11*sj0*x14143))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x14144.value)*(((((-1.0)*r20*sj6*x14142))+(((-1.0)*cj6*r21*x14142))+(((-1.0)*cj5*r22))))), ((x14145.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x14143))+(((-1.0)*r11*sj0*x14143))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14146=IKsin(j4);
IkReal x14147=IKcos(j4);
IkReal x14148=(sj0*sj6);
IkReal x14149=((0.02626)*r01);
IkReal x14150=(cj5*r12);
IkReal x14151=(cj6*sj0);
IkReal x14152=(r11*sj5);
IkReal x14153=(r10*sj5);
IkReal x14154=(cj0*sj6);
IkReal x14155=(r21*sj6);
IkReal x14156=((1.0)*cj5);
IkReal x14157=((0.02626)*cj6);
IkReal x14158=((1.0)*r01);
IkReal x14159=(r00*sj5);
IkReal x14160=((1.0)*py);
IkReal x14161=((1.0)*sj2);
IkReal x14162=((1.0)*sj5);
IkReal x14163=((1.0)*cj0);
IkReal x14164=((0.02626)*r11);
IkReal x14165=(cj0*cj6);
IkReal x14166=(r10*x14165);
IkReal x14167=(cj2*x14146);
IkReal x14168=(cj2*x14147);
evalcond[0]=((((-1.0)*x14147*x14161))+((cj6*r20))+(((-1.0)*x14155)));
evalcond[1]=((((-1.0)*r22*x14156))+(((-1.0)*cj6*r21*x14162))+(((-1.0)*x14146*x14161))+(((-1.0)*r20*sj6*x14162)));
evalcond[2]=((((-1.0)*x14148*x14158))+((r11*x14154))+((r00*x14151))+(((-1.0)*cj6*r10*x14163))+x14146);
evalcond[3]=((((-1.0)*r10*x14151))+(((-1.0)*cj6*r00*x14163))+((r01*x14154))+x14168+((r11*x14148)));
evalcond[4]=((-0.1255)+(((-0.02626)*sj2*x14147))+(((0.0718)*sj2*x14146))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+pz+((r20*x14157))+(((-0.02626)*x14155)));
evalcond[5]=(((cj0*cj5*r02))+((sj0*x14150))+((x14148*x14153))+((x14154*x14159))+x14167+((x14151*x14152))+((r01*sj5*x14165)));
evalcond[6]=(((x14153*x14154))+(((-1.0)*r02*sj0*x14156))+(((-1.0)*sj5*x14151*x14158))+((cj0*x14150))+(((-1.0)*x14147))+(((-1.0)*x14148*x14159))+((x14152*x14165)));
evalcond[7]=((0.09756)+(((0.02626)*x14146))+(((-1.0)*x14148*x14149))+(((-1.0)*cj0*x14160))+((x14154*x14164))+(((0.02626)*r00*x14151))+(((0.0718)*x14147))+((px*sj0))+(((-1.0)*cj0*r10*x14157)));
evalcond[8]=((-0.001)+(((-0.0718)*x14167))+(((-1.0)*cj0*r00*x14157))+(((-1.0)*px*x14163))+(((-0.1158)*sj2))+((x14149*x14154))+((x14148*x14164))+(((-0.02626)*r10*x14151))+(((0.0009)*cj2))+(((-1.0)*sj0*x14160))+(((0.02626)*x14168)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14169=((1.0)*sj6);
CheckValue<IkReal> x14170=IKPowWithIntegerCheck(sj2,-1);
if(!x14170.valid){
continue;
}
if( IKabs((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*x14169))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14170.value)*(((((-1.0)*r21*x14169))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*x14169))+(((-1.0)*cj6*r00*sj0))))+IKsqr(((x14170.value)*(((((-1.0)*r21*x14169))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*x14169))+(((-1.0)*cj6*r00*sj0))), ((x14170.value)*(((((-1.0)*r21*x14169))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14171=IKsin(j4);
IkReal x14172=IKcos(j4);
IkReal x14173=(sj0*sj6);
IkReal x14174=((0.02626)*r01);
IkReal x14175=(cj5*r12);
IkReal x14176=(cj6*sj0);
IkReal x14177=(r11*sj5);
IkReal x14178=(r10*sj5);
IkReal x14179=(cj0*sj6);
IkReal x14180=(r21*sj6);
IkReal x14181=((1.0)*cj5);
IkReal x14182=((0.02626)*cj6);
IkReal x14183=((1.0)*r01);
IkReal x14184=(r00*sj5);
IkReal x14185=((1.0)*py);
IkReal x14186=((1.0)*sj2);
IkReal x14187=((1.0)*sj5);
IkReal x14188=((1.0)*cj0);
IkReal x14189=((0.02626)*r11);
IkReal x14190=(cj0*cj6);
IkReal x14191=(r10*x14190);
IkReal x14192=(cj2*x14171);
IkReal x14193=(cj2*x14172);
evalcond[0]=(((cj6*r20))+(((-1.0)*x14180))+(((-1.0)*x14172*x14186)));
evalcond[1]=((((-1.0)*x14171*x14186))+(((-1.0)*r22*x14181))+(((-1.0)*r20*sj6*x14187))+(((-1.0)*cj6*r21*x14187)));
evalcond[2]=(((r11*x14179))+((r00*x14176))+(((-1.0)*x14173*x14183))+(((-1.0)*cj6*r10*x14188))+x14171);
evalcond[3]=(((r11*x14173))+((r01*x14179))+(((-1.0)*cj6*r00*x14188))+(((-1.0)*r10*x14176))+x14193);
evalcond[4]=((-0.1255)+((r20*x14182))+(((-0.1158)*cj2))+(((0.0718)*sj2*x14171))+(((-0.0009)*sj2))+(((-0.02626)*x14180))+(((-0.02626)*sj2*x14172))+pz);
evalcond[5]=(((r01*sj5*x14190))+((cj0*cj5*r02))+((x14179*x14184))+((sj0*x14175))+((x14176*x14177))+x14192+((x14173*x14178)));
evalcond[6]=(((cj0*x14175))+((x14177*x14190))+(((-1.0)*x14172))+(((-1.0)*x14173*x14184))+(((-1.0)*sj5*x14176*x14183))+((x14178*x14179))+(((-1.0)*r02*sj0*x14181)));
evalcond[7]=((0.09756)+(((0.0718)*x14172))+((x14179*x14189))+(((0.02626)*x14171))+(((-1.0)*x14173*x14174))+((px*sj0))+(((-1.0)*cj0*r10*x14182))+(((0.02626)*r00*x14176))+(((-1.0)*cj0*x14185)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-1.0)*sj0*x14185))+(((-0.0718)*x14192))+((x14173*x14189))+(((0.0009)*cj2))+(((-1.0)*px*x14188))+(((0.02626)*x14193))+(((-0.02626)*r10*x14176))+(((-1.0)*cj0*r00*x14182))+((x14174*x14179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14194=((1.0)*r21);
CheckValue<IkReal> x14195 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x14194))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),(((cj6*r20))+(((-1.0)*sj6*x14194))),IKFAST_ATAN2_MAGTHRESH);
if(!x14195.valid){
continue;
}
CheckValue<IkReal> x14196=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x14196.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x14195.value)+(((1.5707963267949)*(x14196.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14197=IKsin(j4);
IkReal x14198=IKcos(j4);
IkReal x14199=(sj0*sj6);
IkReal x14200=((0.02626)*r01);
IkReal x14201=(cj5*r12);
IkReal x14202=(cj6*sj0);
IkReal x14203=(r11*sj5);
IkReal x14204=(r10*sj5);
IkReal x14205=(cj0*sj6);
IkReal x14206=(r21*sj6);
IkReal x14207=((1.0)*cj5);
IkReal x14208=((0.02626)*cj6);
IkReal x14209=((1.0)*r01);
IkReal x14210=(r00*sj5);
IkReal x14211=((1.0)*py);
IkReal x14212=((1.0)*sj2);
IkReal x14213=((1.0)*sj5);
IkReal x14214=((1.0)*cj0);
IkReal x14215=((0.02626)*r11);
IkReal x14216=(cj0*cj6);
IkReal x14217=(r10*x14216);
IkReal x14218=(cj2*x14197);
IkReal x14219=(cj2*x14198);
evalcond[0]=((((-1.0)*x14198*x14212))+(((-1.0)*x14206))+((cj6*r20)));
evalcond[1]=((((-1.0)*x14197*x14212))+(((-1.0)*cj6*r21*x14213))+(((-1.0)*r22*x14207))+(((-1.0)*r20*sj6*x14213)));
evalcond[2]=((((-1.0)*x14199*x14209))+(((-1.0)*cj6*r10*x14214))+((r00*x14202))+x14197+((r11*x14205)));
evalcond[3]=((((-1.0)*r10*x14202))+(((-1.0)*cj6*r00*x14214))+((r11*x14199))+((r01*x14205))+x14219);
evalcond[4]=((-0.1255)+(((0.0718)*sj2*x14197))+((r20*x14208))+(((-0.1158)*cj2))+(((-0.02626)*sj2*x14198))+(((-0.0009)*sj2))+pz+(((-0.02626)*x14206)));
evalcond[5]=(((x14205*x14210))+((sj0*x14201))+((cj0*cj5*r02))+((r01*sj5*x14216))+((x14199*x14204))+((x14202*x14203))+x14218);
evalcond[6]=((((-1.0)*x14198))+((x14204*x14205))+((cj0*x14201))+(((-1.0)*r02*sj0*x14207))+((x14203*x14216))+(((-1.0)*sj5*x14202*x14209))+(((-1.0)*x14199*x14210)));
evalcond[7]=((0.09756)+((x14205*x14215))+(((-1.0)*x14199*x14200))+(((-1.0)*cj0*r10*x14208))+(((0.02626)*r00*x14202))+(((-1.0)*cj0*x14211))+(((0.0718)*x14198))+((px*sj0))+(((0.02626)*x14197)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-0.02626)*r10*x14202))+(((0.0009)*cj2))+((x14199*x14215))+(((0.02626)*x14219))+(((-1.0)*cj0*r00*x14208))+((x14200*x14205))+(((-1.0)*sj0*x14211))+(((-0.0718)*x14218))+(((-1.0)*px*x14214)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14220=(cj0*sj5);
IkReal x14221=(cj5*cj6);
IkReal x14222=((1.0)*sj5);
IkReal x14223=((1.0)*cj0);
IkReal x14224=((1.0)*sj0);
IkReal x14225=(cj5*sj6);
IkReal x14226=(r10*x14225);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=(((r20*x14225))+cj2+((r21*x14221))+(((-1.0)*r22*x14222)));
evalcond[2]=((((-1.0)*sj2))+((r02*x14220))+(((-1.0)*r01*x14221*x14223))+(((-1.0)*r00*x14223*x14225))+(((-1.0)*r11*x14221*x14224))+((r12*sj0*sj5))+(((-1.0)*x14224*x14226)));
evalcond[3]=(((r00*sj0*x14225))+(((-1.0)*r02*sj0*x14222))+(((-1.0)*r11*x14221*x14223))+(((-1.0)*x14223*x14226))+((r01*sj0*x14221))+((r12*x14220)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x14227=(cj5*cj6);
IkReal x14228=((1.0)*sj0);
IkReal x14229=(r21*sj6);
IkReal x14230=(cj0*sj5);
IkReal x14231=((1.0)*r22);
IkReal x14232=(cj6*r20);
IkReal x14233=(cj5*sj6);
IkReal x14234=((1.0)*cj0);
IkReal x14235=((1.0)*sj5);
IkReal x14236=(x14233*x14234);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x14233))+((r21*x14227))+(((-1.0)*sj5*x14231)));
evalcond[2]=((((-1.0)*x14229))+x14232);
evalcond[3]=((((-1.0)*cj6*r21*x14235))+(((-1.0)*r20*sj6*x14235))+(((-1.0)*cj5*x14231)));
evalcond[4]=((((-1.0)*r11*x14227*x14228))+(((-1.0)*r00*x14236))+((r02*x14230))+((r12*sj0*sj5))+(((-1.0)*r01*x14227*x14234))+(((-1.0)*r10*x14228*x14233)));
evalcond[5]=((((-1.0)*r11*x14227*x14234))+(((-1.0)*r02*sj5*x14228))+((r01*sj0*x14227))+((r12*x14230))+((r00*sj0*x14233))+(((-1.0)*r10*x14236)));
evalcond[6]=((0.2413)+pz+(((0.02626)*x14232))+(((-0.02626)*x14229)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14237=(cj0*cj6);
IkReal x14238=(sj0*sj6);
IkReal x14239=((1.0)*r11);
IkReal x14240=(cj6*sj0);
IkReal x14241=(cj0*sj6);
if( IKabs(((((-1.0)*x14239*x14241))+((r10*x14237))+(((-1.0)*r00*x14240))+((r01*x14238)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x14238*x14239))+((r00*x14237))+((r10*x14240))+(((-1.0)*r01*x14241)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x14239*x14241))+((r10*x14237))+(((-1.0)*r00*x14240))+((r01*x14238))))+IKsqr(((((-1.0)*x14238*x14239))+((r00*x14237))+((r10*x14240))+(((-1.0)*r01*x14241))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x14239*x14241))+((r10*x14237))+(((-1.0)*r00*x14240))+((r01*x14238))), ((((-1.0)*x14238*x14239))+((r00*x14237))+((r10*x14240))+(((-1.0)*r01*x14241))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14242=IKsin(j4);
IkReal x14243=IKcos(j4);
IkReal x14244=(cj6*sj0);
IkReal x14245=((0.02626)*r10);
IkReal x14246=(r11*sj6);
IkReal x14247=(r11*sj5);
IkReal x14248=(sj0*sj6);
IkReal x14249=(r10*sj5);
IkReal x14250=(cj0*cj6);
IkReal x14251=((0.02626)*r01);
IkReal x14252=(cj5*r12);
IkReal x14253=((1.0)*sj0);
IkReal x14254=(cj5*r02);
IkReal x14255=(cj0*sj6);
IkReal x14256=((1.0)*r10);
IkReal x14257=((1.0)*r01);
IkReal x14258=(r00*sj5);
IkReal x14259=((1.0)*cj0);
IkReal x14260=((0.02626)*r00);
evalcond[0]=((((-1.0)*r00*x14250))+(((-1.0)*x14244*x14256))+((sj0*x14246))+x14243+((r01*x14255)));
evalcond[1]=((((-1.0)*x14250*x14256))+((cj0*x14246))+x14242+((r00*x14244))+(((-1.0)*x14248*x14257)));
evalcond[2]=(((x14248*x14249))+((x14244*x14247))+((r01*sj5*x14250))+((cj0*x14254))+((x14255*x14258))+((sj0*x14252))+x14242);
evalcond[3]=((((-1.0)*x14243))+(((-1.0)*x14253*x14254))+((x14247*x14250))+((x14249*x14255))+(((-1.0)*x14248*x14258))+(((-1.0)*sj5*x14244*x14257))+((cj0*x14252)));
evalcond[4]=((0.09736)+(((0.02626)*x14242))+(((-1.0)*x14245*x14250))+((x14244*x14260))+(((0.0718)*x14243))+((px*sj0))+(((0.02626)*cj0*x14246))+(((-1.0)*py*x14259))+(((-1.0)*x14248*x14251)));
evalcond[5]=((-0.0001)+(((0.02626)*x14243))+(((-0.0718)*x14242))+(((-1.0)*x14250*x14260))+((x14251*x14255))+(((-1.0)*px*x14259))+(((0.02626)*sj0*x14246))+(((-1.0)*x14244*x14245))+(((-1.0)*py*x14253)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14261=(cj5*cj6);
IkReal x14262=(r11*sj0);
IkReal x14263=(cj6*sj5);
IkReal x14264=((1.0)*cj0);
IkReal x14265=(r10*sj6);
IkReal x14266=(sj0*sj5);
IkReal x14267=(r00*sj6);
IkReal x14268=(cj0*sj5);
IkReal x14269=((0.02626)*cj0);
IkReal x14270=(r01*sj6);
IkReal x14271=((1.0)*sj0);
IkReal x14272=(cj6*r10);
IkReal x14273=(cj5*sj0);
IkReal x14274=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x14261))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x14271*x14272))+((sj6*x14262))+(((-1.0)*x14264*x14274))+((cj0*x14270)));
evalcond[3]=((-1.0)+(((-1.0)*cj5*x14264*x14267))+(((-1.0)*cj5*x14265*x14271))+((r02*x14268))+(((-1.0)*r01*x14261*x14264))+((r12*x14266))+(((-1.0)*x14261*x14262)));
evalcond[4]=(((x14267*x14268))+((cj0*cj5*r02))+((cj0*r01*x14263))+((x14262*x14263))+((x14265*x14266))+((r12*x14273)));
evalcond[5]=((((-1.0)*r02*x14266))+((r01*sj0*x14261))+(((-1.0)*cj5*x14264*x14265))+((x14267*x14273))+((r12*x14268))+(((-1.0)*r11*x14261*x14264)));
evalcond[6]=((-0.1168)+(((0.02626)*sj6*x14262))+(((-1.0)*px*x14264))+((x14269*x14270))+(((-0.02626)*sj0*x14272))+(((-1.0)*py*x14271))+(((-1.0)*x14269*x14274)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14275=IKcos(j4);
IkReal x14276=IKsin(j4);
IkReal x14277=(cj0*sj6);
IkReal x14278=((0.02626)*cj6);
IkReal x14279=(cj0*r10);
IkReal x14280=((0.02626)*sj6);
IkReal x14281=(r01*sj0);
IkReal x14282=((1.0)*cj5);
IkReal x14283=((1.0)*cj6);
IkReal x14284=((1.0)*sj6);
IkReal x14285=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x14284))+((cj6*r20))+x14275);
evalcond[1]=((((-1.0)*r22*x14282))+(((-1.0)*r20*sj5*x14284))+(((-1.0)*r21*sj5*x14283))+x14276);
evalcond[2]=((0.1264)+(((0.02626)*x14275))+(((-0.0718)*x14276))+((r20*x14278))+pz+(((-1.0)*r21*x14280)));
evalcond[3]=(((cj6*x14285))+((r11*x14277))+(((-1.0)*x14279*x14283))+x14276+(((-1.0)*x14281*x14284)));
evalcond[4]=((((-1.0)*x14275))+(((-1.0)*r02*sj0*x14282))+((cj0*cj5*r12))+(((-1.0)*sj5*x14284*x14285))+((r10*sj5*x14277))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x14281*x14283)));
evalcond[5]=((0.09736)+(((0.02626)*x14276))+(((-1.0)*x14280*x14281))+(((0.0718)*x14275))+((x14278*x14285))+(((-1.0)*x14278*x14279))+(((0.02626)*r11*x14277))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14286=(cj5*cj6);
IkReal x14287=(r11*sj0);
IkReal x14288=(cj6*sj5);
IkReal x14289=((1.0)*cj0);
IkReal x14290=(r10*sj6);
IkReal x14291=(sj0*sj5);
IkReal x14292=(r00*sj6);
IkReal x14293=(cj0*sj5);
IkReal x14294=((0.02626)*cj0);
IkReal x14295=(r01*sj6);
IkReal x14296=((1.0)*sj0);
IkReal x14297=(cj6*r10);
IkReal x14298=(cj5*sj0);
IkReal x14299=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x14286))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x14289*x14299))+((sj6*x14287))+((cj0*x14295))+(((-1.0)*x14296*x14297)));
evalcond[3]=((1.0)+((r02*x14293))+(((-1.0)*x14286*x14287))+(((-1.0)*cj5*x14290*x14296))+((r12*x14291))+(((-1.0)*r01*x14286*x14289))+(((-1.0)*cj5*x14289*x14292)));
evalcond[4]=(((cj0*r01*x14288))+((x14292*x14293))+((cj0*cj5*r02))+((x14290*x14291))+((r12*x14298))+((x14287*x14288)));
evalcond[5]=(((x14292*x14298))+(((-1.0)*r11*x14286*x14289))+((r01*sj0*x14286))+((r12*x14293))+(((-1.0)*r02*x14291))+(((-1.0)*cj5*x14289*x14290)));
evalcond[6]=((0.1148)+(((-1.0)*py*x14296))+(((-0.02626)*sj0*x14297))+((x14294*x14295))+(((-1.0)*px*x14289))+(((0.02626)*sj6*x14287))+(((-1.0)*x14294*x14299)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14300=IKsin(j4);
IkReal x14301=IKcos(j4);
IkReal x14302=(cj0*sj6);
IkReal x14303=((0.02626)*cj6);
IkReal x14304=(cj0*r10);
IkReal x14305=((0.02626)*sj6);
IkReal x14306=(r01*sj0);
IkReal x14307=((1.0)*cj5);
IkReal x14308=((1.0)*cj6);
IkReal x14309=((1.0)*sj6);
IkReal x14310=(r00*sj0);
IkReal x14311=((1.0)*x14301);
evalcond[0]=((((-1.0)*r21*x14309))+(((-1.0)*x14311))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x14307))+(((-1.0)*x14300))+(((-1.0)*r20*sj5*x14309))+(((-1.0)*r21*sj5*x14308)));
evalcond[2]=((0.1246)+(((-0.02626)*x14301))+((r20*x14303))+(((-1.0)*r21*x14305))+pz+(((0.0718)*x14300)));
evalcond[3]=((((-1.0)*x14306*x14309))+((r11*x14302))+(((-1.0)*x14304*x14308))+x14300+((cj6*x14310)));
evalcond[4]=((((-1.0)*sj5*x14309*x14310))+((cj0*cj5*r12))+((r10*sj5*x14302))+(((-1.0)*r02*sj0*x14307))+((cj0*cj6*r11*sj5))+(((-1.0)*x14311))+(((-1.0)*sj5*x14306*x14308)));
evalcond[5]=((0.09736)+(((-1.0)*x14303*x14304))+(((-1.0)*x14305*x14306))+((x14303*x14310))+((px*sj0))+(((0.0718)*x14301))+(((0.02626)*x14300))+(((0.02626)*r11*x14302))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14312=((1.0)*sj6);
CheckValue<IkReal> x14313=IKPowWithIntegerCheck(sj2,-1);
if(!x14313.valid){
continue;
}
CheckValue<IkReal> x14314=IKPowWithIntegerCheck(cj2,-1);
if(!x14314.valid){
continue;
}
if( IKabs(((x14313.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14314.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x14312))+(((-1.0)*cj0*r01*x14312))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14313.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x14314.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x14312))+(((-1.0)*cj0*r01*x14312))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x14313.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x14314.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x14312))+(((-1.0)*cj0*r01*x14312))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14315=IKsin(j4);
IkReal x14316=IKcos(j4);
IkReal x14317=((0.02626)*sj0);
IkReal x14318=(cj6*r10);
IkReal x14319=(r01*sj6);
IkReal x14320=(r11*sj0);
IkReal x14321=(cj0*cj5);
IkReal x14322=(cj6*sj5);
IkReal x14323=((0.02626)*cj0);
IkReal x14324=(cj0*sj6);
IkReal x14325=(r21*sj6);
IkReal x14326=((1.0)*sj0);
IkReal x14327=(cj6*r20);
IkReal x14328=(r00*sj5);
IkReal x14329=(cj6*r00);
IkReal x14330=((1.0)*cj0);
IkReal x14331=(r11*sj6);
IkReal x14332=(r10*sj5*sj6);
IkReal x14333=(cj2*x14315);
IkReal x14334=(cj2*x14316);
IkReal x14335=(sj2*x14315);
IkReal x14336=(sj2*x14316);
evalcond[0]=(x14336+x14327+(((-1.0)*x14325)));
evalcond[1]=((((-1.0)*r21*x14322))+(((-1.0)*cj5*r22))+x14335+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((sj0*x14329))+(((-1.0)*x14319*x14326))+((r11*x14324))+(((-1.0)*x14318*x14330))+x14315);
evalcond[3]=((((-1.0)*x14329*x14330))+((sj6*x14320))+(((-1.0)*x14318*x14326))+((cj0*x14319))+x14334);
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((-0.02626)*x14325))+(((0.02626)*x14327))+(((-0.0718)*x14335))+pz+(((0.0009)*sj2))+(((0.02626)*x14336)));
evalcond[5]=(((cj5*r12*sj0))+((x14320*x14322))+((r02*x14321))+((sj0*x14332))+x14333+((x14324*x14328))+((cj0*r01*x14322)));
evalcond[6]=((((-1.0)*cj5*r02*x14326))+(((-1.0)*sj6*x14326*x14328))+((cj0*r11*x14322))+(((-1.0)*r01*x14322*x14326))+(((-1.0)*x14316))+((r10*sj5*x14324))+((r12*x14321)));
evalcond[7]=((0.09736)+(((-1.0)*py*x14330))+(((0.02626)*x14315))+((x14323*x14331))+((x14317*x14329))+(((-1.0)*x14318*x14323))+(((-1.0)*x14317*x14319))+((px*sj0))+(((0.0718)*x14316)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+((x14317*x14331))+((x14319*x14323))+(((-1.0)*py*x14326))+(((-1.0)*px*x14330))+(((0.0009)*cj2))+(((-0.0718)*x14333))+(((-1.0)*x14317*x14318))+(((-1.0)*x14323*x14329))+(((0.02626)*x14334)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14337=((1.0)*cj6);
CheckValue<IkReal> x14338=IKPowWithIntegerCheck(sj2,-1);
if(!x14338.valid){
continue;
}
if( IKabs(((((-1.0)*r00*sj0*x14337))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14338.value)*((((r21*sj6))+(((-1.0)*r20*x14337)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*sj0*x14337))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))))+IKsqr(((x14338.value)*((((r21*sj6))+(((-1.0)*r20*x14337))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r00*sj0*x14337))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))), ((x14338.value)*((((r21*sj6))+(((-1.0)*r20*x14337))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14339=IKsin(j4);
IkReal x14340=IKcos(j4);
IkReal x14341=((0.02626)*sj0);
IkReal x14342=(cj6*r10);
IkReal x14343=(r01*sj6);
IkReal x14344=(r11*sj0);
IkReal x14345=(cj0*cj5);
IkReal x14346=(cj6*sj5);
IkReal x14347=((0.02626)*cj0);
IkReal x14348=(cj0*sj6);
IkReal x14349=(r21*sj6);
IkReal x14350=((1.0)*sj0);
IkReal x14351=(cj6*r20);
IkReal x14352=(r00*sj5);
IkReal x14353=(cj6*r00);
IkReal x14354=((1.0)*cj0);
IkReal x14355=(r11*sj6);
IkReal x14356=(r10*sj5*sj6);
IkReal x14357=(cj2*x14339);
IkReal x14358=(cj2*x14340);
IkReal x14359=(sj2*x14339);
IkReal x14360=(sj2*x14340);
evalcond[0]=((((-1.0)*x14349))+x14351+x14360);
evalcond[1]=((((-1.0)*r21*x14346))+(((-1.0)*cj5*r22))+x14359+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((r11*x14348))+(((-1.0)*x14343*x14350))+(((-1.0)*x14342*x14354))+((sj0*x14353))+x14339);
evalcond[3]=(((cj0*x14343))+((sj6*x14344))+(((-1.0)*x14342*x14350))+(((-1.0)*x14353*x14354))+x14358);
evalcond[4]=((0.1255)+(((0.02626)*x14351))+(((0.1158)*cj2))+(((0.02626)*x14360))+pz+(((-0.0718)*x14359))+(((-0.02626)*x14349))+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+((x14348*x14352))+((x14344*x14346))+((cj0*r01*x14346))+((sj0*x14356))+((r02*x14345))+x14357);
evalcond[6]=(((cj0*r11*x14346))+(((-1.0)*sj6*x14350*x14352))+(((-1.0)*x14340))+(((-1.0)*r01*x14346*x14350))+((r10*sj5*x14348))+((r12*x14345))+(((-1.0)*cj5*r02*x14350)));
evalcond[7]=((0.09736)+((x14347*x14355))+(((0.0718)*x14340))+(((-1.0)*py*x14354))+(((-1.0)*x14342*x14347))+(((-1.0)*x14341*x14343))+((px*sj0))+((x14341*x14353))+(((0.02626)*x14339)));
evalcond[8]=((-0.001)+(((0.02626)*x14358))+(((-0.1158)*sj2))+(((-1.0)*py*x14350))+(((-1.0)*x14347*x14353))+((x14343*x14347))+(((-1.0)*px*x14354))+(((0.0009)*cj2))+(((-1.0)*x14341*x14342))+(((-0.0718)*x14357))+((x14341*x14355)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x14361=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x14361.valid){
continue;
}
CheckValue<IkReal> x14362 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x14362.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14361.value)))+(x14362.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14363=IKsin(j4);
IkReal x14364=IKcos(j4);
IkReal x14365=((0.02626)*sj0);
IkReal x14366=(cj6*r10);
IkReal x14367=(r01*sj6);
IkReal x14368=(r11*sj0);
IkReal x14369=(cj0*cj5);
IkReal x14370=(cj6*sj5);
IkReal x14371=((0.02626)*cj0);
IkReal x14372=(cj0*sj6);
IkReal x14373=(r21*sj6);
IkReal x14374=((1.0)*sj0);
IkReal x14375=(cj6*r20);
IkReal x14376=(r00*sj5);
IkReal x14377=(cj6*r00);
IkReal x14378=((1.0)*cj0);
IkReal x14379=(r11*sj6);
IkReal x14380=(r10*sj5*sj6);
IkReal x14381=(cj2*x14363);
IkReal x14382=(cj2*x14364);
IkReal x14383=(sj2*x14363);
IkReal x14384=(sj2*x14364);
evalcond[0]=((((-1.0)*x14373))+x14375+x14384);
evalcond[1]=((((-1.0)*cj5*r22))+(((-1.0)*r21*x14370))+x14383+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((r11*x14372))+(((-1.0)*x14367*x14374))+x14363+((sj0*x14377))+(((-1.0)*x14366*x14378)));
evalcond[3]=((((-1.0)*x14377*x14378))+((cj0*x14367))+x14382+((sj6*x14368))+(((-1.0)*x14366*x14374)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+pz+(((-0.02626)*x14373))+(((0.02626)*x14375))+(((0.02626)*x14384))+(((-0.0718)*x14383))+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+((sj0*x14380))+((r02*x14369))+((x14372*x14376))+((x14368*x14370))+((cj0*r01*x14370))+x14381);
evalcond[6]=(((cj0*r11*x14370))+(((-1.0)*r01*x14370*x14374))+(((-1.0)*cj5*r02*x14374))+(((-1.0)*x14364))+(((-1.0)*sj6*x14374*x14376))+((r10*sj5*x14372))+((r12*x14369)));
evalcond[7]=((0.09736)+((x14365*x14377))+(((0.02626)*x14363))+((x14371*x14379))+(((-1.0)*py*x14378))+(((0.0718)*x14364))+((px*sj0))+(((-1.0)*x14365*x14367))+(((-1.0)*x14366*x14371)));
evalcond[8]=((-0.001)+((x14367*x14371))+(((-0.1158)*sj2))+((x14365*x14379))+(((-1.0)*x14371*x14377))+(((-1.0)*py*x14374))+(((0.0009)*cj2))+(((-1.0)*px*x14378))+(((-1.0)*x14365*x14366))+(((0.02626)*x14382))+(((-0.0718)*x14381)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14385=(cj0*sj5);
IkReal x14386=(cj5*cj6);
IkReal x14387=((1.0)*sj5);
IkReal x14388=((1.0)*cj0);
IkReal x14389=((1.0)*sj0);
IkReal x14390=(cj5*sj6);
IkReal x14391=(r10*x14390);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=(((r21*x14386))+(((-1.0)*r22*x14387))+(((-1.0)*cj2))+((r20*x14390)));
evalcond[2]=((((-1.0)*r00*x14388*x14390))+sj2+((r12*sj0*sj5))+(((-1.0)*r01*x14386*x14388))+(((-1.0)*x14389*x14391))+((r02*x14385))+(((-1.0)*r11*x14386*x14389)));
evalcond[3]=(((r00*sj0*x14390))+((r12*x14385))+((r01*sj0*x14386))+(((-1.0)*x14388*x14391))+(((-1.0)*r11*x14386*x14388))+(((-1.0)*r02*sj0*x14387)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x14392=(cj5*cj6);
IkReal x14393=((1.0)*sj0);
IkReal x14394=(r21*sj6);
IkReal x14395=(cj0*sj5);
IkReal x14396=((1.0)*r22);
IkReal x14397=(cj6*r20);
IkReal x14398=(cj5*sj6);
IkReal x14399=((1.0)*cj0);
IkReal x14400=((1.0)*sj5);
IkReal x14401=(x14398*x14399);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x14392))+(((-1.0)*sj5*x14396))+((r20*x14398)));
evalcond[2]=((((-1.0)*x14394))+x14397);
evalcond[3]=((((-1.0)*cj6*r21*x14400))+(((-1.0)*r20*sj6*x14400))+(((-1.0)*cj5*x14396)));
evalcond[4]=(((r12*sj0*sj5))+(((-1.0)*r10*x14393*x14398))+(((-1.0)*r00*x14401))+(((-1.0)*r11*x14392*x14393))+((r02*x14395))+(((-1.0)*r01*x14392*x14399)));
evalcond[5]=((((-1.0)*r02*sj5*x14393))+((r00*sj0*x14398))+((r12*x14395))+(((-1.0)*r10*x14401))+((r01*sj0*x14392))+(((-1.0)*r11*x14392*x14399)));
evalcond[6]=((0.2413)+(((-0.02626)*x14394))+pz+(((0.02626)*x14397)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14402=(cj0*cj6);
IkReal x14403=(cj6*sj0);
IkReal x14404=(cj0*sj6);
IkReal x14405=((1.0)*sj0*sj6);
if( IKabs((((r11*x14404))+(((-1.0)*r01*x14405))+((r00*x14403))+(((-1.0)*r10*x14402)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x14403))+(((-1.0)*r01*x14404))+((r00*x14402))+(((-1.0)*r11*x14405)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x14404))+(((-1.0)*r01*x14405))+((r00*x14403))+(((-1.0)*r10*x14402))))+IKsqr((((r10*x14403))+(((-1.0)*r01*x14404))+((r00*x14402))+(((-1.0)*r11*x14405))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x14404))+(((-1.0)*r01*x14405))+((r00*x14403))+(((-1.0)*r10*x14402))), (((r10*x14403))+(((-1.0)*r01*x14404))+((r00*x14402))+(((-1.0)*r11*x14405))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14406=IKsin(j4);
IkReal x14407=IKcos(j4);
IkReal x14408=(cj6*sj0);
IkReal x14409=((0.02626)*r10);
IkReal x14410=(r11*sj6);
IkReal x14411=(r11*sj5);
IkReal x14412=(sj0*sj6);
IkReal x14413=(r10*sj5);
IkReal x14414=((0.02626)*r01);
IkReal x14415=(cj5*r12);
IkReal x14416=(cj0*cj6);
IkReal x14417=((1.0)*sj0);
IkReal x14418=(cj5*r02);
IkReal x14419=(cj0*sj6);
IkReal x14420=((1.0)*r10);
IkReal x14421=((1.0)*r01);
IkReal x14422=(r00*sj5);
IkReal x14423=((1.0)*cj0);
IkReal x14424=((0.02626)*r00);
evalcond[0]=(((sj0*x14410))+x14407+((r01*x14419))+(((-1.0)*x14408*x14420))+(((-1.0)*r00*x14416)));
evalcond[1]=((((-1.0)*x14416*x14420))+((cj0*x14410))+(((-1.0)*x14406))+((r00*x14408))+(((-1.0)*x14412*x14421)));
evalcond[2]=(((cj0*x14418))+((x14408*x14411))+((sj0*x14415))+((r01*sj5*x14416))+x14406+((x14412*x14413))+((x14419*x14422)));
evalcond[3]=((((-1.0)*sj5*x14408*x14421))+((cj0*x14415))+(((-1.0)*x14417*x14418))+((x14413*x14419))+x14407+((x14411*x14416))+(((-1.0)*x14412*x14422)));
evalcond[4]=((-0.09756)+(((-1.0)*py*x14423))+((x14408*x14424))+(((-1.0)*x14412*x14414))+((px*sj0))+(((-0.0718)*x14407))+(((-1.0)*x14409*x14416))+(((0.02626)*cj0*x14410))+(((-0.02626)*x14406)));
evalcond[5]=((-0.0001)+(((-1.0)*x14408*x14409))+(((-1.0)*x14416*x14424))+(((0.02626)*sj0*x14410))+(((-1.0)*py*x14417))+(((-1.0)*px*x14423))+((x14414*x14419))+(((-0.0718)*x14406))+(((0.02626)*x14407)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14425=(cj5*cj6);
IkReal x14426=(r11*sj0);
IkReal x14427=(cj6*sj5);
IkReal x14428=((1.0)*cj0);
IkReal x14429=(r10*sj6);
IkReal x14430=(sj0*sj5);
IkReal x14431=(r00*sj6);
IkReal x14432=(cj0*sj5);
IkReal x14433=((0.02626)*cj0);
IkReal x14434=(r01*sj6);
IkReal x14435=((1.0)*sj0);
IkReal x14436=(cj6*r10);
IkReal x14437=(cj5*sj0);
IkReal x14438=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x14425)));
evalcond[2]=((((-1.0)*x14435*x14436))+((cj0*x14434))+(((-1.0)*x14428*x14438))+((sj6*x14426)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x14428*x14431))+(((-1.0)*cj5*x14429*x14435))+((r12*x14430))+(((-1.0)*x14425*x14426))+(((-1.0)*r01*x14425*x14428))+((r02*x14432)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x14427))+((r12*x14437))+((x14429*x14430))+((x14426*x14427))+((x14431*x14432)));
evalcond[5]=(((r01*sj0*x14425))+(((-1.0)*cj5*x14428*x14429))+((r12*x14432))+(((-1.0)*r11*x14425*x14428))+(((-1.0)*r02*x14430))+((x14431*x14437)));
evalcond[6]=((-0.1168)+(((-1.0)*x14433*x14438))+((x14433*x14434))+(((-1.0)*py*x14435))+(((0.02626)*sj6*x14426))+(((-0.02626)*sj0*x14436))+(((-1.0)*px*x14428)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14439=IKcos(j4);
IkReal x14440=IKsin(j4);
IkReal x14441=(cj0*sj6);
IkReal x14442=((0.02626)*sj6);
IkReal x14443=(r01*sj0);
IkReal x14444=((0.02626)*cj6);
IkReal x14445=(cj0*r10);
IkReal x14446=((1.0)*cj5);
IkReal x14447=((1.0)*cj6);
IkReal x14448=((1.0)*sj6);
IkReal x14449=(r00*sj0);
evalcond[0]=(x14439+((cj6*r20))+(((-1.0)*r21*x14448)));
evalcond[1]=((((-1.0)*r21*sj5*x14447))+(((-1.0)*r20*sj5*x14448))+x14440+(((-1.0)*r22*x14446)));
evalcond[2]=((0.1264)+((r20*x14444))+(((0.02626)*x14439))+pz+(((-1.0)*r21*x14442))+(((-0.0718)*x14440)));
evalcond[3]=(((r11*x14441))+(((-1.0)*x14440))+((cj6*x14449))+(((-1.0)*x14445*x14447))+(((-1.0)*x14443*x14448)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*r02*sj0*x14446))+((cj0*cj6*r11*sj5))+x14439+((r10*sj5*x14441))+(((-1.0)*sj5*x14443*x14447))+(((-1.0)*sj5*x14448*x14449)));
evalcond[5]=((-0.09756)+(((-0.02626)*x14440))+(((-1.0)*x14442*x14443))+(((-0.0718)*x14439))+((px*sj0))+(((0.02626)*r11*x14441))+((x14444*x14449))+(((-1.0)*x14444*x14445))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14450=(cj5*cj6);
IkReal x14451=(r11*sj0);
IkReal x14452=(cj6*sj5);
IkReal x14453=((1.0)*cj0);
IkReal x14454=(r10*sj6);
IkReal x14455=(sj0*sj5);
IkReal x14456=(r00*sj6);
IkReal x14457=(cj0*sj5);
IkReal x14458=((0.02626)*cj0);
IkReal x14459=(r01*sj6);
IkReal x14460=((1.0)*sj0);
IkReal x14461=(cj6*r10);
IkReal x14462=(cj5*sj0);
IkReal x14463=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x14450)));
evalcond[2]=((((-1.0)*x14453*x14463))+((cj0*x14459))+(((-1.0)*x14460*x14461))+((sj6*x14451)));
evalcond[3]=((-1.0)+(((-1.0)*x14450*x14451))+(((-1.0)*cj5*x14453*x14456))+((r12*x14455))+(((-1.0)*cj5*x14454*x14460))+((r02*x14457))+(((-1.0)*r01*x14450*x14453)));
evalcond[4]=(((x14451*x14452))+((cj0*cj5*r02))+((cj0*r01*x14452))+((x14456*x14457))+((x14454*x14455))+((r12*x14462)));
evalcond[5]=((((-1.0)*r02*x14455))+((x14456*x14462))+(((-1.0)*cj5*x14453*x14454))+((r12*x14457))+(((-1.0)*r11*x14450*x14453))+((r01*sj0*x14450)));
evalcond[6]=((0.1148)+(((-0.02626)*sj0*x14461))+(((0.02626)*sj6*x14451))+(((-1.0)*py*x14460))+((x14458*x14459))+(((-1.0)*x14458*x14463))+(((-1.0)*px*x14453)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14464=IKsin(j4);
IkReal x14465=IKcos(j4);
IkReal x14466=(cj0*sj6);
IkReal x14467=((0.02626)*sj6);
IkReal x14468=(r01*sj0);
IkReal x14469=((0.02626)*cj6);
IkReal x14470=(cj0*r10);
IkReal x14471=((1.0)*cj5);
IkReal x14472=((1.0)*cj6);
IkReal x14473=((1.0)*sj6);
IkReal x14474=(r00*sj0);
IkReal x14475=((1.0)*x14464);
evalcond[0]=((((-1.0)*x14465))+((cj6*r20))+(((-1.0)*r21*x14473)));
evalcond[1]=((((-1.0)*r21*sj5*x14472))+(((-1.0)*x14475))+(((-1.0)*r22*x14471))+(((-1.0)*r20*sj5*x14473)));
evalcond[2]=((0.1246)+(((-0.02626)*x14465))+pz+(((-1.0)*r21*x14467))+(((0.0718)*x14464))+((r20*x14469)));
evalcond[3]=((((-1.0)*x14470*x14472))+((cj6*x14474))+((r11*x14466))+(((-1.0)*x14468*x14473))+(((-1.0)*x14475)));
evalcond[4]=((((-1.0)*sj5*x14468*x14472))+(((-1.0)*sj5*x14473*x14474))+((cj0*cj5*r12))+((cj0*cj6*r11*sj5))+x14465+((r10*sj5*x14466))+(((-1.0)*r02*sj0*x14471)));
evalcond[5]=((-0.09756)+(((-0.02626)*x14464))+((x14469*x14474))+(((0.02626)*r11*x14466))+(((-1.0)*x14469*x14470))+(((-1.0)*x14467*x14468))+((px*sj0))+(((-1.0)*cj0*py))+(((-0.0718)*x14465)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14476=((1.0)*sj6);
CheckValue<IkReal> x14477=IKPowWithIntegerCheck(sj2,-1);
if(!x14477.valid){
continue;
}
CheckValue<IkReal> x14478=IKPowWithIntegerCheck(cj2,-1);
if(!x14478.valid){
continue;
}
if( IKabs(((x14477.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14478.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x14476))+(((-1.0)*cj0*r01*x14476))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14477.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x14478.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x14476))+(((-1.0)*cj0*r01*x14476))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x14477.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x14478.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x14476))+(((-1.0)*cj0*r01*x14476))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14479=IKcos(j4);
IkReal x14480=IKsin(j4);
IkReal x14481=((0.02626)*sj0);
IkReal x14482=(cj6*r10);
IkReal x14483=(r01*sj6);
IkReal x14484=(r11*sj0);
IkReal x14485=(cj0*cj5);
IkReal x14486=(cj6*sj5);
IkReal x14487=(cj0*sj6);
IkReal x14488=((0.02626)*cj0);
IkReal x14489=((1.0)*cj5);
IkReal x14490=(cj6*r20);
IkReal x14491=((1.0)*sj0);
IkReal x14492=(r21*sj6);
IkReal x14493=(r00*sj5);
IkReal x14494=(cj6*r00);
IkReal x14495=((1.0)*cj0);
IkReal x14496=(r10*sj5*sj6);
IkReal x14497=(cj2*x14480);
IkReal x14498=(cj2*x14479);
IkReal x14499=(sj2*x14480);
IkReal x14500=(sj2*x14479);
evalcond[0]=((((-1.0)*x14492))+x14500+x14490);
evalcond[1]=((((-1.0)*r22*x14489))+x14499+(((-1.0)*r21*x14486))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((cj0*x14483))+(((-1.0)*x14494*x14495))+x14498+(((-1.0)*x14482*x14491))+((sj6*x14484)));
evalcond[3]=(((r11*x14487))+(((-1.0)*x14480))+((sj0*x14494))+(((-1.0)*x14483*x14491))+(((-1.0)*x14482*x14495)));
evalcond[4]=((0.1255)+(((0.02626)*x14500))+(((0.1158)*cj2))+(((-0.0718)*x14499))+pz+(((0.0009)*sj2))+(((0.02626)*x14490))+(((-0.02626)*x14492)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x14485))+((x14484*x14486))+((x14487*x14493))+((sj0*x14496))+x14497+((cj0*r01*x14486)));
evalcond[6]=(((r10*sj5*x14487))+((r12*x14485))+(((-1.0)*r01*x14486*x14491))+(((-1.0)*sj6*x14491*x14493))+x14479+(((-1.0)*r02*sj0*x14489))+((cj0*r11*x14486)));
evalcond[7]=((-0.09756)+(((-1.0)*x14481*x14483))+(((-0.02626)*x14480))+((x14481*x14494))+(((0.02626)*r11*x14487))+((px*sj0))+(((-1.0)*x14482*x14488))+(((-0.0718)*x14479))+(((-1.0)*py*x14495)));
evalcond[8]=((-0.001)+(((-1.0)*x14481*x14482))+(((-1.0)*x14488*x14494))+(((-0.1158)*sj2))+(((-0.0718)*x14497))+((r11*sj6*x14481))+(((0.0009)*cj2))+(((-1.0)*px*x14495))+((x14483*x14488))+(((0.02626)*x14498))+(((-1.0)*py*x14491)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14501=((1.0)*cj6);
CheckValue<IkReal> x14502=IKPowWithIntegerCheck(sj2,-1);
if(!x14502.valid){
continue;
}
if( IKabs(((((-1.0)*cj0*r10*x14501))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14502.value)*((((r21*sj6))+(((-1.0)*r20*x14501)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*r10*x14501))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6))))+IKsqr(((x14502.value)*((((r21*sj6))+(((-1.0)*r20*x14501))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*r10*x14501))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6))), ((x14502.value)*((((r21*sj6))+(((-1.0)*r20*x14501))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14503=IKcos(j4);
IkReal x14504=IKsin(j4);
IkReal x14505=((0.02626)*sj0);
IkReal x14506=(cj6*r10);
IkReal x14507=(r01*sj6);
IkReal x14508=(r11*sj0);
IkReal x14509=(cj0*cj5);
IkReal x14510=(cj6*sj5);
IkReal x14511=(cj0*sj6);
IkReal x14512=((0.02626)*cj0);
IkReal x14513=((1.0)*cj5);
IkReal x14514=(cj6*r20);
IkReal x14515=((1.0)*sj0);
IkReal x14516=(r21*sj6);
IkReal x14517=(r00*sj5);
IkReal x14518=(cj6*r00);
IkReal x14519=((1.0)*cj0);
IkReal x14520=(r10*sj5*sj6);
IkReal x14521=(cj2*x14504);
IkReal x14522=(cj2*x14503);
IkReal x14523=(sj2*x14504);
IkReal x14524=(sj2*x14503);
evalcond[0]=(x14514+x14524+(((-1.0)*x14516)));
evalcond[1]=((((-1.0)*r22*x14513))+x14523+(((-1.0)*r20*sj5*sj6))+(((-1.0)*r21*x14510)));
evalcond[2]=((((-1.0)*x14518*x14519))+x14522+((sj6*x14508))+(((-1.0)*x14506*x14515))+((cj0*x14507)));
evalcond[3]=((((-1.0)*x14507*x14515))+(((-1.0)*x14504))+((r11*x14511))+((sj0*x14518))+(((-1.0)*x14506*x14519)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((-0.02626)*x14516))+(((0.02626)*x14524))+(((-0.0718)*x14523))+(((0.02626)*x14514))+pz+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x14509))+((x14511*x14517))+((sj0*x14520))+x14521+((cj0*r01*x14510))+((x14508*x14510)));
evalcond[6]=((((-1.0)*r02*sj0*x14513))+(((-1.0)*sj6*x14515*x14517))+((cj0*r11*x14510))+x14503+((r10*sj5*x14511))+(((-1.0)*r01*x14510*x14515))+((r12*x14509)));
evalcond[7]=((-0.09756)+(((-1.0)*py*x14519))+(((-1.0)*x14505*x14507))+(((-0.02626)*x14504))+(((0.02626)*r11*x14511))+((px*sj0))+((x14505*x14518))+(((-0.0718)*x14503))+(((-1.0)*x14506*x14512)));
evalcond[8]=((-0.001)+(((-1.0)*py*x14515))+(((-0.1158)*sj2))+(((-1.0)*x14505*x14506))+(((-1.0)*px*x14519))+(((-1.0)*x14512*x14518))+(((0.02626)*x14522))+(((-0.0718)*x14521))+(((0.0009)*cj2))+((r11*sj6*x14505))+((x14507*x14512)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x14525=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x14525.valid){
continue;
}
CheckValue<IkReal> x14526 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x14526.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14525.value)))+(x14526.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14527=IKcos(j4);
IkReal x14528=IKsin(j4);
IkReal x14529=((0.02626)*sj0);
IkReal x14530=(cj6*r10);
IkReal x14531=(r01*sj6);
IkReal x14532=(r11*sj0);
IkReal x14533=(cj0*cj5);
IkReal x14534=(cj6*sj5);
IkReal x14535=(cj0*sj6);
IkReal x14536=((0.02626)*cj0);
IkReal x14537=((1.0)*cj5);
IkReal x14538=(cj6*r20);
IkReal x14539=((1.0)*sj0);
IkReal x14540=(r21*sj6);
IkReal x14541=(r00*sj5);
IkReal x14542=(cj6*r00);
IkReal x14543=((1.0)*cj0);
IkReal x14544=(r10*sj5*sj6);
IkReal x14545=(cj2*x14528);
IkReal x14546=(cj2*x14527);
IkReal x14547=(sj2*x14528);
IkReal x14548=(sj2*x14527);
evalcond[0]=((((-1.0)*x14540))+x14538+x14548);
evalcond[1]=((((-1.0)*r22*x14537))+(((-1.0)*r21*x14534))+x14547+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((sj6*x14532))+(((-1.0)*x14530*x14539))+(((-1.0)*x14542*x14543))+((cj0*x14531))+x14546);
evalcond[3]=((((-1.0)*x14528))+((sj0*x14542))+((r11*x14535))+(((-1.0)*x14531*x14539))+(((-1.0)*x14530*x14543)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((-0.0718)*x14547))+(((-0.02626)*x14540))+pz+(((0.02626)*x14548))+(((0.0009)*sj2))+(((0.02626)*x14538)));
evalcond[5]=(((cj5*r12*sj0))+((cj0*r01*x14534))+((r02*x14533))+((sj0*x14544))+x14545+((x14532*x14534))+((x14535*x14541)));
evalcond[6]=(((r12*x14533))+((cj0*r11*x14534))+(((-1.0)*sj6*x14539*x14541))+(((-1.0)*r01*x14534*x14539))+((r10*sj5*x14535))+x14527+(((-1.0)*r02*sj0*x14537)));
evalcond[7]=((-0.09756)+(((0.02626)*r11*x14535))+(((-0.02626)*x14528))+(((-1.0)*x14530*x14536))+((x14529*x14542))+(((-0.0718)*x14527))+(((-1.0)*x14529*x14531))+((px*sj0))+(((-1.0)*py*x14543)));
evalcond[8]=((-0.001)+(((-1.0)*px*x14543))+(((-0.1158)*sj2))+(((-0.0718)*x14545))+(((0.0009)*cj2))+(((-1.0)*x14529*x14530))+(((0.02626)*x14546))+((r11*sj6*x14529))+((x14531*x14536))+(((-1.0)*x14536*x14542))+(((-1.0)*py*x14539)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14549=cj3*cj3;
IkReal x14550=(cj2*cj6);
IkReal x14551=((1.0)*sj5);
IkReal x14552=(cj1*sj0);
IkReal x14553=(cj2*sj6);
IkReal x14554=(r11*sj6);
IkReal x14555=(sj1*sj3);
IkReal x14556=((1.0)*cj6);
IkReal x14557=(cj0*r00);
IkReal x14558=((1.0)*cj3);
IkReal x14559=(cj5*r22);
IkReal x14560=(cj1*cj2);
IkReal x14561=(sj2*x14560);
IkReal x14562=((1.0)*x14549);
IkReal x14563=(cj0*cj1*r01);
CheckValue<IkReal> x14564=IKPowWithIntegerCheck((((cj3*sj2*x14555))+x14561+(((-1.0)*x14561*x14562))),-1);
if(!x14564.valid){
continue;
}
CheckValue<IkReal> x14565=IKPowWithIntegerCheck((x14560+(((-1.0)*x14560*x14562))+((cj3*x14555))),-1);
if(!x14565.valid){
continue;
}
if( IKabs(((x14564.value)*((((sj0*x14554*x14555))+((cj0*r01*sj6*x14555))+(((-1.0)*cj2*x14559))+(((-1.0)*x14555*x14556*x14557))+(((-1.0)*r20*x14551*x14553))+(((-1.0)*x14553*x14558*x14563))+(((-1.0)*r11*x14552*x14553*x14558))+((cj3*r10*x14550*x14552))+(((-1.0)*r21*x14550*x14551))+(((-1.0)*r10*sj0*x14555*x14556))+((cj1*cj3*x14550*x14557)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14565.value)*(((((-1.0)*cj3*r20*sj6*x14551))+(((-1.0)*sj6*x14563))+((cj1*cj6*x14557))+(((-1.0)*x14558*x14559))+((cj6*r10*x14552))+(((-1.0)*cj3*cj6*r21*x14551))+(((-1.0)*x14552*x14554)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14564.value)*((((sj0*x14554*x14555))+((cj0*r01*sj6*x14555))+(((-1.0)*cj2*x14559))+(((-1.0)*x14555*x14556*x14557))+(((-1.0)*r20*x14551*x14553))+(((-1.0)*x14553*x14558*x14563))+(((-1.0)*r11*x14552*x14553*x14558))+((cj3*r10*x14550*x14552))+(((-1.0)*r21*x14550*x14551))+(((-1.0)*r10*sj0*x14555*x14556))+((cj1*cj3*x14550*x14557))))))+IKsqr(((x14565.value)*(((((-1.0)*cj3*r20*sj6*x14551))+(((-1.0)*sj6*x14563))+((cj1*cj6*x14557))+(((-1.0)*x14558*x14559))+((cj6*r10*x14552))+(((-1.0)*cj3*cj6*r21*x14551))+(((-1.0)*x14552*x14554))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x14564.value)*((((sj0*x14554*x14555))+((cj0*r01*sj6*x14555))+(((-1.0)*cj2*x14559))+(((-1.0)*x14555*x14556*x14557))+(((-1.0)*r20*x14551*x14553))+(((-1.0)*x14553*x14558*x14563))+(((-1.0)*r11*x14552*x14553*x14558))+((cj3*r10*x14550*x14552))+(((-1.0)*r21*x14550*x14551))+(((-1.0)*r10*sj0*x14555*x14556))+((cj1*cj3*x14550*x14557))))), ((x14565.value)*(((((-1.0)*cj3*r20*sj6*x14551))+(((-1.0)*sj6*x14563))+((cj1*cj6*x14557))+(((-1.0)*x14558*x14559))+((cj6*r10*x14552))+(((-1.0)*cj3*cj6*r21*x14551))+(((-1.0)*x14552*x14554))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14566=IKsin(j4);
IkReal x14567=IKcos(j4);
IkReal x14568=(cj0*sj6);
IkReal x14569=((1.0)*cj5);
IkReal x14570=(cj2*sj1);
IkReal x14571=((1.0)*cj3);
IkReal x14572=((0.0718)*cj1);
IkReal x14573=(cj6*sj0);
IkReal x14574=(cj5*r12);
IkReal x14575=((0.02626)*r10);
IkReal x14576=((1.0)*r21);
IkReal x14577=((1.0)*sj5);
IkReal x14578=((0.02626)*cj3);
IkReal x14579=(sj0*sj6);
IkReal x14580=(r10*sj5);
IkReal x14581=((0.02626)*r01);
IkReal x14582=(cj0*cj6);
IkReal x14583=((0.0009)*sj2);
IkReal x14584=((0.02626)*r11);
IkReal x14585=((1.0)*sj1);
IkReal x14586=((1.0)*py);
IkReal x14587=(cj1*cj2);
IkReal x14588=((0.02626)*r00);
IkReal x14589=(cj6*r20);
IkReal x14590=((0.09746)*cj3);
IkReal x14591=(r11*sj5);
IkReal x14592=((0.09746)*sj3);
IkReal x14593=((1.0)*cj1);
IkReal x14594=((0.02626)*cj1);
IkReal x14595=((0.0718)*sj1);
IkReal x14596=((1.0)*r10);
IkReal x14597=(cj2*x14566);
IkReal x14598=(cj3*x14567);
IkReal x14599=(sj2*x14566);
IkReal x14600=(cj2*x14567);
IkReal x14601=(sj2*x14567);
IkReal x14602=(sj3*x14566);
IkReal x14603=(sj3*x14567);
IkReal x14604=(sj1*x14602);
evalcond[0]=((((-1.0)*x14566*x14571*x14587))+(((-1.0)*x14593*x14601))+x14589+x14604+(((-1.0)*sj6*x14576)));
evalcond[1]=(((r01*x14568))+(((-1.0)*x14571*x14599))+x14600+((r11*x14579))+(((-1.0)*x14573*x14596))+(((-1.0)*r00*x14582)));
evalcond[2]=((((-1.0)*cj6*sj5*x14576))+(((-1.0)*r20*sj6*x14577))+(((-1.0)*r22*x14569))+((x14587*x14598))+(((-1.0)*x14593*x14599))+(((-1.0)*x14585*x14603)));
evalcond[3]=(((cj0*cj5*r02))+((r00*sj5*x14568))+((x14573*x14591))+x14597+((sj0*x14574))+((sj2*x14598))+((r01*sj5*x14582))+((x14579*x14580)));
evalcond[4]=((((-1.0)*x14593*x14602))+((r11*x14568))+(((-1.0)*x14566*x14570*x14571))+(((-1.0)*x14585*x14601))+(((-1.0)*r01*x14579))+(((-1.0)*x14582*x14596))+((r00*x14573)));
evalcond[5]=((((-1.0)*r02*sj0*x14569))+((cj0*x14574))+((x14568*x14580))+((cj1*x14603))+((x14570*x14598))+((x14582*x14591))+(((-1.0)*r00*x14577*x14579))+(((-1.0)*x14585*x14599))+(((-1.0)*r01*x14573*x14577)));
evalcond[6]=((-0.001)+((x14568*x14581))+(((-0.1158)*sj2))+(((-1.0)*x14578*x14599))+(((-1.0)*sj2*x14590))+(((-1.0)*x14573*x14575))+(((0.02626)*x14600))+(((0.0009)*cj2))+(((-1.0)*sj0*x14586))+(((-0.0718)*sj2*x14598))+(((-0.0718)*x14597))+(((-1.0)*x14582*x14588))+((x14579*x14584))+(((-1.0)*cj0*px)));
evalcond[7]=((((-0.02626)*r21*sj6))+(((-1.0)*cj2*x14572*x14598))+(((0.02626)*x14589))+(((-1.0)*x14587*x14590))+((sj1*x14592))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-1.0)*x14566*x14578*x14587))+((x14572*x14599))+((x14595*x14603))+(((-0.1158)*x14587))+(((0.02626)*x14604))+(((-1.0)*x14594*x14601))+pz+(((-1.0)*cj1*x14583)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*cj1*x14592))+((x14568*x14584))+(((-1.0)*sj1*x14583))+(((-1.0)*x14575*x14582))+(((-0.1158)*x14570))+((x14573*x14588))+((x14595*x14599))+(((-1.0)*cj0*x14586))+(((-1.0)*x14594*x14602))+(((-1.0)*x14572*x14603))+(((-1.0)*x14566*x14570*x14578))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*x14570*x14590))+(((-0.0718)*x14570*x14598))+(((-0.02626)*sj1*x14601))+(((-1.0)*x14579*x14581)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14605=cj1*cj1;
IkReal x14606=cj3*cj3;
IkReal x14607=cj2*cj2;
IkReal x14608=((1.0)*sj5);
IkReal x14609=(cj1*sj2);
IkReal x14610=(r20*sj6);
IkReal x14611=(sj1*sj3);
IkReal x14612=(cj6*r20);
IkReal x14613=(cj6*r21);
IkReal x14614=(r21*x14611);
IkReal x14615=(cj1*cj2*cj3);
IkReal x14616=((1.0)*r21*sj6);
IkReal x14617=((1.0)*cj5*r22);
IkReal x14618=(x14605*x14606);
CheckValue<IkReal> x14619=IKPowWithIntegerCheck(IKsign(((1.0)+(((-1.0)*x14605*x14607))+((x14607*x14618))+(((-1.0)*x14606))+x14618+(((-2.0)*x14611*x14615)))),-1);
if(!x14619.valid){
continue;
}
CheckValue<IkReal> x14620 = IKatan2WithCheck(IkReal(((((-1.0)*x14608*x14609*x14610))+(((-1.0)*x14608*x14609*x14613))+(((-1.0)*x14615*x14616))+((sj6*x14614))+(((-1.0)*x14611*x14612))+((x14612*x14615))+(((-1.0)*x14609*x14617)))),(((cj5*r22*x14615))+((x14609*x14612))+((sj5*x14613*x14615))+(((-1.0)*x14608*x14611*x14613))+(((-1.0)*x14608*x14610*x14611))+(((-1.0)*x14609*x14616))+((sj5*x14610*x14615))+(((-1.0)*x14611*x14617))),IKFAST_ATAN2_MAGTHRESH);
if(!x14620.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14619.value)))+(x14620.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14621=IKsin(j4);
IkReal x14622=IKcos(j4);
IkReal x14623=(cj0*sj6);
IkReal x14624=((1.0)*cj5);
IkReal x14625=(cj2*sj1);
IkReal x14626=((1.0)*cj3);
IkReal x14627=((0.0718)*cj1);
IkReal x14628=(cj6*sj0);
IkReal x14629=(cj5*r12);
IkReal x14630=((0.02626)*r10);
IkReal x14631=((1.0)*r21);
IkReal x14632=((1.0)*sj5);
IkReal x14633=((0.02626)*cj3);
IkReal x14634=(sj0*sj6);
IkReal x14635=(r10*sj5);
IkReal x14636=((0.02626)*r01);
IkReal x14637=(cj0*cj6);
IkReal x14638=((0.0009)*sj2);
IkReal x14639=((0.02626)*r11);
IkReal x14640=((1.0)*sj1);
IkReal x14641=((1.0)*py);
IkReal x14642=(cj1*cj2);
IkReal x14643=((0.02626)*r00);
IkReal x14644=(cj6*r20);
IkReal x14645=((0.09746)*cj3);
IkReal x14646=(r11*sj5);
IkReal x14647=((0.09746)*sj3);
IkReal x14648=((1.0)*cj1);
IkReal x14649=((0.02626)*cj1);
IkReal x14650=((0.0718)*sj1);
IkReal x14651=((1.0)*r10);
IkReal x14652=(cj2*x14621);
IkReal x14653=(cj3*x14622);
IkReal x14654=(sj2*x14621);
IkReal x14655=(cj2*x14622);
IkReal x14656=(sj2*x14622);
IkReal x14657=(sj3*x14621);
IkReal x14658=(sj3*x14622);
IkReal x14659=(sj1*x14657);
evalcond[0]=(x14659+x14644+(((-1.0)*sj6*x14631))+(((-1.0)*x14648*x14656))+(((-1.0)*x14621*x14626*x14642)));
evalcond[1]=((((-1.0)*x14626*x14654))+(((-1.0)*x14628*x14651))+(((-1.0)*r00*x14637))+((r11*x14634))+x14655+((r01*x14623)));
evalcond[2]=(((x14642*x14653))+(((-1.0)*x14640*x14658))+(((-1.0)*r20*sj6*x14632))+(((-1.0)*r22*x14624))+(((-1.0)*x14648*x14654))+(((-1.0)*cj6*sj5*x14631)));
evalcond[3]=(((x14628*x14646))+((cj0*cj5*r02))+((r01*sj5*x14637))+((x14634*x14635))+((sj2*x14653))+x14652+((r00*sj5*x14623))+((sj0*x14629)));
evalcond[4]=(((r11*x14623))+(((-1.0)*x14640*x14656))+((r00*x14628))+(((-1.0)*x14621*x14625*x14626))+(((-1.0)*r01*x14634))+(((-1.0)*x14648*x14657))+(((-1.0)*x14637*x14651)));
evalcond[5]=(((x14625*x14653))+(((-1.0)*r00*x14632*x14634))+(((-1.0)*r01*x14628*x14632))+((x14623*x14635))+(((-1.0)*x14640*x14654))+(((-1.0)*r02*sj0*x14624))+((cj0*x14629))+((x14637*x14646))+((cj1*x14658)));
evalcond[6]=((-0.001)+(((-1.0)*x14637*x14643))+(((-0.0718)*sj2*x14653))+(((-0.1158)*sj2))+(((-1.0)*x14628*x14630))+((x14623*x14636))+(((0.02626)*x14655))+((x14634*x14639))+(((-0.0718)*x14652))+(((0.0009)*cj2))+(((-1.0)*sj0*x14641))+(((-1.0)*x14633*x14654))+(((-1.0)*cj0*px))+(((-1.0)*sj2*x14645)));
evalcond[7]=((((-0.1158)*x14642))+(((-0.02626)*r21*sj6))+(((-1.0)*x14621*x14633*x14642))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((0.02626)*x14644))+(((-1.0)*x14642*x14645))+(((0.02626)*x14659))+((x14627*x14654))+((sj1*x14647))+pz+(((-1.0)*x14649*x14656))+(((-1.0)*cj1*x14638))+(((-1.0)*cj2*x14627*x14653))+((x14650*x14658)));
evalcond[8]=((((-1.0)*x14621*x14625*x14633))+(((-0.1255)*sj1))+((x14628*x14643))+((x14623*x14639))+(((-1.0)*x14625*x14645))+(((-0.1158)*x14625))+(((-1.0)*cj1*x14647))+(((-1.0)*x14627*x14658))+(((-0.02626)*sj1*x14656))+(((-1.0)*sj1*x14638))+(((-1.0)*x14634*x14636))+(((-1.0)*x14649*x14657))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*cj0*x14641))+(((-1.0)*x14630*x14637))+(((-0.0718)*x14625*x14653))+((x14650*x14654)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14660=(cj0*r00);
IkReal x14661=(r10*sj0);
IkReal x14662=(sj1*sj3);
IkReal x14663=((1.0)*cj2);
IkReal x14664=((1.0)*cj6);
IkReal x14665=(cj1*sj2);
IkReal x14666=(r21*sj6);
IkReal x14667=(cj3*sj2);
IkReal x14668=(cj1*cj3);
IkReal x14669=(cj6*r20);
IkReal x14670=(r11*sj0*sj6);
IkReal x14671=(cj0*r01*sj6);
IkReal x14672=(x14664*x14665);
IkReal x14673=(cj2*cj6*x14668);
CheckValue<IkReal> x14674=IKPowWithIntegerCheck(IKsign((x14668+(((-1.0)*x14662*x14663)))),-1);
if(!x14674.valid){
continue;
}
CheckValue<IkReal> x14675 = IKatan2WithCheck(IkReal(((((-1.0)*x14661*x14672))+(((-1.0)*x14660*x14672))+(((-1.0)*x14663*x14666))+((cj2*x14669))+((x14665*x14671))+((x14665*x14670)))),((((-1.0)*x14660*x14662*x14664))+((x14660*x14673))+((x14661*x14673))+((x14662*x14671))+((x14662*x14670))+((x14667*x14669))+(((-1.0)*x14666*x14667))+(((-1.0)*x14663*x14668*x14671))+(((-1.0)*x14663*x14668*x14670))+(((-1.0)*x14661*x14662*x14664))),IKFAST_ATAN2_MAGTHRESH);
if(!x14675.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14674.value)))+(x14675.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14676=IKsin(j4);
IkReal x14677=IKcos(j4);
IkReal x14678=(cj0*sj6);
IkReal x14679=((1.0)*cj5);
IkReal x14680=(cj2*sj1);
IkReal x14681=((1.0)*cj3);
IkReal x14682=((0.0718)*cj1);
IkReal x14683=(cj6*sj0);
IkReal x14684=(cj5*r12);
IkReal x14685=((0.02626)*r10);
IkReal x14686=((1.0)*r21);
IkReal x14687=((1.0)*sj5);
IkReal x14688=((0.02626)*cj3);
IkReal x14689=(sj0*sj6);
IkReal x14690=(r10*sj5);
IkReal x14691=((0.02626)*r01);
IkReal x14692=(cj0*cj6);
IkReal x14693=((0.0009)*sj2);
IkReal x14694=((0.02626)*r11);
IkReal x14695=((1.0)*sj1);
IkReal x14696=((1.0)*py);
IkReal x14697=(cj1*cj2);
IkReal x14698=((0.02626)*r00);
IkReal x14699=(cj6*r20);
IkReal x14700=((0.09746)*cj3);
IkReal x14701=(r11*sj5);
IkReal x14702=((0.09746)*sj3);
IkReal x14703=((1.0)*cj1);
IkReal x14704=((0.02626)*cj1);
IkReal x14705=((0.0718)*sj1);
IkReal x14706=((1.0)*r10);
IkReal x14707=(cj2*x14676);
IkReal x14708=(cj3*x14677);
IkReal x14709=(sj2*x14676);
IkReal x14710=(cj2*x14677);
IkReal x14711=(sj2*x14677);
IkReal x14712=(sj3*x14676);
IkReal x14713=(sj3*x14677);
IkReal x14714=(sj1*x14712);
evalcond[0]=((((-1.0)*x14703*x14711))+(((-1.0)*sj6*x14686))+x14699+x14714+(((-1.0)*x14676*x14681*x14697)));
evalcond[1]=((((-1.0)*r00*x14692))+(((-1.0)*x14681*x14709))+((r11*x14689))+((r01*x14678))+x14710+(((-1.0)*x14683*x14706)));
evalcond[2]=((((-1.0)*x14695*x14713))+(((-1.0)*r22*x14679))+(((-1.0)*r20*sj6*x14687))+(((-1.0)*x14703*x14709))+((x14697*x14708))+(((-1.0)*cj6*sj5*x14686)));
evalcond[3]=(((r00*sj5*x14678))+((cj0*cj5*r02))+((x14683*x14701))+x14707+((sj0*x14684))+((x14689*x14690))+((sj2*x14708))+((r01*sj5*x14692)));
evalcond[4]=((((-1.0)*x14703*x14712))+((r00*x14683))+(((-1.0)*x14695*x14711))+(((-1.0)*x14692*x14706))+(((-1.0)*x14676*x14680*x14681))+((r11*x14678))+(((-1.0)*r01*x14689)));
evalcond[5]=((((-1.0)*r01*x14683*x14687))+((x14678*x14690))+(((-1.0)*r00*x14687*x14689))+(((-1.0)*r02*sj0*x14679))+((x14692*x14701))+(((-1.0)*x14695*x14709))+((x14680*x14708))+((cj1*x14713))+((cj0*x14684)));
evalcond[6]=((-0.001)+(((-1.0)*x14683*x14685))+(((0.02626)*x14710))+(((-0.1158)*sj2))+(((-1.0)*sj0*x14696))+((x14678*x14691))+(((-0.0718)*x14707))+(((-1.0)*sj2*x14700))+(((0.0009)*cj2))+(((-0.0718)*sj2*x14708))+((x14689*x14694))+(((-1.0)*x14688*x14709))+(((-1.0)*x14692*x14698))+(((-1.0)*cj0*px)));
evalcond[7]=((((0.02626)*x14714))+(((-1.0)*cj1*x14693))+(((-0.02626)*r21*sj6))+((x14682*x14709))+(((0.02626)*x14699))+(((-0.1255)*cj1))+(((-0.1158)*x14697))+(((-0.0001)*sj1))+(((-1.0)*cj2*x14682*x14708))+(((-1.0)*x14697*x14700))+pz+(((-1.0)*x14676*x14688*x14697))+((x14705*x14713))+(((-1.0)*x14704*x14711))+((sj1*x14702)));
evalcond[8]=((((-1.0)*x14680*x14700))+(((-0.1255)*sj1))+((x14678*x14694))+(((-0.1158)*x14680))+((x14705*x14709))+(((-0.0718)*x14680*x14708))+(((-1.0)*cj1*x14702))+(((-0.02626)*sj1*x14711))+(((-1.0)*cj0*x14696))+(((-1.0)*x14685*x14692))+(((-1.0)*x14682*x14713))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*sj1*x14693))+(((-1.0)*x14676*x14680*x14688))+(((-1.0)*x14704*x14712))+((x14683*x14698))+(((-1.0)*x14689*x14691)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x14715=(cj5*sj6);
IkReal x14716=(sj0*sj1);
IkReal x14717=(cj5*cj6);
IkReal x14718=((1.0)*cj1);
IkReal x14719=(r22*sj5);
IkReal x14720=(r02*sj5);
IkReal x14721=(cj0*r11);
IkReal x14722=((1.0)*sj1);
IkReal x14723=(cj0*r10);
IkReal x14724=(cj0*r12*sj5);
CheckValue<IkReal> x14725=IKPowWithIntegerCheck(cj2,-1);
if(!x14725.valid){
continue;
}
if( IKabs(((x14725.value)*((((cj1*r20*x14715))+((sj1*x14724))+((r01*x14716*x14717))+(((-1.0)*x14715*x14722*x14723))+((r00*x14715*x14716))+(((-1.0)*x14716*x14720))+(((-1.0)*x14718*x14719))+((cj1*r21*x14717))+(((-1.0)*x14717*x14721*x14722)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x14717*x14721))+(((-1.0)*r00*sj0*x14715*x14718))+(((-1.0)*x14718*x14724))+(((-1.0)*x14719*x14722))+((cj1*x14715*x14723))+((cj1*sj0*x14720))+((r20*sj1*x14715))+(((-1.0)*r01*sj0*x14717*x14718))+((r21*sj1*x14717)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14725.value)*((((cj1*r20*x14715))+((sj1*x14724))+((r01*x14716*x14717))+(((-1.0)*x14715*x14722*x14723))+((r00*x14715*x14716))+(((-1.0)*x14716*x14720))+(((-1.0)*x14718*x14719))+((cj1*r21*x14717))+(((-1.0)*x14717*x14721*x14722))))))+IKsqr((((cj1*x14717*x14721))+(((-1.0)*r00*sj0*x14715*x14718))+(((-1.0)*x14718*x14724))+(((-1.0)*x14719*x14722))+((cj1*x14715*x14723))+((cj1*sj0*x14720))+((r20*sj1*x14715))+(((-1.0)*r01*sj0*x14717*x14718))+((r21*sj1*x14717))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x14725.value)*((((cj1*r20*x14715))+((sj1*x14724))+((r01*x14716*x14717))+(((-1.0)*x14715*x14722*x14723))+((r00*x14715*x14716))+(((-1.0)*x14716*x14720))+(((-1.0)*x14718*x14719))+((cj1*r21*x14717))+(((-1.0)*x14717*x14721*x14722))))), (((cj1*x14717*x14721))+(((-1.0)*r00*sj0*x14715*x14718))+(((-1.0)*x14718*x14724))+(((-1.0)*x14719*x14722))+((cj1*x14715*x14723))+((cj1*sj0*x14720))+((r20*sj1*x14715))+(((-1.0)*r01*sj0*x14717*x14718))+((r21*sj1*x14717))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x14726=IKsin(j3);
IkReal x14727=IKcos(j3);
IkReal x14728=((1.0)*sj1);
IkReal x14729=(cj0*sj5);
IkReal x14730=(cj5*cj6);
IkReal x14731=((1.0)*sj5);
IkReal x14732=((1.0)*cj0);
IkReal x14733=((1.0)*sj0);
IkReal x14734=(cj5*sj6);
IkReal x14735=((1.0)*x14726);
evalcond[0]=(((r20*x14734))+(((-1.0)*cj1*cj2*x14735))+(((-1.0)*r22*x14731))+(((-1.0)*x14727*x14728))+((r21*x14730)));
evalcond[1]=((((-1.0)*sj2*x14735))+(((-1.0)*r00*x14732*x14734))+((r02*x14729))+((r12*sj0*sj5))+(((-1.0)*r01*x14730*x14732))+(((-1.0)*r10*x14733*x14734))+(((-1.0)*r11*x14730*x14733)));
evalcond[2]=(((cj1*x14727))+(((-1.0)*cj2*x14726*x14728))+((r00*sj0*x14734))+((r01*sj0*x14730))+(((-1.0)*r10*x14732*x14734))+(((-1.0)*r02*sj0*x14731))+(((-1.0)*r11*x14730*x14732))+((r12*x14729)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j4eval[2];
IkReal x14736=((((-1.0)*cj2*sj1*sj3))+((cj1*cj3)));
j4eval[0]=x14736;
j4eval[1]=IKsign(x14736);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
IkReal x14737=cj1*cj1;
IkReal x14738=cj3*cj3;
IkReal x14739=cj2*cj2;
IkReal x14740=(x14737*x14738);
IkReal x14741=((1.0)+(((-2.0)*cj1*cj2*cj3*sj1*sj3))+(((-1.0)*x14738))+(((-1.0)*x14737*x14739))+x14740+((x14739*x14740)));
j4eval[0]=x14741;
j4eval[1]=IKsign(x14741);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
IkReal x14742=cj3*cj3;
IkReal x14743=(cj1*cj2);
IkReal x14744=(cj3*sj1*sj3);
IkReal x14745=(sj2*x14743);
IkReal x14746=((1.0)*x14742);
j4eval[0]=(((sj2*x14744))+(((-1.0)*x14745*x14746))+x14745);
j4eval[1]=((((-1.0)*x14743*x14746))+x14743+x14744);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x14747=(cj0*sj5);
IkReal x14748=(cj5*cj6);
IkReal x14749=((1.0)*sj3);
IkReal x14750=((1.0)*cj0);
IkReal x14751=((1.0)*sj0);
IkReal x14752=(cj5*sj6);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=(((r20*x14752))+((r21*x14748))+(((-1.0)*cj3*sj1))+(((-1.0)*cj1*x14749))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*r01*x14748*x14750))+(((-1.0)*r10*x14751*x14752))+(((-1.0)*r00*x14750*x14752))+((r12*sj0*sj5))+(((-1.0)*r11*x14748*x14751))+((r02*x14747)));
evalcond[3]=(((r01*sj0*x14748))+(((-1.0)*r10*x14750*x14752))+((r12*x14747))+(((-1.0)*r11*x14748*x14750))+((r00*sj0*x14752))+(((-1.0)*r02*sj5*x14751))+(((-1.0)*sj1*x14749))+((cj1*cj3)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x14753=(cj0*cj6);
IkReal x14754=((1.0)*cj5);
IkReal x14755=((1.0)*sj5);
IkReal x14756=(sj0*sj6);
IkReal x14757=(cj6*sj0);
IkReal x14758=(cj0*sj6);
if( IKabs(((((-1.0)*r00*x14755*x14758))+(((-1.0)*r12*sj0*x14754))+(((-1.0)*cj0*r02*x14754))+(((-1.0)*r01*x14753*x14755))+(((-1.0)*r11*x14755*x14757))+(((-1.0)*r10*x14755*x14756)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x14758))+(((-1.0)*r11*x14756))+((r10*x14757))+((r00*x14753)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x14755*x14758))+(((-1.0)*r12*sj0*x14754))+(((-1.0)*cj0*r02*x14754))+(((-1.0)*r01*x14753*x14755))+(((-1.0)*r11*x14755*x14757))+(((-1.0)*r10*x14755*x14756))))+IKsqr(((((-1.0)*r01*x14758))+(((-1.0)*r11*x14756))+((r10*x14757))+((r00*x14753))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r00*x14755*x14758))+(((-1.0)*r12*sj0*x14754))+(((-1.0)*cj0*r02*x14754))+(((-1.0)*r01*x14753*x14755))+(((-1.0)*r11*x14755*x14757))+(((-1.0)*r10*x14755*x14756))), ((((-1.0)*r01*x14758))+(((-1.0)*r11*x14756))+((r10*x14757))+((r00*x14753))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x14759=IKsin(j4);
IkReal x14760=IKcos(j4);
IkReal x14761=(r11*sj0);
IkReal x14762=(sj1*sj3);
IkReal x14763=(cj5*r12);
IkReal x14764=(cj6*sj5);
IkReal x14765=(sj0*sj6);
IkReal x14766=(r10*sj5);
IkReal x14767=((0.02626)*r01);
IkReal x14768=(cj0*sj6);
IkReal x14769=((1.0)*cj5);
IkReal x14770=(cj1*sj3);
IkReal x14771=((0.02626)*cj6);
IkReal x14772=((0.02626)*sj6);
IkReal x14773=((1.0)*r01);
IkReal x14774=(r00*sj5);
IkReal x14775=(cj3*sj1);
IkReal x14776=(cj1*cj3);
IkReal x14777=((1.0)*py);
IkReal x14778=(r00*sj0);
IkReal x14779=((1.0)*r21);
IkReal x14780=((1.0)*cj0);
IkReal x14781=((1.0)*cj6*r10);
IkReal x14782=((0.02626)*x14759);
IkReal x14783=((1.0)*x14759);
IkReal x14784=((0.0718)*x14760);
IkReal x14785=(x14760*x14776);
evalcond[0]=((((-1.0)*x14776*x14783))+((cj6*r20))+((x14759*x14762))+(((-1.0)*sj6*x14779)));
evalcond[1]=(((r01*x14768))+(((-1.0)*sj0*x14781))+((sj6*x14761))+x14760+(((-1.0)*cj6*r00*x14780)));
evalcond[2]=((((-1.0)*x14760*x14762))+(((-1.0)*r22*x14769))+x14785+(((-1.0)*x14764*x14779))+(((-1.0)*r20*sj5*sj6)));
evalcond[3]=(((sj0*x14763))+((x14761*x14764))+((cj0*cj5*r02))+((x14765*x14766))+((cj0*r01*x14764))+((x14768*x14774))+x14759);
evalcond[4]=(((cj6*x14778))+(((-1.0)*x14765*x14773))+(((-1.0)*x14770*x14783))+((r11*x14768))+(((-1.0)*x14775*x14783))+(((-1.0)*cj6*r10*x14780)));
evalcond[5]=((-0.0001)+((x14767*x14768))+(((-1.0)*sj0*x14777))+(((0.02626)*x14760))+((x14761*x14772))+(((-0.0718)*x14759))+(((-1.0)*r10*sj0*x14771))+(((-1.0)*cj0*r00*x14771))+(((-1.0)*px*x14780)));
evalcond[6]=(((cj0*r11*x14764))+((x14766*x14768))+((cj0*x14763))+(((-1.0)*sj0*x14764*x14773))+((x14760*x14775))+((x14760*x14770))+(((-1.0)*r02*sj0*x14769))+(((-1.0)*x14765*x14774)));
evalcond[7]=(((x14762*x14784))+((x14762*x14782))+(((-1.0)*x14776*x14784))+(((-1.0)*x14776*x14782))+(((-0.0001)*sj1))+(((0.09746)*x14762))+(((-0.2413)*cj1))+pz+(((-1.0)*r21*x14772))+(((-0.09746)*x14776))+((r20*x14771)));
evalcond[8]=((((0.02626)*r11*x14768))+(((-1.0)*x14770*x14782))+(((-1.0)*x14770*x14784))+(((-1.0)*cj0*x14777))+((x14771*x14778))+(((-0.09746)*x14770))+(((-0.09746)*x14775))+(((0.0001)*cj1))+((px*sj0))+(((-0.2413)*sj1))+(((-1.0)*x14765*x14767))+(((-1.0)*cj0*r10*x14771))+(((-1.0)*x14775*x14782))+(((-1.0)*x14775*x14784)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14786=(cj0*sj5);
IkReal x14787=(cj5*cj6);
IkReal x14788=((1.0)*sj5);
IkReal x14789=((1.0)*cj0);
IkReal x14790=((1.0)*sj0);
IkReal x14791=(cj5*sj6);
IkReal x14792=(r10*x14791);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj1*sj3))+((r20*x14791))+((r21*x14787))+(((-1.0)*cj3*sj1))+(((-1.0)*r22*x14788)));
evalcond[2]=((((-1.0)*r11*x14787*x14790))+(((-1.0)*x14790*x14792))+((r12*sj0*sj5))+(((-1.0)*r00*x14789*x14791))+((r02*x14786))+(((-1.0)*r01*x14787*x14789)));
evalcond[3]=(((r00*sj0*x14791))+(((-1.0)*x14789*x14792))+((sj1*sj3))+((r12*x14786))+(((-1.0)*r11*x14787*x14789))+((cj1*cj3))+((r01*sj0*x14787))+(((-1.0)*r02*sj0*x14788)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x14793=((1.0)*sj5);
IkReal x14794=(((sj1*sj3))+((cj1*cj3)));
j4eval[0]=x14794;
j4eval[1]=IKsign(x14794);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(((((-1.0)*cj6*r21*x14793))+(((-1.0)*r20*sj6*x14793))+(((-1.0)*cj5*r22))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=(((sj1*sj3))+((cj1*cj3)));
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
j4eval[0]=((((-1.0)*cj1*sj3))+((cj3*sj1)));
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x14795=(cj5*cj6);
IkReal x14796=(cj0*sj6);
IkReal x14797=(r01*sj0);
IkReal x14798=((1.0)*sj0);
IkReal x14799=((1.0)*cj5);
IkReal x14800=(cj0*r12);
IkReal x14801=(r02*sj5);
IkReal x14802=((1.0)*sj5);
IkReal x14803=(cj5*sj6);
IkReal x14804=((1.0)*cj0);
IkReal x14805=(cj0*cj6*r10);
IkReal x14806=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x14802))+((r21*x14795))+((r20*x14803)));
evalcond[2]=(x14806+((r11*x14796))+(((-1.0)*cj6*r10*x14804))+(((-1.0)*sj6*x14797)));
evalcond[3]=((((-1.0)*r01*x14795*x14804))+(((-1.0)*r00*x14796*x14799))+((r12*sj0*sj5))+(((-1.0)*r11*x14795*x14798))+((cj0*x14801))+(((-1.0)*r10*x14798*x14803)));
evalcond[4]=((1.0)+((sj5*x14800))+(((-1.0)*r10*x14796*x14799))+((x14795*x14797))+(((-1.0)*r11*x14795*x14804))+((r00*sj0*x14803))+(((-1.0)*x14798*x14801)));
evalcond[5]=((((-1.0)*cj5*r02*x14798))+(((-1.0)*r00*sj5*sj6*x14798))+((r10*sj5*x14796))+((cj0*cj6*r11*sj5))+((cj5*x14800))+(((-1.0)*cj6*x14797*x14802)));
evalcond[6]=((0.0001)+(((0.02626)*r11*x14796))+(((-1.0)*py*x14804))+(((0.02626)*x14806))+(((-0.02626)*x14805))+((px*sj0))+(((-0.02626)*sj6*x14797)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.22228412256267)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.22228412256267)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.22228412256267)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14807=IKcos(j4);
IkReal x14808=IKsin(j4);
IkReal x14809=(r11*sj0);
IkReal x14810=(cj6*sj5);
IkReal x14811=(r10*sj0);
IkReal x14812=(sj5*sj6);
IkReal x14813=((0.02626)*sj6);
IkReal x14814=(cj0*r01);
IkReal x14815=((0.02626)*cj6);
IkReal x14816=((1.0)*cj6);
IkReal x14817=(cj0*r00);
IkReal x14818=((1.0)*r21);
IkReal x14819=((1.0)*x14807);
evalcond[0]=(x14808+(((-1.0)*sj6*x14818))+((cj6*r20)));
evalcond[1]=((((-1.0)*x14819))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x14812))+(((-1.0)*x14810*x14818)));
evalcond[2]=((0.08776)+(((-1.0)*r21*x14813))+(((0.02626)*x14808))+pz+(((0.0718)*x14807))+((r20*x14815)));
evalcond[3]=(((sj6*x14809))+(((-1.0)*x14819))+((sj6*x14814))+(((-1.0)*x14811*x14816))+(((-1.0)*x14816*x14817)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x14809*x14810))+((x14811*x14812))+((x14810*x14814))+(((-1.0)*x14808))+((x14812*x14817)));
evalcond[5]=((-0.0019)+(((-1.0)*x14815*x14817))+((x14809*x14813))+((x14813*x14814))+(((-1.0)*x14811*x14815))+(((0.0718)*x14808))+(((-1.0)*py*sj0))+(((-0.02626)*x14807))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14820=(cj5*cj6);
IkReal x14821=(cj0*sj6);
IkReal x14822=(r01*sj0);
IkReal x14823=((1.0)*sj0);
IkReal x14824=((1.0)*cj5);
IkReal x14825=(cj0*r12);
IkReal x14826=(r02*sj5);
IkReal x14827=((1.0)*sj5);
IkReal x14828=(cj5*sj6);
IkReal x14829=((1.0)*cj0);
IkReal x14830=(cj0*cj6*r10);
IkReal x14831=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=(((r21*x14820))+(((-1.0)*r22*x14827))+((r20*x14828)));
evalcond[2]=(x14831+(((-1.0)*cj6*r10*x14829))+((r11*x14821))+(((-1.0)*sj6*x14822)));
evalcond[3]=(((r12*sj0*sj5))+(((-1.0)*r10*x14823*x14828))+((cj0*x14826))+(((-1.0)*r11*x14820*x14823))+(((-1.0)*r01*x14820*x14829))+(((-1.0)*r00*x14821*x14824)));
evalcond[4]=((-1.0)+((sj5*x14825))+((x14820*x14822))+(((-1.0)*x14823*x14826))+(((-1.0)*r10*x14821*x14824))+((r00*sj0*x14828))+(((-1.0)*r11*x14820*x14829)));
evalcond[5]=(((cj0*cj6*r11*sj5))+((r10*sj5*x14821))+(((-1.0)*cj6*x14822*x14827))+(((-1.0)*cj5*r02*x14823))+((cj5*x14825))+(((-1.0)*r00*sj5*sj6*x14823)));
evalcond[6]=((0.0001)+(((-0.02626)*x14830))+(((-0.02626)*sj6*x14822))+(((-1.0)*py*x14829))+(((0.02626)*r11*x14821))+((px*sj0))+(((0.02626)*x14831)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.4924791086351)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.4924791086351)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.4924791086351)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14832=IKcos(j4);
IkReal x14833=IKsin(j4);
IkReal x14834=(r11*sj0);
IkReal x14835=(cj6*sj5);
IkReal x14836=(r10*sj0);
IkReal x14837=(sj5*sj6);
IkReal x14838=((0.02626)*sj6);
IkReal x14839=(cj0*r01);
IkReal x14840=((0.02626)*cj6);
IkReal x14841=((1.0)*cj6);
IkReal x14842=(cj0*r00);
IkReal x14843=((1.0)*r21);
IkReal x14844=((1.0)*x14833);
evalcond[0]=((((-1.0)*sj6*x14843))+(((-1.0)*x14844))+((cj6*r20)));
evalcond[1]=((((-1.0)*x14835*x14843))+x14832+(((-1.0)*r20*x14837))+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.10716)+((r20*x14840))+(((-0.02626)*x14833))+(((-0.0718)*x14832))+(((-1.0)*r21*x14838))+pz);
evalcond[3]=((((-1.0)*x14832))+(((-1.0)*x14836*x14841))+(((-1.0)*x14841*x14842))+((sj6*x14839))+((sj6*x14834)));
evalcond[4]=(((cj5*r12*sj0))+((x14837*x14842))+((x14836*x14837))+((cj0*cj5*r02))+((x14835*x14839))+(((-1.0)*x14844))+((x14834*x14835)));
evalcond[5]=((-0.0019)+(((-0.02626)*x14832))+(((0.0718)*x14833))+(((-1.0)*x14836*x14840))+(((-1.0)*py*sj0))+((x14838*x14839))+((x14834*x14838))+(((-1.0)*x14840*x14842))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14845=(cj5*cj6);
IkReal x14846=(cj0*sj6);
IkReal x14847=(r01*sj0);
IkReal x14848=((1.0)*sj0);
IkReal x14849=((1.0)*cj5);
IkReal x14850=(cj0*r12);
IkReal x14851=(r02*sj5);
IkReal x14852=((1.0)*sj5);
IkReal x14853=(cj5*sj6);
IkReal x14854=((1.0)*cj0);
IkReal x14855=(cj0*cj6*r10);
IkReal x14856=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x14853))+(((-1.0)*r22*x14852))+((r21*x14845)));
evalcond[2]=((((-1.0)*sj6*x14847))+x14856+(((-1.0)*cj6*r10*x14854))+((r11*x14846)));
evalcond[3]=(((cj0*x14851))+((r12*sj0*sj5))+(((-1.0)*r01*x14845*x14854))+(((-1.0)*r10*x14848*x14853))+(((-1.0)*r00*x14846*x14849))+(((-1.0)*r11*x14845*x14848)));
evalcond[4]=((1.0)+((r00*sj0*x14853))+(((-1.0)*r10*x14846*x14849))+((sj5*x14850))+(((-1.0)*x14848*x14851))+(((-1.0)*r11*x14845*x14854))+((x14845*x14847)));
evalcond[5]=((((-1.0)*r00*sj5*sj6*x14848))+(((-1.0)*cj6*x14847*x14852))+((r10*sj5*x14846))+(((-1.0)*cj5*r02*x14848))+((cj5*x14850))+((cj0*cj6*r11*sj5)));
evalcond[6]=((-0.0097)+(((-0.02626)*x14855))+(((0.02626)*x14856))+((px*sj0))+(((0.02626)*r11*x14846))+(((-1.0)*py*x14854))+(((-0.02626)*sj6*x14847)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14857=IKcos(j4);
IkReal x14858=IKsin(j4);
IkReal x14859=(r11*sj0);
IkReal x14860=(cj6*sj5);
IkReal x14861=(r10*sj0);
IkReal x14862=(sj5*sj6);
IkReal x14863=((0.02626)*sj6);
IkReal x14864=(cj0*r01);
IkReal x14865=((0.02626)*cj6);
IkReal x14866=((1.0)*cj6);
IkReal x14867=(cj0*r00);
IkReal x14868=((1.0)*r21);
IkReal x14869=((1.0)*x14857);
evalcond[0]=(x14858+(((-1.0)*sj6*x14868))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x14862))+(((-1.0)*cj5*r22))+(((-1.0)*x14869))+(((-1.0)*x14860*x14868)));
evalcond[2]=((0.09736)+(((-1.0)*r21*x14863))+((r20*x14865))+(((0.0718)*x14857))+pz+(((0.02626)*x14858)));
evalcond[3]=(((sj6*x14859))+((sj6*x14864))+(((-1.0)*x14861*x14866))+(((-1.0)*x14866*x14867))+(((-1.0)*x14869)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x14860*x14864))+((x14859*x14860))+((x14862*x14867))+((x14861*x14862))+(((-1.0)*x14858)));
evalcond[5]=((-0.0019)+(((-0.02626)*x14857))+(((-1.0)*x14861*x14865))+(((0.0718)*x14858))+((x14863*x14864))+((x14859*x14863))+(((-1.0)*py*sj0))+(((-1.0)*x14865*x14867))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14870=(cj5*cj6);
IkReal x14871=(cj0*sj6);
IkReal x14872=(r01*sj0);
IkReal x14873=((1.0)*sj0);
IkReal x14874=((1.0)*cj5);
IkReal x14875=(cj0*r12);
IkReal x14876=(r02*sj5);
IkReal x14877=((1.0)*sj5);
IkReal x14878=(cj5*sj6);
IkReal x14879=((1.0)*cj0);
IkReal x14880=(cj0*cj6*r10);
IkReal x14881=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x14877))+((r21*x14870))+((r20*x14878)));
evalcond[2]=(((r11*x14871))+(((-1.0)*cj6*r10*x14879))+x14881+(((-1.0)*sj6*x14872)));
evalcond[3]=(((cj0*x14876))+(((-1.0)*r11*x14870*x14873))+((r12*sj0*sj5))+(((-1.0)*r10*x14873*x14878))+(((-1.0)*r00*x14871*x14874))+(((-1.0)*r01*x14870*x14879)));
evalcond[4]=((-1.0)+(((-1.0)*r10*x14871*x14874))+(((-1.0)*x14873*x14876))+((x14870*x14872))+(((-1.0)*r11*x14870*x14879))+((r00*sj0*x14878))+((sj5*x14875)));
evalcond[5]=(((cj5*x14875))+(((-1.0)*r00*sj5*sj6*x14873))+((cj0*cj6*r11*sj5))+((r10*sj5*x14871))+(((-1.0)*cj5*r02*x14873))+(((-1.0)*cj6*x14872*x14877)));
evalcond[6]=((-0.0097)+(((-1.0)*py*x14879))+(((-0.02626)*sj6*x14872))+(((-0.02626)*x14880))+(((0.02626)*r11*x14871))+((px*sj0))+(((0.02626)*x14881)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14882=IKcos(j4);
IkReal x14883=IKsin(j4);
IkReal x14884=(r11*sj0);
IkReal x14885=(cj6*sj5);
IkReal x14886=(r10*sj0);
IkReal x14887=(sj5*sj6);
IkReal x14888=((0.02626)*sj6);
IkReal x14889=(cj0*r01);
IkReal x14890=((0.02626)*cj6);
IkReal x14891=((1.0)*cj6);
IkReal x14892=(cj0*r00);
IkReal x14893=((1.0)*r21);
IkReal x14894=((1.0)*x14883);
evalcond[0]=((((-1.0)*sj6*x14893))+((cj6*r20))+(((-1.0)*x14894)));
evalcond[1]=((((-1.0)*x14885*x14893))+(((-1.0)*r20*x14887))+x14882+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.09756)+(((-0.0718)*x14882))+(((-1.0)*r21*x14888))+pz+(((-0.02626)*x14883))+((r20*x14890)));
evalcond[3]=((((-1.0)*x14891*x14892))+((sj6*x14889))+((sj6*x14884))+(((-1.0)*x14882))+(((-1.0)*x14886*x14891)));
evalcond[4]=(((cj5*r12*sj0))+((x14885*x14889))+((cj0*cj5*r02))+((x14884*x14885))+(((-1.0)*x14894))+((x14887*x14892))+((x14886*x14887)));
evalcond[5]=((-0.0019)+((x14884*x14888))+(((-1.0)*py*sj0))+(((-0.02626)*x14882))+(((-1.0)*x14890*x14892))+((x14888*x14889))+(((0.0718)*x14883))+(((-1.0)*cj0*px))+(((-1.0)*x14886*x14890)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14895=(cj5*cj6);
IkReal x14896=(cj0*sj6);
IkReal x14897=(r01*sj0);
IkReal x14898=((1.0)*sj0);
IkReal x14899=((1.0)*cj5);
IkReal x14900=(cj0*r12);
IkReal x14901=(r02*sj5);
IkReal x14902=((1.0)*sj5);
IkReal x14903=(cj5*sj6);
IkReal x14904=((1.0)*cj0);
IkReal x14905=(cj0*cj6*r10);
IkReal x14906=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x14902))+((r21*x14895))+((r20*x14903)));
evalcond[2]=(x14906+((r11*x14896))+(((-1.0)*cj6*r10*x14904))+(((-1.0)*sj6*x14897)));
evalcond[3]=(((cj0*x14901))+(((-1.0)*r11*x14895*x14898))+(((-1.0)*r00*x14896*x14899))+((r12*sj0*sj5))+(((-1.0)*r01*x14895*x14904))+(((-1.0)*r10*x14898*x14903)));
evalcond[4]=((-1.0)+((x14895*x14897))+(((-1.0)*r10*x14896*x14899))+(((-1.0)*r11*x14895*x14904))+((sj5*x14900))+((r00*sj0*x14903))+(((-1.0)*x14898*x14901)));
evalcond[5]=((((-1.0)*cj6*x14897*x14902))+((cj5*x14900))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x14898))+(((-1.0)*cj5*r02*x14898))+((r10*sj5*x14896)));
evalcond[6]=((-0.0001)+(((0.02626)*x14906))+(((-0.02626)*sj6*x14897))+(((-1.0)*py*x14904))+(((-0.02626)*x14905))+((px*sj0))+(((0.02626)*r11*x14896)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.22228412256267)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.22228412256267)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.22228412256267)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14907=IKcos(j4);
IkReal x14908=IKsin(j4);
IkReal x14909=(r11*sj0);
IkReal x14910=(cj6*sj5);
IkReal x14911=(r10*sj0);
IkReal x14912=(sj5*sj6);
IkReal x14913=((0.02626)*sj6);
IkReal x14914=(cj0*r01);
IkReal x14915=((0.02626)*cj6);
IkReal x14916=((1.0)*cj6);
IkReal x14917=(cj0*r00);
IkReal x14918=((1.0)*r21);
IkReal x14919=((1.0)*x14908);
evalcond[0]=((((-1.0)*x14919))+((cj6*r20))+(((-1.0)*sj6*x14918)));
evalcond[1]=(x14907+(((-1.0)*x14910*x14918))+(((-1.0)*r20*x14912))+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.08776)+(((-0.0718)*x14907))+pz+((r20*x14915))+(((-0.02626)*x14908))+(((-1.0)*r21*x14913)));
evalcond[3]=((((-1.0)*x14911*x14916))+((sj6*x14914))+((sj6*x14909))+(((-1.0)*x14907))+(((-1.0)*x14916*x14917)));
evalcond[4]=(((cj5*r12*sj0))+((x14909*x14910))+((x14911*x14912))+((x14910*x14914))+((cj0*cj5*r02))+(((-1.0)*x14919))+((x14912*x14917)));
evalcond[5]=((-0.0019)+((x14909*x14913))+(((-1.0)*x14911*x14915))+(((-1.0)*x14915*x14917))+(((0.0718)*x14908))+(((-1.0)*py*sj0))+(((-0.02626)*x14907))+((x14913*x14914))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14920=(cj5*cj6);
IkReal x14921=(cj0*sj6);
IkReal x14922=(r01*sj0);
IkReal x14923=((1.0)*sj0);
IkReal x14924=((1.0)*cj5);
IkReal x14925=(cj0*r12);
IkReal x14926=(r02*sj5);
IkReal x14927=((1.0)*sj5);
IkReal x14928=(cj5*sj6);
IkReal x14929=((1.0)*cj0);
IkReal x14930=(cj0*cj6*r10);
IkReal x14931=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=(((r21*x14920))+(((-1.0)*r22*x14927))+((r20*x14928)));
evalcond[2]=(x14931+(((-1.0)*cj6*r10*x14929))+((r11*x14921))+(((-1.0)*sj6*x14922)));
evalcond[3]=((((-1.0)*r00*x14921*x14924))+((cj0*x14926))+(((-1.0)*r01*x14920*x14929))+((r12*sj0*sj5))+(((-1.0)*r11*x14920*x14923))+(((-1.0)*r10*x14923*x14928)));
evalcond[4]=((1.0)+((x14920*x14922))+(((-1.0)*x14923*x14926))+(((-1.0)*r10*x14921*x14924))+(((-1.0)*r11*x14920*x14929))+((sj5*x14925))+((r00*sj0*x14928)));
evalcond[5]=(((cj5*x14925))+(((-1.0)*cj5*r02*x14923))+(((-1.0)*cj6*x14922*x14927))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x14923))+((r10*sj5*x14921)));
evalcond[6]=((-0.0001)+(((-0.02626)*sj6*x14922))+(((-1.0)*py*x14929))+(((-0.02626)*x14930))+(((0.02626)*x14931))+(((0.02626)*r11*x14921))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.4924791086351)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.4924791086351)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.4924791086351)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14932=IKcos(j4);
IkReal x14933=IKsin(j4);
IkReal x14934=(r11*sj0);
IkReal x14935=(cj6*sj5);
IkReal x14936=(r10*sj0);
IkReal x14937=(sj5*sj6);
IkReal x14938=((0.02626)*sj6);
IkReal x14939=(cj0*r01);
IkReal x14940=((0.02626)*cj6);
IkReal x14941=((1.0)*cj6);
IkReal x14942=(cj0*r00);
IkReal x14943=((1.0)*r21);
IkReal x14944=((1.0)*x14932);
evalcond[0]=(x14933+(((-1.0)*sj6*x14943))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*x14937))+(((-1.0)*x14944))+(((-1.0)*x14935*x14943))+(((-1.0)*cj5*r22)));
evalcond[2]=((0.10716)+(((0.0718)*x14932))+(((-1.0)*r21*x14938))+(((0.02626)*x14933))+pz+((r20*x14940)));
evalcond[3]=((((-1.0)*x14941*x14942))+(((-1.0)*x14936*x14941))+(((-1.0)*x14944))+((sj6*x14934))+((sj6*x14939)));
evalcond[4]=(((cj5*r12*sj0))+(((-1.0)*x14933))+((cj0*cj5*r02))+((x14936*x14937))+((x14934*x14935))+((x14937*x14942))+((x14935*x14939)));
evalcond[5]=((-0.0019)+(((-1.0)*x14940*x14942))+(((0.0718)*x14933))+(((-0.02626)*x14932))+(((-1.0)*x14936*x14940))+((x14934*x14938))+(((-1.0)*py*sj0))+((x14938*x14939))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14945=(cj5*cj6);
IkReal x14946=(cj0*sj6);
IkReal x14947=(r01*sj0);
IkReal x14948=((1.0)*sj0);
IkReal x14949=((1.0)*cj5);
IkReal x14950=(cj0*r12);
IkReal x14951=(r02*sj5);
IkReal x14952=((1.0)*sj5);
IkReal x14953=(cj5*sj6);
IkReal x14954=((1.0)*cj0);
IkReal x14955=(cj0*cj6*r10);
IkReal x14956=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x14952))+((r21*x14945))+((r20*x14953)));
evalcond[2]=(x14956+(((-1.0)*sj6*x14947))+(((-1.0)*cj6*r10*x14954))+((r11*x14946)));
evalcond[3]=((((-1.0)*r01*x14945*x14954))+(((-1.0)*r11*x14945*x14948))+((cj0*x14951))+(((-1.0)*r10*x14948*x14953))+(((-1.0)*r00*x14946*x14949))+((r12*sj0*sj5)));
evalcond[4]=((-1.0)+(((-1.0)*r11*x14945*x14954))+(((-1.0)*x14948*x14951))+(((-1.0)*r10*x14946*x14949))+((x14945*x14947))+((sj5*x14950))+((r00*sj0*x14953)));
evalcond[5]=(((cj5*x14950))+(((-1.0)*cj6*x14947*x14952))+((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x14948))+((r10*sj5*x14946))+(((-1.0)*r00*sj5*sj6*x14948)));
evalcond[6]=((0.0097)+(((-1.0)*py*x14954))+(((0.02626)*x14956))+(((0.02626)*r11*x14946))+(((-0.02626)*sj6*x14947))+((px*sj0))+(((-0.02626)*x14955)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14957=IKcos(j4);
IkReal x14958=IKsin(j4);
IkReal x14959=(r11*sj0);
IkReal x14960=(cj6*sj5);
IkReal x14961=(r10*sj0);
IkReal x14962=(sj5*sj6);
IkReal x14963=((0.02626)*sj6);
IkReal x14964=(cj0*r01);
IkReal x14965=((0.02626)*cj6);
IkReal x14966=((1.0)*cj6);
IkReal x14967=(cj0*r00);
IkReal x14968=((1.0)*r21);
IkReal x14969=((1.0)*x14958);
evalcond[0]=((((-1.0)*x14969))+((cj6*r20))+(((-1.0)*sj6*x14968)));
evalcond[1]=(x14957+(((-1.0)*r20*x14962))+(((-1.0)*x14960*x14968))+(((-1.0)*cj5*r22)));
evalcond[2]=((-0.09736)+(((-0.0718)*x14957))+pz+(((-1.0)*r21*x14963))+((r20*x14965))+(((-0.02626)*x14958)));
evalcond[3]=((((-1.0)*x14966*x14967))+((sj6*x14964))+(((-1.0)*x14961*x14966))+(((-1.0)*x14957))+((sj6*x14959)));
evalcond[4]=(((cj5*r12*sj0))+((cj0*cj5*r02))+(((-1.0)*x14969))+((x14959*x14960))+((x14962*x14967))+((x14961*x14962))+((x14960*x14964)));
evalcond[5]=((-0.0019)+(((-1.0)*x14965*x14967))+(((0.0718)*x14958))+((x14963*x14964))+(((-1.0)*x14961*x14965))+((x14959*x14963))+(((-1.0)*py*sj0))+(((-1.0)*cj0*px))+(((-0.02626)*x14957)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14970=(cj5*cj6);
IkReal x14971=(cj0*sj6);
IkReal x14972=(r01*sj0);
IkReal x14973=((1.0)*sj0);
IkReal x14974=((1.0)*cj5);
IkReal x14975=(cj0*r12);
IkReal x14976=(r02*sj5);
IkReal x14977=((1.0)*sj5);
IkReal x14978=(cj5*sj6);
IkReal x14979=((1.0)*cj0);
IkReal x14980=(cj0*cj6*r10);
IkReal x14981=(cj6*r00*sj0);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x14977))+((r20*x14978))+((r21*x14970)));
evalcond[2]=(x14981+(((-1.0)*cj6*r10*x14979))+((r11*x14971))+(((-1.0)*sj6*x14972)));
evalcond[3]=((((-1.0)*r01*x14970*x14979))+(((-1.0)*r10*x14973*x14978))+((r12*sj0*sj5))+(((-1.0)*r11*x14970*x14973))+((cj0*x14976))+(((-1.0)*r00*x14971*x14974)));
evalcond[4]=((1.0)+((sj5*x14975))+((r00*sj0*x14978))+(((-1.0)*r11*x14970*x14979))+(((-1.0)*r10*x14971*x14974))+((x14970*x14972))+(((-1.0)*x14973*x14976)));
evalcond[5]=(((r10*sj5*x14971))+(((-1.0)*cj5*r02*x14973))+(((-1.0)*cj6*x14972*x14977))+((cj0*cj6*r11*sj5))+((cj5*x14975))+(((-1.0)*r00*sj5*sj6*x14973)));
evalcond[6]=((0.0097)+(((-0.02626)*x14980))+(((0.02626)*r11*x14971))+(((-1.0)*py*x14979))+(((0.02626)*x14981))+(((-0.02626)*sj6*x14972))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x14982=IKcos(j4);
IkReal x14983=IKsin(j4);
IkReal x14984=(r11*sj0);
IkReal x14985=(cj6*sj5);
IkReal x14986=(r10*sj0);
IkReal x14987=(sj5*sj6);
IkReal x14988=((0.02626)*sj6);
IkReal x14989=(cj0*r01);
IkReal x14990=((0.02626)*cj6);
IkReal x14991=((1.0)*cj6);
IkReal x14992=(cj0*r00);
IkReal x14993=((1.0)*r21);
IkReal x14994=((1.0)*x14982);
evalcond[0]=((((-1.0)*sj6*x14993))+x14983+((cj6*r20)));
evalcond[1]=((((-1.0)*x14994))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x14987))+(((-1.0)*x14985*x14993)));
evalcond[2]=((0.09756)+(((0.0718)*x14982))+(((-1.0)*r21*x14988))+((r20*x14990))+pz+(((0.02626)*x14983)));
evalcond[3]=((((-1.0)*x14994))+(((-1.0)*x14991*x14992))+((sj6*x14984))+((sj6*x14989))+(((-1.0)*x14986*x14991)));
evalcond[4]=(((cj5*r12*sj0))+((x14984*x14985))+((cj0*cj5*r02))+((x14986*x14987))+((x14987*x14992))+((x14985*x14989))+(((-1.0)*x14983)));
evalcond[5]=((-0.0019)+((x14984*x14988))+(((0.0718)*x14983))+(((-0.02626)*x14982))+((x14988*x14989))+(((-1.0)*x14990*x14992))+(((-1.0)*py*sj0))+(((-1.0)*x14986*x14990))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14995=(cj5*cj6);
IkReal x14996=((1.0)*sj0);
IkReal x14997=(r21*sj6);
IkReal x14998=(cj0*sj5);
IkReal x14999=((1.0)*r22);
IkReal x15000=(cj6*r20);
IkReal x15001=(cj5*sj6);
IkReal x15002=((1.0)*cj0);
IkReal x15003=((1.0)*sj5);
IkReal x15004=(x15001*x15002);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+((r21*x14995))+((r20*x15001))+(((-1.0)*sj5*x14999)));
evalcond[2]=(x15000+(((-1.0)*x14997)));
evalcond[3]=((((-1.0)*cj5*x14999))+(((-1.0)*cj6*r21*x15003))+(((-1.0)*r20*sj6*x15003)));
evalcond[4]=((((-1.0)*r00*x15004))+(((-1.0)*r10*x14996*x15001))+((r02*x14998))+((r12*sj0*sj5))+(((-1.0)*r01*x14995*x15002))+(((-1.0)*r11*x14995*x14996)));
evalcond[5]=(((r00*sj0*x15001))+((r12*x14998))+(((-1.0)*r02*sj5*x14996))+((r01*sj0*x14995))+(((-1.0)*r11*x14995*x15002))+(((-1.0)*r10*x15004)));
evalcond[6]=((-0.0097)+(((0.02626)*x15000))+(((-0.02626)*x14997))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15005=(sj0*sj6);
IkReal x15006=(cj0*sj6);
IkReal x15007=(cj6*r00);
IkReal x15008=((1.0)*cj6*r10);
if( IKabs(((((-1.0)*cj0*x15008))+((r11*x15006))+(((-1.0)*r01*x15005))+((sj0*x15007)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x15007))+((r01*x15006))+((r11*x15005))+(((-1.0)*sj0*x15008)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*x15008))+((r11*x15006))+(((-1.0)*r01*x15005))+((sj0*x15007))))+IKsqr(((((-1.0)*cj0*x15007))+((r01*x15006))+((r11*x15005))+(((-1.0)*sj0*x15008))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*x15008))+((r11*x15006))+(((-1.0)*r01*x15005))+((sj0*x15007))), ((((-1.0)*cj0*x15007))+((r01*x15006))+((r11*x15005))+(((-1.0)*sj0*x15008))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15009=IKcos(j4);
IkReal x15010=IKsin(j4);
IkReal x15011=(cj6*sj0);
IkReal x15012=((0.02626)*r10);
IkReal x15013=(r11*sj6);
IkReal x15014=(r11*sj5);
IkReal x15015=(sj0*sj6);
IkReal x15016=(r10*sj5);
IkReal x15017=((0.02626)*r01);
IkReal x15018=(cj5*r12);
IkReal x15019=(cj0*cj6);
IkReal x15020=((1.0)*sj0);
IkReal x15021=(cj5*r02);
IkReal x15022=(cj0*sj6);
IkReal x15023=((1.0)*r10);
IkReal x15024=((1.0)*r01);
IkReal x15025=(r00*sj5);
IkReal x15026=((1.0)*cj0);
IkReal x15027=((0.02626)*r00);
IkReal x15028=((1.0)*x15010);
evalcond[0]=((((-1.0)*x15011*x15023))+(((-1.0)*x15009))+((sj0*x15013))+(((-1.0)*r00*x15019))+((r01*x15022)));
evalcond[1]=((((-1.0)*x15019*x15023))+(((-1.0)*x15015*x15024))+(((-1.0)*x15028))+((r00*x15011))+((cj0*x15013)));
evalcond[2]=(((x15022*x15025))+((sj0*x15018))+((x15015*x15016))+((x15011*x15014))+(((-1.0)*x15028))+((cj0*x15021))+((r01*sj5*x15019)));
evalcond[3]=(((x15016*x15022))+(((-1.0)*x15015*x15025))+x15009+(((-1.0)*sj5*x15011*x15024))+((cj0*x15018))+((x15014*x15019))+(((-1.0)*x15020*x15021)));
evalcond[4]=((-0.09736)+(((-1.0)*x15012*x15019))+(((-1.0)*py*x15026))+(((0.02626)*cj0*x15013))+((x15011*x15027))+(((-0.02626)*x15010))+((px*sj0))+(((-1.0)*x15015*x15017))+(((-0.0718)*x15009)));
evalcond[5]=((-0.0019)+(((-1.0)*x15019*x15027))+(((0.02626)*sj0*x15013))+(((-1.0)*x15011*x15012))+(((-1.0)*py*x15020))+(((0.0718)*x15010))+(((-1.0)*px*x15026))+(((-0.02626)*x15009))+((x15017*x15022)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15029=(cj5*cj6);
IkReal x15030=((1.0)*sj0);
IkReal x15031=(r21*sj6);
IkReal x15032=(cj0*sj5);
IkReal x15033=((1.0)*r22);
IkReal x15034=(cj6*r20);
IkReal x15035=(cj5*sj6);
IkReal x15036=((1.0)*cj0);
IkReal x15037=((1.0)*sj5);
IkReal x15038=(x15035*x15036);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x15033))+((r21*x15029))+((r20*x15035)));
evalcond[2]=((((-1.0)*x15031))+x15034);
evalcond[3]=((((-1.0)*cj5*x15033))+(((-1.0)*cj6*r21*x15037))+(((-1.0)*r20*sj6*x15037)));
evalcond[4]=((((-1.0)*r11*x15029*x15030))+(((-1.0)*r10*x15030*x15035))+(((-1.0)*r01*x15029*x15036))+((r12*sj0*sj5))+((r02*x15032))+(((-1.0)*r00*x15038)));
evalcond[5]=((((-1.0)*r11*x15029*x15036))+(((-1.0)*r02*sj5*x15030))+((r00*sj0*x15035))+((r12*x15032))+((r01*sj0*x15029))+(((-1.0)*r10*x15038)));
evalcond[6]=((-0.0097)+(((0.02626)*x15034))+pz+(((-0.02626)*x15031)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15039=(sj0*sj6);
IkReal x15040=(cj6*r10);
IkReal x15041=((1.0)*sj0);
IkReal x15042=(cj6*r00);
IkReal x15043=(cj0*sj6);
if( IKabs(((((-1.0)*x15041*x15042))+((cj0*x15040))+((r01*x15039))+(((-1.0)*r11*x15043)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x15042))+(((-1.0)*x15040*x15041))+((r01*x15043))+((r11*x15039)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x15041*x15042))+((cj0*x15040))+((r01*x15039))+(((-1.0)*r11*x15043))))+IKsqr(((((-1.0)*cj0*x15042))+(((-1.0)*x15040*x15041))+((r01*x15043))+((r11*x15039))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x15041*x15042))+((cj0*x15040))+((r01*x15039))+(((-1.0)*r11*x15043))), ((((-1.0)*cj0*x15042))+(((-1.0)*x15040*x15041))+((r01*x15043))+((r11*x15039))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15044=IKsin(j4);
IkReal x15045=IKcos(j4);
IkReal x15046=(cj6*sj0);
IkReal x15047=((0.02626)*r10);
IkReal x15048=(r11*sj6);
IkReal x15049=(r11*sj5);
IkReal x15050=(sj0*sj6);
IkReal x15051=(r10*sj5);
IkReal x15052=(cj0*cj6);
IkReal x15053=((0.02626)*r01);
IkReal x15054=(cj5*r12);
IkReal x15055=((1.0)*sj0);
IkReal x15056=(cj5*r02);
IkReal x15057=(cj0*sj6);
IkReal x15058=((1.0)*r10);
IkReal x15059=((1.0)*r01);
IkReal x15060=(r00*sj5);
IkReal x15061=((1.0)*cj0);
IkReal x15062=((0.02626)*r00);
IkReal x15063=((1.0)*x15045);
evalcond[0]=((((-1.0)*x15052*x15058))+((cj0*x15048))+((r00*x15046))+x15044+(((-1.0)*x15050*x15059)));
evalcond[1]=(((r01*x15057))+(((-1.0)*x15046*x15058))+(((-1.0)*r00*x15052))+(((-1.0)*x15063))+((sj0*x15048)));
evalcond[2]=(((x15050*x15051))+((r01*sj5*x15052))+((sj0*x15054))+((x15057*x15060))+((cj0*x15056))+(((-1.0)*x15044))+((x15046*x15049)));
evalcond[3]=((((-1.0)*x15055*x15056))+((x15049*x15052))+(((-1.0)*sj5*x15046*x15059))+((cj0*x15054))+(((-1.0)*x15050*x15060))+(((-1.0)*x15063))+((x15051*x15057)));
evalcond[4]=((0.09756)+(((0.02626)*cj0*x15048))+(((-1.0)*py*x15061))+(((0.0718)*x15045))+(((0.02626)*x15044))+((x15046*x15062))+(((-1.0)*x15047*x15052))+((px*sj0))+(((-1.0)*x15050*x15053)));
evalcond[5]=((-0.0019)+((x15053*x15057))+(((0.0718)*x15044))+(((-1.0)*x15052*x15062))+(((-0.02626)*x15045))+(((0.02626)*sj0*x15048))+(((-1.0)*x15046*x15047))+(((-1.0)*px*x15061))+(((-1.0)*py*x15055)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15064=(cj5*cj6);
IkReal x15065=((1.0)*sj0);
IkReal x15066=(r21*sj6);
IkReal x15067=(cj0*sj5);
IkReal x15068=((1.0)*r22);
IkReal x15069=(cj6*r20);
IkReal x15070=(cj5*sj6);
IkReal x15071=((1.0)*cj0);
IkReal x15072=((1.0)*sj5);
IkReal x15073=(x15070*x15071);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+((r21*x15064))+(((-1.0)*sj5*x15068))+((r20*x15070)));
evalcond[2]=(x15069+(((-1.0)*x15066)));
evalcond[3]=((((-1.0)*r20*sj6*x15072))+(((-1.0)*cj5*x15068))+(((-1.0)*cj6*r21*x15072)));
evalcond[4]=(((r12*sj0*sj5))+(((-1.0)*r11*x15064*x15065))+((r02*x15067))+(((-1.0)*r10*x15065*x15070))+(((-1.0)*r01*x15064*x15071))+(((-1.0)*r00*x15073)));
evalcond[5]=(((r01*sj0*x15064))+((r12*x15067))+(((-1.0)*r10*x15073))+((r00*sj0*x15070))+(((-1.0)*r11*x15064*x15071))+(((-1.0)*r02*sj5*x15065)));
evalcond[6]=((-0.0001)+(((0.02626)*x15069))+pz+(((-0.02626)*x15066)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15074=(sj0*sj6);
IkReal x15075=(cj6*r10);
IkReal x15076=((1.0)*sj0);
IkReal x15077=(cj6*r00);
IkReal x15078=(cj0*sj6);
if( IKabs((((r01*x15074))+(((-1.0)*r11*x15078))+(((-1.0)*x15076*x15077))+((cj0*x15075)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x15077))+((r01*x15078))+((r11*x15074))+(((-1.0)*x15075*x15076)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x15074))+(((-1.0)*r11*x15078))+(((-1.0)*x15076*x15077))+((cj0*x15075))))+IKsqr(((((-1.0)*cj0*x15077))+((r01*x15078))+((r11*x15074))+(((-1.0)*x15075*x15076))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x15074))+(((-1.0)*r11*x15078))+(((-1.0)*x15076*x15077))+((cj0*x15075))), ((((-1.0)*cj0*x15077))+((r01*x15078))+((r11*x15074))+(((-1.0)*x15075*x15076))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15079=IKsin(j4);
IkReal x15080=IKcos(j4);
IkReal x15081=(cj6*sj0);
IkReal x15082=((0.02626)*r10);
IkReal x15083=(r11*sj6);
IkReal x15084=(r11*sj5);
IkReal x15085=(sj0*sj6);
IkReal x15086=(r10*sj5);
IkReal x15087=(cj0*cj6);
IkReal x15088=((0.02626)*r01);
IkReal x15089=(cj5*r12);
IkReal x15090=((1.0)*sj0);
IkReal x15091=(cj5*r02);
IkReal x15092=(cj0*sj6);
IkReal x15093=((1.0)*r10);
IkReal x15094=((1.0)*r01);
IkReal x15095=(r00*sj5);
IkReal x15096=((1.0)*cj0);
IkReal x15097=((0.02626)*r00);
IkReal x15098=((1.0)*x15080);
evalcond[0]=(((cj0*x15083))+x15079+((r00*x15081))+(((-1.0)*x15085*x15094))+(((-1.0)*x15087*x15093)));
evalcond[1]=((((-1.0)*r00*x15087))+((r01*x15092))+(((-1.0)*x15081*x15093))+((sj0*x15083))+(((-1.0)*x15098)));
evalcond[2]=(((x15081*x15084))+((x15092*x15095))+((r01*sj5*x15087))+(((-1.0)*x15079))+((sj0*x15089))+((x15085*x15086))+((cj0*x15091)));
evalcond[3]=(((x15086*x15092))+(((-1.0)*sj5*x15081*x15094))+((cj0*x15089))+(((-1.0)*x15085*x15095))+((x15084*x15087))+(((-1.0)*x15098))+(((-1.0)*x15090*x15091)));
evalcond[4]=((0.08776)+(((-1.0)*py*x15096))+(((-1.0)*x15085*x15088))+(((0.02626)*x15079))+((x15081*x15097))+(((-1.0)*x15082*x15087))+((px*sj0))+(((0.02626)*cj0*x15083))+(((0.0718)*x15080)));
evalcond[5]=((-0.0019)+(((0.02626)*sj0*x15083))+(((-1.0)*py*x15090))+(((0.0718)*x15079))+(((-1.0)*px*x15096))+(((-0.02626)*x15080))+((x15088*x15092))+(((-1.0)*x15081*x15082))+(((-1.0)*x15087*x15097)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15099=(cj5*cj6);
IkReal x15100=((1.0)*sj0);
IkReal x15101=(r21*sj6);
IkReal x15102=(cj0*sj5);
IkReal x15103=((1.0)*r22);
IkReal x15104=(cj6*r20);
IkReal x15105=(cj5*sj6);
IkReal x15106=((1.0)*cj0);
IkReal x15107=((1.0)*sj5);
IkReal x15108=(x15105*x15106);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+((r21*x15099))+((r20*x15105))+(((-1.0)*sj5*x15103)));
evalcond[2]=(x15104+(((-1.0)*x15101)));
evalcond[3]=((((-1.0)*cj6*r21*x15107))+(((-1.0)*cj5*x15103))+(((-1.0)*r20*sj6*x15107)));
evalcond[4]=((((-1.0)*r00*x15108))+(((-1.0)*r11*x15099*x15100))+((r12*sj0*sj5))+(((-1.0)*r10*x15100*x15105))+((r02*x15102))+(((-1.0)*r01*x15099*x15106)));
evalcond[5]=(((r12*x15102))+((r00*sj0*x15105))+((r01*sj0*x15099))+(((-1.0)*r11*x15099*x15106))+(((-1.0)*r10*x15108))+(((-1.0)*r02*sj5*x15100)));
evalcond[6]=((-0.0001)+(((-0.02626)*x15101))+pz+(((0.02626)*x15104)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15109=(sj0*sj6);
IkReal x15110=(cj0*sj6);
IkReal x15111=(cj6*r00);
IkReal x15112=((1.0)*cj6*r10);
if( IKabs((((sj0*x15111))+((r11*x15110))+(((-1.0)*r01*x15109))+(((-1.0)*cj0*x15112)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj0*x15112))+((r01*x15110))+(((-1.0)*cj0*x15111))+((r11*x15109)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj0*x15111))+((r11*x15110))+(((-1.0)*r01*x15109))+(((-1.0)*cj0*x15112))))+IKsqr(((((-1.0)*sj0*x15112))+((r01*x15110))+(((-1.0)*cj0*x15111))+((r11*x15109))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj0*x15111))+((r11*x15110))+(((-1.0)*r01*x15109))+(((-1.0)*cj0*x15112))), ((((-1.0)*sj0*x15112))+((r01*x15110))+(((-1.0)*cj0*x15111))+((r11*x15109))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15113=IKcos(j4);
IkReal x15114=IKsin(j4);
IkReal x15115=(cj6*sj0);
IkReal x15116=((0.02626)*r10);
IkReal x15117=(r11*sj6);
IkReal x15118=(r11*sj5);
IkReal x15119=(sj0*sj6);
IkReal x15120=(r10*sj5);
IkReal x15121=((0.02626)*r01);
IkReal x15122=(cj5*r12);
IkReal x15123=(cj0*cj6);
IkReal x15124=((1.0)*sj0);
IkReal x15125=(cj5*r02);
IkReal x15126=(cj0*sj6);
IkReal x15127=((1.0)*r10);
IkReal x15128=((1.0)*r01);
IkReal x15129=(r00*sj5);
IkReal x15130=((1.0)*cj0);
IkReal x15131=((0.02626)*r00);
IkReal x15132=((1.0)*x15114);
evalcond[0]=((((-1.0)*x15115*x15127))+(((-1.0)*x15113))+(((-1.0)*r00*x15123))+((sj0*x15117))+((r01*x15126)));
evalcond[1]=((((-1.0)*x15123*x15127))+(((-1.0)*x15132))+(((-1.0)*x15119*x15128))+((r00*x15115))+((cj0*x15117)));
evalcond[2]=((((-1.0)*x15132))+((sj0*x15122))+((x15126*x15129))+((cj0*x15125))+((r01*sj5*x15123))+((x15119*x15120))+((x15115*x15118)));
evalcond[3]=((((-1.0)*x15119*x15129))+(((-1.0)*sj5*x15115*x15128))+x15113+(((-1.0)*x15124*x15125))+((x15118*x15123))+((cj0*x15122))+((x15120*x15126)));
evalcond[4]=((-0.10716)+(((-0.0718)*x15113))+((x15115*x15131))+(((-1.0)*x15119*x15121))+(((0.02626)*cj0*x15117))+(((-0.02626)*x15114))+(((-1.0)*x15116*x15123))+(((-1.0)*py*x15130))+((px*sj0)));
evalcond[5]=((-0.0019)+(((-1.0)*x15123*x15131))+((x15121*x15126))+(((-1.0)*x15115*x15116))+(((-1.0)*px*x15130))+(((-1.0)*py*x15124))+(((-0.02626)*x15113))+(((0.0718)*x15114))+(((0.02626)*sj0*x15117)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15133=(cj5*cj6);
IkReal x15134=((1.0)*sj0);
IkReal x15135=(r21*sj6);
IkReal x15136=(cj0*sj5);
IkReal x15137=((1.0)*r22);
IkReal x15138=(cj6*r20);
IkReal x15139=(cj5*sj6);
IkReal x15140=((1.0)*cj0);
IkReal x15141=((1.0)*sj5);
IkReal x15142=(x15139*x15140);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((-1.0)+((r20*x15139))+((r21*x15133))+(((-1.0)*sj5*x15137)));
evalcond[2]=(x15138+(((-1.0)*x15135)));
evalcond[3]=((((-1.0)*cj6*r21*x15141))+(((-1.0)*cj5*x15137))+(((-1.0)*r20*sj6*x15141)));
evalcond[4]=((((-1.0)*r00*x15142))+((r12*sj0*sj5))+(((-1.0)*r01*x15133*x15140))+(((-1.0)*r11*x15133*x15134))+(((-1.0)*r10*x15134*x15139))+((r02*x15136)));
evalcond[5]=(((r01*sj0*x15133))+(((-1.0)*r11*x15133*x15140))+(((-1.0)*r02*sj5*x15134))+((r00*sj0*x15139))+(((-1.0)*r10*x15142))+((r12*x15136)));
evalcond[6]=((0.0097)+(((-0.02626)*x15135))+(((0.02626)*x15138))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15143=(sj0*sj6);
IkReal x15144=(cj6*r10);
IkReal x15145=((1.0)*sj0);
IkReal x15146=(cj6*r00);
IkReal x15147=(cj0*sj6);
if( IKabs(((((-1.0)*x15145*x15146))+((r01*x15143))+(((-1.0)*r11*x15147))+((cj0*x15144)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x15143))+(((-1.0)*cj0*x15146))+(((-1.0)*x15144*x15145))+((r01*x15147)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x15145*x15146))+((r01*x15143))+(((-1.0)*r11*x15147))+((cj0*x15144))))+IKsqr((((r11*x15143))+(((-1.0)*cj0*x15146))+(((-1.0)*x15144*x15145))+((r01*x15147))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x15145*x15146))+((r01*x15143))+(((-1.0)*r11*x15147))+((cj0*x15144))), (((r11*x15143))+(((-1.0)*cj0*x15146))+(((-1.0)*x15144*x15145))+((r01*x15147))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15148=IKsin(j4);
IkReal x15149=IKcos(j4);
IkReal x15150=(cj6*sj0);
IkReal x15151=((0.02626)*r10);
IkReal x15152=(r11*sj6);
IkReal x15153=(r11*sj5);
IkReal x15154=(sj0*sj6);
IkReal x15155=(r10*sj5);
IkReal x15156=(cj0*cj6);
IkReal x15157=((0.02626)*r01);
IkReal x15158=(cj5*r12);
IkReal x15159=((1.0)*sj0);
IkReal x15160=(cj5*r02);
IkReal x15161=(cj0*sj6);
IkReal x15162=((1.0)*r10);
IkReal x15163=((1.0)*r01);
IkReal x15164=(r00*sj5);
IkReal x15165=((1.0)*cj0);
IkReal x15166=((0.02626)*r00);
IkReal x15167=((1.0)*x15149);
evalcond[0]=((((-1.0)*x15154*x15163))+((r00*x15150))+x15148+((cj0*x15152))+(((-1.0)*x15156*x15162)));
evalcond[1]=((((-1.0)*x15150*x15162))+(((-1.0)*r00*x15156))+(((-1.0)*x15167))+((sj0*x15152))+((r01*x15161)));
evalcond[2]=(((x15154*x15155))+((x15150*x15153))+((x15161*x15164))+(((-1.0)*x15148))+((sj0*x15158))+((r01*sj5*x15156))+((cj0*x15160)));
evalcond[3]=((((-1.0)*x15159*x15160))+((x15153*x15156))+(((-1.0)*x15154*x15164))+(((-1.0)*x15167))+((cj0*x15158))+((x15155*x15161))+(((-1.0)*sj5*x15150*x15163)));
evalcond[4]=((0.09736)+(((-1.0)*py*x15165))+(((0.02626)*x15148))+(((0.02626)*cj0*x15152))+(((-1.0)*x15154*x15157))+((px*sj0))+((x15150*x15166))+(((0.0718)*x15149))+(((-1.0)*x15151*x15156)));
evalcond[5]=((-0.0019)+(((0.02626)*sj0*x15152))+((x15157*x15161))+(((-1.0)*px*x15165))+(((-1.0)*py*x15159))+(((-1.0)*x15156*x15166))+(((-1.0)*x15150*x15151))+(((0.0718)*x15148))+(((-0.02626)*x15149)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15168=(cj5*cj6);
IkReal x15169=((1.0)*sj0);
IkReal x15170=(r21*sj6);
IkReal x15171=(cj0*sj5);
IkReal x15172=((1.0)*r22);
IkReal x15173=(cj6*r20);
IkReal x15174=(cj5*sj6);
IkReal x15175=((1.0)*cj0);
IkReal x15176=((1.0)*sj5);
IkReal x15177=(x15174*x15175);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((1.0)+((r20*x15174))+(((-1.0)*sj5*x15172))+((r21*x15168)));
evalcond[2]=((((-1.0)*x15170))+x15173);
evalcond[3]=((((-1.0)*cj6*r21*x15176))+(((-1.0)*r20*sj6*x15176))+(((-1.0)*cj5*x15172)));
evalcond[4]=((((-1.0)*r00*x15177))+(((-1.0)*r01*x15168*x15175))+((r02*x15171))+((r12*sj0*sj5))+(((-1.0)*r10*x15169*x15174))+(((-1.0)*r11*x15168*x15169)));
evalcond[5]=(((r01*sj0*x15168))+((r12*x15171))+(((-1.0)*r10*x15177))+(((-1.0)*r02*sj5*x15169))+(((-1.0)*r11*x15168*x15175))+((r00*sj0*x15174)));
evalcond[6]=((0.0097)+(((-0.02626)*x15170))+(((0.02626)*x15173))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15178=(sj0*sj6);
IkReal x15179=(cj0*sj6);
IkReal x15180=(cj6*r00);
IkReal x15181=((1.0)*cj6*r10);
if( IKabs((((sj0*x15180))+((r11*x15179))+(((-1.0)*r01*x15178))+(((-1.0)*cj0*x15181)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x15178))+(((-1.0)*cj0*x15180))+(((-1.0)*sj0*x15181))+((r01*x15179)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj0*x15180))+((r11*x15179))+(((-1.0)*r01*x15178))+(((-1.0)*cj0*x15181))))+IKsqr((((r11*x15178))+(((-1.0)*cj0*x15180))+(((-1.0)*sj0*x15181))+((r01*x15179))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj0*x15180))+((r11*x15179))+(((-1.0)*r01*x15178))+(((-1.0)*cj0*x15181))), (((r11*x15178))+(((-1.0)*cj0*x15180))+(((-1.0)*sj0*x15181))+((r01*x15179))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15182=IKcos(j4);
IkReal x15183=IKsin(j4);
IkReal x15184=(cj6*sj0);
IkReal x15185=((0.02626)*r10);
IkReal x15186=(r11*sj6);
IkReal x15187=(r11*sj5);
IkReal x15188=(sj0*sj6);
IkReal x15189=(r10*sj5);
IkReal x15190=((0.02626)*r01);
IkReal x15191=(cj5*r12);
IkReal x15192=(cj0*cj6);
IkReal x15193=((1.0)*sj0);
IkReal x15194=(cj5*r02);
IkReal x15195=(cj0*sj6);
IkReal x15196=((1.0)*r10);
IkReal x15197=((1.0)*r01);
IkReal x15198=(r00*sj5);
IkReal x15199=((1.0)*cj0);
IkReal x15200=((0.02626)*r00);
IkReal x15201=((1.0)*x15183);
evalcond[0]=(((sj0*x15186))+(((-1.0)*x15182))+(((-1.0)*x15184*x15196))+(((-1.0)*r00*x15192))+((r01*x15195)));
evalcond[1]=(((r00*x15184))+(((-1.0)*x15201))+(((-1.0)*x15192*x15196))+((cj0*x15186))+(((-1.0)*x15188*x15197)));
evalcond[2]=(((r01*sj5*x15192))+((cj0*x15194))+((x15195*x15198))+((sj0*x15191))+(((-1.0)*x15201))+((x15184*x15187))+((x15188*x15189)));
evalcond[3]=((((-1.0)*x15193*x15194))+((cj0*x15191))+(((-1.0)*sj5*x15184*x15197))+x15182+(((-1.0)*x15188*x15198))+((x15187*x15192))+((x15189*x15195)));
evalcond[4]=((-0.09756)+(((-1.0)*py*x15199))+((x15184*x15200))+(((0.02626)*cj0*x15186))+(((-0.0718)*x15182))+(((-0.02626)*x15183))+(((-1.0)*x15185*x15192))+((px*sj0))+(((-1.0)*x15188*x15190)));
evalcond[5]=((-0.0019)+(((-1.0)*x15192*x15200))+(((-1.0)*py*x15193))+(((-1.0)*x15184*x15185))+(((0.0718)*x15183))+(((-1.0)*px*x15199))+((x15190*x15195))+(((-0.02626)*x15182))+(((0.02626)*sj0*x15186)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15202=(cj5*cj6);
IkReal x15203=((1.0)*sj0);
IkReal x15204=(r21*sj6);
IkReal x15205=(cj0*sj5);
IkReal x15206=((1.0)*r22);
IkReal x15207=(cj6*r20);
IkReal x15208=(cj5*sj6);
IkReal x15209=((1.0)*cj0);
IkReal x15210=((1.0)*sj5);
IkReal x15211=(x15208*x15209);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((1.0)+((r20*x15208))+(((-1.0)*sj5*x15206))+((r21*x15202)));
evalcond[2]=((((-1.0)*x15204))+x15207);
evalcond[3]=((((-1.0)*r20*sj6*x15210))+(((-1.0)*cj5*x15206))+(((-1.0)*cj6*r21*x15210)));
evalcond[4]=((((-1.0)*r01*x15202*x15209))+((r12*sj0*sj5))+(((-1.0)*r10*x15203*x15208))+(((-1.0)*r00*x15211))+((r02*x15205))+(((-1.0)*r11*x15202*x15203)));
evalcond[5]=((((-1.0)*r02*sj5*x15203))+((r01*sj0*x15202))+((r12*x15205))+((r00*sj0*x15208))+(((-1.0)*r10*x15211))+(((-1.0)*r11*x15202*x15209)));
evalcond[6]=((0.0001)+(((0.02626)*x15207))+pz+(((-0.02626)*x15204)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15212=(sj0*sj6);
IkReal x15213=(cj0*sj6);
IkReal x15214=(cj6*r00);
IkReal x15215=((1.0)*cj6*r10);
if( IKabs(((((-1.0)*r01*x15212))+((r11*x15213))+(((-1.0)*cj0*x15215))+((sj0*x15214)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x15214))+((r11*x15212))+(((-1.0)*sj0*x15215))+((r01*x15213)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x15212))+((r11*x15213))+(((-1.0)*cj0*x15215))+((sj0*x15214))))+IKsqr(((((-1.0)*cj0*x15214))+((r11*x15212))+(((-1.0)*sj0*x15215))+((r01*x15213))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*x15212))+((r11*x15213))+(((-1.0)*cj0*x15215))+((sj0*x15214))), ((((-1.0)*cj0*x15214))+((r11*x15212))+(((-1.0)*sj0*x15215))+((r01*x15213))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15216=IKcos(j4);
IkReal x15217=IKsin(j4);
IkReal x15218=(cj6*sj0);
IkReal x15219=((0.02626)*r10);
IkReal x15220=(r11*sj6);
IkReal x15221=(r11*sj5);
IkReal x15222=(sj0*sj6);
IkReal x15223=(r10*sj5);
IkReal x15224=((0.02626)*r01);
IkReal x15225=(cj5*r12);
IkReal x15226=(cj0*cj6);
IkReal x15227=((1.0)*sj0);
IkReal x15228=(cj5*r02);
IkReal x15229=(cj0*sj6);
IkReal x15230=((1.0)*r10);
IkReal x15231=((1.0)*r01);
IkReal x15232=(r00*sj5);
IkReal x15233=((1.0)*cj0);
IkReal x15234=((0.02626)*r00);
IkReal x15235=((1.0)*x15217);
evalcond[0]=(((sj0*x15220))+(((-1.0)*x15218*x15230))+(((-1.0)*x15216))+(((-1.0)*r00*x15226))+((r01*x15229)));
evalcond[1]=(((cj0*x15220))+(((-1.0)*x15235))+((r00*x15218))+(((-1.0)*x15222*x15231))+(((-1.0)*x15226*x15230)));
evalcond[2]=(((x15222*x15223))+((cj0*x15228))+((sj0*x15225))+((x15229*x15232))+(((-1.0)*x15235))+((r01*sj5*x15226))+((x15218*x15221)));
evalcond[3]=(((cj0*x15225))+(((-1.0)*x15227*x15228))+((x15223*x15229))+(((-1.0)*x15222*x15232))+((x15221*x15226))+x15216+(((-1.0)*sj5*x15218*x15231)));
evalcond[4]=((-0.08776)+((x15218*x15234))+(((-1.0)*x15222*x15224))+(((-1.0)*py*x15233))+(((-0.0718)*x15216))+(((0.02626)*cj0*x15220))+(((-1.0)*x15219*x15226))+(((-0.02626)*x15217))+((px*sj0)));
evalcond[5]=((-0.0019)+(((0.02626)*sj0*x15220))+(((-1.0)*py*x15227))+((x15224*x15229))+(((-1.0)*px*x15233))+(((-0.02626)*x15216))+(((-1.0)*x15226*x15234))+(((-1.0)*x15218*x15219))+(((0.0718)*x15217)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15236=(cj5*cj6);
IkReal x15237=((1.0)*sj0);
IkReal x15238=(r21*sj6);
IkReal x15239=(cj0*sj5);
IkReal x15240=((1.0)*r22);
IkReal x15241=(cj6*r20);
IkReal x15242=(cj5*sj6);
IkReal x15243=((1.0)*cj0);
IkReal x15244=((1.0)*sj5);
IkReal x15245=(x15242*x15243);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j3, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((-1.0)+((r21*x15236))+(((-1.0)*sj5*x15240))+((r20*x15242)));
evalcond[2]=((((-1.0)*x15238))+x15241);
evalcond[3]=((((-1.0)*cj5*x15240))+(((-1.0)*r20*sj6*x15244))+(((-1.0)*cj6*r21*x15244)));
evalcond[4]=(((r02*x15239))+(((-1.0)*r01*x15236*x15243))+(((-1.0)*r00*x15245))+(((-1.0)*r11*x15236*x15237))+((r12*sj0*sj5))+(((-1.0)*r10*x15237*x15242)));
evalcond[5]=(((r00*sj0*x15242))+(((-1.0)*r11*x15236*x15243))+((r01*sj0*x15236))+(((-1.0)*r10*x15245))+(((-1.0)*r02*sj5*x15237))+((r12*x15239)));
evalcond[6]=((0.0001)+(((-0.02626)*x15238))+pz+(((0.02626)*x15241)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15246=(sj0*sj6);
IkReal x15247=(cj6*r10);
IkReal x15248=((1.0)*sj0);
IkReal x15249=(cj6*r00);
IkReal x15250=(cj0*sj6);
if( IKabs((((r01*x15246))+((cj0*x15247))+(((-1.0)*x15248*x15249))+(((-1.0)*r11*x15250)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x15249))+(((-1.0)*x15247*x15248))+((r01*x15250))+((r11*x15246)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x15246))+((cj0*x15247))+(((-1.0)*x15248*x15249))+(((-1.0)*r11*x15250))))+IKsqr(((((-1.0)*cj0*x15249))+(((-1.0)*x15247*x15248))+((r01*x15250))+((r11*x15246))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x15246))+((cj0*x15247))+(((-1.0)*x15248*x15249))+(((-1.0)*r11*x15250))), ((((-1.0)*cj0*x15249))+(((-1.0)*x15247*x15248))+((r01*x15250))+((r11*x15246))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15251=IKsin(j4);
IkReal x15252=IKcos(j4);
IkReal x15253=(cj6*sj0);
IkReal x15254=((0.02626)*r10);
IkReal x15255=(r11*sj6);
IkReal x15256=(r11*sj5);
IkReal x15257=(sj0*sj6);
IkReal x15258=(r10*sj5);
IkReal x15259=(cj0*cj6);
IkReal x15260=((0.02626)*r01);
IkReal x15261=(cj5*r12);
IkReal x15262=((1.0)*sj0);
IkReal x15263=(cj5*r02);
IkReal x15264=(cj0*sj6);
IkReal x15265=((1.0)*r10);
IkReal x15266=((1.0)*r01);
IkReal x15267=(r00*sj5);
IkReal x15268=((1.0)*cj0);
IkReal x15269=((0.02626)*r00);
IkReal x15270=((1.0)*x15252);
evalcond[0]=((((-1.0)*x15257*x15266))+((r00*x15253))+x15251+(((-1.0)*x15259*x15265))+((cj0*x15255)));
evalcond[1]=(((r01*x15264))+(((-1.0)*x15253*x15265))+(((-1.0)*r00*x15259))+((sj0*x15255))+(((-1.0)*x15270)));
evalcond[2]=(((x15264*x15267))+((r01*sj5*x15259))+(((-1.0)*x15251))+((sj0*x15261))+((cj0*x15263))+((x15253*x15256))+((x15257*x15258)));
evalcond[3]=(((cj0*x15261))+((x15256*x15259))+(((-1.0)*x15262*x15263))+((x15258*x15264))+(((-1.0)*sj5*x15253*x15266))+(((-1.0)*x15257*x15267))+(((-1.0)*x15270)));
evalcond[4]=((0.10716)+(((-1.0)*x15257*x15260))+(((0.02626)*cj0*x15255))+(((0.0718)*x15252))+(((-1.0)*py*x15268))+((px*sj0))+(((-1.0)*x15254*x15259))+(((0.02626)*x15251))+((x15253*x15269)));
evalcond[5]=((-0.0019)+(((-1.0)*px*x15268))+(((0.0718)*x15251))+((x15260*x15264))+(((-1.0)*x15259*x15269))+(((-0.02626)*x15252))+(((-1.0)*py*x15262))+(((-1.0)*x15253*x15254))+(((0.02626)*sj0*x15255)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15271=(cj6*r10);
IkReal x15272=((1.0)*sj0);
IkReal x15273=(sj0*sj6);
IkReal x15274=(cj6*r00);
IkReal x15275=(cj0*sj6);
CheckValue<IkReal> x15276=IKPowWithIntegerCheck(((((-1.0)*cj1*sj3))+((cj3*sj1))),-1);
if(!x15276.valid){
continue;
}
if( IKabs(((x15276.value)*((((cj0*x15271))+(((-1.0)*x15272*x15274))+(((-1.0)*r11*x15275))+((r01*x15273)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x15271*x15272))+((r11*x15273))+(((-1.0)*cj0*x15274))+((r01*x15275)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x15276.value)*((((cj0*x15271))+(((-1.0)*x15272*x15274))+(((-1.0)*r11*x15275))+((r01*x15273))))))+IKsqr(((((-1.0)*x15271*x15272))+((r11*x15273))+(((-1.0)*cj0*x15274))+((r01*x15275))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x15276.value)*((((cj0*x15271))+(((-1.0)*x15272*x15274))+(((-1.0)*r11*x15275))+((r01*x15273))))), ((((-1.0)*x15271*x15272))+((r11*x15273))+(((-1.0)*cj0*x15274))+((r01*x15275))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15277=IKsin(j4);
IkReal x15278=IKcos(j4);
IkReal x15279=((1.0)*sj1);
IkReal x15280=(cj6*sj0);
IkReal x15281=((0.02626)*r10);
IkReal x15282=(sj0*sj6);
IkReal x15283=(sj1*sj3);
IkReal x15284=(cj5*r12);
IkReal x15285=(r11*sj5);
IkReal x15286=(r10*sj5);
IkReal x15287=((0.02626)*r01);
IkReal x15288=(cj0*sj6);
IkReal x15289=((1.0)*cj5);
IkReal x15290=(cj1*sj3);
IkReal x15291=((0.02626)*cj6);
IkReal x15292=((1.0)*r10);
IkReal x15293=(r21*sj6);
IkReal x15294=((1.0)*r01);
IkReal x15295=(r00*sj5);
IkReal x15296=(cj1*cj3);
IkReal x15297=((1.0)*py);
IkReal x15298=(cj0*cj6);
IkReal x15299=(cj3*sj1);
IkReal x15300=((1.0)*sj5);
IkReal x15301=((0.02626)*r11);
IkReal x15302=(cj3*x15278);
IkReal x15303=((0.02626)*x15277);
IkReal x15304=((1.0)*x15277);
IkReal x15305=((0.0718)*x15278);
evalcond[0]=((((-1.0)*x15293))+((x15277*x15296))+((cj6*r20))+((x15277*x15283)));
evalcond[1]=(((r01*x15288))+(((-1.0)*r00*x15298))+(((-1.0)*x15280*x15292))+(((-1.0)*x15278))+((r11*x15282)));
evalcond[2]=((((-1.0)*r20*sj6*x15300))+(((-1.0)*cj6*r21*x15300))+(((-1.0)*sj3*x15278*x15279))+(((-1.0)*x15278*x15296))+(((-1.0)*r22*x15289)));
evalcond[3]=((((-1.0)*x15282*x15294))+((r00*x15280))+(((-1.0)*x15290*x15304))+((x15277*x15299))+(((-1.0)*x15292*x15298))+((r11*x15288)));
evalcond[4]=(((x15280*x15285))+((cj0*cj5*r02))+((sj0*x15284))+((r01*sj5*x15298))+(((-1.0)*x15304))+((x15288*x15295))+((x15282*x15286)));
evalcond[5]=((-0.0019)+(((-1.0)*cj0*r00*x15291))+(((-1.0)*x15280*x15281))+(((-0.02626)*x15278))+((x15287*x15288))+(((-1.0)*sj0*x15297))+(((0.0718)*x15277))+(((-1.0)*cj0*px))+((x15282*x15301)));
evalcond[6]=((((-1.0)*r02*sj0*x15289))+((x15286*x15288))+((cj0*x15284))+((x15285*x15298))+(((-1.0)*x15279*x15302))+(((-1.0)*x15282*x15295))+((x15278*x15290))+(((-1.0)*sj5*x15280*x15294)));
evalcond[7]=((((0.09746)*x15296))+((r20*x15291))+((x15296*x15305))+((x15296*x15303))+(((-0.0001)*sj1))+(((-0.0097)*cj1))+(((-0.02626)*x15293))+pz+(((0.09746)*x15283))+((x15283*x15303))+((x15283*x15305)));
evalcond[8]=((((-1.0)*x15281*x15298))+(((0.09746)*x15299))+(((-0.09746)*x15290))+(((-1.0)*x15290*x15303))+(((-1.0)*x15290*x15305))+(((-0.0097)*sj1))+(((0.02626)*r00*x15280))+((x15288*x15301))+(((-1.0)*x15282*x15287))+(((-1.0)*cj0*x15297))+(((0.0001)*cj1))+((px*sj0))+((x15299*x15303))+((x15299*x15305)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15306=((1.0)*cj6);
CheckValue<IkReal> x15307=IKPowWithIntegerCheck((((sj1*sj3))+((cj1*cj3))),-1);
if(!x15307.valid){
continue;
}
if( IKabs(((x15307.value)*((((r21*sj6))+(((-1.0)*r20*x15306)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x15306))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x15306)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x15307.value)*((((r21*sj6))+(((-1.0)*r20*x15306))))))+IKsqr((((r11*sj0*sj6))+(((-1.0)*r10*sj0*x15306))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x15306))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x15307.value)*((((r21*sj6))+(((-1.0)*r20*x15306))))), (((r11*sj0*sj6))+(((-1.0)*r10*sj0*x15306))+((cj0*r01*sj6))+(((-1.0)*cj0*r00*x15306))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15308=IKsin(j4);
IkReal x15309=IKcos(j4);
IkReal x15310=((1.0)*sj1);
IkReal x15311=(cj6*sj0);
IkReal x15312=((0.02626)*r10);
IkReal x15313=(sj0*sj6);
IkReal x15314=(sj1*sj3);
IkReal x15315=(cj5*r12);
IkReal x15316=(r11*sj5);
IkReal x15317=(r10*sj5);
IkReal x15318=((0.02626)*r01);
IkReal x15319=(cj0*sj6);
IkReal x15320=((1.0)*cj5);
IkReal x15321=(cj1*sj3);
IkReal x15322=((0.02626)*cj6);
IkReal x15323=((1.0)*r10);
IkReal x15324=(r21*sj6);
IkReal x15325=((1.0)*r01);
IkReal x15326=(r00*sj5);
IkReal x15327=(cj1*cj3);
IkReal x15328=((1.0)*py);
IkReal x15329=(cj0*cj6);
IkReal x15330=(cj3*sj1);
IkReal x15331=((1.0)*sj5);
IkReal x15332=((0.02626)*r11);
IkReal x15333=(cj3*x15309);
IkReal x15334=((0.02626)*x15308);
IkReal x15335=((1.0)*x15308);
IkReal x15336=((0.0718)*x15309);
evalcond[0]=((((-1.0)*x15324))+((x15308*x15314))+((x15308*x15327))+((cj6*r20)));
evalcond[1]=(((r11*x15313))+(((-1.0)*r00*x15329))+(((-1.0)*x15309))+((r01*x15319))+(((-1.0)*x15311*x15323)));
evalcond[2]=((((-1.0)*cj6*r21*x15331))+(((-1.0)*sj3*x15309*x15310))+(((-1.0)*x15309*x15327))+(((-1.0)*r20*sj6*x15331))+(((-1.0)*r22*x15320)));
evalcond[3]=(((r11*x15319))+((r00*x15311))+(((-1.0)*x15313*x15325))+(((-1.0)*x15321*x15335))+(((-1.0)*x15323*x15329))+((x15308*x15330)));
evalcond[4]=(((x15319*x15326))+((cj0*cj5*r02))+(((-1.0)*x15335))+((r01*sj5*x15329))+((x15313*x15317))+((sj0*x15315))+((x15311*x15316)));
evalcond[5]=((-0.0019)+(((-1.0)*x15311*x15312))+(((-0.02626)*x15309))+(((-1.0)*sj0*x15328))+((x15313*x15332))+(((-1.0)*cj0*r00*x15322))+((x15318*x15319))+(((0.0718)*x15308))+(((-1.0)*cj0*px)));
evalcond[6]=(((cj0*x15315))+(((-1.0)*x15310*x15333))+((x15309*x15321))+(((-1.0)*sj5*x15311*x15325))+(((-1.0)*x15313*x15326))+((x15317*x15319))+(((-1.0)*r02*sj0*x15320))+((x15316*x15329)));
evalcond[7]=((((0.09746)*x15327))+(((0.09746)*x15314))+(((-0.0001)*sj1))+(((-0.02626)*x15324))+((x15327*x15336))+((x15327*x15334))+(((-0.0097)*cj1))+pz+((x15314*x15336))+((x15314*x15334))+((r20*x15322)));
evalcond[8]=((((0.09746)*x15330))+((x15319*x15332))+((x15330*x15336))+((x15330*x15334))+(((-0.09746)*x15321))+(((-1.0)*x15321*x15336))+(((-1.0)*x15321*x15334))+(((-0.0097)*sj1))+(((-1.0)*x15313*x15318))+(((0.02626)*r00*x15311))+(((0.0001)*cj1))+((px*sj0))+(((-1.0)*cj0*x15328))+(((-1.0)*x15312*x15329)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15337=((1.0)*sj5);
CheckValue<IkReal> x15338=IKPowWithIntegerCheck(IKsign((((sj1*sj3))+((cj1*cj3)))),-1);
if(!x15338.valid){
continue;
}
CheckValue<IkReal> x15339 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x15337))+(((-1.0)*r20*sj6*x15337))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x15339.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x15338.value)))+(x15339.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15340=IKsin(j4);
IkReal x15341=IKcos(j4);
IkReal x15342=((1.0)*sj1);
IkReal x15343=(cj6*sj0);
IkReal x15344=((0.02626)*r10);
IkReal x15345=(sj0*sj6);
IkReal x15346=(sj1*sj3);
IkReal x15347=(cj5*r12);
IkReal x15348=(r11*sj5);
IkReal x15349=(r10*sj5);
IkReal x15350=((0.02626)*r01);
IkReal x15351=(cj0*sj6);
IkReal x15352=((1.0)*cj5);
IkReal x15353=(cj1*sj3);
IkReal x15354=((0.02626)*cj6);
IkReal x15355=((1.0)*r10);
IkReal x15356=(r21*sj6);
IkReal x15357=((1.0)*r01);
IkReal x15358=(r00*sj5);
IkReal x15359=(cj1*cj3);
IkReal x15360=((1.0)*py);
IkReal x15361=(cj0*cj6);
IkReal x15362=(cj3*sj1);
IkReal x15363=((1.0)*sj5);
IkReal x15364=((0.02626)*r11);
IkReal x15365=(cj3*x15341);
IkReal x15366=((0.02626)*x15340);
IkReal x15367=((1.0)*x15340);
IkReal x15368=((0.0718)*x15341);
evalcond[0]=(((x15340*x15359))+((cj6*r20))+((x15340*x15346))+(((-1.0)*x15356)));
evalcond[1]=((((-1.0)*x15343*x15355))+((r11*x15345))+(((-1.0)*r00*x15361))+((r01*x15351))+(((-1.0)*x15341)));
evalcond[2]=((((-1.0)*cj6*r21*x15363))+(((-1.0)*r22*x15352))+(((-1.0)*sj3*x15341*x15342))+(((-1.0)*x15341*x15359))+(((-1.0)*r20*sj6*x15363)));
evalcond[3]=(((r00*x15343))+(((-1.0)*x15345*x15357))+(((-1.0)*x15355*x15361))+(((-1.0)*x15353*x15367))+((r11*x15351))+((x15340*x15362)));
evalcond[4]=(((sj0*x15347))+((cj0*cj5*r02))+((x15345*x15349))+(((-1.0)*x15367))+((x15351*x15358))+((x15343*x15348))+((r01*sj5*x15361)));
evalcond[5]=((-0.0019)+(((-0.02626)*x15341))+((x15350*x15351))+(((-1.0)*x15343*x15344))+(((0.0718)*x15340))+(((-1.0)*cj0*r00*x15354))+((x15345*x15364))+(((-1.0)*sj0*x15360))+(((-1.0)*cj0*px)));
evalcond[6]=(((cj0*x15347))+((x15348*x15361))+(((-1.0)*x15342*x15365))+((x15349*x15351))+(((-1.0)*r02*sj0*x15352))+((x15341*x15353))+(((-1.0)*x15345*x15358))+(((-1.0)*sj5*x15343*x15357)));
evalcond[7]=((((-0.0001)*sj1))+((x15359*x15368))+((x15359*x15366))+(((-0.0097)*cj1))+pz+((r20*x15354))+(((0.09746)*x15359))+((x15346*x15366))+((x15346*x15368))+(((0.09746)*x15346))+(((-0.02626)*x15356)));
evalcond[8]=((((-1.0)*x15344*x15361))+(((0.02626)*r00*x15343))+(((-1.0)*x15345*x15350))+(((-1.0)*x15353*x15366))+(((-1.0)*x15353*x15368))+(((-1.0)*cj0*x15360))+(((-0.0097)*sj1))+((x15362*x15366))+((x15362*x15368))+(((0.09746)*x15362))+(((0.0001)*cj1))+((x15351*x15364))+((px*sj0))+(((-0.09746)*x15353)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15369=(cj0*sj5);
IkReal x15370=(cj5*cj6);
IkReal x15371=((1.0)*sj5);
IkReal x15372=((1.0)*sj0);
IkReal x15373=((1.0)*cj0);
IkReal x15374=(cj5*sj6);
IkReal x15375=(r10*x15374);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((((-1.0)*sj1))+((r20*x15374))+((r21*x15370))+(((-1.0)*r22*x15371)));
evalcond[2]=((((-1.0)*x15372*x15375))+((r12*sj0*sj5))+(((-1.0)*r00*x15373*x15374))+((r02*x15369))+(((-1.0)*r01*x15370*x15373))+(((-1.0)*r11*x15370*x15372)));
evalcond[3]=((((-1.0)*r02*sj0*x15371))+(((-1.0)*x15373*x15375))+((r01*sj0*x15370))+cj1+((r12*x15369))+((r00*sj0*x15374))+(((-1.0)*r11*x15370*x15373)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj3=0;
cj3=1.0;
j3=0;
IkReal x15376=(cj2*sj6);
IkReal x15377=((1.0)*r21);
IkReal x15378=(r20*sj5);
IkReal x15379=(sj2*sj6);
IkReal x15380=(cj2*cj6);
IkReal x15381=(cj5*r22);
IkReal x15382=(cj6*sj2);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*x15377*x15379))+((cj2*x15381))+((x15376*x15378))+((r20*x15382))+((r21*sj5*x15380)))))+(IKabs(((((-1.0)*x15376*x15377))+(((-1.0)*x15378*x15379))+(((-1.0)*sj2*x15381))+((r20*x15380))+(((-1.0)*sj5*x15377*x15382))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=1.0;
j3=0;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=1.0;
j3=0;
IkReal x15383=(cj1*sj1);
j4eval[0]=x15383;
j4eval[1]=IKsign(x15383);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x15384=(cj5*cj6);
IkReal x15385=(cj0*sj6);
IkReal x15386=(r01*sj0);
IkReal x15387=((1.0)*sj0);
IkReal x15388=((1.0)*cj5);
IkReal x15389=(cj0*r12);
IkReal x15390=(r02*sj5);
IkReal x15391=((1.0)*sj5);
IkReal x15392=(cj5*sj6);
IkReal x15393=((1.0)*cj0);
IkReal x15394=(cj0*cj6*r10);
IkReal x15395=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j1))), 6.28318530717959)));
evalcond[1]=(((r21*x15384))+((r20*x15392))+(((-1.0)*r22*x15391)));
evalcond[2]=(((r11*x15385))+x15395+(((-1.0)*cj6*r10*x15393))+(((-1.0)*sj6*x15386)));
evalcond[3]=((((-1.0)*r10*x15387*x15392))+(((-1.0)*r11*x15384*x15387))+(((-1.0)*r00*x15385*x15388))+((r12*sj0*sj5))+((cj0*x15390))+(((-1.0)*r01*x15384*x15393)));
evalcond[4]=((1.0)+(((-1.0)*x15387*x15390))+(((-1.0)*r11*x15384*x15393))+(((-1.0)*r10*x15385*x15388))+((sj5*x15389))+((r00*sj0*x15392))+((x15384*x15386)));
evalcond[5]=((((-1.0)*r00*sj5*sj6*x15387))+((r10*sj5*x15385))+(((-1.0)*cj5*r02*x15387))+((cj0*cj6*r11*sj5))+(((-1.0)*cj6*x15386*x15391))+((cj5*x15389)));
evalcond[6]=((0.0001)+(((-1.0)*py*x15393))+(((-0.02626)*sj6*x15386))+(((0.02626)*r11*x15385))+((px*sj0))+(((0.02626)*x15395))+(((-0.02626)*x15394)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15396=((1.0)*r21);
IkReal x15397=(cj2*sj6);
IkReal x15398=(cj5*r22);
IkReal x15399=(cj6*sj5);
IkReal x15400=(r20*sj2);
if( IKabs((((cj2*cj6*r20))+(((-1.0)*sj5*sj6*x15400))+(((-1.0)*sj2*x15396*x15399))+(((-1.0)*sj2*x15398))+(((-1.0)*x15396*x15397)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*x15400))+((cj2*x15398))+((cj2*r21*x15399))+(((-1.0)*sj2*sj6*x15396))+((r20*sj5*x15397)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj2*cj6*r20))+(((-1.0)*sj5*sj6*x15400))+(((-1.0)*sj2*x15396*x15399))+(((-1.0)*sj2*x15398))+(((-1.0)*x15396*x15397))))+IKsqr((((cj6*x15400))+((cj2*x15398))+((cj2*r21*x15399))+(((-1.0)*sj2*sj6*x15396))+((r20*sj5*x15397))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj2*cj6*r20))+(((-1.0)*sj5*sj6*x15400))+(((-1.0)*sj2*x15396*x15399))+(((-1.0)*sj2*x15398))+(((-1.0)*x15396*x15397))), (((cj6*x15400))+((cj2*x15398))+((cj2*r21*x15399))+(((-1.0)*sj2*sj6*x15396))+((r20*sj5*x15397))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15401=IKcos(j4);
IkReal x15402=IKsin(j4);
IkReal x15403=(cj6*sj0);
IkReal x15404=(sj0*sj6);
IkReal x15405=(cj6*r20);
IkReal x15406=((0.02626)*sj6);
IkReal x15407=(cj0*r01);
IkReal x15408=(cj0*r00);
IkReal x15409=(sj5*sj6);
IkReal x15410=((1.0)*r21);
IkReal x15411=(cj6*sj5);
IkReal x15412=(cj2*x15401);
IkReal x15413=((0.02626)*x15402);
IkReal x15414=(cj2*x15402);
IkReal x15415=((0.0718)*x15401);
IkReal x15416=(sj2*x15401);
IkReal x15417=(sj2*x15402);
IkReal x15418=((1.0)*x15417);
evalcond[0]=((((-1.0)*x15416))+(((-1.0)*x15414))+(((-1.0)*sj6*x15410))+x15405);
evalcond[1]=((((-1.0)*x15410*x15411))+x15412+(((-1.0)*cj5*r22))+(((-1.0)*r20*x15409))+(((-1.0)*x15418)));
evalcond[2]=(((sj6*x15407))+(((-1.0)*r10*x15403))+(((-1.0)*cj6*x15408))+x15412+((r11*x15404))+(((-1.0)*x15418)));
evalcond[3]=(((cj5*r12*sj0))+((cj0*cj5*r02))+((x15407*x15411))+((x15408*x15409))+x15416+x15414+((r11*sj5*x15403))+((r10*sj5*x15404)));
evalcond[4]=((-0.1255)+(((-1.0)*cj2*x15413))+(((0.0718)*x15417))+(((-0.21326)*cj2))+(((-1.0)*r21*x15406))+(((-0.0009)*sj2))+pz+(((-0.02626)*x15416))+(((-0.0718)*x15412))+(((0.02626)*x15405)));
evalcond[5]=((-0.001)+(((-0.02626)*cj6*x15408))+(((-0.02626)*r10*x15403))+(((0.0009)*cj2))+(((-0.21326)*sj2))+((x15406*x15407))+(((-1.0)*py*sj0))+(((0.02626)*r11*x15404))+(((-1.0)*sj2*x15415))+(((-1.0)*sj2*x15413))+(((0.02626)*x15412))+(((-0.0718)*x15414))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15419=(cj5*cj6);
IkReal x15420=((1.0)*sj0);
IkReal x15421=(r21*sj6);
IkReal x15422=(cj0*sj5);
IkReal x15423=((1.0)*r22);
IkReal x15424=(cj6*r20);
IkReal x15425=(cj5*sj6);
IkReal x15426=((1.0)*cj0);
IkReal x15427=((1.0)*sj5);
IkReal x15428=(x15425*x15426);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x15425))+(((-1.0)*sj5*x15423))+((r21*x15419)));
evalcond[2]=((((-1.0)*x15421))+x15424);
evalcond[3]=((((-1.0)*cj6*r21*x15427))+(((-1.0)*cj5*x15423))+(((-1.0)*r20*sj6*x15427)));
evalcond[4]=((((-1.0)*r10*x15420*x15425))+(((-1.0)*r11*x15419*x15420))+(((-1.0)*r01*x15419*x15426))+((r02*x15422))+((r12*sj0*sj5))+(((-1.0)*r00*x15428)));
evalcond[5]=((((-1.0)*r11*x15419*x15426))+((r12*x15422))+((r00*sj0*x15425))+(((-1.0)*r10*x15428))+(((-1.0)*r02*sj5*x15420))+((r01*sj0*x15419)));
evalcond[6]=((-0.0001)+(((-0.02626)*x15421))+(((0.02626)*x15424))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15429=((1.0)*r10);
IkReal x15430=((1.0)*cj2);
IkReal x15431=(r11*sj6);
IkReal x15432=(sj0*sj2);
IkReal x15433=(cj0*cj2);
IkReal x15434=(r01*sj6);
IkReal x15435=(cj0*x15434);
IkReal x15436=(cj6*x15432);
IkReal x15437=(cj0*cj6*sj2);
IkReal x15438=(cj2*cj6*sj0);
if( IKabs(((((-1.0)*x15429*x15436))+((sj2*x15435))+(((-1.0)*r00*x15437))+(((-1.0)*cj6*x15429*x15433))+((x15431*x15432))+((x15431*x15433))+(((-1.0)*sj0*x15430*x15434))+((r00*x15438)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x15438))+(((-1.0)*x15429*x15437))+(((-1.0)*x15432*x15434))+(((-1.0)*sj0*x15430*x15431))+((cj6*r00*x15433))+((r00*x15436))+(((-1.0)*x15430*x15435))+((cj0*sj2*x15431)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x15429*x15436))+((sj2*x15435))+(((-1.0)*r00*x15437))+(((-1.0)*cj6*x15429*x15433))+((x15431*x15432))+((x15431*x15433))+(((-1.0)*sj0*x15430*x15434))+((r00*x15438))))+IKsqr((((r10*x15438))+(((-1.0)*x15429*x15437))+(((-1.0)*x15432*x15434))+(((-1.0)*sj0*x15430*x15431))+((cj6*r00*x15433))+((r00*x15436))+(((-1.0)*x15430*x15435))+((cj0*sj2*x15431))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x15429*x15436))+((sj2*x15435))+(((-1.0)*r00*x15437))+(((-1.0)*cj6*x15429*x15433))+((x15431*x15432))+((x15431*x15433))+(((-1.0)*sj0*x15430*x15434))+((r00*x15438))), (((r10*x15438))+(((-1.0)*x15429*x15437))+(((-1.0)*x15432*x15434))+(((-1.0)*sj0*x15430*x15431))+((cj6*r00*x15433))+((r00*x15436))+(((-1.0)*x15430*x15435))+((cj0*sj2*x15431))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15439=IKsin(j4);
IkReal x15440=IKcos(j4);
IkReal x15441=(sj0*sj6);
IkReal x15442=((0.02626)*r01);
IkReal x15443=(cj0*sj6);
IkReal x15444=(cj6*sj0);
IkReal x15445=(r11*sj5);
IkReal x15446=(r10*sj5);
IkReal x15447=(cj0*cj5);
IkReal x15448=((1.0)*sj0);
IkReal x15449=((0.02626)*r11);
IkReal x15450=((1.0)*r01);
IkReal x15451=(r00*sj5);
IkReal x15452=((1.0)*cj0);
IkReal x15453=((0.02626)*r00);
IkReal x15454=(cj0*cj6);
IkReal x15455=(cj2*x15440);
IkReal x15456=(r10*x15454);
IkReal x15457=((0.02626)*x15439);
IkReal x15458=(cj2*x15439);
IkReal x15459=((0.0718)*x15440);
IkReal x15460=(sj2*x15440);
IkReal x15461=(sj2*x15439);
IkReal x15462=((1.0)*x15461);
evalcond[0]=((((-1.0)*cj6*r00*x15452))+((r11*x15441))+((r01*x15443))+(((-1.0)*r10*x15444))+(((-1.0)*x15462))+x15455);
evalcond[1]=(((r00*x15444))+((r11*x15443))+(((-1.0)*x15460))+(((-1.0)*cj6*r10*x15452))+(((-1.0)*x15441*x15450))+(((-1.0)*x15458)));
evalcond[2]=(((cj5*r12*sj0))+((r01*sj5*x15454))+((x15444*x15445))+((x15443*x15451))+((r02*x15447))+x15458+x15460+((x15441*x15446)));
evalcond[3]=((((-1.0)*x15441*x15451))+(((-1.0)*sj5*x15444*x15450))+((r12*x15447))+(((-1.0)*x15462))+((x15443*x15446))+x15455+(((-1.0)*cj5*r02*x15448))+((x15445*x15454)));
evalcond[4]=((-0.1255)+(((-1.0)*x15441*x15442))+(((0.0718)*x15461))+((x15444*x15453))+(((-0.0718)*x15455))+(((-0.21326)*cj2))+(((-0.02626)*x15456))+(((-1.0)*cj2*x15457))+(((-0.0009)*sj2))+((x15443*x15449))+((px*sj0))+(((-1.0)*py*x15452))+(((-0.02626)*x15460)));
evalcond[5]=((-0.001)+(((-1.0)*sj2*x15459))+(((-1.0)*sj2*x15457))+(((-0.02626)*r10*x15444))+(((-1.0)*px*x15452))+(((-0.0718)*x15458))+((x15442*x15443))+(((0.0009)*cj2))+(((0.02626)*x15455))+(((-0.21326)*sj2))+((x15441*x15449))+(((-1.0)*py*x15448))+(((-1.0)*x15453*x15454)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15463=(cj5*cj6);
IkReal x15464=(cj0*sj6);
IkReal x15465=(r01*sj0);
IkReal x15466=((1.0)*sj0);
IkReal x15467=((1.0)*cj5);
IkReal x15468=(cj0*r12);
IkReal x15469=(r02*sj5);
IkReal x15470=((1.0)*sj5);
IkReal x15471=(cj5*sj6);
IkReal x15472=((1.0)*cj0);
IkReal x15473=(cj0*cj6*r10);
IkReal x15474=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j1)))), 6.28318530717959)));
evalcond[1]=((((-1.0)*r22*x15470))+((r21*x15463))+((r20*x15471)));
evalcond[2]=((((-1.0)*cj6*r10*x15472))+x15474+((r11*x15464))+(((-1.0)*sj6*x15465)));
evalcond[3]=((((-1.0)*r01*x15463*x15472))+(((-1.0)*r00*x15464*x15467))+((r12*sj0*sj5))+(((-1.0)*r10*x15466*x15471))+(((-1.0)*r11*x15463*x15466))+((cj0*x15469)));
evalcond[4]=((-1.0)+((r00*sj0*x15471))+((x15463*x15465))+(((-1.0)*x15466*x15469))+(((-1.0)*r10*x15464*x15467))+(((-1.0)*r11*x15463*x15472))+((sj5*x15468)));
evalcond[5]=(((cj5*x15468))+(((-1.0)*cj5*r02*x15466))+((cj0*cj6*r11*sj5))+(((-1.0)*r00*sj5*sj6*x15466))+((r10*sj5*x15464))+(((-1.0)*cj6*x15465*x15470)));
evalcond[6]=((-0.0001)+(((0.02626)*r11*x15464))+(((-0.02626)*sj6*x15465))+(((0.02626)*x15474))+(((-1.0)*py*x15472))+((px*sj0))+(((-0.02626)*x15473)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15475=(cj2*r21);
IkReal x15476=(cj6*sj5);
IkReal x15477=(cj5*r22);
IkReal x15478=(r21*sj2);
IkReal x15479=((1.0)*cj2);
IkReal x15480=(cj6*r20);
IkReal x15481=(r20*sj5*sj6);
if( IKabs((((sj2*x15481))+(((-1.0)*x15479*x15480))+((sj6*x15475))+((x15476*x15478))+((sj2*x15477)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x15479*x15481))+(((-1.0)*x15475*x15476))+((sj6*x15478))+(((-1.0)*x15477*x15479))+(((-1.0)*sj2*x15480)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj2*x15481))+(((-1.0)*x15479*x15480))+((sj6*x15475))+((x15476*x15478))+((sj2*x15477))))+IKsqr(((((-1.0)*x15479*x15481))+(((-1.0)*x15475*x15476))+((sj6*x15478))+(((-1.0)*x15477*x15479))+(((-1.0)*sj2*x15480))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj2*x15481))+(((-1.0)*x15479*x15480))+((sj6*x15475))+((x15476*x15478))+((sj2*x15477))), ((((-1.0)*x15479*x15481))+(((-1.0)*x15475*x15476))+((sj6*x15478))+(((-1.0)*x15477*x15479))+(((-1.0)*sj2*x15480))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15482=IKsin(j4);
IkReal x15483=IKcos(j4);
IkReal x15484=(cj6*sj0);
IkReal x15485=(sj0*sj6);
IkReal x15486=((0.02626)*cj6);
IkReal x15487=(r21*sj6);
IkReal x15488=(cj0*r00);
IkReal x15489=(sj5*sj6);
IkReal x15490=((1.0)*cj6);
IkReal x15491=(sj2*x15483);
IkReal x15492=(cj2*x15482);
IkReal x15493=((0.02626)*x15482);
IkReal x15494=(cj2*x15483);
IkReal x15495=(sj2*x15482);
IkReal x15496=(cj0*r01*sj6);
IkReal x15497=(x15492+x15491);
evalcond[0]=(x15497+((cj6*r20))+(((-1.0)*x15487)));
evalcond[1]=((((-1.0)*r21*sj5*x15490))+(((-1.0)*r20*x15489))+x15495+(((-1.0)*cj5*r22))+(((-1.0)*x15494)));
evalcond[2]=((((-1.0)*r10*x15484))+((r11*x15485))+(((-1.0)*x15488*x15490))+x15496+x15494+(((-1.0)*x15495)));
evalcond[3]=(((cj5*r12*sj0))+((x15488*x15489))+((cj0*cj5*r02))+((r11*sj5*x15484))+((r10*sj5*x15485))+((cj0*cj6*r01*sj5))+x15497);
evalcond[4]=((0.1255)+(((-0.02626)*x15487))+(((-0.0718)*x15495))+(((0.0718)*x15494))+pz+(((0.02626)*x15492))+(((0.02626)*x15491))+(((0.21326)*cj2))+((r20*x15486))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-0.0718)*x15492))+(((-0.0718)*x15491))+(((0.02626)*r11*x15485))+(((0.0009)*cj2))+(((-1.0)*x15486*x15488))+(((-0.21326)*sj2))+(((-1.0)*sj2*x15493))+(((-1.0)*py*sj0))+(((0.02626)*x15494))+(((0.02626)*x15496))+(((-0.02626)*r10*x15484))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15498=(cj5*cj6);
IkReal x15499=((1.0)*sj0);
IkReal x15500=(r21*sj6);
IkReal x15501=(cj0*sj5);
IkReal x15502=((1.0)*r22);
IkReal x15503=(cj6*r20);
IkReal x15504=(cj5*sj6);
IkReal x15505=((1.0)*cj0);
IkReal x15506=((1.0)*sj5);
IkReal x15507=(x15504*x15505);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x15498))+((r20*x15504))+(((-1.0)*sj5*x15502)));
evalcond[2]=((((-1.0)*x15500))+x15503);
evalcond[3]=((((-1.0)*cj6*r21*x15506))+(((-1.0)*r20*sj6*x15506))+(((-1.0)*cj5*x15502)));
evalcond[4]=((((-1.0)*r11*x15498*x15499))+(((-1.0)*r00*x15507))+((r12*sj0*sj5))+((r02*x15501))+(((-1.0)*r01*x15498*x15505))+(((-1.0)*r10*x15499*x15504)));
evalcond[5]=((((-1.0)*r02*sj5*x15499))+(((-1.0)*r11*x15498*x15505))+((r01*sj0*x15498))+((r12*x15501))+((r00*sj0*x15504))+(((-1.0)*r10*x15507)));
evalcond[6]=((0.0001)+(((0.02626)*x15503))+pz+(((-0.02626)*x15500)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15508=(cj0*sj6);
IkReal x15509=(r01*sj2);
IkReal x15510=(sj0*sj2);
IkReal x15511=((1.0)*cj6);
IkReal x15512=(sj0*sj6);
IkReal x15513=(cj0*sj2);
IkReal x15514=(cj6*r10);
IkReal x15515=(cj2*sj0);
IkReal x15516=(cj2*r01);
IkReal x15517=(cj0*cj2);
IkReal x15518=((1.0)*cj2*r11);
if( IKabs((((x15508*x15509))+(((-1.0)*r00*x15511*x15513))+(((-1.0)*r00*x15511*x15515))+(((-1.0)*r10*x15510*x15511))+((r11*sj6*x15510))+(((-1.0)*x15508*x15518))+((x15512*x15516))+((x15514*x15517)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*sj2*x15508))+((cj6*r00*x15517))+(((-1.0)*r00*x15510*x15511))+(((-1.0)*x15508*x15516))+((x15509*x15512))+((x15513*x15514))+(((-1.0)*x15512*x15518))+((x15514*x15515)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x15508*x15509))+(((-1.0)*r00*x15511*x15513))+(((-1.0)*r00*x15511*x15515))+(((-1.0)*r10*x15510*x15511))+((r11*sj6*x15510))+(((-1.0)*x15508*x15518))+((x15512*x15516))+((x15514*x15517))))+IKsqr(((((-1.0)*r11*sj2*x15508))+((cj6*r00*x15517))+(((-1.0)*r00*x15510*x15511))+(((-1.0)*x15508*x15516))+((x15509*x15512))+((x15513*x15514))+(((-1.0)*x15512*x15518))+((x15514*x15515))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x15508*x15509))+(((-1.0)*r00*x15511*x15513))+(((-1.0)*r00*x15511*x15515))+(((-1.0)*r10*x15510*x15511))+((r11*sj6*x15510))+(((-1.0)*x15508*x15518))+((x15512*x15516))+((x15514*x15517))), ((((-1.0)*r11*sj2*x15508))+((cj6*r00*x15517))+(((-1.0)*r00*x15510*x15511))+(((-1.0)*x15508*x15516))+((x15509*x15512))+((x15513*x15514))+(((-1.0)*x15512*x15518))+((x15514*x15515))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15519=IKcos(j4);
IkReal x15520=IKsin(j4);
IkReal x15521=(sj0*sj6);
IkReal x15522=((0.02626)*r01);
IkReal x15523=(cj6*sj0);
IkReal x15524=(r11*sj5);
IkReal x15525=(r10*sj5);
IkReal x15526=(cj5*r12);
IkReal x15527=((1.0)*sj0);
IkReal x15528=(cj5*r02);
IkReal x15529=((1.0)*r01);
IkReal x15530=(cj0*sj6);
IkReal x15531=(r00*sj5);
IkReal x15532=((1.0)*cj0);
IkReal x15533=((0.02626)*r00);
IkReal x15534=(cj0*cj6);
IkReal x15535=(sj2*x15519);
IkReal x15536=(cj2*x15520);
IkReal x15537=(sj2*x15520);
IkReal x15538=(r11*x15530);
IkReal x15539=(r10*x15534);
IkReal x15540=((0.0718)*x15519);
IkReal x15541=(cj2*x15519);
IkReal x15542=(x15535+x15536);
evalcond[0]=((((-1.0)*cj6*r10*x15532))+(((-1.0)*x15521*x15529))+((r00*x15523))+x15538+x15542);
evalcond[1]=((((-1.0)*cj6*r00*x15532))+((r01*x15530))+(((-1.0)*x15537))+x15541+(((-1.0)*r10*x15523))+((r11*x15521)));
evalcond[2]=(((x15530*x15531))+((sj0*x15526))+((x15523*x15524))+((x15521*x15525))+x15542+((cj0*x15528))+((r01*sj5*x15534)));
evalcond[3]=((((-1.0)*x15521*x15531))+((x15524*x15534))+(((-1.0)*sj5*x15523*x15529))+(((-1.0)*x15541))+x15537+((cj0*x15526))+(((-1.0)*x15527*x15528))+((x15525*x15530)));
evalcond[4]=((0.1255)+(((-1.0)*x15521*x15522))+((cj2*x15540))+(((0.02626)*x15535))+(((0.02626)*x15536))+(((0.02626)*x15538))+((x15523*x15533))+(((-0.0718)*x15537))+(((-0.02626)*x15539))+(((-1.0)*py*x15532))+((px*sj0))+(((0.21326)*cj2))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-1.0)*px*x15532))+(((-1.0)*x15533*x15534))+(((0.02626)*x15541))+(((-0.02626)*r10*x15523))+((x15522*x15530))+(((-0.0718)*x15535))+(((-0.0718)*x15536))+(((0.0009)*cj2))+(((-0.02626)*x15537))+(((-1.0)*py*x15527))+(((-0.21326)*sj2))+(((0.02626)*r11*x15521)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15543=(cj1*cj2);
IkReal x15544=((1.0)*sj6);
IkReal x15545=(r01*sj0);
IkReal x15546=(cj0*r10);
IkReal x15547=(cj1*sj2);
IkReal x15548=(cj6*r00*sj0);
IkReal x15549=(cj0*r11*sj6);
IkReal x15550=((1.0)*cj6*sj2);
IkReal x15551=(r21*sj1*sj5);
IkReal x15552=(cj5*r22*sj1);
IkReal x15553=(r20*sj1*sj5);
CheckValue<IkReal> x15554=IKPowWithIntegerCheck(IKsign((cj1*sj1)),-1);
if(!x15554.valid){
continue;
}
CheckValue<IkReal> x15555 = IKatan2WithCheck(IkReal(((((-1.0)*sj2*x15544*x15553))+(((-1.0)*x15550*x15551))+(((-1.0)*x15543*x15544*x15545))+(((-1.0)*sj2*x15552))+(((-1.0)*cj6*x15543*x15546))+((x15543*x15548))+((x15543*x15549)))),(((cj2*cj6*x15551))+((cj2*x15552))+((x15547*x15549))+((x15547*x15548))+(((-1.0)*x15544*x15545*x15547))+((cj2*sj6*x15553))+(((-1.0)*cj6*x15546*x15547))),IKFAST_ATAN2_MAGTHRESH);
if(!x15555.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x15554.value)))+(x15555.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15556=IKcos(j4);
IkReal x15557=IKsin(j4);
IkReal x15558=((0.0718)*sj1);
IkReal x15559=(r11*sj0);
IkReal x15560=(cj5*r12);
IkReal x15561=(cj6*sj5);
IkReal x15562=(cj1*cj2);
IkReal x15563=(cj6*r20);
IkReal x15564=(cj0*sj6);
IkReal x15565=((1.0)*sj1);
IkReal x15566=((1.0)*cj5);
IkReal x15567=((0.0009)*sj2);
IkReal x15568=((0.02626)*sj1);
IkReal x15569=((1.0)*sj0);
IkReal x15570=(cj6*r10);
IkReal x15571=(sj5*sj6);
IkReal x15572=((0.0718)*cj1);
IkReal x15573=(cj6*r00);
IkReal x15574=((1.0)*r21);
IkReal x15575=((0.02626)*sj6);
IkReal x15576=((1.0)*cj0);
IkReal x15577=((0.02626)*sj0);
IkReal x15578=((1.0)*cj1);
IkReal x15579=(cj2*x15556);
IkReal x15580=(cj0*x15570);
IkReal x15581=(sj2*x15557);
IkReal x15582=(sj2*x15556);
IkReal x15583=(r01*x15575);
IkReal x15584=(cj2*x15557);
evalcond[0]=((((-1.0)*sj6*x15574))+(((-1.0)*x15578*x15582))+(((-1.0)*x15557*x15562))+x15563);
evalcond[1]=(((x15556*x15562))+(((-1.0)*r22*x15566))+(((-1.0)*r20*x15571))+(((-1.0)*x15578*x15581))+(((-1.0)*x15561*x15574)));
evalcond[2]=((((-1.0)*x15581))+(((-1.0)*x15569*x15570))+((r01*x15564))+((sj6*x15559))+(((-1.0)*x15573*x15576))+x15579);
evalcond[3]=(((sj0*x15573))+((r11*x15564))+(((-1.0)*x15570*x15576))+(((-1.0)*x15565*x15584))+(((-1.0)*x15565*x15582))+(((-1.0)*r01*sj6*x15569)));
evalcond[4]=(((x15559*x15561))+((sj0*x15560))+((cj0*cj5*r02))+((r10*sj0*x15571))+x15582+x15584+((r00*sj5*x15564))+((cj0*r01*x15561)));
evalcond[5]=(((sj1*x15579))+((cj0*x15560))+((cj0*r11*x15561))+(((-1.0)*x15565*x15581))+((r10*sj5*x15564))+(((-1.0)*r01*x15561*x15569))+(((-1.0)*r02*sj0*x15566))+(((-1.0)*r00*x15569*x15571)));
evalcond[6]=((((-1.0)*cj1*x15567))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-1.0)*r21*x15575))+(((-0.02626)*cj1*x15582))+(((-0.0718)*x15556*x15562))+pz+(((0.02626)*x15563))+(((-0.02626)*x15557*x15562))+((x15572*x15581))+(((-0.21326)*x15562)));
evalcond[7]=((-0.001)+((x15559*x15575))+(((-0.02626)*x15581))+(((-1.0)*py*x15569))+(((-0.02626)*cj0*x15573))+(((0.0009)*cj2))+(((-0.21326)*sj2))+(((-1.0)*x15570*x15577))+(((0.02626)*x15579))+(((-1.0)*px*x15576))+(((0.02626)*r01*x15564))+(((-0.0718)*x15584))+(((-0.0718)*x15582)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*sj1*x15567))+(((-0.02626)*x15580))+(((-1.0)*x15558*x15579))+((x15573*x15577))+(((-1.0)*py*x15576))+(((-1.0)*sj0*x15583))+((x15558*x15581))+(((0.0001)*cj1))+((px*sj0))+(((-0.21326)*cj2*sj1))+(((-1.0)*x15568*x15582))+(((-1.0)*x15568*x15584))+(((0.02626)*r11*x15564)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15585=(cj0*r00);
IkReal x15586=(r10*sj0);
IkReal x15587=(cj1*cj2);
IkReal x15588=(cj1*sj2);
IkReal x15589=(cj6*r20);
IkReal x15590=(r11*sj0*sj6);
IkReal x15591=((1.0)*r21*sj6);
IkReal x15592=(cj0*r01*sj6);
IkReal x15593=((1.0)*cj6*x15588);
CheckValue<IkReal> x15594=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x15594.valid){
continue;
}
CheckValue<IkReal> x15595 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*x15591))+(((-1.0)*x15585*x15593))+((cj2*x15589))+(((-1.0)*x15586*x15593))+((x15588*x15592))+((x15588*x15590)))),((((-1.0)*x15587*x15592))+(((-1.0)*x15587*x15590))+((cj6*x15585*x15587))+((cj6*x15586*x15587))+((sj2*x15589))+(((-1.0)*sj2*x15591))),IKFAST_ATAN2_MAGTHRESH);
if(!x15595.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x15594.value)))+(x15595.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15596=IKcos(j4);
IkReal x15597=IKsin(j4);
IkReal x15598=((0.0718)*sj1);
IkReal x15599=(r11*sj0);
IkReal x15600=(cj5*r12);
IkReal x15601=(cj6*sj5);
IkReal x15602=(cj1*cj2);
IkReal x15603=(cj6*r20);
IkReal x15604=(cj0*sj6);
IkReal x15605=((1.0)*sj1);
IkReal x15606=((1.0)*cj5);
IkReal x15607=((0.0009)*sj2);
IkReal x15608=((0.02626)*sj1);
IkReal x15609=((1.0)*sj0);
IkReal x15610=(cj6*r10);
IkReal x15611=(sj5*sj6);
IkReal x15612=((0.0718)*cj1);
IkReal x15613=(cj6*r00);
IkReal x15614=((1.0)*r21);
IkReal x15615=((0.02626)*sj6);
IkReal x15616=((1.0)*cj0);
IkReal x15617=((0.02626)*sj0);
IkReal x15618=((1.0)*cj1);
IkReal x15619=(cj2*x15596);
IkReal x15620=(cj0*x15610);
IkReal x15621=(sj2*x15597);
IkReal x15622=(sj2*x15596);
IkReal x15623=(r01*x15615);
IkReal x15624=(cj2*x15597);
evalcond[0]=((((-1.0)*x15597*x15602))+x15603+(((-1.0)*sj6*x15614))+(((-1.0)*x15618*x15622)));
evalcond[1]=(((x15596*x15602))+(((-1.0)*r22*x15606))+(((-1.0)*x15601*x15614))+(((-1.0)*x15618*x15621))+(((-1.0)*r20*x15611)));
evalcond[2]=((((-1.0)*x15609*x15610))+x15619+(((-1.0)*x15621))+(((-1.0)*x15613*x15616))+((r01*x15604))+((sj6*x15599)));
evalcond[3]=(((sj0*x15613))+(((-1.0)*r01*sj6*x15609))+(((-1.0)*x15610*x15616))+(((-1.0)*x15605*x15624))+(((-1.0)*x15605*x15622))+((r11*x15604)));
evalcond[4]=(((r10*sj0*x15611))+((r00*sj5*x15604))+((cj0*cj5*r02))+((cj0*r01*x15601))+x15624+x15622+((x15599*x15601))+((sj0*x15600)));
evalcond[5]=((((-1.0)*r01*x15601*x15609))+((sj1*x15619))+((cj0*x15600))+((r10*sj5*x15604))+(((-1.0)*r00*x15609*x15611))+(((-1.0)*x15605*x15621))+((cj0*r11*x15601))+(((-1.0)*r02*sj0*x15606)));
evalcond[6]=((((-1.0)*cj1*x15607))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.02626)*x15597*x15602))+pz+((x15612*x15621))+(((-0.0718)*x15596*x15602))+(((0.02626)*x15603))+(((-1.0)*r21*x15615))+(((-0.02626)*cj1*x15622))+(((-0.21326)*x15602)));
evalcond[7]=((-0.001)+(((-0.02626)*cj0*x15613))+(((-1.0)*py*x15609))+(((-1.0)*px*x15616))+(((0.0009)*cj2))+(((0.02626)*r01*x15604))+(((-0.0718)*x15622))+(((-0.0718)*x15624))+(((-0.21326)*sj2))+(((-1.0)*x15610*x15617))+((x15599*x15615))+(((0.02626)*x15619))+(((-0.02626)*x15621)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*sj0*x15623))+(((-1.0)*py*x15616))+((x15598*x15621))+(((0.0001)*cj1))+((px*sj0))+((x15613*x15617))+(((-0.21326)*cj2*sj1))+(((-1.0)*sj1*x15607))+(((-1.0)*x15598*x15619))+(((-0.02626)*x15620))+(((0.02626)*r11*x15604))+(((-1.0)*x15608*x15622))+(((-1.0)*x15608*x15624)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15625=(cj2*r21);
IkReal x15626=((1.0)*sj6);
IkReal x15627=(cj5*r22);
IkReal x15628=(cj6*sj5);
IkReal x15629=(r20*sj5);
IkReal x15630=(cj6*r20);
IkReal x15631=(r21*sj2);
CheckValue<IkReal> x15632=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x15632.valid){
continue;
}
CheckValue<IkReal> x15633 = IKatan2WithCheck(IkReal((((cj2*x15630))+(((-1.0)*sj2*x15627))+(((-1.0)*x15625*x15626))+(((-1.0)*sj2*x15626*x15629))+(((-1.0)*x15628*x15631)))),(((sj2*x15630))+((cj2*x15627))+((x15625*x15628))+((cj2*sj6*x15629))+(((-1.0)*x15626*x15631))),IKFAST_ATAN2_MAGTHRESH);
if(!x15633.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x15632.value)))+(x15633.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15634=IKcos(j4);
IkReal x15635=IKsin(j4);
IkReal x15636=((0.0718)*sj1);
IkReal x15637=(r11*sj0);
IkReal x15638=(cj5*r12);
IkReal x15639=(cj6*sj5);
IkReal x15640=(cj1*cj2);
IkReal x15641=(cj6*r20);
IkReal x15642=(cj0*sj6);
IkReal x15643=((1.0)*sj1);
IkReal x15644=((1.0)*cj5);
IkReal x15645=((0.0009)*sj2);
IkReal x15646=((0.02626)*sj1);
IkReal x15647=((1.0)*sj0);
IkReal x15648=(cj6*r10);
IkReal x15649=(sj5*sj6);
IkReal x15650=((0.0718)*cj1);
IkReal x15651=(cj6*r00);
IkReal x15652=((1.0)*r21);
IkReal x15653=((0.02626)*sj6);
IkReal x15654=((1.0)*cj0);
IkReal x15655=((0.02626)*sj0);
IkReal x15656=((1.0)*cj1);
IkReal x15657=(cj2*x15634);
IkReal x15658=(cj0*x15648);
IkReal x15659=(sj2*x15635);
IkReal x15660=(sj2*x15634);
IkReal x15661=(r01*x15653);
IkReal x15662=(cj2*x15635);
evalcond[0]=((((-1.0)*sj6*x15652))+(((-1.0)*x15656*x15660))+(((-1.0)*x15635*x15640))+x15641);
evalcond[1]=((((-1.0)*x15639*x15652))+((x15634*x15640))+(((-1.0)*x15656*x15659))+(((-1.0)*r20*x15649))+(((-1.0)*r22*x15644)));
evalcond[2]=(((r01*x15642))+((sj6*x15637))+(((-1.0)*x15647*x15648))+(((-1.0)*x15651*x15654))+x15657+(((-1.0)*x15659)));
evalcond[3]=((((-1.0)*x15643*x15662))+(((-1.0)*x15643*x15660))+(((-1.0)*x15648*x15654))+((r11*x15642))+((sj0*x15651))+(((-1.0)*r01*sj6*x15647)));
evalcond[4]=(((cj0*cj5*r02))+((r10*sj0*x15649))+x15660+x15662+((sj0*x15638))+((cj0*r01*x15639))+((x15637*x15639))+((r00*sj5*x15642)));
evalcond[5]=(((r10*sj5*x15642))+(((-1.0)*r02*sj0*x15644))+(((-1.0)*x15643*x15659))+((cj0*x15638))+(((-1.0)*r01*x15639*x15647))+((cj0*r11*x15639))+(((-1.0)*r00*x15647*x15649))+((sj1*x15657)));
evalcond[6]=((((-0.02626)*x15635*x15640))+(((0.02626)*x15641))+(((-1.0)*r21*x15653))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.21326)*x15640))+(((-1.0)*cj1*x15645))+(((-0.02626)*cj1*x15660))+(((-0.0718)*x15634*x15640))+((x15650*x15659))+pz);
evalcond[7]=((-0.001)+(((0.02626)*x15657))+(((-1.0)*px*x15654))+(((-0.0718)*x15660))+(((-0.0718)*x15662))+(((-0.02626)*x15659))+(((-1.0)*x15648*x15655))+(((-0.02626)*cj0*x15651))+(((0.0009)*cj2))+(((-0.21326)*sj2))+((x15637*x15653))+(((0.02626)*r01*x15642))+(((-1.0)*py*x15647)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*sj1*x15645))+(((0.02626)*r11*x15642))+(((-0.02626)*x15658))+(((-1.0)*sj0*x15661))+((x15651*x15655))+(((-1.0)*x15636*x15657))+(((0.0001)*cj1))+((px*sj0))+(((-0.21326)*cj2*sj1))+((x15636*x15659))+(((-1.0)*py*x15654))+(((-1.0)*x15646*x15662))+(((-1.0)*x15646*x15660)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15663=(cj0*sj5);
IkReal x15664=(cj5*cj6);
IkReal x15665=((1.0)*sj5);
IkReal x15666=((1.0)*cj0);
IkReal x15667=((1.0)*sj0);
IkReal x15668=(cj5*sj6);
IkReal x15669=(r10*x15668);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=(sj1+((r20*x15668))+((r21*x15664))+(((-1.0)*r22*x15665)));
evalcond[2]=(((r02*x15663))+(((-1.0)*x15667*x15669))+((r12*sj0*sj5))+(((-1.0)*r00*x15666*x15668))+(((-1.0)*r01*x15664*x15666))+(((-1.0)*r11*x15664*x15667)));
evalcond[3]=(((r01*sj0*x15664))+((r12*x15663))+(((-1.0)*x15666*x15669))+(((-1.0)*r02*sj0*x15665))+((r00*sj0*x15668))+(((-1.0)*r11*x15664*x15666))+(((-1.0)*cj1)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x15670=(cj2*r21);
IkReal x15671=((1.0)*cj6);
IkReal x15672=((1.0)*cj2);
IkReal x15673=(cj5*r22);
IkReal x15674=(r20*sj2);
IkReal x15675=(sj5*sj6);
IkReal x15676=(r21*sj2);
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
j4eval[2]=((IKabs(((((-1.0)*sj5*x15671*x15676))+(((-1.0)*cj2*r20*x15671))+(((-1.0)*x15674*x15675))+((sj6*x15670))+(((-1.0)*sj2*x15673)))))+(IKabs(((((-1.0)*r20*x15672*x15675))+((cj6*x15674))+(((-1.0)*x15672*x15673))+(((-1.0)*sj6*x15676))+(((-1.0)*sj5*x15670*x15671))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
j4eval[0]=cj1;
j4eval[1]=IKsign(cj1);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
sj3=0;
cj3=-1.0;
j3=3.14159265358979;
IkReal x15677=(cj1*sj1);
j4eval[0]=x15677;
j4eval[1]=IKsign(x15677);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x15678=(cj5*cj6);
IkReal x15679=(cj0*sj6);
IkReal x15680=(r01*sj0);
IkReal x15681=((1.0)*sj0);
IkReal x15682=((1.0)*cj5);
IkReal x15683=(cj0*r12);
IkReal x15684=(r02*sj5);
IkReal x15685=((1.0)*sj5);
IkReal x15686=(cj5*sj6);
IkReal x15687=((1.0)*cj0);
IkReal x15688=(cj0*cj6*r10);
IkReal x15689=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j1))), 6.28318530717959)));
evalcond[1]=(((r20*x15686))+((r21*x15678))+(((-1.0)*r22*x15685)));
evalcond[2]=(((r11*x15679))+x15689+(((-1.0)*cj6*r10*x15687))+(((-1.0)*sj6*x15680)));
evalcond[3]=((((-1.0)*r00*x15679*x15682))+((r12*sj0*sj5))+(((-1.0)*r10*x15681*x15686))+(((-1.0)*r11*x15678*x15681))+((cj0*x15684))+(((-1.0)*r01*x15678*x15687)));
evalcond[4]=((-1.0)+((sj5*x15683))+(((-1.0)*r10*x15679*x15682))+((r00*sj0*x15686))+(((-1.0)*r11*x15678*x15687))+(((-1.0)*x15681*x15684))+((x15678*x15680)));
evalcond[5]=(((cj0*cj6*r11*sj5))+(((-1.0)*cj5*r02*x15681))+(((-1.0)*cj6*x15680*x15685))+(((-1.0)*r00*sj5*sj6*x15681))+((r10*sj5*x15679))+((cj5*x15683)));
evalcond[6]=((0.0001)+(((-1.0)*py*x15687))+(((-0.02626)*sj6*x15680))+(((0.02626)*x15689))+(((-0.02626)*x15688))+(((0.02626)*r11*x15679))+((px*sj0)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15690=(cj2*r21);
IkReal x15691=((1.0)*cj6);
IkReal x15692=((1.0)*cj2);
IkReal x15693=(cj5*r22);
IkReal x15694=(r20*sj2);
IkReal x15695=(sj5*sj6);
IkReal x15696=(r21*sj2);
if( IKabs(((((-1.0)*cj2*r20*x15691))+(((-1.0)*x15694*x15695))+(((-1.0)*sj5*x15691*x15696))+((sj6*x15690))+(((-1.0)*sj2*x15693)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj6*x15696))+(((-1.0)*sj5*x15690*x15691))+(((-1.0)*r20*x15692*x15695))+(((-1.0)*x15692*x15693))+((cj6*x15694)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj2*r20*x15691))+(((-1.0)*x15694*x15695))+(((-1.0)*sj5*x15691*x15696))+((sj6*x15690))+(((-1.0)*sj2*x15693))))+IKsqr(((((-1.0)*sj6*x15696))+(((-1.0)*sj5*x15690*x15691))+(((-1.0)*r20*x15692*x15695))+(((-1.0)*x15692*x15693))+((cj6*x15694))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj2*r20*x15691))+(((-1.0)*x15694*x15695))+(((-1.0)*sj5*x15691*x15696))+((sj6*x15690))+(((-1.0)*sj2*x15693))), ((((-1.0)*sj6*x15696))+(((-1.0)*sj5*x15690*x15691))+(((-1.0)*r20*x15692*x15695))+(((-1.0)*x15692*x15693))+((cj6*x15694))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15697=IKcos(j4);
IkReal x15698=IKsin(j4);
IkReal x15699=(cj6*sj0);
IkReal x15700=(sj0*sj6);
IkReal x15701=((0.02626)*cj6);
IkReal x15702=(r21*sj6);
IkReal x15703=(cj0*r00);
IkReal x15704=(sj5*sj6);
IkReal x15705=((1.0)*cj6);
IkReal x15706=(cj2*x15698);
IkReal x15707=((0.02626)*x15698);
IkReal x15708=(cj2*x15697);
IkReal x15709=(sj2*x15698);
IkReal x15710=(sj2*x15697);
IkReal x15711=(cj0*r01*sj6);
IkReal x15712=((1.0)*x15710);
evalcond[0]=((((-1.0)*x15712))+x15706+((cj6*r20))+(((-1.0)*x15702)));
evalcond[1]=((((-1.0)*r21*sj5*x15705))+(((-1.0)*cj5*r22))+(((-1.0)*r20*x15704))+(((-1.0)*x15708))+(((-1.0)*x15709)));
evalcond[2]=(((r11*x15700))+(((-1.0)*r10*x15699))+(((-1.0)*x15703*x15705))+x15708+x15709+x15711);
evalcond[3]=((((-1.0)*x15712))+((cj5*r12*sj0))+((cj0*cj5*r02))+((r11*sj5*x15699))+x15706+((r10*sj5*x15700))+((cj0*cj6*r01*sj5))+((x15703*x15704)));
evalcond[4]=((-0.1255)+(((0.0718)*x15709))+(((0.0718)*x15708))+((r20*x15701))+(((-0.02626)*x15702))+(((-0.0009)*sj2))+(((0.02626)*x15706))+pz+(((-0.01834)*cj2))+(((-0.02626)*x15710)));
evalcond[5]=((-0.001)+(((0.02626)*r11*x15700))+(((-1.0)*x15701*x15703))+(((-0.01834)*sj2))+(((0.0718)*x15710))+(((0.0009)*cj2))+(((-0.0718)*x15706))+(((0.02626)*x15708))+((sj2*x15707))+(((-1.0)*py*sj0))+(((0.02626)*x15711))+(((-1.0)*cj0*px))+(((-0.02626)*r10*x15699)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15713=(cj5*cj6);
IkReal x15714=((1.0)*sj0);
IkReal x15715=(r21*sj6);
IkReal x15716=(cj0*sj5);
IkReal x15717=((1.0)*r22);
IkReal x15718=(cj6*r20);
IkReal x15719=(cj5*sj6);
IkReal x15720=((1.0)*cj0);
IkReal x15721=((1.0)*sj5);
IkReal x15722=(x15719*x15720);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x15719))+(((-1.0)*sj5*x15717))+((r21*x15713)));
evalcond[2]=((((-1.0)*x15715))+x15718);
evalcond[3]=((((-1.0)*cj5*x15717))+(((-1.0)*r20*sj6*x15721))+(((-1.0)*cj6*r21*x15721)));
evalcond[4]=((((-1.0)*r11*x15713*x15714))+((r12*sj0*sj5))+(((-1.0)*r10*x15714*x15719))+((r02*x15716))+(((-1.0)*r00*x15722))+(((-1.0)*r01*x15713*x15720)));
evalcond[5]=(((r12*x15716))+((r00*sj0*x15719))+(((-1.0)*r10*x15722))+(((-1.0)*r02*sj5*x15714))+((r01*sj0*x15713))+(((-1.0)*r11*x15713*x15720)));
evalcond[6]=((-0.0001)+pz+(((0.02626)*x15718))+(((-0.02626)*x15715)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15723=(sj0*sj2);
IkReal x15724=(cj0*cj2);
IkReal x15725=(r01*sj6);
IkReal x15726=(cj6*r10);
IkReal x15727=(cj2*sj0);
IkReal x15728=(cj0*sj2);
IkReal x15729=(cj6*r00);
IkReal x15730=((1.0)*r11*sj6);
IkReal x15731=((1.0)*x15728);
if( IKabs((((x15723*x15726))+((x15724*x15726))+(((-1.0)*x15725*x15731))+(((-1.0)*x15727*x15729))+(((-1.0)*x15723*x15730))+(((-1.0)*x15724*x15730))+((x15725*x15727))+((x15728*x15729)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x15723*x15729))+(((-1.0)*x15723*x15725))+((x15724*x15729))+(((-1.0)*x15726*x15731))+((r11*sj6*x15728))+(((-1.0)*x15727*x15730))+((x15726*x15727))+(((-1.0)*x15724*x15725)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x15723*x15726))+((x15724*x15726))+(((-1.0)*x15725*x15731))+(((-1.0)*x15727*x15729))+(((-1.0)*x15723*x15730))+(((-1.0)*x15724*x15730))+((x15725*x15727))+((x15728*x15729))))+IKsqr((((x15723*x15729))+(((-1.0)*x15723*x15725))+((x15724*x15729))+(((-1.0)*x15726*x15731))+((r11*sj6*x15728))+(((-1.0)*x15727*x15730))+((x15726*x15727))+(((-1.0)*x15724*x15725))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((x15723*x15726))+((x15724*x15726))+(((-1.0)*x15725*x15731))+(((-1.0)*x15727*x15729))+(((-1.0)*x15723*x15730))+(((-1.0)*x15724*x15730))+((x15725*x15727))+((x15728*x15729))), (((x15723*x15729))+(((-1.0)*x15723*x15725))+((x15724*x15729))+(((-1.0)*x15726*x15731))+((r11*sj6*x15728))+(((-1.0)*x15727*x15730))+((x15726*x15727))+(((-1.0)*x15724*x15725))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15732=IKsin(j4);
IkReal x15733=IKcos(j4);
IkReal x15734=(sj0*sj6);
IkReal x15735=((0.02626)*r01);
IkReal x15736=(cj6*sj0);
IkReal x15737=(r11*sj5);
IkReal x15738=(r10*sj5);
IkReal x15739=(cj5*r12);
IkReal x15740=((1.0)*sj0);
IkReal x15741=(cj5*r02);
IkReal x15742=((1.0)*r01);
IkReal x15743=(cj0*sj6);
IkReal x15744=(r00*sj5);
IkReal x15745=((1.0)*cj0);
IkReal x15746=((0.02626)*r00);
IkReal x15747=(cj0*cj6);
IkReal x15748=(cj2*x15732);
IkReal x15749=(sj2*x15732);
IkReal x15750=(r11*x15743);
IkReal x15751=(r10*x15747);
IkReal x15752=((0.0718)*x15733);
IkReal x15753=(cj2*x15733);
IkReal x15754=(sj2*x15733);
IkReal x15755=((1.0)*x15754);
evalcond[0]=(((r11*x15734))+(((-1.0)*cj6*r00*x15745))+x15749+x15753+(((-1.0)*r10*x15736))+((r01*x15743)));
evalcond[1]=((((-1.0)*cj6*r10*x15745))+(((-1.0)*x15755))+((r00*x15736))+x15748+x15750+(((-1.0)*x15734*x15742)));
evalcond[2]=(((r01*sj5*x15747))+((x15734*x15738))+(((-1.0)*x15755))+((x15743*x15744))+((x15736*x15737))+((cj0*x15741))+x15748+((sj0*x15739)));
evalcond[3]=((((-1.0)*sj5*x15736*x15742))+(((-1.0)*x15734*x15744))+(((-1.0)*x15749))+((cj0*x15739))+(((-1.0)*x15753))+((x15738*x15743))+((x15737*x15747))+(((-1.0)*x15740*x15741)));
evalcond[4]=((-0.1255)+(((0.02626)*x15750))+(((-0.02626)*x15754))+(((-0.02626)*x15751))+((cj2*x15752))+(((-1.0)*py*x15745))+(((-0.0009)*sj2))+((px*sj0))+(((-0.01834)*cj2))+(((0.02626)*x15748))+((x15736*x15746))+(((-1.0)*x15734*x15735))+(((0.0718)*x15749)));
evalcond[5]=((-0.001)+(((0.02626)*x15753))+(((-0.01834)*sj2))+(((0.02626)*r11*x15734))+(((-0.0718)*x15748))+(((-1.0)*py*x15740))+(((0.0009)*cj2))+((sj2*x15752))+(((-0.02626)*r10*x15736))+((x15735*x15743))+(((0.02626)*x15749))+(((-1.0)*x15746*x15747))+(((-1.0)*px*x15745)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15756=(cj5*cj6);
IkReal x15757=(cj0*sj6);
IkReal x15758=(r01*sj0);
IkReal x15759=((1.0)*sj0);
IkReal x15760=((1.0)*cj5);
IkReal x15761=(cj0*r12);
IkReal x15762=(r02*sj5);
IkReal x15763=((1.0)*sj5);
IkReal x15764=(cj5*sj6);
IkReal x15765=((1.0)*cj0);
IkReal x15766=(cj0*cj6*r10);
IkReal x15767=(cj6*r00*sj0);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j1)))), 6.28318530717959)));
evalcond[1]=(((r21*x15756))+(((-1.0)*r22*x15763))+((r20*x15764)));
evalcond[2]=((((-1.0)*cj6*r10*x15765))+x15767+((r11*x15757))+(((-1.0)*sj6*x15758)));
evalcond[3]=((((-1.0)*r01*x15756*x15765))+((r12*sj0*sj5))+(((-1.0)*r10*x15759*x15764))+(((-1.0)*r00*x15757*x15760))+((cj0*x15762))+(((-1.0)*r11*x15756*x15759)));
evalcond[4]=((1.0)+(((-1.0)*x15759*x15762))+((r00*sj0*x15764))+(((-1.0)*r10*x15757*x15760))+((sj5*x15761))+(((-1.0)*r11*x15756*x15765))+((x15756*x15758)));
evalcond[5]=((((-1.0)*cj6*x15758*x15763))+(((-1.0)*cj5*r02*x15759))+((cj5*x15761))+((cj0*cj6*r11*sj5))+((r10*sj5*x15757))+(((-1.0)*r00*sj5*sj6*x15759)));
evalcond[6]=((-0.0001)+(((0.02626)*x15767))+(((0.02626)*r11*x15757))+(((-1.0)*py*x15765))+((px*sj0))+(((-0.02626)*x15766))+(((-0.02626)*sj6*x15758)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15768=(cj5*r22);
IkReal x15769=(cj6*sj2);
IkReal x15770=(r21*sj5);
IkReal x15771=(r21*sj6);
IkReal x15772=(cj2*cj6);
IkReal x15773=(r20*sj5*sj6);
if( IKabs((((r20*x15772))+(((-1.0)*cj2*x15771))+((sj2*x15768))+((sj2*x15773))+((x15769*x15770)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj2*x15768))+((cj2*x15773))+((x15770*x15772))+((sj2*x15771))+(((-1.0)*r20*x15769)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r20*x15772))+(((-1.0)*cj2*x15771))+((sj2*x15768))+((sj2*x15773))+((x15769*x15770))))+IKsqr((((cj2*x15768))+((cj2*x15773))+((x15770*x15772))+((sj2*x15771))+(((-1.0)*r20*x15769))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r20*x15772))+(((-1.0)*cj2*x15771))+((sj2*x15768))+((sj2*x15773))+((x15769*x15770))), (((cj2*x15768))+((cj2*x15773))+((x15770*x15772))+((sj2*x15771))+(((-1.0)*r20*x15769))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15774=IKcos(j4);
IkReal x15775=IKsin(j4);
IkReal x15776=(r11*sj0);
IkReal x15777=(cj6*sj5);
IkReal x15778=(r10*sj0);
IkReal x15779=(sj5*sj6);
IkReal x15780=(cj6*r20);
IkReal x15781=((1.0)*cj6);
IkReal x15782=((0.02626)*sj6);
IkReal x15783=(cj0*r00);
IkReal x15784=((0.02626)*cj6);
IkReal x15785=((1.0)*r21);
IkReal x15786=(cj0*r01);
IkReal x15787=(cj2*x15774);
IkReal x15788=(sj2*x15775);
IkReal x15789=((0.02626)*x15775);
IkReal x15790=(cj2*x15775);
IkReal x15791=((0.0718)*x15774);
IkReal x15792=(sj2*x15774);
IkReal x15793=(x15787+x15788);
evalcond[0]=((((-1.0)*sj6*x15785))+x15780+x15792+(((-1.0)*x15790)));
evalcond[1]=((((-1.0)*x15777*x15785))+x15793+(((-1.0)*cj5*r22))+(((-1.0)*r20*x15779)));
evalcond[2]=(((sj6*x15786))+x15793+(((-1.0)*x15778*x15781))+((sj6*x15776))+(((-1.0)*x15781*x15783)));
evalcond[3]=(((cj5*r12*sj0))+((x15777*x15786))+((cj0*cj5*r02))+((x15776*x15777))+((x15779*x15783))+x15790+((x15778*x15779))+(((-1.0)*x15792)));
evalcond[4]=((0.1255)+(((-1.0)*r21*x15782))+(((-1.0)*cj2*x15789))+(((-0.0718)*x15788))+(((-0.0718)*x15787))+(((0.02626)*x15780))+pz+(((0.01834)*cj2))+(((0.02626)*x15792))+(((0.0009)*sj2)));
evalcond[5]=((-0.001)+(((-0.01834)*sj2))+((x15782*x15786))+(((0.02626)*x15787))+(((0.02626)*x15788))+((x15776*x15782))+(((0.0009)*cj2))+(((-1.0)*x15783*x15784))+(((-0.0718)*x15790))+(((-1.0)*py*sj0))+((sj2*x15791))+(((-1.0)*x15778*x15784))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15794=(cj5*cj6);
IkReal x15795=((1.0)*sj0);
IkReal x15796=(r21*sj6);
IkReal x15797=(cj0*sj5);
IkReal x15798=((1.0)*r22);
IkReal x15799=(cj6*r20);
IkReal x15800=(cj5*sj6);
IkReal x15801=((1.0)*cj0);
IkReal x15802=((1.0)*sj5);
IkReal x15803=(x15800*x15801);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j1)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x15794))+(((-1.0)*sj5*x15798))+((r20*x15800)));
evalcond[2]=(x15799+(((-1.0)*x15796)));
evalcond[3]=((((-1.0)*cj5*x15798))+(((-1.0)*cj6*r21*x15802))+(((-1.0)*r20*sj6*x15802)));
evalcond[4]=((((-1.0)*r01*x15794*x15801))+((r02*x15797))+(((-1.0)*r11*x15794*x15795))+(((-1.0)*r00*x15803))+((r12*sj0*sj5))+(((-1.0)*r10*x15795*x15800)));
evalcond[5]=((((-1.0)*r10*x15803))+(((-1.0)*r02*sj5*x15795))+((r00*sj0*x15800))+((r01*sj0*x15794))+((r12*x15797))+(((-1.0)*r11*x15794*x15801)));
evalcond[6]=((0.0001)+(((-0.02626)*x15796))+pz+(((0.02626)*x15799)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15804=(cj6*r10);
IkReal x15805=(r11*sj0);
IkReal x15806=(r01*sj6);
IkReal x15807=((1.0)*sj0);
IkReal x15808=(cj2*sj6);
IkReal x15809=(cj0*r11);
IkReal x15810=(cj2*sj0);
IkReal x15811=(cj6*r00);
IkReal x15812=(sj0*sj2);
IkReal x15813=((1.0)*cj0*cj2);
IkReal x15814=((1.0)*sj2*sj6);
IkReal x15815=(sj2*x15811);
if( IKabs(((((-1.0)*x15804*x15813))+((x15808*x15809))+((x15804*x15812))+(((-1.0)*x15805*x15814))+(((-1.0)*cj2*x15806*x15807))+(((-1.0)*cj0*sj2*x15806))+((x15810*x15811))+((cj0*x15815)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj0*sj2*x15804))+((cj0*cj2*x15811))+((x15804*x15810))+(((-1.0)*x15806*x15813))+(((-1.0)*x15809*x15814))+((x15806*x15812))+(((-1.0)*x15805*x15808))+(((-1.0)*x15807*x15815)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x15804*x15813))+((x15808*x15809))+((x15804*x15812))+(((-1.0)*x15805*x15814))+(((-1.0)*cj2*x15806*x15807))+(((-1.0)*cj0*sj2*x15806))+((x15810*x15811))+((cj0*x15815))))+IKsqr((((cj0*sj2*x15804))+((cj0*cj2*x15811))+((x15804*x15810))+(((-1.0)*x15806*x15813))+(((-1.0)*x15809*x15814))+((x15806*x15812))+(((-1.0)*x15805*x15808))+(((-1.0)*x15807*x15815))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x15804*x15813))+((x15808*x15809))+((x15804*x15812))+(((-1.0)*x15805*x15814))+(((-1.0)*cj2*x15806*x15807))+(((-1.0)*cj0*sj2*x15806))+((x15810*x15811))+((cj0*x15815))), (((cj0*sj2*x15804))+((cj0*cj2*x15811))+((x15804*x15810))+(((-1.0)*x15806*x15813))+(((-1.0)*x15809*x15814))+((x15806*x15812))+(((-1.0)*x15805*x15808))+(((-1.0)*x15807*x15815))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15816=IKcos(j4);
IkReal x15817=IKsin(j4);
IkReal x15818=((0.02626)*sj0);
IkReal x15819=(cj6*r10);
IkReal x15820=(r01*sj6);
IkReal x15821=(r11*sj6);
IkReal x15822=(sj0*sj5);
IkReal x15823=(cj6*r11);
IkReal x15824=(r10*sj6);
IkReal x15825=(cj5*r12);
IkReal x15826=((0.02626)*cj0);
IkReal x15827=((1.0)*sj0);
IkReal x15828=(cj5*r02);
IkReal x15829=(cj0*sj5);
IkReal x15830=(r00*sj6);
IkReal x15831=(cj6*r00);
IkReal x15832=((1.0)*cj0);
IkReal x15833=(cj6*r01);
IkReal x15834=(cj2*x15816);
IkReal x15835=(sj2*x15817);
IkReal x15836=((0.02626)*x15817);
IkReal x15837=(cj2*x15817);
IkReal x15838=((0.0718)*x15816);
IkReal x15839=(sj2*x15816);
IkReal x15840=(x15834+x15835);
evalcond[0]=((((-1.0)*x15831*x15832))+(((-1.0)*x15819*x15827))+x15840+((sj0*x15821))+((cj0*x15820)));
evalcond[1]=((((-1.0)*x15819*x15832))+((sj0*x15831))+(((-1.0)*x15837))+x15839+(((-1.0)*x15820*x15827))+((cj0*x15821)));
evalcond[2]=(((x15829*x15830))+((x15829*x15833))+((x15822*x15823))+((x15822*x15824))+(((-1.0)*x15839))+x15837+((sj0*x15825))+((cj0*x15828)));
evalcond[3]=(((x15823*x15829))+((x15824*x15829))+(((-1.0)*x15822*x15833))+(((-1.0)*x15822*x15830))+(((-1.0)*x15827*x15828))+x15840+((cj0*x15825)));
evalcond[4]=((0.1255)+((x15818*x15831))+(((-1.0)*x15818*x15820))+(((-1.0)*x15819*x15826))+(((-1.0)*cj2*x15836))+((x15821*x15826))+(((0.02626)*x15839))+(((0.01834)*cj2))+((px*sj0))+(((-0.0718)*x15834))+(((-0.0718)*x15835))+(((0.0009)*sj2))+(((-1.0)*py*x15832)));
evalcond[5]=((-0.001)+(((-1.0)*px*x15832))+(((-1.0)*py*x15827))+(((-0.01834)*sj2))+(((-1.0)*x15826*x15831))+((x15820*x15826))+(((0.0009)*cj2))+((x15818*x15821))+(((0.02626)*x15834))+(((0.02626)*x15835))+(((-0.0718)*x15837))+(((-1.0)*x15818*x15819))+((sj2*x15838)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15841=(cj0*cj1);
IkReal x15842=(cj5*r22);
IkReal x15843=(r21*sj5);
IkReal x15844=((1.0)*cj2);
IkReal x15845=(r11*sj6);
IkReal x15846=(cj1*sj0);
IkReal x15847=(cj6*r00);
IkReal x15848=(r01*sj6);
IkReal x15849=((1.0)*cj6*sj2);
IkReal x15850=(sj1*x15844);
IkReal x15851=(r20*sj5*sj6);
IkReal x15852=((1.0)*sj1*sj2);
CheckValue<IkReal> x15853=IKPowWithIntegerCheck(IKsign((cj1*sj1)),-1);
if(!x15853.valid){
continue;
}
CheckValue<IkReal> x15854 = IKatan2WithCheck(IkReal(((((-1.0)*x15851*x15852))+(((-1.0)*x15842*x15852))+(((-1.0)*x15844*x15846*x15847))+(((-1.0)*x15841*x15844*x15845))+((cj2*x15846*x15848))+(((-1.0)*sj1*x15843*x15849))+((cj2*cj6*r10*x15841)))),((((-1.0)*sj2*x15846*x15848))+(((-1.0)*cj6*x15843*x15850))+(((-1.0)*x15842*x15850))+(((-1.0)*x15850*x15851))+((sj2*x15841*x15845))+((sj2*x15846*x15847))+(((-1.0)*r10*x15841*x15849))),IKFAST_ATAN2_MAGTHRESH);
if(!x15854.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x15853.value)))+(x15854.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15855=IKcos(j4);
IkReal x15856=IKsin(j4);
IkReal x15857=((0.0718)*sj1);
IkReal x15858=((0.02626)*sj0);
IkReal x15859=(cj6*r10);
IkReal x15860=(sj0*sj6);
IkReal x15861=(cj5*r12);
IkReal x15862=((1.0)*cj1);
IkReal x15863=(r01*sj6);
IkReal x15864=(r10*sj5);
IkReal x15865=(cj0*sj6);
IkReal x15866=((0.02626)*cj0);
IkReal x15867=(cj6*r20);
IkReal x15868=((1.0)*cj5);
IkReal x15869=(cj1*sj2);
IkReal x15870=((0.02626)*sj1);
IkReal x15871=((1.0)*sj0);
IkReal x15872=((1.0)*sj1);
IkReal x15873=((0.01834)*cj2);
IkReal x15874=(r00*sj5);
IkReal x15875=((0.0718)*cj1);
IkReal x15876=(cj6*sj0);
IkReal x15877=((1.0)*cj0);
IkReal x15878=((1.0)*sj5);
IkReal x15879=(r21*sj6);
IkReal x15880=(r11*sj5);
IkReal x15881=(cj6*r00);
IkReal x15882=(cj2*x15855);
IkReal x15883=(sj2*x15856);
IkReal x15884=(cj2*x15856);
IkReal x15885=(sj2*x15855);
IkReal x15886=(cj6*r01*sj5);
IkReal x15887=(cj1*x15884);
evalcond[0]=((((-1.0)*x15862*x15885))+(((-1.0)*x15879))+x15887+x15867);
evalcond[1]=(((cj0*x15863))+((r11*x15860))+(((-1.0)*x15859*x15871))+(((-1.0)*x15877*x15881))+x15883+x15882);
evalcond[2]=((((-1.0)*r22*x15868))+(((-1.0)*cj6*r21*x15878))+(((-1.0)*r20*sj6*x15878))+(((-1.0)*x15862*x15882))+(((-1.0)*x15862*x15883)));
evalcond[3]=(((r00*x15876))+((sj1*x15884))+((r11*x15865))+(((-1.0)*x15872*x15885))+(((-1.0)*x15859*x15877))+(((-1.0)*r01*x15860)));
evalcond[4]=(((cj0*cj5*r02))+(((-1.0)*x15885))+((sj0*x15861))+((x15860*x15864))+((cj0*x15886))+((x15865*x15874))+((x15876*x15880))+x15884);
evalcond[5]=((((-1.0)*x15860*x15874))+((cj0*cj6*x15880))+((cj0*x15861))+(((-1.0)*r02*sj0*x15868))+(((-1.0)*x15871*x15886))+(((-1.0)*x15872*x15882))+(((-1.0)*x15872*x15883))+((x15864*x15865)));
evalcond[6]=((((-0.02626)*x15855*x15869))+(((0.02626)*x15887))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.02626)*x15879))+(((0.0718)*x15856*x15869))+(((-0.0009)*x15869))+(((-1.0)*cj1*x15873))+pz+((x15875*x15882))+(((0.02626)*x15867)));
evalcond[7]=((-0.001)+(((-1.0)*px*x15877))+(((0.02626)*x15883))+(((0.02626)*x15882))+(((-0.01834)*sj2))+(((-1.0)*py*x15871))+(((0.0718)*x15885))+((r11*sj6*x15858))+(((0.0009)*cj2))+(((-0.0718)*x15884))+(((-1.0)*x15866*x15881))+((x15863*x15866))+(((-1.0)*x15858*x15859)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*x15859*x15866))+(((0.02626)*r11*x15865))+(((-1.0)*py*x15877))+(((-1.0)*x15858*x15863))+(((-1.0)*x15870*x15885))+((x15857*x15882))+((x15857*x15883))+(((-0.0009)*sj1*sj2))+(((0.0001)*cj1))+((px*sj0))+((x15858*x15881))+((x15870*x15884))+(((-1.0)*sj1*x15873)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15888=(cj1*sj2);
IkReal x15889=(cj2*sj6);
IkReal x15890=(cj1*cj2);
IkReal x15891=(cj6*r20);
IkReal x15892=((1.0)*sj6);
IkReal x15893=(cj0*r01);
IkReal x15894=(cj0*cj6*r00);
IkReal x15895=((1.0)*r11*sj0);
IkReal x15896=(cj6*r10*sj0);
CheckValue<IkReal> x15897=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x15897.valid){
continue;
}
CheckValue<IkReal> x15898 = IKatan2WithCheck(IkReal((((x15888*x15896))+((x15888*x15894))+(((-1.0)*x15888*x15892*x15893))+(((-1.0)*r11*sj0*x15888*x15892))+(((-1.0)*cj2*x15891))+((r21*x15889)))),((((-1.0)*cj1*x15889*x15895))+(((-1.0)*r21*sj2*x15892))+((sj2*x15891))+((x15890*x15896))+((x15890*x15894))+(((-1.0)*cj1*x15889*x15893))),IKFAST_ATAN2_MAGTHRESH);
if(!x15898.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x15897.value)))+(x15898.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15899=IKcos(j4);
IkReal x15900=IKsin(j4);
IkReal x15901=((0.0718)*sj1);
IkReal x15902=((0.02626)*sj0);
IkReal x15903=(cj6*r10);
IkReal x15904=(sj0*sj6);
IkReal x15905=(cj5*r12);
IkReal x15906=((1.0)*cj1);
IkReal x15907=(r01*sj6);
IkReal x15908=(r10*sj5);
IkReal x15909=(cj0*sj6);
IkReal x15910=((0.02626)*cj0);
IkReal x15911=(cj6*r20);
IkReal x15912=((1.0)*cj5);
IkReal x15913=(cj1*sj2);
IkReal x15914=((0.02626)*sj1);
IkReal x15915=((1.0)*sj0);
IkReal x15916=((1.0)*sj1);
IkReal x15917=((0.01834)*cj2);
IkReal x15918=(r00*sj5);
IkReal x15919=((0.0718)*cj1);
IkReal x15920=(cj6*sj0);
IkReal x15921=((1.0)*cj0);
IkReal x15922=((1.0)*sj5);
IkReal x15923=(r21*sj6);
IkReal x15924=(r11*sj5);
IkReal x15925=(cj6*r00);
IkReal x15926=(cj2*x15899);
IkReal x15927=(sj2*x15900);
IkReal x15928=(cj2*x15900);
IkReal x15929=(sj2*x15899);
IkReal x15930=(cj6*r01*sj5);
IkReal x15931=(cj1*x15928);
evalcond[0]=((((-1.0)*x15906*x15929))+(((-1.0)*x15923))+x15911+x15931);
evalcond[1]=((((-1.0)*x15921*x15925))+(((-1.0)*x15903*x15915))+((r11*x15904))+((cj0*x15907))+x15926+x15927);
evalcond[2]=((((-1.0)*x15906*x15927))+(((-1.0)*x15906*x15926))+(((-1.0)*cj6*r21*x15922))+(((-1.0)*r20*sj6*x15922))+(((-1.0)*r22*x15912)));
evalcond[3]=((((-1.0)*x15903*x15921))+(((-1.0)*x15916*x15929))+((r11*x15909))+((r00*x15920))+((sj1*x15928))+(((-1.0)*r01*x15904)));
evalcond[4]=(((cj0*x15930))+((cj0*cj5*r02))+((x15909*x15918))+((x15920*x15924))+((x15904*x15908))+(((-1.0)*x15929))+((sj0*x15905))+x15928);
evalcond[5]=((((-1.0)*x15916*x15927))+(((-1.0)*x15916*x15926))+((x15908*x15909))+(((-1.0)*x15904*x15918))+(((-1.0)*x15915*x15930))+((cj0*x15905))+(((-1.0)*r02*sj0*x15912))+((cj0*cj6*x15924)));
evalcond[6]=((((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-0.0009)*x15913))+(((-0.02626)*x15899*x15913))+(((0.02626)*x15931))+(((-0.02626)*x15923))+(((0.02626)*x15911))+pz+(((0.0718)*x15900*x15913))+(((-1.0)*cj1*x15917))+((x15919*x15926)));
evalcond[7]=((-0.001)+(((0.0718)*x15929))+(((-1.0)*py*x15915))+(((-1.0)*x15910*x15925))+((x15907*x15910))+(((-0.01834)*sj2))+(((-1.0)*x15902*x15903))+(((-0.0718)*x15928))+(((0.0009)*cj2))+(((-1.0)*px*x15921))+(((0.02626)*x15926))+(((0.02626)*x15927))+((r11*sj6*x15902)));
evalcond[8]=(((x15901*x15927))+((x15901*x15926))+(((-0.1255)*sj1))+(((0.02626)*r11*x15909))+((x15902*x15925))+(((-1.0)*x15903*x15910))+(((-1.0)*x15902*x15907))+(((-1.0)*x15914*x15929))+(((-0.0009)*sj1*sj2))+(((0.0001)*cj1))+((px*sj0))+((x15914*x15928))+(((-1.0)*sj1*x15917))+(((-1.0)*py*x15921)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15932=(cj2*r21);
IkReal x15933=((1.0)*cj6);
IkReal x15934=((1.0)*cj2);
IkReal x15935=(cj5*r22);
IkReal x15936=(r20*sj2);
IkReal x15937=(sj5*sj6);
IkReal x15938=(r21*sj2);
CheckValue<IkReal> x15939=IKPowWithIntegerCheck(IKsign(cj1),-1);
if(!x15939.valid){
continue;
}
CheckValue<IkReal> x15940 = IKatan2WithCheck(IkReal(((((-1.0)*x15936*x15937))+(((-1.0)*sj2*x15935))+(((-1.0)*cj2*r20*x15933))+((sj6*x15932))+(((-1.0)*sj5*x15933*x15938)))),((((-1.0)*x15934*x15935))+(((-1.0)*sj6*x15938))+((cj6*x15936))+(((-1.0)*sj5*x15932*x15933))+(((-1.0)*r20*x15934*x15937))),IKFAST_ATAN2_MAGTHRESH);
if(!x15940.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x15939.value)))+(x15940.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x15941=IKcos(j4);
IkReal x15942=IKsin(j4);
IkReal x15943=((0.0718)*sj1);
IkReal x15944=((0.02626)*sj0);
IkReal x15945=(cj6*r10);
IkReal x15946=(sj0*sj6);
IkReal x15947=(cj5*r12);
IkReal x15948=((1.0)*cj1);
IkReal x15949=(r01*sj6);
IkReal x15950=(r10*sj5);
IkReal x15951=(cj0*sj6);
IkReal x15952=((0.02626)*cj0);
IkReal x15953=(cj6*r20);
IkReal x15954=((1.0)*cj5);
IkReal x15955=(cj1*sj2);
IkReal x15956=((0.02626)*sj1);
IkReal x15957=((1.0)*sj0);
IkReal x15958=((1.0)*sj1);
IkReal x15959=((0.01834)*cj2);
IkReal x15960=(r00*sj5);
IkReal x15961=((0.0718)*cj1);
IkReal x15962=(cj6*sj0);
IkReal x15963=((1.0)*cj0);
IkReal x15964=((1.0)*sj5);
IkReal x15965=(r21*sj6);
IkReal x15966=(r11*sj5);
IkReal x15967=(cj6*r00);
IkReal x15968=(cj2*x15941);
IkReal x15969=(sj2*x15942);
IkReal x15970=(cj2*x15942);
IkReal x15971=(sj2*x15941);
IkReal x15972=(cj6*r01*sj5);
IkReal x15973=(cj1*x15970);
evalcond[0]=((((-1.0)*x15965))+(((-1.0)*x15948*x15971))+x15953+x15973);
evalcond[1]=((((-1.0)*x15945*x15957))+((cj0*x15949))+(((-1.0)*x15963*x15967))+((r11*x15946))+x15968+x15969);
evalcond[2]=((((-1.0)*r22*x15954))+(((-1.0)*r20*sj6*x15964))+(((-1.0)*x15948*x15968))+(((-1.0)*x15948*x15969))+(((-1.0)*cj6*r21*x15964)));
evalcond[3]=(((sj1*x15970))+((r00*x15962))+(((-1.0)*x15945*x15963))+(((-1.0)*r01*x15946))+((r11*x15951))+(((-1.0)*x15958*x15971)));
evalcond[4]=(((cj0*cj5*r02))+(((-1.0)*x15971))+((x15951*x15960))+((x15962*x15966))+((cj0*x15972))+((x15946*x15950))+x15970+((sj0*x15947)));
evalcond[5]=((((-1.0)*x15958*x15968))+(((-1.0)*x15958*x15969))+(((-1.0)*x15946*x15960))+((cj0*cj6*x15966))+((x15950*x15951))+(((-1.0)*x15957*x15972))+(((-1.0)*r02*sj0*x15954))+((cj0*x15947)));
evalcond[6]=((((-0.02626)*x15965))+(((0.02626)*x15973))+(((-0.02626)*x15941*x15955))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+((x15961*x15968))+(((0.02626)*x15953))+(((-0.0009)*x15955))+(((0.0718)*x15942*x15955))+pz+(((-1.0)*cj1*x15959)));
evalcond[7]=((-0.001)+(((0.02626)*x15968))+(((0.02626)*x15969))+(((-0.01834)*sj2))+(((-1.0)*py*x15957))+(((-1.0)*x15944*x15945))+(((0.0718)*x15971))+((x15949*x15952))+(((0.0009)*cj2))+(((-1.0)*x15952*x15967))+((r11*sj6*x15944))+(((-0.0718)*x15970))+(((-1.0)*px*x15963)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*py*x15963))+((x15943*x15969))+((x15943*x15968))+(((-1.0)*x15945*x15952))+((x15956*x15970))+(((-1.0)*x15956*x15971))+(((-1.0)*x15944*x15949))+(((-1.0)*sj1*x15959))+(((-0.0009)*sj1*sj2))+(((0.02626)*r11*x15951))+((x15944*x15967))+(((0.0001)*cj1))+((px*sj0)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x15974=(cj0*sj5);
IkReal x15975=(cj5*cj6);
IkReal x15976=((1.0)*sj5);
IkReal x15977=((1.0)*cj0);
IkReal x15978=((1.0)*sj0);
IkReal x15979=(cj5*sj6);
IkReal x15980=(r10*x15979);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x15979))+((r21*x15975))+(((-1.0)*cj3))+(((-1.0)*r22*x15976)));
evalcond[2]=((((-1.0)*sj3))+(((-1.0)*r00*x15977*x15979))+(((-1.0)*r01*x15975*x15977))+((r12*sj0*sj5))+((r02*x15974))+(((-1.0)*x15978*x15980))+(((-1.0)*r11*x15975*x15978)));
evalcond[3]=(((r00*sj0*x15979))+(((-1.0)*r02*sj0*x15976))+((r01*sj0*x15975))+(((-1.0)*x15977*x15980))+((r12*x15974))+(((-1.0)*r11*x15975*x15977)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
IkReal x15981=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r21*x15981))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x15981)))))+(IKabs(((((-1.0)*cj6*r20))+((r21*sj6))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x15982=(cj5*cj6);
IkReal x15983=((1.0)*sj0);
IkReal x15984=(r21*sj6);
IkReal x15985=(cj0*sj5);
IkReal x15986=((1.0)*r22);
IkReal x15987=(cj6*r20);
IkReal x15988=(cj5*sj6);
IkReal x15989=((1.0)*cj0);
IkReal x15990=((1.0)*sj5);
IkReal x15991=(x15988*x15989);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x15988))+(((-1.0)*sj5*x15986))+((r21*x15982)));
evalcond[2]=((((-1.0)*x15984))+x15987);
evalcond[3]=((((-1.0)*cj6*r21*x15990))+(((-1.0)*cj5*x15986))+(((-1.0)*r20*sj6*x15990)));
evalcond[4]=(((r02*x15985))+(((-1.0)*r01*x15982*x15989))+((r12*sj0*sj5))+(((-1.0)*r10*x15983*x15988))+(((-1.0)*r00*x15991))+(((-1.0)*r11*x15982*x15983)));
evalcond[5]=((((-1.0)*r10*x15991))+((r01*sj0*x15982))+(((-1.0)*r02*sj5*x15983))+((r12*x15985))+((r00*sj0*x15988))+(((-1.0)*r11*x15982*x15989)));
evalcond[6]=((-0.0001)+pz+(((0.02626)*x15987))+(((-0.02626)*x15984)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x15992=(sj0*sj6);
IkReal x15993=(cj0*sj6);
IkReal x15994=(cj6*r00);
IkReal x15995=((1.0)*cj6*r10);
if( IKabs((((r01*x15993))+((r11*x15992))+(((-1.0)*sj0*x15995))+(((-1.0)*cj0*x15994)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*x15995))+((sj0*x15994))+((r11*x15993))+(((-1.0)*r01*x15992)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x15993))+((r11*x15992))+(((-1.0)*sj0*x15995))+(((-1.0)*cj0*x15994))))+IKsqr(((((-1.0)*cj0*x15995))+((sj0*x15994))+((r11*x15993))+(((-1.0)*r01*x15992))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x15993))+((r11*x15992))+(((-1.0)*sj0*x15995))+(((-1.0)*cj0*x15994))), ((((-1.0)*cj0*x15995))+((sj0*x15994))+((r11*x15993))+(((-1.0)*r01*x15992))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x15996=IKcos(j4);
IkReal x15997=IKsin(j4);
IkReal x15998=(cj6*sj0);
IkReal x15999=((0.02626)*r10);
IkReal x16000=(r11*sj6);
IkReal x16001=(r11*sj5);
IkReal x16002=(sj0*sj6);
IkReal x16003=(r10*sj5);
IkReal x16004=((0.02626)*r01);
IkReal x16005=(cj5*r12);
IkReal x16006=(cj0*cj6);
IkReal x16007=((1.0)*sj0);
IkReal x16008=(cj5*r02);
IkReal x16009=(cj0*sj6);
IkReal x16010=((1.0)*r10);
IkReal x16011=((1.0)*r01);
IkReal x16012=(r00*sj5);
IkReal x16013=((1.0)*cj0);
IkReal x16014=((0.02626)*r00);
IkReal x16015=((1.0)*x15997);
evalcond[0]=((((-1.0)*x16015))+((sj0*x16000))+((r01*x16009))+(((-1.0)*x15998*x16010))+(((-1.0)*r00*x16006)));
evalcond[1]=((((-1.0)*x16002*x16011))+(((-1.0)*x16006*x16010))+((cj0*x16000))+((r00*x15998))+(((-1.0)*x15996)));
evalcond[2]=(((r01*sj5*x16006))+((x16009*x16012))+((x15998*x16001))+((sj0*x16005))+((x16002*x16003))+((cj0*x16008))+x15996);
evalcond[3]=((((-1.0)*x16015))+(((-1.0)*x16002*x16012))+((x16003*x16009))+((x16001*x16006))+(((-1.0)*x16007*x16008))+((cj0*x16005))+(((-1.0)*sj5*x15998*x16011)));
evalcond[4]=((-0.1264)+(((0.02626)*cj0*x16000))+(((-1.0)*x16002*x16004))+(((-1.0)*py*x16013))+((x15998*x16014))+(((0.0718)*x15997))+((px*sj0))+(((-1.0)*x15999*x16006))+(((-0.02626)*x15996)));
evalcond[5]=((-0.21426)+((x16004*x16009))+(((-1.0)*py*x16007))+(((-1.0)*x15998*x15999))+(((0.02626)*sj0*x16000))+(((-1.0)*x16006*x16014))+(((-1.0)*px*x16013))+(((-0.02626)*x15997))+(((-0.0718)*x15996)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16016=(cj5*cj6);
IkReal x16017=((1.0)*sj0);
IkReal x16018=(r21*sj6);
IkReal x16019=(cj0*sj5);
IkReal x16020=((1.0)*r22);
IkReal x16021=(cj6*r20);
IkReal x16022=(cj5*sj6);
IkReal x16023=((1.0)*cj0);
IkReal x16024=((1.0)*sj5);
IkReal x16025=(x16022*x16023);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+((r20*x16022))+(((-1.0)*sj5*x16020))+((r21*x16016)));
evalcond[2]=(x16021+(((-1.0)*x16018)));
evalcond[3]=((((-1.0)*cj6*r21*x16024))+(((-1.0)*r20*sj6*x16024))+(((-1.0)*cj5*x16020)));
evalcond[4]=(((r02*x16019))+((r12*sj0*sj5))+(((-1.0)*r00*x16025))+(((-1.0)*r10*x16017*x16022))+(((-1.0)*r11*x16016*x16017))+(((-1.0)*r01*x16016*x16023)));
evalcond[5]=((((-1.0)*r02*sj5*x16017))+((r00*sj0*x16022))+((r12*x16019))+(((-1.0)*r10*x16025))+((r01*sj0*x16016))+(((-1.0)*r11*x16016*x16023)));
evalcond[6]=((-0.0001)+(((0.02626)*x16021))+(((-0.02626)*x16018))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16026=(cj0*cj6);
IkReal x16027=(cj6*sj0);
IkReal x16028=(cj0*sj6);
IkReal x16029=((1.0)*sj0*sj6);
if( IKabs(((((-1.0)*r11*x16029))+(((-1.0)*r01*x16028))+((r10*x16027))+((r00*x16026)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r10*x16026))+((r11*x16028))+(((-1.0)*r01*x16029))+((r00*x16027)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x16029))+(((-1.0)*r01*x16028))+((r10*x16027))+((r00*x16026))))+IKsqr(((((-1.0)*r10*x16026))+((r11*x16028))+(((-1.0)*r01*x16029))+((r00*x16027))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r11*x16029))+(((-1.0)*r01*x16028))+((r10*x16027))+((r00*x16026))), ((((-1.0)*r10*x16026))+((r11*x16028))+(((-1.0)*r01*x16029))+((r00*x16027))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16030=IKsin(j4);
IkReal x16031=IKcos(j4);
IkReal x16032=(cj6*sj0);
IkReal x16033=((0.02626)*r10);
IkReal x16034=(r11*sj6);
IkReal x16035=(r11*sj5);
IkReal x16036=(sj0*sj6);
IkReal x16037=(r10*sj5);
IkReal x16038=((0.02626)*r01);
IkReal x16039=(cj5*r12);
IkReal x16040=(cj0*cj6);
IkReal x16041=((1.0)*sj0);
IkReal x16042=(cj5*r02);
IkReal x16043=(cj0*sj6);
IkReal x16044=((1.0)*r10);
IkReal x16045=((1.0)*r01);
IkReal x16046=(r00*sj5);
IkReal x16047=((1.0)*cj0);
IkReal x16048=((0.02626)*r00);
IkReal x16049=((1.0)*x16031);
evalcond[0]=(x16030+((sj0*x16034))+((r01*x16043))+(((-1.0)*x16032*x16044))+(((-1.0)*r00*x16040)));
evalcond[1]=(((cj0*x16034))+(((-1.0)*x16049))+(((-1.0)*x16040*x16044))+(((-1.0)*x16036*x16045))+((r00*x16032)));
evalcond[2]=(((x16032*x16035))+((cj0*x16042))+(((-1.0)*x16049))+((x16036*x16037))+((sj0*x16039))+((x16043*x16046))+((r01*sj5*x16040)));
evalcond[3]=(((cj0*x16039))+(((-1.0)*x16041*x16042))+((x16035*x16040))+(((-1.0)*x16036*x16046))+(((-1.0)*sj5*x16032*x16045))+((x16037*x16043))+(((-1.0)*x16030)));
evalcond[4]=((-0.1264)+(((0.02626)*cj0*x16034))+(((-0.02626)*x16031))+(((-1.0)*x16033*x16040))+(((0.0718)*x16030))+((px*sj0))+(((-1.0)*x16036*x16038))+((x16032*x16048))+(((-1.0)*py*x16047)));
evalcond[5]=((-0.01934)+((x16038*x16043))+(((0.02626)*x16030))+(((-1.0)*x16032*x16033))+(((-1.0)*px*x16047))+(((-1.0)*x16040*x16048))+(((0.0718)*x16031))+(((0.02626)*sj0*x16034))+(((-1.0)*py*x16041)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16050=((1.0)*cj6);
CheckValue<IkReal> x16051=IKPowWithIntegerCheck(sj3,-1);
if(!x16051.valid){
continue;
}
if( IKabs(((x16051.value)*((((r21*sj6))+(((-1.0)*r20*x16050)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x16050))+(((-1.0)*r01*sj0*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x16051.value)*((((r21*sj6))+(((-1.0)*r20*x16050))))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x16050))+(((-1.0)*r01*sj0*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x16051.value)*((((r21*sj6))+(((-1.0)*r20*x16050))))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*r10*x16050))+(((-1.0)*r01*sj0*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16052=IKcos(j4);
IkReal x16053=IKsin(j4);
IkReal x16054=(cj6*sj0);
IkReal x16055=((0.02626)*r10);
IkReal x16056=(sj0*sj6);
IkReal x16057=(r11*sj5);
IkReal x16058=(r10*sj5);
IkReal x16059=((0.02626)*r01);
IkReal x16060=(cj0*sj6);
IkReal x16061=(cj0*cj6);
IkReal x16062=(r21*sj6);
IkReal x16063=((1.0)*cj5);
IkReal x16064=(cj6*r20);
IkReal x16065=((1.0)*r10);
IkReal x16066=((1.0)*r01);
IkReal x16067=(r00*sj5);
IkReal x16068=((1.0)*py);
IkReal x16069=(cj5*r12);
IkReal x16070=((1.0)*sj5);
IkReal x16071=((0.02626)*r00);
IkReal x16072=((0.02626)*r11);
IkReal x16073=(cj3*x16053);
IkReal x16074=(sj3*x16053);
IkReal x16075=(cj3*x16052);
IkReal x16076=((1.0)*x16052);
evalcond[0]=(x16064+x16074+(((-1.0)*x16062)));
evalcond[1]=((((-1.0)*cj6*r21*x16070))+(((-1.0)*sj3*x16076))+(((-1.0)*r20*sj6*x16070))+(((-1.0)*r22*x16063)));
evalcond[2]=((((-1.0)*x16076))+(((-1.0)*x16056*x16066))+(((-1.0)*x16061*x16065))+((r00*x16054))+((r11*x16060)));
evalcond[3]=((((-1.0)*x16054*x16065))+(((-1.0)*x16073))+((r01*x16060))+(((-1.0)*r00*x16061))+((r11*x16056)));
evalcond[4]=((-0.0001)+(((0.0718)*sj3*x16052))+(((0.02626)*x16064))+(((-0.02626)*x16062))+(((0.02626)*x16074))+pz+(((0.09746)*sj3)));
evalcond[5]=(((r01*sj5*x16061))+((cj0*cj5*r02))+((x16060*x16067))+((x16054*x16057))+x16075+((sj0*x16069))+((x16056*x16058)));
evalcond[6]=((((-1.0)*x16053))+((cj0*x16069))+((x16057*x16061))+(((-1.0)*r02*sj0*x16063))+((x16058*x16060))+(((-1.0)*x16056*x16067))+(((-1.0)*sj5*x16054*x16066)));
evalcond[7]=((-0.1264)+(((-1.0)*x16055*x16061))+((x16054*x16071))+(((-1.0)*cj0*x16068))+(((0.0718)*x16053))+(((-0.02626)*x16052))+(((-1.0)*x16056*x16059))+((px*sj0))+((x16060*x16072)));
evalcond[8]=((-0.1168)+(((-1.0)*sj0*x16068))+(((-0.09746)*cj3))+(((-0.0718)*x16075))+(((-0.02626)*x16073))+((x16059*x16060))+((x16056*x16072))+(((-1.0)*cj0*px))+(((-1.0)*x16054*x16055))+(((-1.0)*x16061*x16071)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16077=((1.0)*sj5);
CheckValue<IkReal> x16078 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x16077))+(((-1.0)*r20*sj6*x16077))+(((-1.0)*cj5*r22))),IKFAST_ATAN2_MAGTHRESH);
if(!x16078.valid){
continue;
}
CheckValue<IkReal> x16079=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x16079.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x16078.value)+(((1.5707963267949)*(x16079.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16080=IKcos(j4);
IkReal x16081=IKsin(j4);
IkReal x16082=(cj6*sj0);
IkReal x16083=((0.02626)*r10);
IkReal x16084=(sj0*sj6);
IkReal x16085=(r11*sj5);
IkReal x16086=(r10*sj5);
IkReal x16087=((0.02626)*r01);
IkReal x16088=(cj0*sj6);
IkReal x16089=(cj0*cj6);
IkReal x16090=(r21*sj6);
IkReal x16091=((1.0)*cj5);
IkReal x16092=(cj6*r20);
IkReal x16093=((1.0)*r10);
IkReal x16094=((1.0)*r01);
IkReal x16095=(r00*sj5);
IkReal x16096=((1.0)*py);
IkReal x16097=(cj5*r12);
IkReal x16098=((1.0)*sj5);
IkReal x16099=((0.02626)*r00);
IkReal x16100=((0.02626)*r11);
IkReal x16101=(cj3*x16081);
IkReal x16102=(sj3*x16081);
IkReal x16103=(cj3*x16080);
IkReal x16104=((1.0)*x16080);
evalcond[0]=((((-1.0)*x16090))+x16102+x16092);
evalcond[1]=((((-1.0)*sj3*x16104))+(((-1.0)*r22*x16091))+(((-1.0)*cj6*r21*x16098))+(((-1.0)*r20*sj6*x16098)));
evalcond[2]=((((-1.0)*x16104))+((r11*x16088))+(((-1.0)*x16084*x16094))+((r00*x16082))+(((-1.0)*x16089*x16093)));
evalcond[3]=((((-1.0)*x16101))+((r11*x16084))+((r01*x16088))+(((-1.0)*r00*x16089))+(((-1.0)*x16082*x16093)));
evalcond[4]=((-0.0001)+pz+(((0.09746)*sj3))+(((-0.02626)*x16090))+(((0.02626)*x16092))+(((0.0718)*sj3*x16080))+(((0.02626)*x16102)));
evalcond[5]=(((sj0*x16097))+((x16084*x16086))+((cj0*cj5*r02))+x16103+((r01*sj5*x16089))+((x16088*x16095))+((x16082*x16085)));
evalcond[6]=(((x16086*x16088))+(((-1.0)*r02*sj0*x16091))+((x16085*x16089))+(((-1.0)*x16084*x16095))+(((-1.0)*x16081))+((cj0*x16097))+(((-1.0)*sj5*x16082*x16094)));
evalcond[7]=((-0.1264)+(((0.0718)*x16081))+((x16088*x16100))+((px*sj0))+(((-0.02626)*x16080))+(((-1.0)*cj0*x16096))+(((-1.0)*x16084*x16087))+((x16082*x16099))+(((-1.0)*x16083*x16089)));
evalcond[8]=((-0.1168)+(((-1.0)*sj0*x16096))+((x16084*x16100))+(((-0.02626)*x16101))+(((-0.09746)*cj3))+((x16087*x16088))+(((-1.0)*x16082*x16083))+(((-1.0)*x16089*x16099))+(((-0.0718)*x16103))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16105=(cj0*sj5);
IkReal x16106=(cj5*cj6);
IkReal x16107=((1.0)*sj5);
IkReal x16108=((1.0)*cj0);
IkReal x16109=((1.0)*sj0);
IkReal x16110=(cj5*sj6);
IkReal x16111=(r10*x16110);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x16107))+cj3+((r21*x16106))+((r20*x16110)));
evalcond[2]=((((-1.0)*sj3))+(((-1.0)*r00*x16108*x16110))+((r12*sj0*sj5))+(((-1.0)*x16109*x16111))+((r02*x16105))+(((-1.0)*r01*x16106*x16108))+(((-1.0)*r11*x16106*x16109)));
evalcond[3]=((((-1.0)*r02*sj0*x16107))+((r01*sj0*x16106))+(((-1.0)*x16108*x16111))+((r00*sj0*x16110))+((r12*x16105))+(((-1.0)*r11*x16106*x16108)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=1.5707963267949;
sj2=1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x16112=(cj5*cj6);
IkReal x16113=((1.0)*sj0);
IkReal x16114=(r21*sj6);
IkReal x16115=(cj0*sj5);
IkReal x16116=((1.0)*r22);
IkReal x16117=(cj6*r20);
IkReal x16118=(cj5*sj6);
IkReal x16119=((1.0)*cj0);
IkReal x16120=((1.0)*sj5);
IkReal x16121=(x16118*x16119);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x16112))+((r20*x16118))+(((-1.0)*sj5*x16116)));
evalcond[2]=((((-1.0)*x16114))+x16117);
evalcond[3]=((((-1.0)*r20*sj6*x16120))+(((-1.0)*cj5*x16116))+(((-1.0)*cj6*r21*x16120)));
evalcond[4]=((((-1.0)*r01*x16112*x16119))+((r12*sj0*sj5))+(((-1.0)*r10*x16113*x16118))+((r02*x16115))+(((-1.0)*r11*x16112*x16113))+(((-1.0)*r00*x16121)));
evalcond[5]=(((r01*sj0*x16112))+((r12*x16115))+((r00*sj0*x16118))+(((-1.0)*r02*sj5*x16113))+(((-1.0)*r10*x16121))+(((-1.0)*r11*x16112*x16119)));
evalcond[6]=((0.0001)+(((-0.02626)*x16114))+pz+(((0.02626)*x16117)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16122=(sj0*sj6);
IkReal x16123=(cj6*r10);
IkReal x16124=((1.0)*sj0);
IkReal x16125=(cj6*r00);
IkReal x16126=(cj0*sj6);
if( IKabs((((r11*x16122))+(((-1.0)*cj0*x16125))+(((-1.0)*x16123*x16124))+((r01*x16126)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x16126))+(((-1.0)*x16124*x16125))+((r01*x16122))+((cj0*x16123)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x16122))+(((-1.0)*cj0*x16125))+(((-1.0)*x16123*x16124))+((r01*x16126))))+IKsqr(((((-1.0)*r11*x16126))+(((-1.0)*x16124*x16125))+((r01*x16122))+((cj0*x16123))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x16122))+(((-1.0)*cj0*x16125))+(((-1.0)*x16123*x16124))+((r01*x16126))), ((((-1.0)*r11*x16126))+(((-1.0)*x16124*x16125))+((r01*x16122))+((cj0*x16123))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16127=IKcos(j4);
IkReal x16128=IKsin(j4);
IkReal x16129=(cj6*sj0);
IkReal x16130=((0.02626)*r10);
IkReal x16131=(r11*sj6);
IkReal x16132=(r11*sj5);
IkReal x16133=(sj0*sj6);
IkReal x16134=(r10*sj5);
IkReal x16135=((0.02626)*r01);
IkReal x16136=(cj5*r12);
IkReal x16137=(cj0*cj6);
IkReal x16138=((1.0)*sj0);
IkReal x16139=(cj5*r02);
IkReal x16140=(cj0*sj6);
IkReal x16141=((1.0)*r10);
IkReal x16142=((1.0)*r01);
IkReal x16143=(r00*sj5);
IkReal x16144=((1.0)*cj0);
IkReal x16145=((0.02626)*r00);
evalcond[0]=(((cj0*x16131))+x16127+(((-1.0)*x16137*x16141))+(((-1.0)*x16133*x16142))+((r00*x16129)));
evalcond[1]=((((-1.0)*x16129*x16141))+(((-1.0)*x16128))+((r01*x16140))+(((-1.0)*r00*x16137))+((sj0*x16131)));
evalcond[2]=(((cj0*x16139))+((x16129*x16132))+((r01*sj5*x16137))+x16127+((x16140*x16143))+((x16133*x16134))+((sj0*x16136)));
evalcond[3]=((((-1.0)*sj5*x16129*x16142))+((cj0*x16136))+x16128+((x16134*x16140))+((x16132*x16137))+(((-1.0)*x16138*x16139))+(((-1.0)*x16133*x16143)));
evalcond[4]=((0.1264)+(((-0.0718)*x16128))+((x16129*x16145))+(((-1.0)*py*x16144))+(((0.02626)*x16127))+(((-1.0)*x16133*x16135))+((px*sj0))+(((0.02626)*cj0*x16131))+(((-1.0)*x16130*x16137)));
evalcond[5]=((-0.21426)+(((-0.02626)*x16128))+(((-0.0718)*x16127))+(((-1.0)*x16137*x16145))+(((0.02626)*sj0*x16131))+(((-1.0)*py*x16138))+((x16135*x16140))+(((-1.0)*x16129*x16130))+(((-1.0)*px*x16144)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16146=(cj5*cj6);
IkReal x16147=((1.0)*sj0);
IkReal x16148=(r21*sj6);
IkReal x16149=(cj0*sj5);
IkReal x16150=((1.0)*r22);
IkReal x16151=(cj6*r20);
IkReal x16152=(cj5*sj6);
IkReal x16153=((1.0)*cj0);
IkReal x16154=((1.0)*sj5);
IkReal x16155=(x16152*x16153);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x16146))+((r20*x16152))+(((-1.0)*sj5*x16150)));
evalcond[2]=((((-1.0)*x16148))+x16151);
evalcond[3]=((((-1.0)*cj6*r21*x16154))+(((-1.0)*r20*sj6*x16154))+(((-1.0)*cj5*x16150)));
evalcond[4]=((((-1.0)*r10*x16147*x16152))+((r12*sj0*sj5))+(((-1.0)*r01*x16146*x16153))+(((-1.0)*r00*x16155))+(((-1.0)*r11*x16146*x16147))+((r02*x16149)));
evalcond[5]=(((r01*sj0*x16146))+((r12*x16149))+((r00*sj0*x16152))+(((-1.0)*r02*sj5*x16147))+(((-1.0)*r10*x16155))+(((-1.0)*r11*x16146*x16153)));
evalcond[6]=((0.0001)+(((-0.02626)*x16148))+(((0.02626)*x16151))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16156=(cj0*cj6);
IkReal x16157=(sj0*sj6);
IkReal x16158=((1.0)*r11);
IkReal x16159=(cj6*sj0);
IkReal x16160=(cj0*sj6);
if( IKabs(((((-1.0)*x16157*x16158))+((r10*x16159))+((r00*x16156))+(((-1.0)*r01*x16160)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x16156))+(((-1.0)*x16158*x16160))+((r01*x16157))+(((-1.0)*r00*x16159)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x16157*x16158))+((r10*x16159))+((r00*x16156))+(((-1.0)*r01*x16160))))+IKsqr((((r10*x16156))+(((-1.0)*x16158*x16160))+((r01*x16157))+(((-1.0)*r00*x16159))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x16157*x16158))+((r10*x16159))+((r00*x16156))+(((-1.0)*r01*x16160))), (((r10*x16156))+(((-1.0)*x16158*x16160))+((r01*x16157))+(((-1.0)*r00*x16159))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16161=IKcos(j4);
IkReal x16162=IKsin(j4);
IkReal x16163=(cj6*sj0);
IkReal x16164=((0.02626)*r10);
IkReal x16165=(r11*sj6);
IkReal x16166=(r11*sj5);
IkReal x16167=(sj0*sj6);
IkReal x16168=(r10*sj5);
IkReal x16169=((0.02626)*r01);
IkReal x16170=(cj5*r12);
IkReal x16171=(cj0*cj6);
IkReal x16172=((1.0)*sj0);
IkReal x16173=(cj5*r02);
IkReal x16174=(cj0*sj6);
IkReal x16175=((1.0)*r10);
IkReal x16176=((1.0)*r01);
IkReal x16177=(r00*sj5);
IkReal x16178=((1.0)*cj0);
IkReal x16179=((0.02626)*r00);
evalcond[0]=(((sj0*x16165))+(((-1.0)*x16163*x16175))+((r01*x16174))+x16162+(((-1.0)*r00*x16171)));
evalcond[1]=((((-1.0)*x16167*x16176))+((r00*x16163))+x16161+(((-1.0)*x16171*x16175))+((cj0*x16165)));
evalcond[2]=(((sj0*x16170))+((x16174*x16177))+((x16163*x16166))+((r01*sj5*x16171))+((x16167*x16168))+((cj0*x16173))+(((-1.0)*x16161)));
evalcond[3]=((((-1.0)*x16167*x16177))+((x16168*x16174))+x16162+(((-1.0)*sj5*x16163*x16176))+((x16166*x16171))+((cj0*x16170))+(((-1.0)*x16172*x16173)));
evalcond[4]=((0.1264)+(((0.02626)*cj0*x16165))+(((-1.0)*x16167*x16169))+(((-0.0718)*x16162))+((x16163*x16179))+(((0.02626)*x16161))+(((-1.0)*py*x16178))+((px*sj0))+(((-1.0)*x16164*x16171)));
evalcond[5]=((-0.01934)+((x16169*x16174))+(((-1.0)*px*x16178))+(((0.0718)*x16161))+(((0.02626)*x16162))+(((-1.0)*py*x16172))+(((-1.0)*x16163*x16164))+(((0.02626)*sj0*x16165))+(((-1.0)*x16171*x16179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16180=((1.0)*sj6);
CheckValue<IkReal> x16181=IKPowWithIntegerCheck(sj3,-1);
if(!x16181.valid){
continue;
}
if( IKabs(((x16181.value)*(((((-1.0)*r21*x16180))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj0*r11*x16180))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x16181.value)*(((((-1.0)*r21*x16180))+((cj6*r20))))))+IKsqr(((((-1.0)*cj0*r11*x16180))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x16181.value)*(((((-1.0)*r21*x16180))+((cj6*r20))))), ((((-1.0)*cj0*r11*x16180))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16182=IKcos(j4);
IkReal x16183=IKsin(j4);
IkReal x16184=(cj6*sj0);
IkReal x16185=((0.02626)*r10);
IkReal x16186=(sj0*sj6);
IkReal x16187=(r11*sj5);
IkReal x16188=(r10*sj5);
IkReal x16189=(cj0*cj6);
IkReal x16190=((0.02626)*r01);
IkReal x16191=(cj0*sj6);
IkReal x16192=(r21*sj6);
IkReal x16193=((1.0)*cj5);
IkReal x16194=(cj6*r20);
IkReal x16195=((1.0)*r10);
IkReal x16196=((1.0)*r01);
IkReal x16197=(r00*sj5);
IkReal x16198=((1.0)*py);
IkReal x16199=(cj5*r12);
IkReal x16200=((1.0)*sj5);
IkReal x16201=((0.02626)*r00);
IkReal x16202=((0.02626)*r11);
IkReal x16203=((1.0)*x16183);
IkReal x16204=((0.02626)*x16183);
IkReal x16205=(sj3*x16182);
IkReal x16206=(cj3*x16182);
evalcond[0]=(x16194+(((-1.0)*x16192))+(((-1.0)*sj3*x16203)));
evalcond[1]=((((-1.0)*r20*sj6*x16200))+x16205+(((-1.0)*cj6*r21*x16200))+(((-1.0)*r22*x16193)));
evalcond[2]=(((r00*x16184))+(((-1.0)*x16186*x16196))+((r11*x16191))+(((-1.0)*x16189*x16195))+x16182);
evalcond[3]=((((-1.0)*cj3*x16203))+((r01*x16191))+(((-1.0)*r00*x16189))+((r11*x16186))+(((-1.0)*x16184*x16195)));
evalcond[4]=((0.0001)+(((-0.0718)*x16205))+pz+(((-0.09746)*sj3))+(((-0.02626)*x16192))+(((-1.0)*sj3*x16204))+(((0.02626)*x16194)));
evalcond[5]=(((x16191*x16197))+((cj0*cj5*r02))+((x16186*x16188))+((x16184*x16187))+x16206+((sj0*x16199))+((r01*sj5*x16189)));
evalcond[6]=((((-1.0)*sj5*x16184*x16196))+((x16188*x16191))+x16183+(((-1.0)*x16186*x16197))+(((-1.0)*r02*sj0*x16193))+((cj0*x16199))+((x16187*x16189)));
evalcond[7]=((0.1264)+(((0.02626)*x16182))+(((-1.0)*x16186*x16190))+((x16191*x16202))+(((-1.0)*x16185*x16189))+(((-0.0718)*x16183))+(((-1.0)*cj0*x16198))+((px*sj0))+((x16184*x16201)));
evalcond[8]=((-0.1168)+(((-1.0)*cj3*x16204))+(((-1.0)*x16189*x16201))+((x16186*x16202))+((x16190*x16191))+(((-0.0718)*x16206))+(((-1.0)*sj0*x16198))+(((-0.09746)*cj3))+(((-1.0)*x16184*x16185))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x16207=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x16207.valid){
continue;
}
CheckValue<IkReal> x16208 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x16208.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x16207.value)))+(x16208.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16209=IKcos(j4);
IkReal x16210=IKsin(j4);
IkReal x16211=(cj6*sj0);
IkReal x16212=((0.02626)*r10);
IkReal x16213=(sj0*sj6);
IkReal x16214=(r11*sj5);
IkReal x16215=(r10*sj5);
IkReal x16216=(cj0*cj6);
IkReal x16217=((0.02626)*r01);
IkReal x16218=(cj0*sj6);
IkReal x16219=(r21*sj6);
IkReal x16220=((1.0)*cj5);
IkReal x16221=(cj6*r20);
IkReal x16222=((1.0)*r10);
IkReal x16223=((1.0)*r01);
IkReal x16224=(r00*sj5);
IkReal x16225=((1.0)*py);
IkReal x16226=(cj5*r12);
IkReal x16227=((1.0)*sj5);
IkReal x16228=((0.02626)*r00);
IkReal x16229=((0.02626)*r11);
IkReal x16230=((1.0)*x16210);
IkReal x16231=((0.02626)*x16210);
IkReal x16232=(sj3*x16209);
IkReal x16233=(cj3*x16209);
evalcond[0]=((((-1.0)*x16219))+x16221+(((-1.0)*sj3*x16230)));
evalcond[1]=((((-1.0)*cj6*r21*x16227))+x16232+(((-1.0)*r20*sj6*x16227))+(((-1.0)*r22*x16220)));
evalcond[2]=(((r00*x16211))+x16209+((r11*x16218))+(((-1.0)*x16216*x16222))+(((-1.0)*x16213*x16223)));
evalcond[3]=(((r01*x16218))+(((-1.0)*r00*x16216))+(((-1.0)*cj3*x16230))+((r11*x16213))+(((-1.0)*x16211*x16222)));
evalcond[4]=((0.0001)+(((0.02626)*x16221))+(((-0.02626)*x16219))+(((-1.0)*sj3*x16231))+pz+(((-0.09746)*sj3))+(((-0.0718)*x16232)));
evalcond[5]=(((cj0*cj5*r02))+((x16213*x16215))+x16233+((r01*sj5*x16216))+((x16211*x16214))+((x16218*x16224))+((sj0*x16226)));
evalcond[6]=((((-1.0)*r02*sj0*x16220))+((x16214*x16216))+x16210+((cj0*x16226))+(((-1.0)*sj5*x16211*x16223))+(((-1.0)*x16213*x16224))+((x16215*x16218)));
evalcond[7]=((0.1264)+(((-1.0)*x16213*x16217))+(((-1.0)*cj0*x16225))+((x16211*x16228))+(((0.02626)*x16209))+(((-0.0718)*x16210))+((px*sj0))+((x16218*x16229))+(((-1.0)*x16212*x16216)));
evalcond[8]=((-0.1168)+((x16213*x16229))+((x16217*x16218))+(((-0.09746)*cj3))+(((-1.0)*cj3*x16231))+(((-1.0)*sj0*x16225))+(((-0.0718)*x16233))+(((-1.0)*x16216*x16228))+(((-1.0)*cj0*px))+(((-1.0)*x16211*x16212)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16234=(cj5*cj6);
IkReal x16235=(r11*sj0);
IkReal x16236=(cj6*sj5);
IkReal x16237=((1.0)*cj0);
IkReal x16238=(r10*sj6);
IkReal x16239=(sj0*sj5);
IkReal x16240=(r00*sj6);
IkReal x16241=(cj0*sj5);
IkReal x16242=((0.02626)*cj0);
IkReal x16243=(r01*sj6);
IkReal x16244=((1.0)*sj0);
IkReal x16245=(cj6*r10);
IkReal x16246=(cj5*sj0);
IkReal x16247=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959))))));
evalcond[1]=(((cj5*r20*sj6))+((r21*x16234))+(((-1.0)*r22*sj5)));
evalcond[2]=(((sj6*x16235))+((cj0*x16243))+(((-1.0)*x16244*x16245))+(((-1.0)*x16237*x16247)));
evalcond[3]=((-1.0)+(((-1.0)*x16234*x16235))+(((-1.0)*cj5*x16238*x16244))+((r02*x16241))+(((-1.0)*cj5*x16237*x16240))+((r12*x16239))+(((-1.0)*r01*x16234*x16237)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x16246))+((cj0*r01*x16236))+((x16240*x16241))+((x16238*x16239))+((x16235*x16236)));
evalcond[5]=(((r01*sj0*x16234))+(((-1.0)*r02*x16239))+((r12*x16241))+(((-1.0)*cj5*x16237*x16238))+(((-1.0)*r11*x16234*x16237))+((x16240*x16246)));
evalcond[6]=((-0.1168)+(((0.02626)*sj6*x16235))+((x16242*x16243))+(((-1.0)*py*x16244))+(((-0.02626)*sj0*x16245))+(((-1.0)*px*x16237))+(((-1.0)*x16242*x16247)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16248=(cj1*r20);
IkReal x16249=((1.0)*sj6);
IkReal x16250=(r20*sj1);
IkReal x16251=((1.0)*cj5*r22);
IkReal x16252=((1.0)*cj6*r21*sj5);
if( IKabs(((((-1.0)*cj1*x16251))+(((-1.0)*cj1*x16252))+(((-1.0)*sj5*x16248*x16249))+(((-1.0)*cj6*x16250))+((r21*sj1*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*x16248))+(((-1.0)*cj1*r21*x16249))+(((-1.0)*sj1*x16252))+(((-1.0)*sj1*x16251))+(((-1.0)*sj5*x16249*x16250)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x16251))+(((-1.0)*cj1*x16252))+(((-1.0)*sj5*x16248*x16249))+(((-1.0)*cj6*x16250))+((r21*sj1*sj6))))+IKsqr((((cj6*x16248))+(((-1.0)*cj1*r21*x16249))+(((-1.0)*sj1*x16252))+(((-1.0)*sj1*x16251))+(((-1.0)*sj5*x16249*x16250))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj1*x16251))+(((-1.0)*cj1*x16252))+(((-1.0)*sj5*x16248*x16249))+(((-1.0)*cj6*x16250))+((r21*sj1*sj6))), (((cj6*x16248))+(((-1.0)*cj1*r21*x16249))+(((-1.0)*sj1*x16252))+(((-1.0)*sj1*x16251))+(((-1.0)*sj5*x16249*x16250))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16253=IKcos(j4);
IkReal x16254=IKsin(j4);
IkReal x16255=((1.0)*cj1);
IkReal x16256=((0.02626)*sj6);
IkReal x16257=(r01*sj0);
IkReal x16258=(cj0*sj6);
IkReal x16259=((0.02626)*cj6);
IkReal x16260=(cj0*r10);
IkReal x16261=((1.0)*cj5);
IkReal x16262=((1.0)*cj6);
IkReal x16263=((1.0)*sj6);
IkReal x16264=(r00*sj0);
IkReal x16265=(cj0*r11);
IkReal x16266=(sj1*x16253);
IkReal x16267=(cj1*x16254);
IkReal x16268=(sj1*x16254);
IkReal x16269=(cj1*x16253);
IkReal x16270=((1.0)*x16266);
IkReal x16271=(x16254*x16255);
IkReal x16272=(x16271+x16270);
evalcond[0]=(x16268+((cj6*r20))+(((-1.0)*x16253*x16255))+(((-1.0)*r21*x16263)));
evalcond[1]=((((-1.0)*x16272))+(((-1.0)*r22*x16261))+(((-1.0)*r20*sj5*x16263))+(((-1.0)*r21*sj5*x16262)));
evalcond[2]=((((-1.0)*x16272))+(((-1.0)*x16260*x16262))+((cj6*x16264))+(((-1.0)*x16257*x16263))+((r11*x16258)));
evalcond[3]=((((0.09736)*sj1))+(((0.0718)*x16267))+(((0.0718)*x16266))+(((-0.1264)*cj1))+(((0.02626)*x16268))+pz+((r20*x16259))+(((-1.0)*r21*x16256))+(((-0.02626)*x16269)));
evalcond[4]=(((cj0*cj5*r12))+((cj6*sj5*x16265))+(((-1.0)*r02*sj0*x16261))+x16269+(((-1.0)*x16268))+(((-1.0)*sj5*x16263*x16264))+(((-1.0)*sj5*x16257*x16262))+((r10*sj5*x16258)));
evalcond[5]=((((-1.0)*x16259*x16260))+(((-0.1264)*sj1))+(((-0.09736)*cj1))+(((-1.0)*x16256*x16257))+(((0.0718)*x16268))+(((-0.0718)*x16269))+((x16259*x16264))+((px*sj0))+(((-0.02626)*x16266))+(((-0.02626)*x16267))+((x16256*x16265))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16273=(cj5*cj6);
IkReal x16274=(r11*sj0);
IkReal x16275=(cj6*sj5);
IkReal x16276=((1.0)*cj0);
IkReal x16277=(r10*sj6);
IkReal x16278=(sj0*sj5);
IkReal x16279=(r00*sj6);
IkReal x16280=(cj0*sj5);
IkReal x16281=((0.02626)*cj0);
IkReal x16282=(r01*sj6);
IkReal x16283=((1.0)*sj0);
IkReal x16284=(cj6*r10);
IkReal x16285=(cj5*sj0);
IkReal x16286=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j2), 6.28318530717959))))));
evalcond[1]=(((cj5*r20*sj6))+((r21*x16273))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x16283*x16284))+((cj0*x16282))+((sj6*x16274))+(((-1.0)*x16276*x16286)));
evalcond[3]=((1.0)+((r02*x16280))+(((-1.0)*x16273*x16274))+(((-1.0)*cj5*x16276*x16279))+((r12*x16278))+(((-1.0)*cj5*x16277*x16283))+(((-1.0)*r01*x16273*x16276)));
evalcond[4]=(((x16277*x16278))+((cj0*r01*x16275))+((cj0*cj5*r02))+((x16274*x16275))+((r12*x16285))+((x16279*x16280)));
evalcond[5]=(((r01*sj0*x16273))+(((-1.0)*cj5*x16276*x16277))+(((-1.0)*r02*x16278))+((r12*x16280))+(((-1.0)*r11*x16273*x16276))+((x16279*x16285)));
evalcond[6]=((-0.1168)+(((-1.0)*px*x16276))+(((-1.0)*x16281*x16286))+((x16281*x16282))+(((0.02626)*sj6*x16274))+(((-0.02626)*sj0*x16284))+(((-1.0)*py*x16283)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16287=(sj1*sj6);
IkReal x16288=(r20*sj5);
IkReal x16289=(cj1*cj6);
IkReal x16290=((1.0)*r21);
IkReal x16291=(cj5*r22);
IkReal x16292=(cj1*sj6);
IkReal x16293=(cj6*sj1);
if( IKabs(((((-1.0)*sj5*x16289*x16290))+(((-1.0)*x16287*x16290))+((r20*x16293))+(((-1.0)*cj1*x16291))+(((-1.0)*x16288*x16292)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r21*sj5*x16293))+(((-1.0)*x16290*x16292))+((x16287*x16288))+((r20*x16289))+((sj1*x16291)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x16289*x16290))+(((-1.0)*x16287*x16290))+((r20*x16293))+(((-1.0)*cj1*x16291))+(((-1.0)*x16288*x16292))))+IKsqr((((r21*sj5*x16293))+(((-1.0)*x16290*x16292))+((x16287*x16288))+((r20*x16289))+((sj1*x16291))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj5*x16289*x16290))+(((-1.0)*x16287*x16290))+((r20*x16293))+(((-1.0)*cj1*x16291))+(((-1.0)*x16288*x16292))), (((r21*sj5*x16293))+(((-1.0)*x16290*x16292))+((x16287*x16288))+((r20*x16289))+((sj1*x16291))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16294=IKcos(j4);
IkReal x16295=IKsin(j4);
IkReal x16296=((1.0)*cj1);
IkReal x16297=((0.02626)*sj6);
IkReal x16298=(r01*sj0);
IkReal x16299=(cj0*sj6);
IkReal x16300=((0.02626)*cj6);
IkReal x16301=(cj0*r10);
IkReal x16302=((1.0)*cj5);
IkReal x16303=((1.0)*sj6);
IkReal x16304=(r00*sj0);
IkReal x16305=((1.0)*cj6);
IkReal x16306=(cj0*r11);
IkReal x16307=(sj1*x16294);
IkReal x16308=(cj1*x16295);
IkReal x16309=(sj1*x16295);
IkReal x16310=(cj1*x16294);
IkReal x16311=((1.0)*x16309);
IkReal x16312=(x16294*x16296);
IkReal x16313=(x16311+x16312);
evalcond[0]=((((-1.0)*r21*x16303))+(((-1.0)*x16313))+((cj6*r20)));
evalcond[1]=(x16307+(((-1.0)*r22*x16302))+(((-1.0)*r21*sj5*x16305))+(((-1.0)*r20*sj5*x16303))+(((-1.0)*x16295*x16296)));
evalcond[2]=(((cj6*x16304))+x16308+(((-1.0)*x16301*x16305))+((r11*x16299))+(((-1.0)*x16307))+(((-1.0)*x16298*x16303)));
evalcond[3]=(((r20*x16300))+(((-0.1264)*cj1))+(((-0.0718)*x16307))+(((-1.0)*r21*x16297))+(((0.0718)*x16308))+(((-0.09756)*sj1))+pz+(((-0.02626)*x16310))+(((-0.02626)*x16309)));
evalcond[4]=((((-1.0)*sj5*x16303*x16304))+((r10*sj5*x16299))+((cj0*cj5*r12))+((cj6*sj5*x16306))+(((-1.0)*sj5*x16298*x16305))+(((-1.0)*r02*sj0*x16302))+(((-1.0)*x16313)));
evalcond[5]=(((x16297*x16306))+(((-0.1264)*sj1))+(((0.02626)*x16308))+(((0.0718)*x16310))+((x16300*x16304))+(((-1.0)*x16300*x16301))+(((0.0718)*x16309))+(((0.09756)*cj1))+(((-1.0)*x16297*x16298))+(((-0.02626)*x16307))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16314=(cj0*sj5);
IkReal x16315=(cj5*cj6);
IkReal x16316=((1.0)*sj5);
IkReal x16317=((1.0)*cj0);
IkReal x16318=((1.0)*sj0);
IkReal x16319=(cj5*sj6);
IkReal x16320=(r10*x16319);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
evalcond[1]=(((r20*x16319))+(((-1.0)*r22*x16316))+((r21*x16315))+(((-1.0)*cj3)));
evalcond[2]=((((-1.0)*r11*x16315*x16318))+sj3+(((-1.0)*x16318*x16320))+((r02*x16314))+((r12*sj0*sj5))+(((-1.0)*r01*x16315*x16317))+(((-1.0)*r00*x16317*x16319)));
evalcond[3]=((((-1.0)*r11*x16315*x16317))+((r00*sj0*x16319))+(((-1.0)*x16317*x16320))+(((-1.0)*r02*sj0*x16316))+((r01*sj0*x16315))+((r12*x16314)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
IkReal x16321=((1.0)*sj5);
j4eval[0]=sj3;
j4eval[1]=((IKabs(((((-1.0)*cj6*r21*x16321))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x16321)))))+(IKabs(((((-1.0)*cj6*r20))+((r21*sj6))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x16322=(cj5*cj6);
IkReal x16323=(r11*sj0);
IkReal x16324=(cj6*sj5);
IkReal x16325=((1.0)*cj0);
IkReal x16326=(r10*sj6);
IkReal x16327=(sj0*sj5);
IkReal x16328=(r00*sj6);
IkReal x16329=(cj0*sj5);
IkReal x16330=((0.02626)*cj0);
IkReal x16331=(r01*sj6);
IkReal x16332=((1.0)*sj0);
IkReal x16333=(cj6*r10);
IkReal x16334=(cj5*sj0);
IkReal x16335=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x16322)));
evalcond[2]=((((-1.0)*x16332*x16333))+((sj6*x16323))+((cj0*x16331))+(((-1.0)*x16325*x16335)));
evalcond[3]=((1.0)+((r12*x16327))+((r02*x16329))+(((-1.0)*cj5*x16326*x16332))+(((-1.0)*x16322*x16323))+(((-1.0)*r01*x16322*x16325))+(((-1.0)*cj5*x16325*x16328)));
evalcond[4]=(((x16326*x16327))+((cj0*r01*x16324))+((cj0*cj5*r02))+((r12*x16334))+((x16323*x16324))+((x16328*x16329)));
evalcond[5]=(((r12*x16329))+(((-1.0)*r02*x16327))+((r01*sj0*x16322))+(((-1.0)*r11*x16322*x16325))+((x16328*x16334))+(((-1.0)*cj5*x16325*x16326)));
evalcond[6]=((0.1148)+(((-1.0)*x16330*x16335))+(((-1.0)*py*x16332))+(((-1.0)*px*x16325))+(((0.02626)*sj6*x16323))+((x16330*x16331))+(((-0.02626)*sj0*x16333)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35598885793872)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35598885793872)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16336=IKcos(j4);
IkReal x16337=IKsin(j4);
IkReal x16338=(cj0*sj6);
IkReal x16339=((0.02626)*cj6);
IkReal x16340=(cj0*r10);
IkReal x16341=((0.02626)*sj6);
IkReal x16342=(r01*sj0);
IkReal x16343=((1.0)*cj5);
IkReal x16344=((1.0)*cj6);
IkReal x16345=((1.0)*sj6);
IkReal x16346=(r00*sj0);
evalcond[0]=(x16337+((cj6*r20))+(((-1.0)*r21*x16345)));
evalcond[1]=((((-1.0)*x16336))+(((-1.0)*r20*sj5*x16345))+(((-1.0)*r22*x16343))+(((-1.0)*r21*sj5*x16344)));
evalcond[2]=((0.09736)+((r20*x16339))+(((0.02626)*x16337))+(((0.0718)*x16336))+pz+(((-1.0)*r21*x16341)));
evalcond[3]=((((-1.0)*x16340*x16344))+((cj6*x16346))+(((-1.0)*x16342*x16345))+x16336+((r11*x16338)));
evalcond[4]=((((-1.0)*sj5*x16342*x16344))+((cj0*cj5*r12))+x16337+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x16343))+(((-1.0)*sj5*x16345*x16346))+((r10*sj5*x16338)));
evalcond[5]=((-0.1246)+(((0.02626)*x16336))+(((0.02626)*r11*x16338))+((x16339*x16346))+(((-0.0718)*x16337))+(((-1.0)*x16341*x16342))+(((-1.0)*x16339*x16340))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16347=(cj5*cj6);
IkReal x16348=(r11*sj0);
IkReal x16349=(cj6*sj5);
IkReal x16350=((1.0)*cj0);
IkReal x16351=(r10*sj6);
IkReal x16352=(sj0*sj5);
IkReal x16353=(r00*sj6);
IkReal x16354=(cj0*sj5);
IkReal x16355=((0.02626)*cj0);
IkReal x16356=(r01*sj6);
IkReal x16357=((1.0)*sj0);
IkReal x16358=(cj6*r10);
IkReal x16359=(cj5*sj0);
IkReal x16360=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x16347)));
evalcond[2]=(((sj6*x16348))+(((-1.0)*x16350*x16360))+(((-1.0)*x16357*x16358))+((cj0*x16356)));
evalcond[3]=((-1.0)+(((-1.0)*x16347*x16348))+((r02*x16354))+(((-1.0)*cj5*x16351*x16357))+((r12*x16352))+(((-1.0)*r01*x16347*x16350))+(((-1.0)*cj5*x16350*x16353)));
evalcond[4]=(((x16348*x16349))+((cj0*cj5*r02))+((x16353*x16354))+((cj0*r01*x16349))+((x16351*x16352))+((r12*x16359)));
evalcond[5]=(((x16353*x16359))+((r01*sj0*x16347))+(((-1.0)*r11*x16347*x16350))+((r12*x16354))+(((-1.0)*r02*x16352))+(((-1.0)*cj5*x16350*x16351)));
evalcond[6]=((0.1148)+(((-1.0)*x16355*x16360))+(((-1.0)*px*x16350))+(((-0.02626)*sj0*x16358))+(((0.02626)*sj6*x16348))+(((-1.0)*py*x16357))+((x16355*x16356)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35877437325905)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35877437325905)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16361=IKcos(j4);
IkReal x16362=IKsin(j4);
IkReal x16363=(cj0*sj6);
IkReal x16364=((0.02626)*cj6);
IkReal x16365=(cj0*r10);
IkReal x16366=((0.02626)*sj6);
IkReal x16367=(r01*sj0);
IkReal x16368=((1.0)*cj5);
IkReal x16369=((1.0)*cj6);
IkReal x16370=((1.0)*sj6);
IkReal x16371=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x16370))+(((-1.0)*x16362))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x16368))+x16361+(((-1.0)*r21*sj5*x16369))+(((-1.0)*r20*sj5*x16370)));
evalcond[2]=((-0.09756)+(((-0.0718)*x16361))+((r20*x16364))+pz+(((-1.0)*r21*x16366))+(((-0.02626)*x16362)));
evalcond[3]=((((-1.0)*x16367*x16370))+x16361+(((-1.0)*x16365*x16369))+((r11*x16363))+((cj6*x16371)));
evalcond[4]=(((cj0*cj5*r12))+x16362+(((-1.0)*r02*sj0*x16368))+((r10*sj5*x16363))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x16367*x16369))+(((-1.0)*sj5*x16370*x16371)));
evalcond[5]=((-0.1246)+(((-1.0)*x16364*x16365))+(((-0.0718)*x16362))+(((0.02626)*x16361))+(((0.02626)*r11*x16363))+(((-1.0)*x16366*x16367))+((px*sj0))+(((-1.0)*cj0*py))+((x16364*x16371)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16372=(cj5*cj6);
IkReal x16373=((1.0)*sj0);
IkReal x16374=(r21*sj6);
IkReal x16375=(cj0*sj5);
IkReal x16376=((1.0)*r22);
IkReal x16377=(cj6*r20);
IkReal x16378=(cj5*sj6);
IkReal x16379=((1.0)*cj0);
IkReal x16380=((1.0)*sj5);
IkReal x16381=(x16378*x16379);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x16376))+((r21*x16372))+((r20*x16378)));
evalcond[2]=((((-1.0)*x16374))+x16377);
evalcond[3]=((((-1.0)*cj5*x16376))+(((-1.0)*r20*sj6*x16380))+(((-1.0)*cj6*r21*x16380)));
evalcond[4]=(((r12*sj0*sj5))+(((-1.0)*r01*x16372*x16379))+(((-1.0)*r11*x16372*x16373))+((r02*x16375))+(((-1.0)*r00*x16381))+(((-1.0)*r10*x16373*x16378)));
evalcond[5]=((((-1.0)*r10*x16381))+((r12*x16375))+(((-1.0)*r02*sj5*x16373))+(((-1.0)*r11*x16372*x16379))+((r01*sj0*x16372))+((r00*sj0*x16378)));
evalcond[6]=((-0.0001)+(((-0.02626)*x16374))+pz+(((0.02626)*x16377)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16382=(cj0*cj6);
IkReal x16383=(sj0*sj6);
IkReal x16384=((1.0)*r11);
IkReal x16385=(cj6*sj0);
IkReal x16386=(cj0*sj6);
if( IKabs(((((-1.0)*x16383*x16384))+((r00*x16382))+((r10*x16385))+(((-1.0)*r01*x16386)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x16384*x16386))+((r01*x16383))+(((-1.0)*r00*x16385))+((r10*x16382)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x16383*x16384))+((r00*x16382))+((r10*x16385))+(((-1.0)*r01*x16386))))+IKsqr(((((-1.0)*x16384*x16386))+((r01*x16383))+(((-1.0)*r00*x16385))+((r10*x16382))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*x16383*x16384))+((r00*x16382))+((r10*x16385))+(((-1.0)*r01*x16386))), ((((-1.0)*x16384*x16386))+((r01*x16383))+(((-1.0)*r00*x16385))+((r10*x16382))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16387=IKcos(j4);
IkReal x16388=IKsin(j4);
IkReal x16389=(cj6*sj0);
IkReal x16390=((0.02626)*r10);
IkReal x16391=(r11*sj6);
IkReal x16392=(r11*sj5);
IkReal x16393=(sj0*sj6);
IkReal x16394=(r10*sj5);
IkReal x16395=((0.02626)*r01);
IkReal x16396=(cj5*r12);
IkReal x16397=(cj0*cj6);
IkReal x16398=((1.0)*sj0);
IkReal x16399=(cj5*r02);
IkReal x16400=(cj0*sj6);
IkReal x16401=((1.0)*r10);
IkReal x16402=((1.0)*r01);
IkReal x16403=(r00*sj5);
IkReal x16404=((1.0)*cj0);
IkReal x16405=((0.02626)*r00);
evalcond[0]=(((r01*x16400))+((sj0*x16391))+(((-1.0)*x16389*x16401))+x16388+(((-1.0)*r00*x16397)));
evalcond[1]=((((-1.0)*x16393*x16402))+((r00*x16389))+(((-1.0)*x16397*x16401))+x16387+((cj0*x16391)));
evalcond[2]=(((x16389*x16392))+((sj0*x16396))+((x16393*x16394))+(((-1.0)*x16387))+((cj0*x16399))+((r01*sj5*x16397))+((x16400*x16403)));
evalcond[3]=(((x16394*x16400))+(((-1.0)*x16393*x16403))+((x16392*x16397))+x16388+((cj0*x16396))+(((-1.0)*x16398*x16399))+(((-1.0)*sj5*x16389*x16402)));
evalcond[4]=((-0.1246)+(((-1.0)*x16393*x16395))+(((-1.0)*py*x16404))+(((-1.0)*x16390*x16397))+((px*sj0))+(((0.02626)*x16387))+((x16389*x16405))+(((0.02626)*cj0*x16391))+(((-0.0718)*x16388)));
evalcond[5]=((0.21226)+(((-1.0)*x16389*x16390))+(((-1.0)*x16397*x16405))+(((-1.0)*px*x16404))+(((-1.0)*py*x16398))+((x16395*x16400))+(((0.02626)*sj0*x16391))+(((0.02626)*x16388))+(((0.0718)*x16387)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16406=(cj5*cj6);
IkReal x16407=((1.0)*sj0);
IkReal x16408=(r21*sj6);
IkReal x16409=(cj0*sj5);
IkReal x16410=((1.0)*r22);
IkReal x16411=(cj6*r20);
IkReal x16412=(cj5*sj6);
IkReal x16413=((1.0)*cj0);
IkReal x16414=((1.0)*sj5);
IkReal x16415=(x16412*x16413);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x16410))+((r21*x16406))+((r20*x16412)));
evalcond[2]=(x16411+(((-1.0)*x16408)));
evalcond[3]=((((-1.0)*cj5*x16410))+(((-1.0)*cj6*r21*x16414))+(((-1.0)*r20*sj6*x16414)));
evalcond[4]=((((-1.0)*r11*x16406*x16407))+(((-1.0)*r00*x16415))+(((-1.0)*r01*x16406*x16413))+((r12*sj0*sj5))+((r02*x16409))+(((-1.0)*r10*x16407*x16412)));
evalcond[5]=((((-1.0)*r02*sj5*x16407))+((r01*sj0*x16406))+((r12*x16409))+((r00*sj0*x16412))+(((-1.0)*r11*x16406*x16413))+(((-1.0)*r10*x16415)));
evalcond[6]=((-0.0001)+(((0.02626)*x16411))+pz+(((-0.02626)*x16408)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16416=(sj0*sj6);
IkReal x16417=(cj6*r10);
IkReal x16418=((1.0)*sj0);
IkReal x16419=(cj6*r00);
IkReal x16420=(cj0*sj6);
if( IKabs((((r01*x16420))+(((-1.0)*x16417*x16418))+((r11*x16416))+(((-1.0)*cj0*x16419)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x16420))+(((-1.0)*x16418*x16419))+((cj0*x16417))+((r01*x16416)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x16420))+(((-1.0)*x16417*x16418))+((r11*x16416))+(((-1.0)*cj0*x16419))))+IKsqr(((((-1.0)*r11*x16420))+(((-1.0)*x16418*x16419))+((cj0*x16417))+((r01*x16416))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x16420))+(((-1.0)*x16417*x16418))+((r11*x16416))+(((-1.0)*cj0*x16419))), ((((-1.0)*r11*x16420))+(((-1.0)*x16418*x16419))+((cj0*x16417))+((r01*x16416))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16421=IKcos(j4);
IkReal x16422=IKsin(j4);
IkReal x16423=(cj6*sj0);
IkReal x16424=((0.02626)*r10);
IkReal x16425=(r11*sj6);
IkReal x16426=(r11*sj5);
IkReal x16427=(sj0*sj6);
IkReal x16428=(r10*sj5);
IkReal x16429=((0.02626)*r01);
IkReal x16430=(cj5*r12);
IkReal x16431=(cj0*cj6);
IkReal x16432=((1.0)*sj0);
IkReal x16433=(cj5*r02);
IkReal x16434=(cj0*sj6);
IkReal x16435=((1.0)*r10);
IkReal x16436=((1.0)*r01);
IkReal x16437=(r00*sj5);
IkReal x16438=((1.0)*cj0);
IkReal x16439=((0.02626)*r00);
evalcond[0]=((((-1.0)*x16427*x16436))+((r00*x16423))+x16421+((cj0*x16425))+(((-1.0)*x16431*x16435)));
evalcond[1]=((((-1.0)*x16423*x16435))+(((-1.0)*r00*x16431))+((sj0*x16425))+((r01*x16434))+(((-1.0)*x16422)));
evalcond[2]=(((r01*sj5*x16431))+((sj0*x16430))+((cj0*x16433))+x16421+((x16434*x16437))+((x16427*x16428))+((x16423*x16426)));
evalcond[3]=(((cj0*x16430))+((x16426*x16431))+(((-1.0)*x16427*x16437))+x16422+(((-1.0)*sj5*x16423*x16436))+(((-1.0)*x16432*x16433))+((x16428*x16434)));
evalcond[4]=((-0.1246)+(((-1.0)*x16427*x16429))+(((-1.0)*x16424*x16431))+(((0.02626)*cj0*x16425))+(((-1.0)*py*x16438))+(((-0.0718)*x16422))+(((0.02626)*x16421))+((px*sj0))+((x16423*x16439)));
evalcond[5]=((0.01734)+(((-0.02626)*x16422))+(((-1.0)*x16423*x16424))+((x16429*x16434))+(((-1.0)*px*x16438))+(((-1.0)*x16431*x16439))+(((-1.0)*py*x16432))+(((-0.0718)*x16421))+(((0.02626)*sj0*x16425)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16440=((1.0)*sj5);
IkReal x16441=((1.0)*sj6);
CheckValue<IkReal> x16442=IKPowWithIntegerCheck(cj3,-1);
if(!x16442.valid){
continue;
}
CheckValue<IkReal> x16443=IKPowWithIntegerCheck(sj3,-1);
if(!x16443.valid){
continue;
}
if( IKabs(((x16442.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x16441))+(((-1.0)*r11*sj0*x16441))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x16443.value)*(((((-1.0)*r20*sj6*x16440))+(((-1.0)*cj6*r21*x16440))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x16442.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x16441))+(((-1.0)*r11*sj0*x16441))+((cj0*cj6*r00))))))+IKsqr(((x16443.value)*(((((-1.0)*r20*sj6*x16440))+(((-1.0)*cj6*r21*x16440))+(((-1.0)*cj5*r22))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x16442.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x16441))+(((-1.0)*r11*sj0*x16441))+((cj0*cj6*r00))))), ((x16443.value)*(((((-1.0)*r20*sj6*x16440))+(((-1.0)*cj6*r21*x16440))+(((-1.0)*cj5*r22))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16444=IKcos(j4);
IkReal x16445=IKsin(j4);
IkReal x16446=(cj6*sj0);
IkReal x16447=((0.02626)*r10);
IkReal x16448=(sj0*sj6);
IkReal x16449=(cj5*r12);
IkReal x16450=(r11*sj5);
IkReal x16451=(r10*sj5);
IkReal x16452=((0.02626)*r01);
IkReal x16453=(cj0*sj6);
IkReal x16454=(cj0*cj6);
IkReal x16455=(r21*sj6);
IkReal x16456=((1.0)*cj5);
IkReal x16457=(cj6*r20);
IkReal x16458=((1.0)*r10);
IkReal x16459=((1.0)*r01);
IkReal x16460=(r00*sj5);
IkReal x16461=((1.0)*py);
IkReal x16462=((1.0)*sj5);
IkReal x16463=((0.02626)*r00);
IkReal x16464=((0.02626)*r11);
IkReal x16465=((0.02626)*x16445);
IkReal x16466=(cj3*x16444);
IkReal x16467=(sj3*x16444);
evalcond[0]=(x16457+((sj3*x16445))+(((-1.0)*x16455)));
evalcond[1]=((((-1.0)*r20*sj6*x16462))+(((-1.0)*cj6*r21*x16462))+(((-1.0)*x16467))+(((-1.0)*r22*x16456)));
evalcond[2]=(x16444+((r11*x16453))+((r00*x16446))+(((-1.0)*x16448*x16459))+(((-1.0)*x16454*x16458)));
evalcond[3]=(((r01*x16453))+(((-1.0)*r00*x16454))+(((-1.0)*x16446*x16458))+((cj3*x16445))+((r11*x16448)));
evalcond[4]=((-0.0001)+(((-0.02626)*x16455))+((sj3*x16465))+(((0.0718)*x16467))+pz+(((0.02626)*x16457))+(((0.09746)*sj3)));
evalcond[5]=(((cj0*cj5*r02))+((r01*sj5*x16454))+((x16448*x16451))+((x16446*x16450))+(((-1.0)*x16466))+((sj0*x16449))+((x16453*x16460)));
evalcond[6]=((((-1.0)*r02*sj0*x16456))+((x16450*x16454))+x16445+((x16451*x16453))+(((-1.0)*x16448*x16460))+(((-1.0)*sj5*x16446*x16459))+((cj0*x16449)));
evalcond[7]=((-0.1246)+(((0.02626)*x16444))+(((-0.0718)*x16445))+(((-1.0)*x16447*x16454))+((x16453*x16464))+((px*sj0))+((x16446*x16463))+(((-1.0)*cj0*x16461))+(((-1.0)*x16448*x16452)));
evalcond[8]=((0.1148)+((cj3*x16465))+(((0.0718)*x16466))+(((-1.0)*sj0*x16461))+((x16448*x16464))+((x16452*x16453))+(((-1.0)*x16454*x16463))+(((0.09746)*cj3))+(((-1.0)*x16446*x16447))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16468=((1.0)*cj6);
CheckValue<IkReal> x16469=IKPowWithIntegerCheck(sj3,-1);
if(!x16469.valid){
continue;
}
if( IKabs(((x16469.value)*((((r21*sj6))+(((-1.0)*r20*x16468)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*sj0*x16468))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x16469.value)*((((r21*sj6))+(((-1.0)*r20*x16468))))))+IKsqr(((((-1.0)*r00*sj0*x16468))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x16469.value)*((((r21*sj6))+(((-1.0)*r20*x16468))))), ((((-1.0)*r00*sj0*x16468))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj0*r11*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16470=IKcos(j4);
IkReal x16471=IKsin(j4);
IkReal x16472=(cj6*sj0);
IkReal x16473=((0.02626)*r10);
IkReal x16474=(sj0*sj6);
IkReal x16475=(cj5*r12);
IkReal x16476=(r11*sj5);
IkReal x16477=(r10*sj5);
IkReal x16478=((0.02626)*r01);
IkReal x16479=(cj0*sj6);
IkReal x16480=(cj0*cj6);
IkReal x16481=(r21*sj6);
IkReal x16482=((1.0)*cj5);
IkReal x16483=(cj6*r20);
IkReal x16484=((1.0)*r10);
IkReal x16485=((1.0)*r01);
IkReal x16486=(r00*sj5);
IkReal x16487=((1.0)*py);
IkReal x16488=((1.0)*sj5);
IkReal x16489=((0.02626)*r00);
IkReal x16490=((0.02626)*r11);
IkReal x16491=((0.02626)*x16471);
IkReal x16492=(cj3*x16470);
IkReal x16493=(sj3*x16470);
evalcond[0]=(((sj3*x16471))+x16483+(((-1.0)*x16481)));
evalcond[1]=((((-1.0)*r22*x16482))+(((-1.0)*x16493))+(((-1.0)*cj6*r21*x16488))+(((-1.0)*r20*sj6*x16488)));
evalcond[2]=(x16470+(((-1.0)*x16480*x16484))+((r00*x16472))+((r11*x16479))+(((-1.0)*x16474*x16485)));
evalcond[3]=(((cj3*x16471))+(((-1.0)*x16472*x16484))+((r11*x16474))+((r01*x16479))+(((-1.0)*r00*x16480)));
evalcond[4]=((-0.0001)+(((-0.02626)*x16481))+((sj3*x16491))+(((0.0718)*x16493))+(((0.02626)*x16483))+pz+(((0.09746)*sj3)));
evalcond[5]=(((x16472*x16476))+((cj0*cj5*r02))+((sj0*x16475))+((x16479*x16486))+((r01*sj5*x16480))+((x16474*x16477))+(((-1.0)*x16492)));
evalcond[6]=((((-1.0)*r02*sj0*x16482))+((x16476*x16480))+x16471+(((-1.0)*sj5*x16472*x16485))+((x16477*x16479))+(((-1.0)*x16474*x16486))+((cj0*x16475)));
evalcond[7]=((-0.1246)+((x16472*x16489))+(((-1.0)*x16473*x16480))+(((-0.0718)*x16471))+(((-1.0)*x16474*x16478))+((x16479*x16490))+(((0.02626)*x16470))+((px*sj0))+(((-1.0)*cj0*x16487)));
evalcond[8]=((0.1148)+((x16474*x16490))+(((0.0718)*x16492))+(((-1.0)*x16480*x16489))+((cj3*x16491))+(((-1.0)*x16472*x16473))+(((0.09746)*cj3))+(((-1.0)*sj0*x16487))+(((-1.0)*cj0*px))+((x16478*x16479)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16494=((1.0)*sj5);
CheckValue<IkReal> x16495 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),((((-1.0)*cj6*r21*x16494))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj6*x16494))),IKFAST_ATAN2_MAGTHRESH);
if(!x16495.valid){
continue;
}
CheckValue<IkReal> x16496=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x16496.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x16495.value)+(((1.5707963267949)*(x16496.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16497=IKcos(j4);
IkReal x16498=IKsin(j4);
IkReal x16499=(cj6*sj0);
IkReal x16500=((0.02626)*r10);
IkReal x16501=(sj0*sj6);
IkReal x16502=(cj5*r12);
IkReal x16503=(r11*sj5);
IkReal x16504=(r10*sj5);
IkReal x16505=((0.02626)*r01);
IkReal x16506=(cj0*sj6);
IkReal x16507=(cj0*cj6);
IkReal x16508=(r21*sj6);
IkReal x16509=((1.0)*cj5);
IkReal x16510=(cj6*r20);
IkReal x16511=((1.0)*r10);
IkReal x16512=((1.0)*r01);
IkReal x16513=(r00*sj5);
IkReal x16514=((1.0)*py);
IkReal x16515=((1.0)*sj5);
IkReal x16516=((0.02626)*r00);
IkReal x16517=((0.02626)*r11);
IkReal x16518=((0.02626)*x16498);
IkReal x16519=(cj3*x16497);
IkReal x16520=(sj3*x16497);
evalcond[0]=(((sj3*x16498))+x16510+(((-1.0)*x16508)));
evalcond[1]=((((-1.0)*x16520))+(((-1.0)*cj6*r21*x16515))+(((-1.0)*r22*x16509))+(((-1.0)*r20*sj6*x16515)));
evalcond[2]=(x16497+((r00*x16499))+(((-1.0)*x16501*x16512))+((r11*x16506))+(((-1.0)*x16507*x16511)));
evalcond[3]=((((-1.0)*x16499*x16511))+((r01*x16506))+((cj3*x16498))+(((-1.0)*r00*x16507))+((r11*x16501)));
evalcond[4]=((-0.0001)+(((0.0718)*x16520))+((sj3*x16518))+pz+(((0.02626)*x16510))+(((0.09746)*sj3))+(((-0.02626)*x16508)));
evalcond[5]=(((x16506*x16513))+((cj0*cj5*r02))+((sj0*x16502))+((r01*sj5*x16507))+((x16499*x16503))+((x16501*x16504))+(((-1.0)*x16519)));
evalcond[6]=((((-1.0)*sj5*x16499*x16512))+(((-1.0)*x16501*x16513))+x16498+((x16504*x16506))+((cj0*x16502))+(((-1.0)*r02*sj0*x16509))+((x16503*x16507)));
evalcond[7]=((-0.1246)+((x16506*x16517))+((x16499*x16516))+(((-1.0)*cj0*x16514))+(((0.02626)*x16497))+(((-0.0718)*x16498))+((px*sj0))+(((-1.0)*x16500*x16507))+(((-1.0)*x16501*x16505)));
evalcond[8]=((0.1148)+(((-1.0)*sj0*x16514))+((cj3*x16518))+((x16501*x16517))+((x16505*x16506))+(((-1.0)*x16499*x16500))+(((0.09746)*cj3))+(((0.0718)*x16519))+(((-1.0)*cj0*px))+(((-1.0)*x16507*x16516)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16521=(cj0*sj5);
IkReal x16522=(cj5*cj6);
IkReal x16523=((1.0)*sj5);
IkReal x16524=((1.0)*cj0);
IkReal x16525=((1.0)*sj0);
IkReal x16526=(cj5*sj6);
IkReal x16527=(r10*x16526);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
evalcond[1]=(((r21*x16522))+(((-1.0)*r22*x16523))+cj3+((r20*x16526)));
evalcond[2]=(sj3+(((-1.0)*r11*x16522*x16525))+((r02*x16521))+((r12*sj0*sj5))+(((-1.0)*r00*x16524*x16526))+(((-1.0)*r01*x16522*x16524))+(((-1.0)*x16525*x16527)));
evalcond[3]=((((-1.0)*r02*sj0*x16523))+(((-1.0)*r11*x16522*x16524))+(((-1.0)*x16524*x16527))+((r12*x16521))+((r01*sj0*x16522))+((r00*sj0*x16526)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
j4eval[1]=((IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
j4eval[2]=IKsign(sj3);
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j2=-1.5707963267949;
sj2=-1.0;
cj2=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j4eval[0]=cj3;
j4eval[1]=sj3;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x16528=(cj5*cj6);
IkReal x16529=(r11*sj0);
IkReal x16530=(cj6*sj5);
IkReal x16531=((1.0)*cj0);
IkReal x16532=(r10*sj6);
IkReal x16533=(sj0*sj5);
IkReal x16534=(r00*sj6);
IkReal x16535=(cj0*sj5);
IkReal x16536=((0.02626)*cj0);
IkReal x16537=(r01*sj6);
IkReal x16538=((1.0)*sj0);
IkReal x16539=(cj6*r10);
IkReal x16540=(cj5*sj0);
IkReal x16541=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((r21*x16528))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=(((sj6*x16529))+(((-1.0)*x16538*x16539))+(((-1.0)*x16531*x16541))+((cj0*x16537)));
evalcond[3]=((1.0)+(((-1.0)*r01*x16528*x16531))+((r02*x16535))+(((-1.0)*x16528*x16529))+((r12*x16533))+(((-1.0)*cj5*x16531*x16534))+(((-1.0)*cj5*x16532*x16538)));
evalcond[4]=(((x16532*x16533))+((cj0*cj5*r02))+((cj0*r01*x16530))+((x16529*x16530))+((x16534*x16535))+((r12*x16540)));
evalcond[5]=((((-1.0)*r11*x16528*x16531))+((x16534*x16540))+((r12*x16535))+(((-1.0)*r02*x16533))+((r01*sj0*x16528))+(((-1.0)*cj5*x16531*x16532)));
evalcond[6]=((0.1148)+(((-1.0)*py*x16538))+(((-1.0)*px*x16531))+(((0.02626)*sj6*x16529))+(((-0.02626)*sj0*x16539))+((x16536*x16537))+(((-1.0)*x16536*x16541)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35598885793872)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))+IKsqr(((-1.35598885793872)+(((13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r20))+(((-1.0)*r21*sj6))), ((-1.35598885793872)+(((13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16542=IKcos(j4);
IkReal x16543=IKsin(j4);
IkReal x16544=(cj0*sj6);
IkReal x16545=((0.02626)*cj6);
IkReal x16546=(cj0*r10);
IkReal x16547=((0.02626)*sj6);
IkReal x16548=(r01*sj0);
IkReal x16549=((1.0)*cj5);
IkReal x16550=((1.0)*cj6);
IkReal x16551=((1.0)*sj6);
IkReal x16552=(r00*sj0);
IkReal x16553=((1.0)*x16543);
evalcond[0]=((((-1.0)*x16553))+((cj6*r20))+(((-1.0)*r21*x16551)));
evalcond[1]=((((-1.0)*r20*sj5*x16551))+(((-1.0)*r22*x16549))+x16542+(((-1.0)*r21*sj5*x16550)));
evalcond[2]=((-0.09736)+(((-0.02626)*x16543))+((r20*x16545))+(((-0.0718)*x16542))+pz+(((-1.0)*r21*x16547)));
evalcond[3]=((((-1.0)*x16542))+(((-1.0)*x16548*x16551))+((r11*x16544))+(((-1.0)*x16546*x16550))+((cj6*x16552)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*sj5*x16551*x16552))+((r10*sj5*x16544))+((cj0*cj6*r11*sj5))+(((-1.0)*x16553))+(((-1.0)*sj5*x16548*x16550))+(((-1.0)*r02*sj0*x16549)));
evalcond[5]=((0.1246)+(((-0.02626)*x16542))+((x16545*x16552))+(((-1.0)*x16547*x16548))+(((-1.0)*x16545*x16546))+(((0.02626)*r11*x16544))+(((0.0718)*x16543))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16554=(cj5*cj6);
IkReal x16555=(r11*sj0);
IkReal x16556=(cj6*sj5);
IkReal x16557=((1.0)*cj0);
IkReal x16558=(r10*sj6);
IkReal x16559=(sj0*sj5);
IkReal x16560=(r00*sj6);
IkReal x16561=(cj0*sj5);
IkReal x16562=((0.02626)*cj0);
IkReal x16563=(r01*sj6);
IkReal x16564=((1.0)*sj0);
IkReal x16565=(cj6*r10);
IkReal x16566=(cj5*sj0);
IkReal x16567=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j3)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x16554)));
evalcond[2]=((((-1.0)*x16564*x16565))+(((-1.0)*x16557*x16567))+((cj0*x16563))+((sj6*x16555)));
evalcond[3]=((-1.0)+(((-1.0)*x16554*x16555))+(((-1.0)*cj5*x16558*x16564))+(((-1.0)*r01*x16554*x16557))+((r12*x16559))+(((-1.0)*cj5*x16557*x16560))+((r02*x16561)));
evalcond[4]=(((x16555*x16556))+((cj0*cj5*r02))+((cj0*r01*x16556))+((r12*x16566))+((x16558*x16559))+((x16560*x16561)));
evalcond[5]=((((-1.0)*r11*x16554*x16557))+((r12*x16561))+((r01*sj0*x16554))+(((-1.0)*cj5*x16557*x16558))+(((-1.0)*r02*x16559))+((x16560*x16566)));
evalcond[6]=((0.1148)+((x16562*x16563))+(((0.02626)*sj6*x16555))+(((-1.0)*px*x16557))+(((-1.0)*x16562*x16567))+(((-1.0)*py*x16564))+(((-0.02626)*sj0*x16565)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35877437325905)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))+IKsqr(((-1.35877437325905)+(((-13.9275766016713)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj6*r20))+((r21*sj6))), ((-1.35877437325905)+(((-13.9275766016713)*pz))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16568=IKcos(j4);
IkReal x16569=IKsin(j4);
IkReal x16570=(cj0*sj6);
IkReal x16571=((0.02626)*cj6);
IkReal x16572=(cj0*r10);
IkReal x16573=((0.02626)*sj6);
IkReal x16574=(r01*sj0);
IkReal x16575=((1.0)*cj5);
IkReal x16576=((1.0)*cj6);
IkReal x16577=((1.0)*sj6);
IkReal x16578=(r00*sj0);
IkReal x16579=((1.0)*x16568);
evalcond[0]=((((-1.0)*r21*x16577))+x16569+((cj6*r20)));
evalcond[1]=((((-1.0)*x16579))+(((-1.0)*r22*x16575))+(((-1.0)*r20*sj5*x16577))+(((-1.0)*r21*sj5*x16576)));
evalcond[2]=((0.09756)+(((0.0718)*x16568))+(((-1.0)*r21*x16573))+pz+((r20*x16571))+(((0.02626)*x16569)));
evalcond[3]=(((r11*x16570))+(((-1.0)*x16579))+(((-1.0)*x16574*x16577))+(((-1.0)*x16572*x16576))+((cj6*x16578)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*r02*sj0*x16575))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x16577*x16578))+(((-1.0)*x16569))+(((-1.0)*sj5*x16574*x16576))+((r10*sj5*x16570)));
evalcond[5]=((0.1246)+(((0.02626)*r11*x16570))+(((0.0718)*x16569))+(((-1.0)*x16573*x16574))+((px*sj0))+(((-0.02626)*x16568))+(((-1.0)*x16571*x16572))+((x16571*x16578))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16580=(cj5*cj6);
IkReal x16581=((1.0)*sj0);
IkReal x16582=(r21*sj6);
IkReal x16583=(cj0*sj5);
IkReal x16584=((1.0)*r22);
IkReal x16585=(cj6*r20);
IkReal x16586=(cj5*sj6);
IkReal x16587=((1.0)*cj0);
IkReal x16588=((1.0)*sj5);
IkReal x16589=(x16586*x16587);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j3))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x16584))+((r20*x16586))+((r21*x16580)));
evalcond[2]=(x16585+(((-1.0)*x16582)));
evalcond[3]=((((-1.0)*cj5*x16584))+(((-1.0)*cj6*r21*x16588))+(((-1.0)*r20*sj6*x16588)));
evalcond[4]=((((-1.0)*r01*x16580*x16587))+(((-1.0)*r00*x16589))+(((-1.0)*r11*x16580*x16581))+((r12*sj0*sj5))+(((-1.0)*r10*x16581*x16586))+((r02*x16583)));
evalcond[5]=(((r01*sj0*x16580))+(((-1.0)*r10*x16589))+(((-1.0)*r11*x16580*x16587))+((r12*x16583))+((r00*sj0*x16586))+(((-1.0)*r02*sj5*x16581)));
evalcond[6]=((0.0001)+(((0.02626)*x16585))+pz+(((-0.02626)*x16582)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16590=(cj0*cj6);
IkReal x16591=(cj6*sj0);
IkReal x16592=(cj0*sj6);
IkReal x16593=((1.0)*sj0*sj6);
if( IKabs(((((-1.0)*r11*x16593))+((r00*x16590))+(((-1.0)*r01*x16592))+((r10*x16591)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x16591))+(((-1.0)*r01*x16593))+(((-1.0)*r10*x16590))+((r11*x16592)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x16593))+((r00*x16590))+(((-1.0)*r01*x16592))+((r10*x16591))))+IKsqr((((r00*x16591))+(((-1.0)*r01*x16593))+(((-1.0)*r10*x16590))+((r11*x16592))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r11*x16593))+((r00*x16590))+(((-1.0)*r01*x16592))+((r10*x16591))), (((r00*x16591))+(((-1.0)*r01*x16593))+(((-1.0)*r10*x16590))+((r11*x16592))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16594=IKsin(j4);
IkReal x16595=IKcos(j4);
IkReal x16596=(cj6*sj0);
IkReal x16597=((0.02626)*r10);
IkReal x16598=(r11*sj6);
IkReal x16599=(r11*sj5);
IkReal x16600=(sj0*sj6);
IkReal x16601=(r10*sj5);
IkReal x16602=((0.02626)*r01);
IkReal x16603=(cj5*r12);
IkReal x16604=(cj0*cj6);
IkReal x16605=((1.0)*sj0);
IkReal x16606=(cj5*r02);
IkReal x16607=(cj0*sj6);
IkReal x16608=((1.0)*r10);
IkReal x16609=((1.0)*r01);
IkReal x16610=(r00*sj5);
IkReal x16611=((1.0)*cj0);
IkReal x16612=((0.02626)*r00);
IkReal x16613=((1.0)*x16595);
evalcond[0]=((((-1.0)*r00*x16604))+x16594+((sj0*x16598))+(((-1.0)*x16596*x16608))+((r01*x16607)));
evalcond[1]=((((-1.0)*x16600*x16609))+(((-1.0)*x16604*x16608))+((cj0*x16598))+(((-1.0)*x16613))+((r00*x16596)));
evalcond[2]=(((sj0*x16603))+((r01*sj5*x16604))+((cj0*x16606))+(((-1.0)*x16613))+((x16600*x16601))+((x16596*x16599))+((x16607*x16610)));
evalcond[3]=(((cj0*x16603))+(((-1.0)*sj5*x16596*x16609))+((x16599*x16604))+(((-1.0)*x16594))+((x16601*x16607))+(((-1.0)*x16605*x16606))+(((-1.0)*x16600*x16610)));
evalcond[4]=((0.1246)+(((0.0718)*x16594))+(((-1.0)*x16600*x16602))+((x16596*x16612))+(((-1.0)*x16597*x16604))+(((-1.0)*py*x16611))+((px*sj0))+(((-0.02626)*x16595))+(((0.02626)*cj0*x16598)));
evalcond[5]=((0.21226)+(((0.0718)*x16595))+(((0.02626)*sj0*x16598))+((x16602*x16607))+(((-1.0)*py*x16605))+(((0.02626)*x16594))+(((-1.0)*x16604*x16612))+(((-1.0)*x16596*x16597))+(((-1.0)*px*x16611)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16614=(cj5*cj6);
IkReal x16615=((1.0)*sj0);
IkReal x16616=(r21*sj6);
IkReal x16617=(cj0*sj5);
IkReal x16618=((1.0)*r22);
IkReal x16619=(cj6*r20);
IkReal x16620=(cj5*sj6);
IkReal x16621=((1.0)*cj0);
IkReal x16622=((1.0)*sj5);
IkReal x16623=(x16620*x16621);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j3)))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r21*x16614))+(((-1.0)*sj5*x16618))+((r20*x16620)));
evalcond[2]=(x16619+(((-1.0)*x16616)));
evalcond[3]=((((-1.0)*r20*sj6*x16622))+(((-1.0)*cj6*r21*x16622))+(((-1.0)*cj5*x16618)));
evalcond[4]=((((-1.0)*r11*x16614*x16615))+((r02*x16617))+(((-1.0)*r01*x16614*x16621))+((r12*sj0*sj5))+(((-1.0)*r10*x16615*x16620))+(((-1.0)*r00*x16623)));
evalcond[5]=((((-1.0)*r11*x16614*x16621))+(((-1.0)*r10*x16623))+((r00*sj0*x16620))+((r01*sj0*x16614))+(((-1.0)*r02*sj5*x16615))+((r12*x16617)));
evalcond[6]=((0.0001)+(((0.02626)*x16619))+pz+(((-0.02626)*x16616)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16624=(sj0*sj6);
IkReal x16625=(cj0*sj6);
IkReal x16626=(cj6*r00);
IkReal x16627=((1.0)*cj6*r10);
if( IKabs((((r11*x16624))+(((-1.0)*sj0*x16627))+((r01*x16625))+(((-1.0)*cj0*x16626)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x16625))+(((-1.0)*cj0*x16627))+((sj0*x16626))+(((-1.0)*r01*x16624)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x16624))+(((-1.0)*sj0*x16627))+((r01*x16625))+(((-1.0)*cj0*x16626))))+IKsqr((((r11*x16625))+(((-1.0)*cj0*x16627))+((sj0*x16626))+(((-1.0)*r01*x16624))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r11*x16624))+(((-1.0)*sj0*x16627))+((r01*x16625))+(((-1.0)*cj0*x16626))), (((r11*x16625))+(((-1.0)*cj0*x16627))+((sj0*x16626))+(((-1.0)*r01*x16624))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16628=IKcos(j4);
IkReal x16629=IKsin(j4);
IkReal x16630=(cj6*sj0);
IkReal x16631=((0.02626)*r10);
IkReal x16632=(r11*sj6);
IkReal x16633=(r11*sj5);
IkReal x16634=(sj0*sj6);
IkReal x16635=(r10*sj5);
IkReal x16636=((0.02626)*r01);
IkReal x16637=(cj5*r12);
IkReal x16638=(cj0*cj6);
IkReal x16639=((1.0)*sj0);
IkReal x16640=(cj5*r02);
IkReal x16641=(cj0*sj6);
IkReal x16642=((1.0)*r10);
IkReal x16643=((1.0)*r01);
IkReal x16644=(r00*sj5);
IkReal x16645=((1.0)*cj0);
IkReal x16646=((0.02626)*r00);
IkReal x16647=((1.0)*x16629);
evalcond[0]=((((-1.0)*x16630*x16642))+((r01*x16641))+(((-1.0)*r00*x16638))+(((-1.0)*x16647))+((sj0*x16632)));
evalcond[1]=(((cj0*x16632))+(((-1.0)*x16638*x16642))+((r00*x16630))+(((-1.0)*x16634*x16643))+(((-1.0)*x16628)));
evalcond[2]=(x16628+((x16634*x16635))+((x16630*x16633))+((r01*sj5*x16638))+((sj0*x16637))+((cj0*x16640))+((x16641*x16644)));
evalcond[3]=(((cj0*x16637))+(((-1.0)*x16639*x16640))+((x16633*x16638))+(((-1.0)*x16634*x16644))+(((-1.0)*x16647))+(((-1.0)*sj5*x16630*x16643))+((x16635*x16641)));
evalcond[4]=((0.1246)+(((-1.0)*x16634*x16636))+((x16630*x16646))+(((0.0718)*x16629))+((px*sj0))+(((-1.0)*x16631*x16638))+(((-1.0)*py*x16645))+(((-0.02626)*x16628))+(((0.02626)*cj0*x16632)));
evalcond[5]=((0.01734)+(((-1.0)*x16630*x16631))+(((-1.0)*x16638*x16646))+(((-1.0)*px*x16645))+(((-0.0718)*x16628))+(((0.02626)*sj0*x16632))+(((-1.0)*py*x16639))+((x16636*x16641))+(((-0.02626)*x16629)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16648=((1.0)*sj6);
CheckValue<IkReal> x16649=IKPowWithIntegerCheck(cj3,-1);
if(!x16649.valid){
continue;
}
CheckValue<IkReal> x16650=IKPowWithIntegerCheck(sj3,-1);
if(!x16650.valid){
continue;
}
if( IKabs(((x16649.value)*((((cj6*r10*sj0))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x16648))+(((-1.0)*r11*sj0*x16648)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x16650.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x16649.value)*((((cj6*r10*sj0))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x16648))+(((-1.0)*r11*sj0*x16648))))))+IKsqr(((x16650.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x16649.value)*((((cj6*r10*sj0))+((cj0*cj6*r00))+(((-1.0)*cj0*r01*x16648))+(((-1.0)*r11*sj0*x16648))))), ((x16650.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16651=IKsin(j4);
IkReal x16652=IKcos(j4);
IkReal x16653=(cj6*sj0);
IkReal x16654=((0.02626)*r10);
IkReal x16655=(sj0*sj6);
IkReal x16656=(cj5*r12);
IkReal x16657=(r11*sj5);
IkReal x16658=(r10*sj5);
IkReal x16659=(cj0*cj6);
IkReal x16660=((0.02626)*r01);
IkReal x16661=(cj0*sj6);
IkReal x16662=(r21*sj6);
IkReal x16663=((1.0)*cj5);
IkReal x16664=(cj6*r20);
IkReal x16665=((1.0)*r10);
IkReal x16666=((1.0)*r01);
IkReal x16667=(r00*sj5);
IkReal x16668=((1.0)*py);
IkReal x16669=((1.0)*sj5);
IkReal x16670=((0.02626)*r00);
IkReal x16671=((0.02626)*r11);
IkReal x16672=(sj3*x16651);
IkReal x16673=(sj3*x16652);
IkReal x16674=(cj3*x16651);
IkReal x16675=((1.0)*x16652);
evalcond[0]=(x16664+(((-1.0)*x16672))+(((-1.0)*x16662)));
evalcond[1]=((((-1.0)*r20*sj6*x16669))+x16673+(((-1.0)*r22*x16663))+(((-1.0)*cj6*r21*x16669)));
evalcond[2]=(x16674+((r11*x16655))+(((-1.0)*r00*x16659))+(((-1.0)*x16653*x16665))+((r01*x16661)));
evalcond[3]=(((r11*x16661))+((r00*x16653))+(((-1.0)*x16659*x16665))+(((-1.0)*x16655*x16666))+(((-1.0)*x16675)));
evalcond[4]=((0.0001)+pz+(((-0.0718)*x16673))+(((-0.02626)*x16662))+(((-0.09746)*sj3))+(((-0.02626)*x16672))+(((0.02626)*x16664)));
evalcond[5]=(((x16653*x16657))+((cj0*cj5*r02))+((x16661*x16667))+(((-1.0)*cj3*x16675))+((r01*sj5*x16659))+((x16655*x16658))+((sj0*x16656)));
evalcond[6]=(((x16658*x16661))+((cj0*x16656))+(((-1.0)*r02*sj0*x16663))+(((-1.0)*x16655*x16667))+(((-1.0)*x16651))+(((-1.0)*sj5*x16653*x16666))+((x16657*x16659)));
evalcond[7]=((0.1246)+((x16661*x16671))+(((0.0718)*x16651))+(((-1.0)*x16655*x16660))+((x16653*x16670))+(((-1.0)*x16654*x16659))+(((-1.0)*cj0*x16668))+(((-0.02626)*x16652))+((px*sj0)));
evalcond[8]=((0.1148)+(((0.02626)*x16674))+(((-1.0)*x16659*x16670))+(((-1.0)*sj0*x16668))+(((-1.0)*x16653*x16654))+(((0.0718)*cj3*x16652))+((x16660*x16661))+(((0.09746)*cj3))+((x16655*x16671))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16676=((1.0)*sj6);
CheckValue<IkReal> x16677=IKPowWithIntegerCheck(sj3,-1);
if(!x16677.valid){
continue;
}
if( IKabs(((x16677.value)*(((((-1.0)*r21*x16676))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x16676))+(((-1.0)*cj0*cj6*r10)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x16677.value)*(((((-1.0)*r21*x16676))+((cj6*r20))))))+IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x16676))+(((-1.0)*cj0*cj6*r10))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x16677.value)*(((((-1.0)*r21*x16676))+((cj6*r20))))), (((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*x16676))+(((-1.0)*cj0*cj6*r10))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16678=IKsin(j4);
IkReal x16679=IKcos(j4);
IkReal x16680=(cj6*sj0);
IkReal x16681=((0.02626)*r10);
IkReal x16682=(sj0*sj6);
IkReal x16683=(cj5*r12);
IkReal x16684=(r11*sj5);
IkReal x16685=(r10*sj5);
IkReal x16686=(cj0*cj6);
IkReal x16687=((0.02626)*r01);
IkReal x16688=(cj0*sj6);
IkReal x16689=(r21*sj6);
IkReal x16690=((1.0)*cj5);
IkReal x16691=(cj6*r20);
IkReal x16692=((1.0)*r10);
IkReal x16693=((1.0)*r01);
IkReal x16694=(r00*sj5);
IkReal x16695=((1.0)*py);
IkReal x16696=((1.0)*sj5);
IkReal x16697=((0.02626)*r00);
IkReal x16698=((0.02626)*r11);
IkReal x16699=(sj3*x16678);
IkReal x16700=(sj3*x16679);
IkReal x16701=(cj3*x16678);
IkReal x16702=((1.0)*x16679);
evalcond[0]=((((-1.0)*x16689))+x16691+(((-1.0)*x16699)));
evalcond[1]=(x16700+(((-1.0)*r20*sj6*x16696))+(((-1.0)*cj6*r21*x16696))+(((-1.0)*r22*x16690)));
evalcond[2]=(x16701+((r01*x16688))+(((-1.0)*r00*x16686))+(((-1.0)*x16680*x16692))+((r11*x16682)));
evalcond[3]=(((r00*x16680))+((r11*x16688))+(((-1.0)*x16686*x16692))+(((-1.0)*x16702))+(((-1.0)*x16682*x16693)));
evalcond[4]=((0.0001)+(((-0.02626)*x16689))+(((0.02626)*x16691))+pz+(((-0.0718)*x16700))+(((-0.02626)*x16699))+(((-0.09746)*sj3)));
evalcond[5]=(((cj0*cj5*r02))+(((-1.0)*cj3*x16702))+((sj0*x16683))+((r01*sj5*x16686))+((x16688*x16694))+((x16682*x16685))+((x16680*x16684)));
evalcond[6]=((((-1.0)*x16682*x16694))+((x16684*x16686))+(((-1.0)*r02*sj0*x16690))+(((-1.0)*sj5*x16680*x16693))+(((-1.0)*x16678))+((cj0*x16683))+((x16685*x16688)));
evalcond[7]=((0.1246)+(((0.0718)*x16678))+(((-1.0)*x16682*x16687))+((x16680*x16697))+(((-1.0)*cj0*x16695))+(((-1.0)*x16681*x16686))+((px*sj0))+(((-0.02626)*x16679))+((x16688*x16698)));
evalcond[8]=((0.1148)+(((-1.0)*x16680*x16681))+(((0.02626)*x16701))+(((-1.0)*sj0*x16695))+(((0.0718)*cj3*x16679))+((x16682*x16698))+((x16687*x16688))+(((0.09746)*cj3))+(((-1.0)*x16686*x16697))+(((-1.0)*cj0*px)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x16703=IKPowWithIntegerCheck(IKsign(sj3),-1);
if(!x16703.valid){
continue;
}
CheckValue<IkReal> x16704 = IKatan2WithCheck(IkReal((((cj6*r20))+(((-1.0)*r21*sj6)))),(((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))),IKFAST_ATAN2_MAGTHRESH);
if(!x16704.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x16703.value)))+(x16704.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16705=IKsin(j4);
IkReal x16706=IKcos(j4);
IkReal x16707=(cj6*sj0);
IkReal x16708=((0.02626)*r10);
IkReal x16709=(sj0*sj6);
IkReal x16710=(cj5*r12);
IkReal x16711=(r11*sj5);
IkReal x16712=(r10*sj5);
IkReal x16713=(cj0*cj6);
IkReal x16714=((0.02626)*r01);
IkReal x16715=(cj0*sj6);
IkReal x16716=(r21*sj6);
IkReal x16717=((1.0)*cj5);
IkReal x16718=(cj6*r20);
IkReal x16719=((1.0)*r10);
IkReal x16720=((1.0)*r01);
IkReal x16721=(r00*sj5);
IkReal x16722=((1.0)*py);
IkReal x16723=((1.0)*sj5);
IkReal x16724=((0.02626)*r00);
IkReal x16725=((0.02626)*r11);
IkReal x16726=(sj3*x16705);
IkReal x16727=(sj3*x16706);
IkReal x16728=(cj3*x16705);
IkReal x16729=((1.0)*x16706);
evalcond[0]=(x16718+(((-1.0)*x16716))+(((-1.0)*x16726)));
evalcond[1]=(x16727+(((-1.0)*r22*x16717))+(((-1.0)*r20*sj6*x16723))+(((-1.0)*cj6*r21*x16723)));
evalcond[2]=(x16728+((r01*x16715))+((r11*x16709))+(((-1.0)*r00*x16713))+(((-1.0)*x16707*x16719)));
evalcond[3]=((((-1.0)*x16729))+((r00*x16707))+(((-1.0)*x16709*x16720))+(((-1.0)*x16713*x16719))+((r11*x16715)));
evalcond[4]=((0.0001)+(((0.02626)*x16718))+(((-0.02626)*x16716))+(((-0.0718)*x16727))+(((-0.02626)*x16726))+pz+(((-0.09746)*sj3)));
evalcond[5]=(((r01*sj5*x16713))+((x16707*x16711))+((cj0*cj5*r02))+((x16715*x16721))+(((-1.0)*cj3*x16729))+((sj0*x16710))+((x16709*x16712)));
evalcond[6]=(((cj0*x16710))+(((-1.0)*x16709*x16721))+(((-1.0)*x16705))+((x16712*x16715))+(((-1.0)*sj5*x16707*x16720))+((x16711*x16713))+(((-1.0)*r02*sj0*x16717)));
evalcond[7]=((0.1246)+(((0.0718)*x16705))+((x16707*x16724))+(((-0.02626)*x16706))+((x16715*x16725))+(((-1.0)*x16708*x16713))+(((-1.0)*x16709*x16714))+((px*sj0))+(((-1.0)*cj0*x16722)));
evalcond[8]=((0.1148)+(((0.0718)*cj3*x16706))+(((-1.0)*sj0*x16722))+(((0.02626)*x16728))+((x16709*x16725))+((x16714*x16715))+(((0.09746)*cj3))+(((-1.0)*x16707*x16708))+(((-1.0)*cj0*px))+(((-1.0)*x16713*x16724)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16730=(cj5*cj6);
IkReal x16731=(r11*sj0);
IkReal x16732=(cj6*sj5);
IkReal x16733=((1.0)*cj0);
IkReal x16734=(r10*sj6);
IkReal x16735=(sj0*sj5);
IkReal x16736=(r00*sj6);
IkReal x16737=(cj0*sj5);
IkReal x16738=((0.02626)*cj0);
IkReal x16739=(r01*sj6);
IkReal x16740=((1.0)*sj0);
IkReal x16741=(cj6*r10);
IkReal x16742=(cj5*sj0);
IkReal x16743=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959))))));
evalcond[1]=(((cj5*r20*sj6))+((r21*x16730))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x16739))+(((-1.0)*x16740*x16741))+((sj6*x16731))+(((-1.0)*x16733*x16743)));
evalcond[3]=((1.0)+(((-1.0)*x16730*x16731))+(((-1.0)*cj5*x16734*x16740))+((r12*x16735))+((r02*x16737))+(((-1.0)*cj5*x16733*x16736))+(((-1.0)*r01*x16730*x16733)));
evalcond[4]=(((cj0*cj5*r02))+((x16731*x16732))+((cj0*r01*x16732))+((x16734*x16735))+((x16736*x16737))+((r12*x16742)));
evalcond[5]=(((x16736*x16742))+((r12*x16737))+(((-1.0)*r11*x16730*x16733))+(((-1.0)*cj5*x16733*x16734))+((r01*sj0*x16730))+(((-1.0)*r02*x16735)));
evalcond[6]=((0.1148)+((x16738*x16739))+(((0.02626)*sj6*x16731))+(((-1.0)*px*x16733))+(((-0.02626)*sj0*x16741))+(((-1.0)*x16738*x16743))+(((-1.0)*py*x16740)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16744=(cj6*r21);
IkReal x16745=(r20*sj6);
IkReal x16746=(r21*sj6);
IkReal x16747=(cj1*sj5);
IkReal x16748=(cj5*r22);
IkReal x16749=((1.0)*sj1*sj5);
IkReal x16750=((1.0)*cj6*r20);
if( IKabs(((((-1.0)*sj1*x16750))+((cj1*x16748))+((x16744*x16747))+((sj1*x16746))+((x16745*x16747)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x16746))+(((-1.0)*sj1*x16748))+(((-1.0)*cj1*x16750))+(((-1.0)*x16744*x16749))+(((-1.0)*x16745*x16749)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x16750))+((cj1*x16748))+((x16744*x16747))+((sj1*x16746))+((x16745*x16747))))+IKsqr((((cj1*x16746))+(((-1.0)*sj1*x16748))+(((-1.0)*cj1*x16750))+(((-1.0)*x16744*x16749))+(((-1.0)*x16745*x16749))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*sj1*x16750))+((cj1*x16748))+((x16744*x16747))+((sj1*x16746))+((x16745*x16747))), (((cj1*x16746))+(((-1.0)*sj1*x16748))+(((-1.0)*cj1*x16750))+(((-1.0)*x16744*x16749))+(((-1.0)*x16745*x16749))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16751=IKsin(j4);
IkReal x16752=IKcos(j4);
IkReal x16753=((0.02626)*sj6);
IkReal x16754=(r01*sj0);
IkReal x16755=(cj0*r11);
IkReal x16756=((0.02626)*cj6);
IkReal x16757=(cj0*r10);
IkReal x16758=((1.0)*cj5);
IkReal x16759=((1.0)*sj6);
IkReal x16760=(r00*sj0);
IkReal x16761=((1.0)*cj6);
IkReal x16762=(cj1*x16752);
IkReal x16763=(sj1*x16751);
IkReal x16764=(sj1*x16752);
IkReal x16765=(cj1*x16751);
IkReal x16766=(x16763+x16762);
evalcond[0]=((((-1.0)*r21*x16759))+x16766+((cj6*r20)));
evalcond[1]=(x16765+(((-1.0)*r22*x16758))+(((-1.0)*x16764))+(((-1.0)*r21*sj5*x16761))+(((-1.0)*r20*sj5*x16759)));
evalcond[2]=(x16764+((cj6*x16760))+(((-1.0)*x16754*x16759))+(((-1.0)*x16765))+(((-1.0)*x16757*x16761))+((sj6*x16755)));
evalcond[3]=((((-1.0)*r21*x16753))+(((0.09736)*sj1))+(((0.0718)*x16764))+pz+((r20*x16756))+(((-0.1246)*cj1))+(((-0.0718)*x16765))+(((0.02626)*x16763))+(((0.02626)*x16762)));
evalcond[4]=((((-1.0)*r02*sj0*x16758))+x16766+(((-1.0)*sj5*x16759*x16760))+((cj0*cj5*r12))+((cj6*sj5*x16755))+((sj5*sj6*x16757))+(((-1.0)*sj5*x16754*x16761)));
evalcond[5]=((((-0.02626)*x16765))+(((-0.1246)*sj1))+(((-0.09736)*cj1))+(((-1.0)*x16753*x16754))+((x16756*x16760))+((px*sj0))+(((-0.0718)*x16763))+(((-0.0718)*x16762))+(((-1.0)*x16756*x16757))+(((0.02626)*x16764))+((x16753*x16755))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16767=(cj5*cj6);
IkReal x16768=(r11*sj0);
IkReal x16769=(cj6*sj5);
IkReal x16770=((1.0)*cj0);
IkReal x16771=(r10*sj6);
IkReal x16772=(sj0*sj5);
IkReal x16773=(r00*sj6);
IkReal x16774=(cj0*sj5);
IkReal x16775=((0.02626)*cj0);
IkReal x16776=(r01*sj6);
IkReal x16777=((1.0)*sj0);
IkReal x16778=(cj6*r10);
IkReal x16779=(cj5*sj0);
IkReal x16780=(cj6*r00);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j2), 6.28318530717959))))));
evalcond[1]=(((r21*x16767))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x16776))+((sj6*x16768))+(((-1.0)*x16770*x16780))+(((-1.0)*x16777*x16778)));
evalcond[3]=((-1.0)+((r02*x16774))+(((-1.0)*cj5*x16770*x16773))+(((-1.0)*x16767*x16768))+(((-1.0)*cj5*x16771*x16777))+(((-1.0)*r01*x16767*x16770))+((r12*x16772)));
evalcond[4]=(((cj0*cj5*r02))+((x16773*x16774))+((cj0*r01*x16769))+((x16771*x16772))+((r12*x16779))+((x16768*x16769)));
evalcond[5]=((((-1.0)*cj5*x16770*x16771))+((x16773*x16779))+((r01*sj0*x16767))+((r12*x16774))+(((-1.0)*r02*x16772))+(((-1.0)*r11*x16767*x16770)));
evalcond[6]=((0.1148)+((x16775*x16776))+(((-0.02626)*sj0*x16778))+(((0.02626)*sj6*x16768))+(((-1.0)*py*x16777))+(((-1.0)*x16775*x16780))+(((-1.0)*px*x16770)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16781=(cj5*r22);
IkReal x16782=(cj6*r20);
IkReal x16783=(r21*sj1);
IkReal x16784=(cj6*sj5);
IkReal x16785=(cj1*r21);
IkReal x16786=(r20*sj5*sj6);
if( IKabs((((sj1*x16782))+((cj1*x16786))+((cj1*x16781))+(((-1.0)*sj6*x16783))+((x16784*x16785)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x16781))+((sj1*x16786))+((x16783*x16784))+((sj6*x16785))+(((-1.0)*cj1*x16782)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x16782))+((cj1*x16786))+((cj1*x16781))+(((-1.0)*sj6*x16783))+((x16784*x16785))))+IKsqr((((sj1*x16781))+((sj1*x16786))+((x16783*x16784))+((sj6*x16785))+(((-1.0)*cj1*x16782))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((sj1*x16782))+((cj1*x16786))+((cj1*x16781))+(((-1.0)*sj6*x16783))+((x16784*x16785))), (((sj1*x16781))+((sj1*x16786))+((x16783*x16784))+((sj6*x16785))+(((-1.0)*cj1*x16782))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16787=IKcos(j4);
IkReal x16788=IKsin(j4);
IkReal x16789=((0.02626)*sj6);
IkReal x16790=(r01*sj0);
IkReal x16791=(cj0*sj6);
IkReal x16792=((0.02626)*cj6);
IkReal x16793=(cj0*r10);
IkReal x16794=((1.0)*cj5);
IkReal x16795=((1.0)*sj6);
IkReal x16796=(r00*sj0);
IkReal x16797=((1.0)*cj6);
IkReal x16798=(cj0*r11);
IkReal x16799=(sj1*x16787);
IkReal x16800=(cj1*x16788);
IkReal x16801=(cj1*x16787);
IkReal x16802=(sj1*x16788);
IkReal x16803=(x16799+x16800);
evalcond[0]=(x16801+(((-1.0)*x16802))+((cj6*r20))+(((-1.0)*r21*x16795)));
evalcond[1]=(x16803+(((-1.0)*r22*x16794))+(((-1.0)*r21*sj5*x16797))+(((-1.0)*r20*sj5*x16795)));
evalcond[2]=(x16803+(((-1.0)*x16793*x16797))+((r11*x16791))+((cj6*x16796))+(((-1.0)*x16790*x16795)));
evalcond[3]=((((-0.0718)*x16799))+(((-0.02626)*x16802))+(((0.02626)*x16801))+(((-0.0718)*x16800))+(((-0.09756)*sj1))+(((-1.0)*r21*x16789))+pz+((r20*x16792))+(((-0.1246)*cj1)));
evalcond[4]=((((-1.0)*r02*sj0*x16794))+x16802+(((-1.0)*x16801))+((cj0*cj5*r12))+(((-1.0)*sj5*x16795*x16796))+((r10*sj5*x16791))+((cj6*sj5*x16798))+(((-1.0)*sj5*x16790*x16797)));
evalcond[5]=((((-0.1246)*sj1))+(((-1.0)*x16789*x16790))+(((0.02626)*x16800))+(((-0.0718)*x16802))+(((0.09756)*cj1))+((x16792*x16796))+((x16789*x16798))+((px*sj0))+(((0.0718)*x16801))+(((0.02626)*x16799))+(((-1.0)*cj0*py))+(((-1.0)*x16792*x16793)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16804=(cj0*sj5);
IkReal x16805=(cj5*cj6);
IkReal x16806=((1.0)*sj5);
IkReal x16807=((1.0)*cj0);
IkReal x16808=((1.0)*sj0);
IkReal x16809=(cj5*sj6);
IkReal x16810=(r10*x16809);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x16806))+((r20*x16809))+((r21*x16805))+(((-1.0)*cj2)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r01*x16805*x16807))+(((-1.0)*r00*x16807*x16809))+(((-1.0)*r11*x16805*x16808))+((r12*sj0*sj5))+(((-1.0)*x16808*x16810))+((r02*x16804)));
evalcond[3]=(((r12*x16804))+(((-1.0)*r11*x16805*x16807))+(((-1.0)*r02*sj0*x16806))+(((-1.0)*x16807*x16810))+((r00*sj0*x16809))+((r01*sj0*x16805)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
IkReal x16811=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*sj6*x16811))+((cj6*r20)))))+(IKabs(((((-1.0)*cj6*sj5*x16811))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=0;
sj1=0;
cj1=1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x16812=(cj5*cj6);
IkReal x16813=((1.0)*sj0);
IkReal x16814=(r21*sj6);
IkReal x16815=(cj0*sj5);
IkReal x16816=((1.0)*r22);
IkReal x16817=(cj6*r20);
IkReal x16818=(cj5*sj6);
IkReal x16819=((1.0)*cj0);
IkReal x16820=((1.0)*sj5);
IkReal x16821=(x16818*x16819);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((-1.0)+((r20*x16818))+((r21*x16812))+(((-1.0)*sj5*x16816)));
evalcond[2]=(x16817+(((-1.0)*x16814)));
evalcond[3]=((((-1.0)*r20*sj6*x16820))+(((-1.0)*cj5*x16816))+(((-1.0)*cj6*r21*x16820)));
evalcond[4]=((((-1.0)*r00*x16821))+((r12*sj0*sj5))+((r02*x16815))+(((-1.0)*r10*x16813*x16818))+(((-1.0)*r11*x16812*x16813))+(((-1.0)*r01*x16812*x16819)));
evalcond[5]=(((r01*sj0*x16812))+((r00*sj0*x16818))+(((-1.0)*r10*x16821))+((r12*x16815))+(((-1.0)*r11*x16812*x16819))+(((-1.0)*r02*sj5*x16813)));
evalcond[6]=((-0.2413)+pz+(((-0.02626)*x16814))+(((0.02626)*x16817)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16822=(cj0*cj6);
IkReal x16823=(cj6*sj0);
IkReal x16824=(cj0*sj6);
IkReal x16825=((1.0)*sj0*sj6);
if( IKabs(((((-1.0)*r01*x16825))+((r11*x16824))+((r00*x16823))+(((-1.0)*r10*x16822)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x16823))+(((-1.0)*r11*x16825))+((r00*x16822))+(((-1.0)*r01*x16824)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x16825))+((r11*x16824))+((r00*x16823))+(((-1.0)*r10*x16822))))+IKsqr((((r10*x16823))+(((-1.0)*r11*x16825))+((r00*x16822))+(((-1.0)*r01*x16824))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*x16825))+((r11*x16824))+((r00*x16823))+(((-1.0)*r10*x16822))), (((r10*x16823))+(((-1.0)*r11*x16825))+((r00*x16822))+(((-1.0)*r01*x16824))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16826=IKsin(j4);
IkReal x16827=IKcos(j4);
IkReal x16828=(cj6*sj0);
IkReal x16829=((0.02626)*r10);
IkReal x16830=(r11*sj6);
IkReal x16831=(r11*sj5);
IkReal x16832=(sj0*sj6);
IkReal x16833=(r10*sj5);
IkReal x16834=((0.02626)*r01);
IkReal x16835=(cj5*r12);
IkReal x16836=(cj0*cj6);
IkReal x16837=((1.0)*sj0);
IkReal x16838=(cj5*r02);
IkReal x16839=(cj0*sj6);
IkReal x16840=((1.0)*r10);
IkReal x16841=((1.0)*r01);
IkReal x16842=(r00*sj5);
IkReal x16843=((1.0)*cj0);
IkReal x16844=((0.02626)*r00);
evalcond[0]=((((-1.0)*x16828*x16840))+x16827+((sj0*x16830))+((r01*x16839))+(((-1.0)*r00*x16836)));
evalcond[1]=(((cj0*x16830))+(((-1.0)*x16832*x16841))+(((-1.0)*x16826))+((r00*x16828))+(((-1.0)*x16836*x16840)));
evalcond[2]=(x16826+((cj0*x16838))+((x16832*x16833))+((x16828*x16831))+((x16839*x16842))+((sj0*x16835))+((r01*sj5*x16836)));
evalcond[3]=(x16827+((cj0*x16835))+(((-1.0)*x16832*x16842))+(((-1.0)*sj5*x16828*x16841))+(((-1.0)*x16837*x16838))+((x16831*x16836))+((x16833*x16839)));
evalcond[4]=((-0.09736)+(((0.02626)*cj0*x16830))+(((-0.02626)*x16826))+(((-0.0718)*x16827))+((x16828*x16844))+((px*sj0))+(((-1.0)*py*x16843))+(((-1.0)*x16832*x16834))+(((-1.0)*x16829*x16836)));
evalcond[5]=((-0.0001)+(((-1.0)*py*x16837))+(((0.02626)*x16827))+(((-1.0)*px*x16843))+(((-0.0718)*x16826))+(((-1.0)*x16828*x16829))+(((-1.0)*x16836*x16844))+((x16834*x16839))+(((0.02626)*sj0*x16830)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16845=(cj5*cj6);
IkReal x16846=(r11*sj0);
IkReal x16847=(cj6*sj5);
IkReal x16848=((1.0)*cj0);
IkReal x16849=(r10*sj6);
IkReal x16850=(sj0*sj5);
IkReal x16851=(r00*sj6);
IkReal x16852=(cj0*sj5);
IkReal x16853=((0.02626)*cj0);
IkReal x16854=(r01*sj6);
IkReal x16855=((1.0)*sj0);
IkReal x16856=(cj6*r10);
IkReal x16857=(cj5*sj0);
IkReal x16858=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x16845)));
evalcond[2]=(((sj6*x16846))+((cj0*x16854))+(((-1.0)*x16855*x16856))+(((-1.0)*x16848*x16858)));
evalcond[3]=((-1.0)+(((-1.0)*x16845*x16846))+((r12*x16850))+(((-1.0)*r01*x16845*x16848))+(((-1.0)*cj5*x16848*x16851))+((r02*x16852))+(((-1.0)*cj5*x16849*x16855)));
evalcond[4]=(((cj0*cj5*r02))+((r12*x16857))+((cj0*r01*x16847))+((x16849*x16850))+((x16846*x16847))+((x16851*x16852)));
evalcond[5]=((((-1.0)*cj5*x16848*x16849))+(((-1.0)*r02*x16850))+((r12*x16852))+(((-1.0)*r11*x16845*x16848))+((x16851*x16857))+((r01*sj0*x16845)));
evalcond[6]=((-0.1168)+((x16853*x16854))+(((-1.0)*px*x16848))+(((-0.02626)*sj0*x16856))+(((-1.0)*py*x16855))+(((-1.0)*x16853*x16858))+(((0.02626)*sj6*x16846)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16859=IKsin(j4);
IkReal x16860=IKcos(j4);
IkReal x16861=(cj0*sj6);
IkReal x16862=((0.02626)*sj6);
IkReal x16863=(r01*sj0);
IkReal x16864=((0.02626)*cj6);
IkReal x16865=(cj0*r10);
IkReal x16866=((1.0)*cj5);
IkReal x16867=((1.0)*cj6);
IkReal x16868=((1.0)*sj6);
IkReal x16869=(r00*sj0);
IkReal x16870=((1.0)*x16859);
evalcond[0]=((((-1.0)*x16860))+((cj6*r20))+(((-1.0)*r21*x16868)));
evalcond[1]=((((-1.0)*r21*sj5*x16867))+(((-1.0)*r22*x16866))+(((-1.0)*r20*sj5*x16868))+(((-1.0)*x16870)));
evalcond[2]=((-0.1264)+((r20*x16864))+pz+(((-1.0)*r21*x16862))+(((-0.02626)*x16860))+(((0.0718)*x16859)));
evalcond[3]=((((-1.0)*x16865*x16867))+(((-1.0)*x16870))+((cj6*x16869))+((r11*x16861))+(((-1.0)*x16863*x16868)));
evalcond[4]=(x16860+((r10*sj5*x16861))+((cj0*cj5*r12))+(((-1.0)*sj5*x16863*x16867))+(((-1.0)*sj5*x16868*x16869))+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x16866)));
evalcond[5]=((-0.09736)+(((-0.02626)*x16859))+((x16864*x16869))+(((0.02626)*r11*x16861))+(((-1.0)*x16862*x16863))+((px*sj0))+(((-1.0)*x16864*x16865))+(((-0.0718)*x16860))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16871=(cj5*cj6);
IkReal x16872=(r11*sj0);
IkReal x16873=(cj6*sj5);
IkReal x16874=((1.0)*cj0);
IkReal x16875=(r10*sj6);
IkReal x16876=(sj0*sj5);
IkReal x16877=(r00*sj6);
IkReal x16878=(cj0*sj5);
IkReal x16879=((0.02626)*cj0);
IkReal x16880=(r01*sj6);
IkReal x16881=((1.0)*sj0);
IkReal x16882=(cj6*r10);
IkReal x16883=(cj5*sj0);
IkReal x16884=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x16871)));
evalcond[2]=((((-1.0)*x16881*x16882))+(((-1.0)*x16874*x16884))+((sj6*x16872))+((cj0*x16880)));
evalcond[3]=((1.0)+((r02*x16878))+(((-1.0)*r01*x16871*x16874))+(((-1.0)*cj5*x16874*x16877))+(((-1.0)*cj5*x16875*x16881))+(((-1.0)*x16871*x16872))+((r12*x16876)));
evalcond[4]=(((cj0*cj5*r02))+((x16875*x16876))+((x16872*x16873))+((cj0*r01*x16873))+((x16877*x16878))+((r12*x16883)));
evalcond[5]=(((x16877*x16883))+(((-1.0)*r02*x16876))+(((-1.0)*cj5*x16874*x16875))+((r01*sj0*x16871))+(((-1.0)*r11*x16871*x16874))+((r12*x16878)));
evalcond[6]=((0.1148)+(((-1.0)*px*x16874))+(((-1.0)*x16879*x16884))+(((-1.0)*py*x16881))+(((-0.02626)*sj0*x16882))+((x16879*x16880))+(((0.02626)*sj6*x16872)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x16885=IKcos(j4);
IkReal x16886=IKsin(j4);
IkReal x16887=(cj0*sj6);
IkReal x16888=((0.02626)*sj6);
IkReal x16889=(r01*sj0);
IkReal x16890=((0.02626)*cj6);
IkReal x16891=(cj0*r10);
IkReal x16892=((1.0)*cj5);
IkReal x16893=((1.0)*cj6);
IkReal x16894=((1.0)*sj6);
IkReal x16895=(r00*sj0);
evalcond[0]=(x16885+(((-1.0)*r21*x16894))+((cj6*r20)));
evalcond[1]=(x16886+(((-1.0)*r20*sj5*x16894))+(((-1.0)*r21*sj5*x16893))+(((-1.0)*r22*x16892)));
evalcond[2]=((-0.1246)+pz+(((-0.0718)*x16886))+(((0.02626)*x16885))+((r20*x16890))+(((-1.0)*r21*x16888)));
evalcond[3]=((((-1.0)*x16891*x16893))+((cj6*x16895))+((r11*x16887))+(((-1.0)*x16889*x16894))+(((-1.0)*x16886)));
evalcond[4]=(x16885+((r10*sj5*x16887))+((cj0*cj5*r12))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x16889*x16893))+(((-1.0)*sj5*x16894*x16895))+(((-1.0)*r02*sj0*x16892)));
evalcond[5]=((-0.09736)+(((-1.0)*x16888*x16889))+(((0.02626)*r11*x16887))+(((-1.0)*x16890*x16891))+((x16890*x16895))+(((-0.0718)*x16885))+((px*sj0))+(((-0.02626)*x16886))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16896=((1.0)*sj5);
IkReal x16897=((1.0)*sj6);
CheckValue<IkReal> x16898=IKPowWithIntegerCheck(sj2,-1);
if(!x16898.valid){
continue;
}
CheckValue<IkReal> x16899=IKPowWithIntegerCheck(cj2,-1);
if(!x16899.valid){
continue;
}
if( IKabs(((x16898.value)*(((((-1.0)*r20*sj6*x16896))+(((-1.0)*cj6*r21*x16896))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x16899.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x16897))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x16897)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x16898.value)*(((((-1.0)*r20*sj6*x16896))+(((-1.0)*cj6*r21*x16896))+(((-1.0)*cj5*r22))))))+IKsqr(((x16899.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x16897))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x16897))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x16898.value)*(((((-1.0)*r20*sj6*x16896))+(((-1.0)*cj6*r21*x16896))+(((-1.0)*cj5*r22))))), ((x16899.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x16897))+((cj0*cj6*r00))+(((-1.0)*r11*sj0*x16897))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16900=IKcos(j4);
IkReal x16901=IKsin(j4);
IkReal x16902=(sj0*sj6);
IkReal x16903=((0.02626)*r01);
IkReal x16904=(cj5*r12);
IkReal x16905=(cj6*sj0);
IkReal x16906=(r11*sj5);
IkReal x16907=(r10*sj5);
IkReal x16908=(cj0*sj6);
IkReal x16909=((1.0)*cj5);
IkReal x16910=((0.02626)*cj6);
IkReal x16911=(r21*sj6);
IkReal x16912=((1.0)*r01);
IkReal x16913=(r00*sj5);
IkReal x16914=((1.0)*py);
IkReal x16915=((1.0)*sj5);
IkReal x16916=((1.0)*cj0);
IkReal x16917=((0.02626)*r11);
IkReal x16918=(cj0*cj6);
IkReal x16919=(r10*x16918);
IkReal x16920=(cj2*x16901);
IkReal x16921=(cj2*x16900);
IkReal x16922=((1.0)*x16901);
IkReal x16923=(sj2*x16900);
evalcond[0]=((((-1.0)*x16923))+(((-1.0)*x16911))+((cj6*r20)));
evalcond[1]=((((-1.0)*r22*x16909))+(((-1.0)*sj2*x16922))+(((-1.0)*r20*sj6*x16915))+(((-1.0)*cj6*r21*x16915)));
evalcond[2]=((((-1.0)*cj6*r00*x16916))+((r11*x16902))+((r01*x16908))+(((-1.0)*r10*x16905))+x16921);
evalcond[3]=(((r11*x16908))+(((-1.0)*cj6*r10*x16916))+((r00*x16905))+(((-1.0)*x16902*x16912))+(((-1.0)*x16922)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((-0.02626)*x16923))+(((-0.0009)*sj2))+pz+(((-0.02626)*x16911))+((r20*x16910))+(((0.0718)*sj2*x16901)));
evalcond[5]=(((r01*sj5*x16918))+((x16905*x16906))+((cj0*cj5*r02))+((x16902*x16907))+((sj0*x16904))+((x16908*x16913))+x16920);
evalcond[6]=((((-1.0)*x16902*x16913))+(((-1.0)*r02*sj0*x16909))+((x16907*x16908))+((cj0*x16904))+(((-1.0)*sj5*x16905*x16912))+x16900+((x16906*x16918)));
evalcond[7]=((-0.09736)+(((-1.0)*x16902*x16903))+(((-0.0718)*x16900))+((x16908*x16917))+(((-0.02626)*x16901))+(((-1.0)*cj0*x16914))+(((-1.0)*cj0*r10*x16910))+((px*sj0))+(((0.02626)*r00*x16905)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-0.02626)*r10*x16905))+((x16902*x16917))+(((-0.0718)*x16920))+(((0.02626)*x16921))+(((-1.0)*cj0*r00*x16910))+(((0.0009)*cj2))+((x16903*x16908))+(((-1.0)*px*x16916))+(((-1.0)*sj0*x16914)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16924=((1.0)*sj6);
CheckValue<IkReal> x16925=IKPowWithIntegerCheck(sj2,-1);
if(!x16925.valid){
continue;
}
if( IKabs(((((-1.0)*r01*sj0*x16924))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x16925.value)*(((((-1.0)*r21*x16924))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*sj0*x16924))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))))+IKsqr(((x16925.value)*(((((-1.0)*r21*x16924))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*r01*sj0*x16924))+((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*cj0*cj6*r10))), ((x16925.value)*(((((-1.0)*r21*x16924))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16926=IKcos(j4);
IkReal x16927=IKsin(j4);
IkReal x16928=(sj0*sj6);
IkReal x16929=((0.02626)*r01);
IkReal x16930=(cj5*r12);
IkReal x16931=(cj6*sj0);
IkReal x16932=(r11*sj5);
IkReal x16933=(r10*sj5);
IkReal x16934=(cj0*sj6);
IkReal x16935=((1.0)*cj5);
IkReal x16936=((0.02626)*cj6);
IkReal x16937=(r21*sj6);
IkReal x16938=((1.0)*r01);
IkReal x16939=(r00*sj5);
IkReal x16940=((1.0)*py);
IkReal x16941=((1.0)*sj5);
IkReal x16942=((1.0)*cj0);
IkReal x16943=((0.02626)*r11);
IkReal x16944=(cj0*cj6);
IkReal x16945=(r10*x16944);
IkReal x16946=(cj2*x16927);
IkReal x16947=(cj2*x16926);
IkReal x16948=((1.0)*x16927);
IkReal x16949=(sj2*x16926);
evalcond[0]=((((-1.0)*x16937))+((cj6*r20))+(((-1.0)*x16949)));
evalcond[1]=((((-1.0)*r20*sj6*x16941))+(((-1.0)*r22*x16935))+(((-1.0)*cj6*r21*x16941))+(((-1.0)*sj2*x16948)));
evalcond[2]=((((-1.0)*r10*x16931))+((r11*x16928))+((r01*x16934))+(((-1.0)*cj6*r00*x16942))+x16947);
evalcond[3]=((((-1.0)*cj6*r10*x16942))+((r11*x16934))+(((-1.0)*x16948))+((r00*x16931))+(((-1.0)*x16928*x16938)));
evalcond[4]=((-0.1255)+(((-0.02626)*x16949))+(((-0.1158)*cj2))+(((-0.02626)*x16937))+(((-0.0009)*sj2))+pz+(((0.0718)*sj2*x16927))+((r20*x16936)));
evalcond[5]=(((cj0*cj5*r02))+((sj0*x16930))+((x16934*x16939))+((r01*sj5*x16944))+((x16928*x16933))+((x16931*x16932))+x16946);
evalcond[6]=((((-1.0)*x16928*x16939))+(((-1.0)*r02*sj0*x16935))+((x16933*x16934))+(((-1.0)*sj5*x16931*x16938))+((cj0*x16930))+((x16932*x16944))+x16926);
evalcond[7]=((-0.09736)+(((-1.0)*cj0*x16940))+(((-1.0)*cj0*r10*x16936))+(((-0.0718)*x16926))+(((-0.02626)*x16927))+(((-1.0)*x16928*x16929))+((px*sj0))+(((0.02626)*r00*x16931))+((x16934*x16943)));
evalcond[8]=((-0.001)+(((-1.0)*cj0*r00*x16936))+(((-0.1158)*sj2))+(((-0.02626)*r10*x16931))+(((0.0009)*cj2))+(((-1.0)*px*x16942))+(((-1.0)*sj0*x16940))+((x16929*x16934))+((x16928*x16943))+(((0.02626)*x16947))+(((-0.0718)*x16946)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16950=((1.0)*r21);
CheckValue<IkReal> x16951 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x16950))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),((((-1.0)*sj6*x16950))+((cj6*r20))),IKFAST_ATAN2_MAGTHRESH);
if(!x16951.valid){
continue;
}
CheckValue<IkReal> x16952=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x16952.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x16951.value)+(((1.5707963267949)*(x16952.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x16953=IKcos(j4);
IkReal x16954=IKsin(j4);
IkReal x16955=(sj0*sj6);
IkReal x16956=((0.02626)*r01);
IkReal x16957=(cj5*r12);
IkReal x16958=(cj6*sj0);
IkReal x16959=(r11*sj5);
IkReal x16960=(r10*sj5);
IkReal x16961=(cj0*sj6);
IkReal x16962=((1.0)*cj5);
IkReal x16963=((0.02626)*cj6);
IkReal x16964=(r21*sj6);
IkReal x16965=((1.0)*r01);
IkReal x16966=(r00*sj5);
IkReal x16967=((1.0)*py);
IkReal x16968=((1.0)*sj5);
IkReal x16969=((1.0)*cj0);
IkReal x16970=((0.02626)*r11);
IkReal x16971=(cj0*cj6);
IkReal x16972=(r10*x16971);
IkReal x16973=(cj2*x16954);
IkReal x16974=(cj2*x16953);
IkReal x16975=((1.0)*x16954);
IkReal x16976=(sj2*x16953);
evalcond[0]=((((-1.0)*x16964))+((cj6*r20))+(((-1.0)*x16976)));
evalcond[1]=((((-1.0)*r20*sj6*x16968))+(((-1.0)*r22*x16962))+(((-1.0)*cj6*r21*x16968))+(((-1.0)*sj2*x16975)));
evalcond[2]=((((-1.0)*r10*x16958))+((r01*x16961))+((r11*x16955))+(((-1.0)*cj6*r00*x16969))+x16974);
evalcond[3]=(((r11*x16961))+((r00*x16958))+(((-1.0)*cj6*r10*x16969))+(((-1.0)*x16975))+(((-1.0)*x16955*x16965)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+((r20*x16963))+(((-0.0009)*sj2))+(((0.0718)*sj2*x16954))+pz+(((-0.02626)*x16976))+(((-0.02626)*x16964)));
evalcond[5]=(((cj0*cj5*r02))+((sj0*x16957))+((x16961*x16966))+((r01*sj5*x16971))+((x16958*x16959))+((x16955*x16960))+x16973);
evalcond[6]=((((-1.0)*sj5*x16958*x16965))+((cj0*x16957))+((x16959*x16971))+(((-1.0)*r02*sj0*x16962))+(((-1.0)*x16955*x16966))+((x16960*x16961))+x16953);
evalcond[7]=((-0.09736)+(((-0.0718)*x16953))+(((-1.0)*x16955*x16956))+(((0.02626)*r00*x16958))+((x16961*x16970))+((px*sj0))+(((-0.02626)*x16954))+(((-1.0)*cj0*x16967))+(((-1.0)*cj0*r10*x16963)));
evalcond[8]=((-0.001)+(((-0.02626)*r10*x16958))+((x16955*x16970))+(((-0.0718)*x16973))+(((-0.1158)*sj2))+(((-1.0)*cj0*r00*x16963))+(((-1.0)*sj0*x16967))+(((0.0009)*cj2))+(((-1.0)*px*x16969))+((x16956*x16961))+(((0.02626)*x16974)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x16977=(cj0*sj5);
IkReal x16978=(cj5*cj6);
IkReal x16979=((1.0)*sj5);
IkReal x16980=((1.0)*cj0);
IkReal x16981=((1.0)*sj0);
IkReal x16982=(cj5*sj6);
IkReal x16983=(r10*x16982);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x16979))+cj2+((r21*x16978))+((r20*x16982)));
evalcond[2]=((((-1.0)*r00*x16980*x16982))+sj2+((r02*x16977))+(((-1.0)*x16981*x16983))+((r12*sj0*sj5))+(((-1.0)*r01*x16978*x16980))+(((-1.0)*r11*x16978*x16981)));
evalcond[3]=((((-1.0)*r02*sj0*x16979))+(((-1.0)*x16980*x16983))+(((-1.0)*r11*x16978*x16980))+((r00*sj0*x16982))+((r01*sj0*x16978))+((r12*x16977)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
IkReal x16984=((1.0)*r21);
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*sj5*x16984))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))))+(IKabs(((((-1.0)*sj6*x16984))+((cj6*r20))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=0;
sj1=0;
cj1=1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x16985=(cj5*cj6);
IkReal x16986=((1.0)*sj0);
IkReal x16987=(r21*sj6);
IkReal x16988=(cj0*sj5);
IkReal x16989=((1.0)*r22);
IkReal x16990=(cj6*r20);
IkReal x16991=(cj5*sj6);
IkReal x16992=((1.0)*cj0);
IkReal x16993=((1.0)*sj5);
IkReal x16994=(x16991*x16992);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((1.0)+((r21*x16985))+(((-1.0)*sj5*x16989))+((r20*x16991)));
evalcond[2]=((((-1.0)*x16987))+x16990);
evalcond[3]=((((-1.0)*cj5*x16989))+(((-1.0)*r20*sj6*x16993))+(((-1.0)*cj6*r21*x16993)));
evalcond[4]=(((r02*x16988))+(((-1.0)*r10*x16986*x16991))+(((-1.0)*r00*x16994))+((r12*sj0*sj5))+(((-1.0)*r01*x16985*x16992))+(((-1.0)*r11*x16985*x16986)));
evalcond[5]=(((r00*sj0*x16991))+((r01*sj0*x16985))+((r12*x16988))+(((-1.0)*r10*x16994))+(((-1.0)*r11*x16985*x16992))+(((-1.0)*r02*sj5*x16986)));
evalcond[6]=((-0.2413)+(((-0.02626)*x16987))+(((0.02626)*x16990))+pz);
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x16995=(cj0*cj6);
IkReal x16996=(sj0*sj6);
IkReal x16997=((1.0)*r11);
IkReal x16998=(cj6*sj0);
IkReal x16999=(cj0*sj6);
if( IKabs((((r10*x16995))+(((-1.0)*x16997*x16999))+((r01*x16996))+(((-1.0)*r00*x16998)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x16998))+(((-1.0)*x16996*x16997))+((r00*x16995))+(((-1.0)*r01*x16999)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x16995))+(((-1.0)*x16997*x16999))+((r01*x16996))+(((-1.0)*r00*x16998))))+IKsqr((((r10*x16998))+(((-1.0)*x16996*x16997))+((r00*x16995))+(((-1.0)*r01*x16999))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r10*x16995))+(((-1.0)*x16997*x16999))+((r01*x16996))+(((-1.0)*r00*x16998))), (((r10*x16998))+(((-1.0)*x16996*x16997))+((r00*x16995))+(((-1.0)*r01*x16999))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17000=IKsin(j4);
IkReal x17001=IKcos(j4);
IkReal x17002=(cj6*sj0);
IkReal x17003=((0.02626)*r10);
IkReal x17004=(r11*sj6);
IkReal x17005=(r11*sj5);
IkReal x17006=(sj0*sj6);
IkReal x17007=(r10*sj5);
IkReal x17008=(cj0*cj6);
IkReal x17009=((0.02626)*r01);
IkReal x17010=(cj5*r12);
IkReal x17011=((1.0)*sj0);
IkReal x17012=(cj5*r02);
IkReal x17013=(cj0*sj6);
IkReal x17014=((1.0)*r10);
IkReal x17015=((1.0)*r01);
IkReal x17016=(r00*sj5);
IkReal x17017=((1.0)*cj0);
IkReal x17018=((0.02626)*r00);
evalcond[0]=((((-1.0)*r00*x17008))+((sj0*x17004))+((r01*x17013))+x17001+(((-1.0)*x17002*x17014)));
evalcond[1]=((((-1.0)*x17006*x17015))+((r00*x17002))+(((-1.0)*x17008*x17014))+((cj0*x17004))+x17000);
evalcond[2]=(((x17013*x17016))+((sj0*x17010))+((x17006*x17007))+((x17002*x17005))+x17000+((cj0*x17012))+((r01*sj5*x17008)));
evalcond[3]=((((-1.0)*sj5*x17002*x17015))+((x17005*x17008))+(((-1.0)*x17001))+((x17007*x17013))+(((-1.0)*x17006*x17016))+((cj0*x17010))+(((-1.0)*x17011*x17012)));
evalcond[4]=((0.09756)+(((-1.0)*x17003*x17008))+(((0.02626)*x17000))+(((-1.0)*x17006*x17009))+(((0.0718)*x17001))+(((0.02626)*cj0*x17004))+((px*sj0))+((x17002*x17018))+(((-1.0)*py*x17017)));
evalcond[5]=((-0.0001)+(((-0.0718)*x17000))+((x17009*x17013))+(((-1.0)*px*x17017))+(((0.02626)*x17001))+(((-1.0)*x17008*x17018))+(((0.02626)*sj0*x17004))+(((-1.0)*py*x17011))+(((-1.0)*x17002*x17003)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17019=(cj5*cj6);
IkReal x17020=(r11*sj0);
IkReal x17021=(cj6*sj5);
IkReal x17022=((1.0)*cj0);
IkReal x17023=(r10*sj6);
IkReal x17024=(sj0*sj5);
IkReal x17025=(r00*sj6);
IkReal x17026=(cj0*sj5);
IkReal x17027=((0.02626)*cj0);
IkReal x17028=(r01*sj6);
IkReal x17029=((1.0)*sj0);
IkReal x17030=(cj6*r10);
IkReal x17031=(cj5*sj0);
IkReal x17032=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x17019))+(((-1.0)*r22*sj5)));
evalcond[2]=(((cj0*x17028))+(((-1.0)*x17029*x17030))+((sj6*x17020))+(((-1.0)*x17022*x17032)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x17023*x17029))+(((-1.0)*r01*x17019*x17022))+((r02*x17026))+(((-1.0)*cj5*x17022*x17025))+(((-1.0)*x17019*x17020))+((r12*x17024)));
evalcond[4]=(((x17025*x17026))+((cj0*cj5*r02))+((r12*x17031))+((x17020*x17021))+((x17023*x17024))+((cj0*r01*x17021)));
evalcond[5]=(((x17025*x17031))+(((-1.0)*r11*x17019*x17022))+(((-1.0)*r02*x17024))+((r01*sj0*x17019))+(((-1.0)*cj5*x17022*x17023))+((r12*x17026)));
evalcond[6]=((-0.1168)+(((-0.02626)*sj0*x17030))+(((-1.0)*px*x17022))+(((-1.0)*x17027*x17032))+(((0.02626)*sj6*x17020))+(((-1.0)*py*x17029))+((x17027*x17028)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17033=IKsin(j4);
IkReal x17034=IKcos(j4);
IkReal x17035=(cj0*sj6);
IkReal x17036=((0.02626)*cj6);
IkReal x17037=(cj0*r10);
IkReal x17038=((0.02626)*sj6);
IkReal x17039=(r01*sj0);
IkReal x17040=((1.0)*cj5);
IkReal x17041=((1.0)*cj6);
IkReal x17042=((1.0)*sj6);
IkReal x17043=(r00*sj0);
IkReal x17044=((1.0)*x17034);
evalcond[0]=((((-1.0)*x17044))+((cj6*r20))+(((-1.0)*r21*x17042)));
evalcond[1]=((((-1.0)*x17033))+(((-1.0)*r21*sj5*x17041))+(((-1.0)*r22*x17040))+(((-1.0)*r20*sj5*x17042)));
evalcond[2]=((-0.1264)+(((0.0718)*x17033))+((r20*x17036))+(((-0.02626)*x17034))+pz+(((-1.0)*r21*x17038)));
evalcond[3]=(((r11*x17035))+(((-1.0)*x17039*x17042))+x17033+((cj6*x17043))+(((-1.0)*x17037*x17041)));
evalcond[4]=((((-1.0)*x17044))+((cj0*cj5*r12))+((r10*sj5*x17035))+(((-1.0)*sj5*x17042*x17043))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x17039*x17041))+(((-1.0)*r02*sj0*x17040)));
evalcond[5]=((0.09756)+(((0.0718)*x17034))+(((0.02626)*r11*x17035))+((x17036*x17043))+((px*sj0))+(((-1.0)*x17038*x17039))+(((-1.0)*x17036*x17037))+(((0.02626)*x17033))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17045=(cj5*cj6);
IkReal x17046=(r11*sj0);
IkReal x17047=(cj6*sj5);
IkReal x17048=((1.0)*cj0);
IkReal x17049=(r10*sj6);
IkReal x17050=(sj0*sj5);
IkReal x17051=(r00*sj6);
IkReal x17052=(cj0*sj5);
IkReal x17053=((0.02626)*cj0);
IkReal x17054=(r01*sj6);
IkReal x17055=((1.0)*sj0);
IkReal x17056=(cj6*r10);
IkReal x17057=(cj5*sj0);
IkReal x17058=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+(((-1.0)*r22*sj5))+((r21*x17045)));
evalcond[2]=((((-1.0)*x17048*x17058))+((cj0*x17054))+((sj6*x17046))+(((-1.0)*x17055*x17056)));
evalcond[3]=((-1.0)+(((-1.0)*x17045*x17046))+(((-1.0)*r01*x17045*x17048))+(((-1.0)*cj5*x17048*x17051))+((r12*x17050))+(((-1.0)*cj5*x17049*x17055))+((r02*x17052)));
evalcond[4]=(((cj0*cj5*r02))+((cj0*r01*x17047))+((x17046*x17047))+((r12*x17057))+((x17051*x17052))+((x17049*x17050)));
evalcond[5]=((((-1.0)*r11*x17045*x17048))+((r12*x17052))+(((-1.0)*cj5*x17048*x17049))+((x17051*x17057))+(((-1.0)*r02*x17050))+((r01*sj0*x17045)));
evalcond[6]=((0.1148)+((x17053*x17054))+(((-1.0)*py*x17055))+(((-1.0)*x17053*x17058))+(((0.02626)*sj6*x17046))+(((-0.02626)*sj0*x17056))+(((-1.0)*px*x17048)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17059=IKcos(j4);
IkReal x17060=IKsin(j4);
IkReal x17061=(cj0*sj6);
IkReal x17062=((0.02626)*cj6);
IkReal x17063=(cj0*r10);
IkReal x17064=((0.02626)*sj6);
IkReal x17065=(r01*sj0);
IkReal x17066=((1.0)*cj5);
IkReal x17067=((1.0)*cj6);
IkReal x17068=((1.0)*sj6);
IkReal x17069=(r00*sj0);
evalcond[0]=(((cj6*r20))+x17059+(((-1.0)*r21*x17068)));
evalcond[1]=((((-1.0)*r21*sj5*x17067))+(((-1.0)*r22*x17066))+x17060+(((-1.0)*r20*sj5*x17068)));
evalcond[2]=((-0.1246)+((r20*x17062))+(((-0.0718)*x17060))+pz+(((-1.0)*r21*x17064))+(((0.02626)*x17059)));
evalcond[3]=((((-1.0)*x17063*x17067))+(((-1.0)*x17065*x17068))+x17060+((r11*x17061))+((cj6*x17069)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*sj5*x17068*x17069))+(((-1.0)*sj5*x17065*x17067))+(((-1.0)*x17059))+((r10*sj5*x17061))+((cj0*cj6*r11*sj5))+(((-1.0)*r02*sj0*x17066)));
evalcond[5]=((0.09756)+(((-1.0)*x17064*x17065))+((x17062*x17069))+(((-1.0)*x17062*x17063))+(((0.02626)*r11*x17061))+((px*sj0))+(((0.0718)*x17059))+(((-1.0)*cj0*py))+(((0.02626)*x17060)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17070=((1.0)*sj5);
IkReal x17071=((1.0)*sj6);
CheckValue<IkReal> x17072=IKPowWithIntegerCheck(sj2,-1);
if(!x17072.valid){
continue;
}
CheckValue<IkReal> x17073=IKPowWithIntegerCheck(cj2,-1);
if(!x17073.valid){
continue;
}
if( IKabs(((x17072.value)*(((((-1.0)*cj6*r21*x17070))+(((-1.0)*r20*sj6*x17070))+(((-1.0)*cj5*r22)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x17073.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x17071))+(((-1.0)*cj0*r01*x17071))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x17072.value)*(((((-1.0)*cj6*r21*x17070))+(((-1.0)*r20*sj6*x17070))+(((-1.0)*cj5*r22))))))+IKsqr(((x17073.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x17071))+(((-1.0)*cj0*r01*x17071))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x17072.value)*(((((-1.0)*cj6*r21*x17070))+(((-1.0)*r20*sj6*x17070))+(((-1.0)*cj5*r22))))), ((x17073.value)*((((cj6*r10*sj0))+(((-1.0)*r11*sj0*x17071))+(((-1.0)*cj0*r01*x17071))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17074=IKsin(j4);
IkReal x17075=IKcos(j4);
IkReal x17076=(sj0*sj6);
IkReal x17077=((0.02626)*r01);
IkReal x17078=(cj5*r12);
IkReal x17079=(cj6*sj0);
IkReal x17080=(r11*sj5);
IkReal x17081=(r10*sj5);
IkReal x17082=(cj0*sj6);
IkReal x17083=(r21*sj6);
IkReal x17084=((1.0)*cj5);
IkReal x17085=((0.02626)*cj6);
IkReal x17086=((1.0)*r01);
IkReal x17087=(r00*sj5);
IkReal x17088=((1.0)*py);
IkReal x17089=((1.0)*sj2);
IkReal x17090=((1.0)*sj5);
IkReal x17091=((1.0)*cj0);
IkReal x17092=((0.02626)*r11);
IkReal x17093=(cj0*cj6);
IkReal x17094=(r10*x17093);
IkReal x17095=(cj2*x17074);
IkReal x17096=(cj2*x17075);
evalcond[0]=((((-1.0)*x17075*x17089))+(((-1.0)*x17083))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj6*x17090))+(((-1.0)*r22*x17084))+(((-1.0)*x17074*x17089))+(((-1.0)*cj6*r21*x17090)));
evalcond[2]=((((-1.0)*cj6*r10*x17091))+((r00*x17079))+(((-1.0)*x17076*x17086))+((r11*x17082))+x17074);
evalcond[3]=((((-1.0)*cj6*r00*x17091))+(((-1.0)*r10*x17079))+((r01*x17082))+((r11*x17076))+x17096);
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+(((-0.0009)*sj2))+(((-0.02626)*sj2*x17075))+pz+((r20*x17085))+(((-0.02626)*x17083))+(((0.0718)*sj2*x17074)));
evalcond[5]=(((r01*sj5*x17093))+((cj0*cj5*r02))+((x17076*x17081))+((x17079*x17080))+((sj0*x17078))+((x17082*x17087))+x17095);
evalcond[6]=(((cj0*x17078))+(((-1.0)*sj5*x17079*x17086))+(((-1.0)*x17075))+((x17081*x17082))+(((-1.0)*x17076*x17087))+(((-1.0)*r02*sj0*x17084))+((x17080*x17093)));
evalcond[7]=((0.09756)+(((-1.0)*cj0*x17088))+(((-1.0)*x17076*x17077))+((x17082*x17092))+((px*sj0))+(((0.0718)*x17075))+(((-1.0)*cj0*r10*x17085))+(((0.02626)*r00*x17079))+(((0.02626)*x17074)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((0.02626)*x17096))+(((-0.02626)*r10*x17079))+(((-1.0)*cj0*r00*x17085))+(((0.0009)*cj2))+(((-1.0)*px*x17091))+((x17077*x17082))+((x17076*x17092))+(((-1.0)*sj0*x17088))+(((-0.0718)*x17095)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17097=((1.0)*sj6);
CheckValue<IkReal> x17098=IKPowWithIntegerCheck(sj2,-1);
if(!x17098.valid){
continue;
}
if( IKabs(((((-1.0)*cj0*r11*x17097))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x17098.value)*(((((-1.0)*r21*x17097))+((cj6*r20)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj0*r11*x17097))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))))+IKsqr(((x17098.value)*(((((-1.0)*r21*x17097))+((cj6*r20))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((-1.0)*cj0*r11*x17097))+((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*cj6*r00*sj0))), ((x17098.value)*(((((-1.0)*r21*x17097))+((cj6*r20))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17099=IKsin(j4);
IkReal x17100=IKcos(j4);
IkReal x17101=(sj0*sj6);
IkReal x17102=((0.02626)*r01);
IkReal x17103=(cj5*r12);
IkReal x17104=(cj6*sj0);
IkReal x17105=(r11*sj5);
IkReal x17106=(r10*sj5);
IkReal x17107=(cj0*sj6);
IkReal x17108=(r21*sj6);
IkReal x17109=((1.0)*cj5);
IkReal x17110=((0.02626)*cj6);
IkReal x17111=((1.0)*r01);
IkReal x17112=(r00*sj5);
IkReal x17113=((1.0)*py);
IkReal x17114=((1.0)*sj2);
IkReal x17115=((1.0)*sj5);
IkReal x17116=((1.0)*cj0);
IkReal x17117=((0.02626)*r11);
IkReal x17118=(cj0*cj6);
IkReal x17119=(r10*x17118);
IkReal x17120=(cj2*x17099);
IkReal x17121=(cj2*x17100);
evalcond[0]=((((-1.0)*x17100*x17114))+(((-1.0)*x17108))+((cj6*r20)));
evalcond[1]=((((-1.0)*cj6*r21*x17115))+(((-1.0)*r20*sj6*x17115))+(((-1.0)*r22*x17109))+(((-1.0)*x17099*x17114)));
evalcond[2]=((((-1.0)*cj6*r10*x17116))+(((-1.0)*x17101*x17111))+x17099+((r11*x17107))+((r00*x17104)));
evalcond[3]=((((-1.0)*cj6*r00*x17116))+((r11*x17101))+x17121+(((-1.0)*r10*x17104))+((r01*x17107)));
evalcond[4]=((-0.1255)+(((-0.1158)*cj2))+((r20*x17110))+(((0.0718)*sj2*x17099))+(((-0.0009)*sj2))+(((-0.02626)*x17108))+pz+(((-0.02626)*sj2*x17100)));
evalcond[5]=(((x17107*x17112))+((r01*sj5*x17118))+((cj0*cj5*r02))+x17120+((x17101*x17106))+((sj0*x17103))+((x17104*x17105)));
evalcond[6]=((((-1.0)*x17101*x17112))+(((-1.0)*sj5*x17104*x17111))+(((-1.0)*x17100))+(((-1.0)*r02*sj0*x17109))+((cj0*x17103))+((x17105*x17118))+((x17106*x17107)));
evalcond[7]=((0.09756)+((x17107*x17117))+(((0.02626)*x17099))+(((0.02626)*r00*x17104))+(((-1.0)*cj0*r10*x17110))+(((-1.0)*x17101*x17102))+((px*sj0))+(((0.0718)*x17100))+(((-1.0)*cj0*x17113)));
evalcond[8]=((-0.001)+(((-1.0)*sj0*x17113))+(((-1.0)*px*x17116))+(((-0.1158)*sj2))+((x17102*x17107))+(((-1.0)*cj0*r00*x17110))+(((0.0009)*cj2))+(((-0.02626)*r10*x17104))+(((-0.0718)*x17120))+((x17101*x17117))+(((0.02626)*x17121)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17122=((1.0)*r21);
CheckValue<IkReal> x17123=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x17123.valid){
continue;
}
CheckValue<IkReal> x17124 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*sj5*x17122))+(((-1.0)*cj5*r22))+(((-1.0)*r20*sj5*sj6)))),(((cj6*r20))+(((-1.0)*sj6*x17122))),IKFAST_ATAN2_MAGTHRESH);
if(!x17124.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x17123.value)))+(x17124.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17125=IKsin(j4);
IkReal x17126=IKcos(j4);
IkReal x17127=(sj0*sj6);
IkReal x17128=((0.02626)*r01);
IkReal x17129=(cj5*r12);
IkReal x17130=(cj6*sj0);
IkReal x17131=(r11*sj5);
IkReal x17132=(r10*sj5);
IkReal x17133=(cj0*sj6);
IkReal x17134=(r21*sj6);
IkReal x17135=((1.0)*cj5);
IkReal x17136=((0.02626)*cj6);
IkReal x17137=((1.0)*r01);
IkReal x17138=(r00*sj5);
IkReal x17139=((1.0)*py);
IkReal x17140=((1.0)*sj2);
IkReal x17141=((1.0)*sj5);
IkReal x17142=((1.0)*cj0);
IkReal x17143=((0.02626)*r11);
IkReal x17144=(cj0*cj6);
IkReal x17145=(r10*x17144);
IkReal x17146=(cj2*x17125);
IkReal x17147=(cj2*x17126);
evalcond[0]=((((-1.0)*x17134))+(((-1.0)*x17126*x17140))+((cj6*r20)));
evalcond[1]=((((-1.0)*cj6*r21*x17141))+(((-1.0)*x17125*x17140))+(((-1.0)*r22*x17135))+(((-1.0)*r20*sj6*x17141)));
evalcond[2]=(((r11*x17133))+(((-1.0)*cj6*r10*x17142))+(((-1.0)*x17127*x17137))+x17125+((r00*x17130)));
evalcond[3]=((((-1.0)*r10*x17130))+(((-1.0)*cj6*r00*x17142))+((r01*x17133))+x17147+((r11*x17127)));
evalcond[4]=((-0.1255)+((r20*x17136))+(((-0.02626)*x17134))+(((-0.1158)*cj2))+(((-0.0009)*sj2))+(((0.0718)*sj2*x17125))+pz+(((-0.02626)*sj2*x17126)));
evalcond[5]=(((cj0*cj5*r02))+((x17127*x17132))+((r01*sj5*x17144))+((sj0*x17129))+((x17130*x17131))+x17146+((x17133*x17138)));
evalcond[6]=((((-1.0)*x17127*x17138))+(((-1.0)*x17126))+((cj0*x17129))+(((-1.0)*r02*sj0*x17135))+(((-1.0)*sj5*x17130*x17137))+((x17131*x17144))+((x17132*x17133)));
evalcond[7]=((0.09756)+(((-1.0)*x17127*x17128))+(((-1.0)*cj0*r10*x17136))+((px*sj0))+(((-1.0)*cj0*x17139))+((x17133*x17143))+(((0.0718)*x17126))+(((0.02626)*r00*x17130))+(((0.02626)*x17125)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+(((-0.02626)*r10*x17130))+(((-1.0)*px*x17142))+((x17127*x17143))+(((-1.0)*cj0*r00*x17136))+(((0.0009)*cj2))+(((-1.0)*sj0*x17139))+(((0.02626)*x17147))+((x17128*x17133))+(((-0.0718)*x17146)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17148=(cj0*sj5);
IkReal x17149=(cj5*cj6);
IkReal x17150=((1.0)*sj5);
IkReal x17151=((1.0)*cj0);
IkReal x17152=((1.0)*sj0);
IkReal x17153=(cj5*sj6);
IkReal x17154=(r10*x17153);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=(((r21*x17149))+cj2+(((-1.0)*r22*x17150))+((r20*x17153)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*x17152*x17154))+((r02*x17148))+(((-1.0)*r11*x17149*x17152))+((r12*sj0*sj5))+(((-1.0)*r00*x17151*x17153))+(((-1.0)*r01*x17149*x17151)));
evalcond[3]=((((-1.0)*r02*sj0*x17150))+(((-1.0)*x17151*x17154))+((r12*x17148))+(((-1.0)*r11*x17149*x17151))+((r01*sj0*x17149))+((r00*sj0*x17153)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=1.5707963267949;
sj3=1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x17155=(cj5*cj6);
IkReal x17156=((1.0)*sj0);
IkReal x17157=(r21*sj6);
IkReal x17158=(cj0*sj5);
IkReal x17159=((1.0)*r22);
IkReal x17160=(cj6*r20);
IkReal x17161=(cj5*sj6);
IkReal x17162=((1.0)*cj0);
IkReal x17163=((1.0)*sj5);
IkReal x17164=(x17161*x17162);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((1.0)+(((-1.0)*sj5*x17159))+((r21*x17155))+((r20*x17161)));
evalcond[2]=(x17160+(((-1.0)*x17157)));
evalcond[3]=((((-1.0)*cj5*x17159))+(((-1.0)*cj6*r21*x17163))+(((-1.0)*r20*sj6*x17163)));
evalcond[4]=((((-1.0)*r11*x17155*x17156))+(((-1.0)*r01*x17155*x17162))+((r12*sj0*sj5))+(((-1.0)*r10*x17156*x17161))+((r02*x17158))+(((-1.0)*r00*x17164)));
evalcond[5]=(((r01*sj0*x17155))+(((-1.0)*r11*x17155*x17162))+((r00*sj0*x17161))+((r12*x17158))+(((-1.0)*r02*sj5*x17156))+(((-1.0)*r10*x17164)));
evalcond[6]=((0.2413)+(((0.02626)*x17160))+pz+(((-0.02626)*x17157)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17165=(cj0*cj6);
IkReal x17166=(sj0*sj6);
IkReal x17167=((1.0)*r11);
IkReal x17168=(cj6*sj0);
IkReal x17169=(cj0*sj6);
if( IKabs((((r01*x17166))+(((-1.0)*x17167*x17169))+(((-1.0)*r00*x17168))+((r10*x17165)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x17169))+((r00*x17165))+(((-1.0)*x17166*x17167))+((r10*x17168)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x17166))+(((-1.0)*x17167*x17169))+(((-1.0)*r00*x17168))+((r10*x17165))))+IKsqr(((((-1.0)*r01*x17169))+((r00*x17165))+(((-1.0)*x17166*x17167))+((r10*x17168))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*x17166))+(((-1.0)*x17167*x17169))+(((-1.0)*r00*x17168))+((r10*x17165))), ((((-1.0)*r01*x17169))+((r00*x17165))+(((-1.0)*x17166*x17167))+((r10*x17168))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17170=IKsin(j4);
IkReal x17171=IKcos(j4);
IkReal x17172=(cj6*sj0);
IkReal x17173=((0.02626)*r10);
IkReal x17174=(r11*sj6);
IkReal x17175=(r11*sj5);
IkReal x17176=(sj0*sj6);
IkReal x17177=(r10*sj5);
IkReal x17178=(cj0*cj6);
IkReal x17179=((0.02626)*r01);
IkReal x17180=(cj5*r12);
IkReal x17181=((1.0)*sj0);
IkReal x17182=(cj5*r02);
IkReal x17183=(cj0*sj6);
IkReal x17184=((1.0)*r10);
IkReal x17185=((1.0)*r01);
IkReal x17186=(r00*sj5);
IkReal x17187=((1.0)*cj0);
IkReal x17188=((0.02626)*r00);
evalcond[0]=((((-1.0)*x17172*x17184))+((sj0*x17174))+x17171+((r01*x17183))+(((-1.0)*r00*x17178)));
evalcond[1]=(((r00*x17172))+(((-1.0)*x17176*x17185))+(((-1.0)*x17178*x17184))+x17170+((cj0*x17174)));
evalcond[2]=(((x17183*x17186))+((x17172*x17175))+((x17176*x17177))+((r01*sj5*x17178))+((cj0*x17182))+x17170+((sj0*x17180)));
evalcond[3]=((((-1.0)*x17176*x17186))+(((-1.0)*x17181*x17182))+(((-1.0)*sj5*x17172*x17185))+(((-1.0)*x17171))+((x17175*x17178))+((cj0*x17180))+((x17177*x17183)));
evalcond[4]=((0.09736)+(((0.02626)*x17170))+(((0.02626)*cj0*x17174))+(((-1.0)*x17176*x17179))+(((0.0718)*x17171))+(((-1.0)*py*x17187))+((px*sj0))+(((-1.0)*x17173*x17178))+((x17172*x17188)));
evalcond[5]=((-0.0001)+((x17179*x17183))+(((0.02626)*sj0*x17174))+(((0.02626)*x17171))+(((-1.0)*x17178*x17188))+(((-0.0718)*x17170))+(((-1.0)*py*x17181))+(((-1.0)*x17172*x17173))+(((-1.0)*px*x17187)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17189=(cj5*cj6);
IkReal x17190=(r11*sj0);
IkReal x17191=(cj6*sj5);
IkReal x17192=((1.0)*cj0);
IkReal x17193=(r10*sj6);
IkReal x17194=(sj0*sj5);
IkReal x17195=(r00*sj6);
IkReal x17196=(cj0*sj5);
IkReal x17197=((0.02626)*cj0);
IkReal x17198=(r01*sj6);
IkReal x17199=((1.0)*sj0);
IkReal x17200=(cj6*r10);
IkReal x17201=(cj5*sj0);
IkReal x17202=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x17189))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x17192*x17202))+(((-1.0)*x17199*x17200))+((cj0*x17198))+((sj6*x17190)));
evalcond[3]=((-1.0)+(((-1.0)*r01*x17189*x17192))+(((-1.0)*cj5*x17193*x17199))+((r12*x17194))+(((-1.0)*cj5*x17192*x17195))+((r02*x17196))+(((-1.0)*x17189*x17190)));
evalcond[4]=(((x17195*x17196))+((cj0*cj5*r02))+((r12*x17201))+((cj0*r01*x17191))+((x17190*x17191))+((x17193*x17194)));
evalcond[5]=((((-1.0)*r11*x17189*x17192))+((r12*x17196))+(((-1.0)*r02*x17194))+((x17195*x17201))+(((-1.0)*cj5*x17192*x17193))+((r01*sj0*x17189)));
evalcond[6]=((-0.1168)+(((-1.0)*py*x17199))+((x17197*x17198))+(((0.02626)*sj6*x17190))+(((-1.0)*x17197*x17202))+(((-1.0)*px*x17192))+(((-0.02626)*sj0*x17200)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17203=IKcos(j4);
IkReal x17204=IKsin(j4);
IkReal x17205=(cj0*sj6);
IkReal x17206=((0.02626)*cj6);
IkReal x17207=(cj0*r10);
IkReal x17208=((0.02626)*sj6);
IkReal x17209=(r01*sj0);
IkReal x17210=((1.0)*cj5);
IkReal x17211=((1.0)*cj6);
IkReal x17212=((1.0)*sj6);
IkReal x17213=(r00*sj0);
evalcond[0]=(((cj6*r20))+x17203+(((-1.0)*r21*x17212)));
evalcond[1]=((((-1.0)*r21*sj5*x17211))+(((-1.0)*r20*sj5*x17212))+(((-1.0)*r22*x17210))+x17204);
evalcond[2]=((0.1264)+(((0.02626)*x17203))+(((-0.0718)*x17204))+pz+((r20*x17206))+(((-1.0)*r21*x17208)));
evalcond[3]=((((-1.0)*x17209*x17212))+((r11*x17205))+x17204+(((-1.0)*x17207*x17211))+((cj6*x17213)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*r02*sj0*x17210))+(((-1.0)*x17203))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x17209*x17211))+((r10*sj5*x17205))+(((-1.0)*sj5*x17212*x17213)));
evalcond[5]=((0.09736)+(((0.02626)*x17204))+(((0.0718)*x17203))+(((0.02626)*r11*x17205))+((x17206*x17213))+(((-1.0)*x17208*x17209))+((px*sj0))+(((-1.0)*x17206*x17207))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17214=(cj5*cj6);
IkReal x17215=(r11*sj0);
IkReal x17216=(cj6*sj5);
IkReal x17217=((1.0)*cj0);
IkReal x17218=(r10*sj6);
IkReal x17219=(sj0*sj5);
IkReal x17220=(r00*sj6);
IkReal x17221=(cj0*sj5);
IkReal x17222=((0.02626)*cj0);
IkReal x17223=(r01*sj6);
IkReal x17224=((1.0)*sj0);
IkReal x17225=(cj6*r10);
IkReal x17226=(cj5*sj0);
IkReal x17227=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((r21*x17214))+((cj5*r20*sj6))+(((-1.0)*r22*sj5)));
evalcond[2]=(((sj6*x17215))+(((-1.0)*x17224*x17225))+(((-1.0)*x17217*x17227))+((cj0*x17223)));
evalcond[3]=((1.0)+(((-1.0)*cj5*x17218*x17224))+(((-1.0)*r01*x17214*x17217))+((r12*x17219))+((r02*x17221))+(((-1.0)*x17214*x17215))+(((-1.0)*cj5*x17217*x17220)));
evalcond[4]=(((cj0*r01*x17216))+((r12*x17226))+((x17215*x17216))+((cj0*cj5*r02))+((x17218*x17219))+((x17220*x17221)));
evalcond[5]=(((r12*x17221))+(((-1.0)*r02*x17219))+(((-1.0)*r11*x17214*x17217))+((x17220*x17226))+(((-1.0)*cj5*x17217*x17218))+((r01*sj0*x17214)));
evalcond[6]=((0.1148)+((x17222*x17223))+(((-0.02626)*sj0*x17225))+(((-1.0)*x17222*x17227))+(((0.02626)*sj6*x17215))+(((-1.0)*px*x17217))+(((-1.0)*py*x17224)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17228=IKsin(j4);
IkReal x17229=IKcos(j4);
IkReal x17230=(cj0*sj6);
IkReal x17231=((0.02626)*cj6);
IkReal x17232=(cj0*r10);
IkReal x17233=((0.02626)*sj6);
IkReal x17234=(r01*sj0);
IkReal x17235=((1.0)*cj5);
IkReal x17236=((1.0)*cj6);
IkReal x17237=((1.0)*sj6);
IkReal x17238=(r00*sj0);
IkReal x17239=((1.0)*x17229);
evalcond[0]=((((-1.0)*x17239))+((cj6*r20))+(((-1.0)*r21*x17237)));
evalcond[1]=((((-1.0)*r20*sj5*x17237))+(((-1.0)*r21*sj5*x17236))+(((-1.0)*r22*x17235))+(((-1.0)*x17228)));
evalcond[2]=((0.1246)+(((-0.02626)*x17229))+pz+((r20*x17231))+(((0.0718)*x17228))+(((-1.0)*r21*x17233)));
evalcond[3]=((((-1.0)*x17232*x17236))+((r11*x17230))+x17228+((cj6*x17238))+(((-1.0)*x17234*x17237)));
evalcond[4]=((((-1.0)*x17239))+((cj0*cj5*r12))+(((-1.0)*sj5*x17234*x17236))+(((-1.0)*sj5*x17237*x17238))+(((-1.0)*r02*sj0*x17235))+((cj0*cj6*r11*sj5))+((r10*sj5*x17230)));
evalcond[5]=((0.09736)+(((0.02626)*r11*x17230))+(((-1.0)*x17231*x17232))+(((-1.0)*x17233*x17234))+((x17231*x17238))+((px*sj0))+(((0.0718)*x17229))+(((0.02626)*x17228))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17240=((1.0)*sj6);
CheckValue<IkReal> x17241=IKPowWithIntegerCheck(sj2,-1);
if(!x17241.valid){
continue;
}
CheckValue<IkReal> x17242=IKPowWithIntegerCheck(cj2,-1);
if(!x17242.valid){
continue;
}
if( IKabs(((x17241.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x17242.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x17240))+(((-1.0)*r11*sj0*x17240))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x17241.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x17242.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x17240))+(((-1.0)*r11*sj0*x17240))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x17241.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x17242.value)*((((cj6*r10*sj0))+(((-1.0)*cj0*r01*x17240))+(((-1.0)*r11*sj0*x17240))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17243=IKsin(j4);
IkReal x17244=IKcos(j4);
IkReal x17245=((0.02626)*sj0);
IkReal x17246=(cj6*r10);
IkReal x17247=(r01*sj6);
IkReal x17248=(r11*sj0);
IkReal x17249=(cj0*cj5);
IkReal x17250=(cj6*sj5);
IkReal x17251=((0.02626)*cj0);
IkReal x17252=(cj0*sj6);
IkReal x17253=(r21*sj6);
IkReal x17254=((1.0)*sj0);
IkReal x17255=(cj6*r20);
IkReal x17256=(r00*sj5);
IkReal x17257=(cj6*r00);
IkReal x17258=((1.0)*cj0);
IkReal x17259=(r11*sj6);
IkReal x17260=(r10*sj5*sj6);
IkReal x17261=(cj2*x17243);
IkReal x17262=(cj2*x17244);
IkReal x17263=(sj2*x17243);
IkReal x17264=(sj2*x17244);
evalcond[0]=((((-1.0)*x17253))+x17255+x17264);
evalcond[1]=((((-1.0)*cj5*r22))+x17263+(((-1.0)*r21*x17250))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((((-1.0)*x17246*x17258))+(((-1.0)*x17247*x17254))+x17243+((sj0*x17257))+((r11*x17252)));
evalcond[3]=((((-1.0)*x17246*x17254))+((sj6*x17248))+(((-1.0)*x17257*x17258))+x17262+((cj0*x17247)));
evalcond[4]=((0.1255)+(((-0.02626)*x17253))+(((0.1158)*cj2))+(((-0.0718)*x17263))+pz+(((0.02626)*x17255))+(((0.0009)*sj2))+(((0.02626)*x17264)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x17249))+((x17252*x17256))+((sj0*x17260))+((cj0*r01*x17250))+x17261+((x17248*x17250)));
evalcond[6]=(((r12*x17249))+(((-1.0)*x17244))+((cj0*r11*x17250))+(((-1.0)*cj5*r02*x17254))+(((-1.0)*r01*x17250*x17254))+(((-1.0)*sj6*x17254*x17256))+((r10*sj5*x17252)));
evalcond[7]=((0.09736)+(((-1.0)*x17245*x17247))+(((-1.0)*x17246*x17251))+((x17245*x17257))+(((0.02626)*x17243))+(((0.0718)*x17244))+((x17251*x17259))+((px*sj0))+(((-1.0)*py*x17258)));
evalcond[8]=((-0.001)+(((-1.0)*x17245*x17246))+((x17245*x17259))+(((-1.0)*px*x17258))+(((-0.1158)*sj2))+(((-0.0718)*x17261))+(((0.0009)*cj2))+((x17247*x17251))+(((-1.0)*x17251*x17257))+(((-1.0)*py*x17254))+(((0.02626)*x17262)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17265=((1.0)*cj6);
CheckValue<IkReal> x17266=IKPowWithIntegerCheck(sj2,-1);
if(!x17266.valid){
continue;
}
if( IKabs((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*r00*sj0*x17265))+(((-1.0)*cj0*r11*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x17266.value)*(((((-1.0)*r20*x17265))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*r00*sj0*x17265))+(((-1.0)*cj0*r11*sj6))))+IKsqr(((x17266.value)*(((((-1.0)*r20*x17265))+((r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r01*sj0*sj6))+((cj0*cj6*r10))+(((-1.0)*r00*sj0*x17265))+(((-1.0)*cj0*r11*sj6))), ((x17266.value)*(((((-1.0)*r20*x17265))+((r21*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17267=IKsin(j4);
IkReal x17268=IKcos(j4);
IkReal x17269=((0.02626)*sj0);
IkReal x17270=(cj6*r10);
IkReal x17271=(r01*sj6);
IkReal x17272=(r11*sj0);
IkReal x17273=(cj0*cj5);
IkReal x17274=(cj6*sj5);
IkReal x17275=((0.02626)*cj0);
IkReal x17276=(cj0*sj6);
IkReal x17277=(r21*sj6);
IkReal x17278=((1.0)*sj0);
IkReal x17279=(cj6*r20);
IkReal x17280=(r00*sj5);
IkReal x17281=(cj6*r00);
IkReal x17282=((1.0)*cj0);
IkReal x17283=(r11*sj6);
IkReal x17284=(r10*sj5*sj6);
IkReal x17285=(cj2*x17267);
IkReal x17286=(cj2*x17268);
IkReal x17287=(sj2*x17267);
IkReal x17288=(sj2*x17268);
evalcond[0]=((((-1.0)*x17277))+x17288+x17279);
evalcond[1]=((((-1.0)*r21*x17274))+(((-1.0)*cj5*r22))+x17287+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((sj0*x17281))+x17267+(((-1.0)*x17270*x17282))+((r11*x17276))+(((-1.0)*x17271*x17278)));
evalcond[3]=((((-1.0)*x17270*x17278))+(((-1.0)*x17281*x17282))+((sj6*x17272))+x17286+((cj0*x17271)));
evalcond[4]=((0.1255)+(((-0.02626)*x17277))+(((0.02626)*x17288))+(((-0.0718)*x17287))+(((0.1158)*cj2))+(((0.02626)*x17279))+pz+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x17273))+((cj0*r01*x17274))+((x17272*x17274))+((sj0*x17284))+x17285+((x17276*x17280)));
evalcond[6]=(((r10*sj5*x17276))+((r12*x17273))+(((-1.0)*sj6*x17278*x17280))+((cj0*r11*x17274))+(((-1.0)*cj5*r02*x17278))+(((-1.0)*r01*x17274*x17278))+(((-1.0)*x17268)));
evalcond[7]=((0.09736)+(((-1.0)*x17270*x17275))+(((0.0718)*x17268))+((x17269*x17281))+(((-1.0)*py*x17282))+((x17275*x17283))+((px*sj0))+(((-1.0)*x17269*x17271))+(((0.02626)*x17267)));
evalcond[8]=((-0.001)+((x17269*x17283))+(((-1.0)*x17275*x17281))+(((0.02626)*x17286))+(((-0.1158)*sj2))+(((-0.0718)*x17285))+(((0.0009)*cj2))+(((-1.0)*px*x17282))+(((-1.0)*x17269*x17270))+((x17271*x17275))+(((-1.0)*py*x17278)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x17289=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x17289.valid){
continue;
}
CheckValue<IkReal> x17290 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x17290.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x17289.value)))+(x17290.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17291=IKsin(j4);
IkReal x17292=IKcos(j4);
IkReal x17293=((0.02626)*sj0);
IkReal x17294=(cj6*r10);
IkReal x17295=(r01*sj6);
IkReal x17296=(r11*sj0);
IkReal x17297=(cj0*cj5);
IkReal x17298=(cj6*sj5);
IkReal x17299=((0.02626)*cj0);
IkReal x17300=(cj0*sj6);
IkReal x17301=(r21*sj6);
IkReal x17302=((1.0)*sj0);
IkReal x17303=(cj6*r20);
IkReal x17304=(r00*sj5);
IkReal x17305=(cj6*r00);
IkReal x17306=((1.0)*cj0);
IkReal x17307=(r11*sj6);
IkReal x17308=(r10*sj5*sj6);
IkReal x17309=(cj2*x17291);
IkReal x17310=(cj2*x17292);
IkReal x17311=(sj2*x17291);
IkReal x17312=(sj2*x17292);
evalcond[0]=((((-1.0)*x17301))+x17312+x17303);
evalcond[1]=((((-1.0)*r21*x17298))+(((-1.0)*cj5*r22))+x17311+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=((((-1.0)*x17295*x17302))+(((-1.0)*x17294*x17306))+((r11*x17300))+x17291+((sj0*x17305)));
evalcond[3]=((((-1.0)*x17294*x17302))+(((-1.0)*x17305*x17306))+((sj6*x17296))+((cj0*x17295))+x17310);
evalcond[4]=((0.1255)+(((-0.02626)*x17301))+(((-0.0718)*x17311))+(((0.1158)*cj2))+pz+(((0.02626)*x17303))+(((0.0009)*sj2))+(((0.02626)*x17312)));
evalcond[5]=(((cj5*r12*sj0))+((r02*x17297))+((x17300*x17304))+((cj0*r01*x17298))+((x17296*x17298))+x17309+((sj0*x17308)));
evalcond[6]=((((-1.0)*r01*x17298*x17302))+(((-1.0)*sj6*x17302*x17304))+(((-1.0)*cj5*r02*x17302))+((cj0*r11*x17298))+(((-1.0)*x17292))+((r10*sj5*x17300))+((r12*x17297)));
evalcond[7]=((0.09736)+(((-1.0)*x17294*x17299))+(((-1.0)*x17293*x17295))+((x17299*x17307))+((x17293*x17305))+(((-1.0)*py*x17306))+(((0.02626)*x17291))+((px*sj0))+(((0.0718)*x17292)));
evalcond[8]=((-0.001)+(((-1.0)*x17293*x17294))+(((-0.1158)*sj2))+(((-0.0718)*x17309))+(((-1.0)*px*x17306))+(((-1.0)*x17299*x17305))+(((0.0009)*cj2))+((x17293*x17307))+(((-1.0)*py*x17302))+((x17295*x17299))+(((0.02626)*x17310)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17313=(cj0*sj5);
IkReal x17314=(cj5*cj6);
IkReal x17315=((1.0)*sj5);
IkReal x17316=((1.0)*cj0);
IkReal x17317=((1.0)*sj0);
IkReal x17318=(cj5*sj6);
IkReal x17319=(r10*x17318);
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j3), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
evalcond[1]=((((-1.0)*r22*x17315))+((r20*x17318))+((r21*x17314))+(((-1.0)*cj2)));
evalcond[2]=((((-1.0)*r01*x17314*x17316))+sj2+(((-1.0)*x17317*x17319))+((r12*sj0*sj5))+(((-1.0)*r00*x17316*x17318))+((r02*x17313))+(((-1.0)*r11*x17314*x17317)));
evalcond[3]=(((r01*sj0*x17314))+(((-1.0)*r02*sj0*x17315))+((r12*x17313))+(((-1.0)*x17316*x17319))+(((-1.0)*r11*x17314*x17316))+((r00*sj0*x17318)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4eval[3];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=IKsign(sj2);
j4eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))));
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  || IKabs(j4eval[2]) < 0.0000010000000000  )
{
{
IkReal j4eval[1];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  )
{
{
IkReal j4eval[2];
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j3=-1.5707963267949;
sj3=-1.0;
cj3=0;
j4eval[0]=sj2;
j4eval[1]=cj2;
if( IKabs(j4eval[0]) < 0.0000010000000000  || IKabs(j4eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
bool bgotonextstatement = true;
do
{
IkReal x17320=(cj5*cj6);
IkReal x17321=((1.0)*sj0);
IkReal x17322=(r21*sj6);
IkReal x17323=(cj0*sj5);
IkReal x17324=((1.0)*r22);
IkReal x17325=(cj6*r20);
IkReal x17326=(cj5*sj6);
IkReal x17327=((1.0)*cj0);
IkReal x17328=((1.0)*sj5);
IkReal x17329=(x17326*x17327);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
evalcond[1]=((-1.0)+(((-1.0)*sj5*x17324))+((r21*x17320))+((r20*x17326)));
evalcond[2]=((((-1.0)*x17322))+x17325);
evalcond[3]=((((-1.0)*cj6*r21*x17328))+(((-1.0)*cj5*x17324))+(((-1.0)*r20*sj6*x17328)));
evalcond[4]=((((-1.0)*r01*x17320*x17327))+(((-1.0)*r11*x17320*x17321))+((r12*sj0*sj5))+((r02*x17323))+(((-1.0)*r00*x17329))+(((-1.0)*r10*x17321*x17326)));
evalcond[5]=(((r00*sj0*x17326))+(((-1.0)*r11*x17320*x17327))+(((-1.0)*r10*x17329))+((r01*sj0*x17320))+((r12*x17323))+(((-1.0)*r02*sj5*x17321)));
evalcond[6]=((0.2413)+(((-0.02626)*x17322))+pz+(((0.02626)*x17325)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17330=(cj0*cj6);
IkReal x17331=(cj6*sj0);
IkReal x17332=(cj0*sj6);
IkReal x17333=((1.0)*sj0*sj6);
if( IKabs((((r00*x17331))+((r11*x17332))+(((-1.0)*r10*x17330))+(((-1.0)*r01*x17333)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x17332))+((r00*x17330))+((r10*x17331))+(((-1.0)*r11*x17333)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x17331))+((r11*x17332))+(((-1.0)*r10*x17330))+(((-1.0)*r01*x17333))))+IKsqr(((((-1.0)*r01*x17332))+((r00*x17330))+((r10*x17331))+(((-1.0)*r11*x17333))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((r00*x17331))+((r11*x17332))+(((-1.0)*r10*x17330))+(((-1.0)*r01*x17333))), ((((-1.0)*r01*x17332))+((r00*x17330))+((r10*x17331))+(((-1.0)*r11*x17333))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17334=IKsin(j4);
IkReal x17335=IKcos(j4);
IkReal x17336=(cj6*sj0);
IkReal x17337=((0.02626)*r10);
IkReal x17338=(r11*sj6);
IkReal x17339=(r11*sj5);
IkReal x17340=(sj0*sj6);
IkReal x17341=(r10*sj5);
IkReal x17342=((0.02626)*r01);
IkReal x17343=(cj5*r12);
IkReal x17344=(cj0*cj6);
IkReal x17345=((1.0)*sj0);
IkReal x17346=(cj5*r02);
IkReal x17347=(cj0*sj6);
IkReal x17348=((1.0)*r10);
IkReal x17349=((1.0)*r01);
IkReal x17350=(r00*sj5);
IkReal x17351=((1.0)*cj0);
IkReal x17352=((0.02626)*r00);
evalcond[0]=(((sj0*x17338))+((r01*x17347))+(((-1.0)*r00*x17344))+(((-1.0)*x17336*x17348))+x17335);
evalcond[1]=((((-1.0)*x17340*x17349))+((r00*x17336))+((cj0*x17338))+(((-1.0)*x17344*x17348))+(((-1.0)*x17334)));
evalcond[2]=(((sj0*x17343))+((x17347*x17350))+((x17340*x17341))+((cj0*x17346))+((r01*sj5*x17344))+x17334+((x17336*x17339)));
evalcond[3]=((((-1.0)*sj5*x17336*x17349))+((x17341*x17347))+(((-1.0)*x17345*x17346))+((cj0*x17343))+(((-1.0)*x17340*x17350))+x17335+((x17339*x17344)));
evalcond[4]=((-0.09756)+(((0.02626)*cj0*x17338))+(((-1.0)*x17340*x17342))+(((-0.02626)*x17334))+((x17336*x17352))+(((-1.0)*py*x17351))+((px*sj0))+(((-1.0)*x17337*x17344))+(((-0.0718)*x17335)));
evalcond[5]=((-0.0001)+(((-1.0)*px*x17351))+((x17342*x17347))+(((-1.0)*x17344*x17352))+(((-1.0)*py*x17345))+(((0.02626)*sj0*x17338))+(((0.02626)*x17335))+(((-1.0)*x17336*x17337))+(((-0.0718)*x17334)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17353=(cj5*cj6);
IkReal x17354=(r11*sj0);
IkReal x17355=(cj6*sj5);
IkReal x17356=((1.0)*cj0);
IkReal x17357=(r10*sj6);
IkReal x17358=(sj0*sj5);
IkReal x17359=(r00*sj6);
IkReal x17360=(cj0*sj5);
IkReal x17361=((0.02626)*cj0);
IkReal x17362=(r01*sj6);
IkReal x17363=((1.0)*sj0);
IkReal x17364=(cj6*r10);
IkReal x17365=(cj5*sj0);
IkReal x17366=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x17353))+(((-1.0)*r22*sj5)));
evalcond[2]=((((-1.0)*x17356*x17366))+((sj6*x17354))+(((-1.0)*x17363*x17364))+((cj0*x17362)));
evalcond[3]=((1.0)+((r12*x17358))+(((-1.0)*cj5*x17356*x17359))+((r02*x17360))+(((-1.0)*cj5*x17357*x17363))+(((-1.0)*x17353*x17354))+(((-1.0)*r01*x17353*x17356)));
evalcond[4]=(((cj0*cj5*r02))+((x17354*x17355))+((x17359*x17360))+((x17357*x17358))+((cj0*r01*x17355))+((r12*x17365)));
evalcond[5]=((((-1.0)*cj5*x17356*x17357))+((x17359*x17365))+((r01*sj0*x17353))+((r12*x17360))+(((-1.0)*r02*x17358))+(((-1.0)*r11*x17353*x17356)));
evalcond[6]=((-0.1168)+(((-1.0)*px*x17356))+(((0.02626)*sj6*x17354))+((x17361*x17362))+(((-0.02626)*sj0*x17364))+(((-1.0)*py*x17363))+(((-1.0)*x17361*x17366)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((1.76044568245125)+(((13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((1.76044568245125)+(((13.9275766016713)*pz))))+IKsqr(((((-1.0)*cj6*r20))+((r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((1.76044568245125)+(((13.9275766016713)*pz))), ((((-1.0)*cj6*r20))+((r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17367=IKcos(j4);
IkReal x17368=IKsin(j4);
IkReal x17369=(cj0*sj6);
IkReal x17370=((0.02626)*sj6);
IkReal x17371=(r01*sj0);
IkReal x17372=((0.02626)*cj6);
IkReal x17373=(cj0*r10);
IkReal x17374=((1.0)*cj5);
IkReal x17375=((1.0)*cj6);
IkReal x17376=((1.0)*sj6);
IkReal x17377=(r00*sj0);
evalcond[0]=((((-1.0)*r21*x17376))+((cj6*r20))+x17367);
evalcond[1]=((((-1.0)*r20*sj5*x17376))+(((-1.0)*r22*x17374))+(((-1.0)*r21*sj5*x17375))+x17368);
evalcond[2]=((0.1264)+((r20*x17372))+(((0.02626)*x17367))+(((-0.0718)*x17368))+(((-1.0)*r21*x17370))+pz);
evalcond[3]=(((cj6*x17377))+(((-1.0)*x17368))+(((-1.0)*x17373*x17375))+(((-1.0)*x17371*x17376))+((r11*x17369)));
evalcond[4]=((((-1.0)*sj5*x17376*x17377))+(((-1.0)*r02*sj0*x17374))+((cj0*cj5*r12))+(((-1.0)*sj5*x17371*x17375))+((cj0*cj6*r11*sj5))+((r10*sj5*x17369))+x17367);
evalcond[5]=((-0.09756)+(((-1.0)*x17372*x17373))+((x17372*x17377))+(((-0.0718)*x17367))+(((-1.0)*x17370*x17371))+(((-0.02626)*x17368))+(((0.02626)*r11*x17369))+((px*sj0))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x17378=(cj5*cj6);
IkReal x17379=(r11*sj0);
IkReal x17380=(cj6*sj5);
IkReal x17381=((1.0)*cj0);
IkReal x17382=(r10*sj6);
IkReal x17383=(sj0*sj5);
IkReal x17384=(r00*sj6);
IkReal x17385=(cj0*sj5);
IkReal x17386=((0.02626)*cj0);
IkReal x17387=(r01*sj6);
IkReal x17388=((1.0)*sj0);
IkReal x17389=(cj6*r10);
IkReal x17390=(cj5*sj0);
IkReal x17391=(cj6*r00);
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
evalcond[1]=(((cj5*r20*sj6))+((r21*x17378))+(((-1.0)*r22*sj5)));
evalcond[2]=(((sj6*x17379))+((cj0*x17387))+(((-1.0)*x17388*x17389))+(((-1.0)*x17381*x17391)));
evalcond[3]=((-1.0)+((r02*x17385))+(((-1.0)*r01*x17378*x17381))+(((-1.0)*x17378*x17379))+(((-1.0)*cj5*x17381*x17384))+(((-1.0)*cj5*x17382*x17388))+((r12*x17383)));
evalcond[4]=(((x17379*x17380))+((cj0*r01*x17380))+((cj0*cj5*r02))+((r12*x17390))+((x17382*x17383))+((x17384*x17385)));
evalcond[5]=((((-1.0)*r11*x17378*x17381))+(((-1.0)*r02*x17383))+(((-1.0)*cj5*x17381*x17382))+((x17384*x17390))+((r01*sj0*x17378))+((r12*x17385)));
evalcond[6]=((0.1148)+(((-1.0)*x17386*x17391))+((x17386*x17387))+(((-0.02626)*sj0*x17389))+(((-1.0)*py*x17388))+(((-1.0)*px*x17381))+(((0.02626)*sj6*x17379)));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
bgotonextstatement=false;
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.73537604456825)+(((-13.9275766016713)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r20))+(((-1.0)*r21*sj6)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.73537604456825)+(((-13.9275766016713)*pz))))+IKsqr((((cj6*r20))+(((-1.0)*r21*sj6))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.73537604456825)+(((-13.9275766016713)*pz))), (((cj6*r20))+(((-1.0)*r21*sj6))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x17392=IKsin(j4);
IkReal x17393=IKcos(j4);
IkReal x17394=(cj0*sj6);
IkReal x17395=((0.02626)*sj6);
IkReal x17396=(r01*sj0);
IkReal x17397=((0.02626)*cj6);
IkReal x17398=(cj0*r10);
IkReal x17399=((1.0)*cj5);
IkReal x17400=((1.0)*cj6);
IkReal x17401=((1.0)*sj6);
IkReal x17402=(r00*sj0);
IkReal x17403=((1.0)*x17392);
evalcond[0]=((((-1.0)*r21*x17401))+(((-1.0)*x17393))+((cj6*r20)));
evalcond[1]=((((-1.0)*r20*sj5*x17401))+(((-1.0)*x17403))+(((-1.0)*r22*x17399))+(((-1.0)*r21*sj5*x17400)));
evalcond[2]=((0.1246)+(((0.0718)*x17392))+(((-1.0)*r21*x17395))+(((-0.02626)*x17393))+pz+((r20*x17397)));
evalcond[3]=(((r11*x17394))+(((-1.0)*x17403))+((cj6*x17402))+(((-1.0)*x17398*x17400))+(((-1.0)*x17396*x17401)));
evalcond[4]=(((cj0*cj5*r12))+(((-1.0)*r02*sj0*x17399))+((cj0*cj6*r11*sj5))+(((-1.0)*sj5*x17396*x17400))+x17393+((r10*sj5*x17394))+(((-1.0)*sj5*x17401*x17402)));
evalcond[5]=((-0.09756)+((x17397*x17402))+(((0.02626)*r11*x17394))+(((-1.0)*x17397*x17398))+(((-0.02626)*x17392))+(((-1.0)*x17395*x17396))+((px*sj0))+(((-0.0718)*x17393))+(((-1.0)*cj0*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17404=((1.0)*sj6);
CheckValue<IkReal> x17405=IKPowWithIntegerCheck(sj2,-1);
if(!x17405.valid){
continue;
}
CheckValue<IkReal> x17406=IKPowWithIntegerCheck(cj2,-1);
if(!x17406.valid){
continue;
}
if( IKabs(((x17405.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x17406.value)*(((((-1.0)*r11*sj0*x17404))+((cj6*r10*sj0))+(((-1.0)*cj0*r01*x17404))+((cj0*cj6*r00)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x17405.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))))+IKsqr(((x17406.value)*(((((-1.0)*r11*sj0*x17404))+((cj6*r10*sj0))+(((-1.0)*cj0*r01*x17404))+((cj0*cj6*r00))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x17405.value)*((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5))))), ((x17406.value)*(((((-1.0)*r11*sj0*x17404))+((cj6*r10*sj0))+(((-1.0)*cj0*r01*x17404))+((cj0*cj6*r00))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17407=IKcos(j4);
IkReal x17408=IKsin(j4);
IkReal x17409=((0.02626)*sj0);
IkReal x17410=(cj6*r10);
IkReal x17411=(r01*sj6);
IkReal x17412=(r11*sj0);
IkReal x17413=(cj0*cj5);
IkReal x17414=(cj6*sj5);
IkReal x17415=(cj0*sj6);
IkReal x17416=((0.02626)*cj0);
IkReal x17417=((1.0)*cj5);
IkReal x17418=(cj6*r20);
IkReal x17419=((1.0)*sj0);
IkReal x17420=(r21*sj6);
IkReal x17421=(r00*sj5);
IkReal x17422=(cj6*r00);
IkReal x17423=((1.0)*cj0);
IkReal x17424=(r10*sj5*sj6);
IkReal x17425=(cj2*x17408);
IkReal x17426=(cj2*x17407);
IkReal x17427=(sj2*x17408);
IkReal x17428=(sj2*x17407);
evalcond[0]=(x17418+x17428+(((-1.0)*x17420)));
evalcond[1]=((((-1.0)*r22*x17417))+x17427+(((-1.0)*r21*x17414))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(x17426+(((-1.0)*x17410*x17419))+((cj0*x17411))+(((-1.0)*x17422*x17423))+((sj6*x17412)));
evalcond[3]=((((-1.0)*x17408))+((sj0*x17422))+(((-1.0)*x17411*x17419))+(((-1.0)*x17410*x17423))+((r11*x17415)));
evalcond[4]=((0.1255)+(((0.02626)*x17428))+(((0.02626)*x17418))+(((0.1158)*cj2))+(((-0.02626)*x17420))+(((-0.0718)*x17427))+pz+(((0.0009)*sj2)));
evalcond[5]=(((cj5*r12*sj0))+x17425+((sj0*x17424))+((x17412*x17414))+((cj0*r01*x17414))+((r02*x17413))+((x17415*x17421)));
evalcond[6]=(((cj0*r11*x17414))+x17407+(((-1.0)*r01*x17414*x17419))+(((-1.0)*sj6*x17419*x17421))+(((-1.0)*r02*sj0*x17417))+((r12*x17413))+((r10*sj5*x17415)));
evalcond[7]=((-0.09756)+(((-1.0)*py*x17423))+(((-0.02626)*x17408))+(((-1.0)*x17410*x17416))+((px*sj0))+(((-0.0718)*x17407))+((x17409*x17422))+(((0.02626)*r11*x17415))+(((-1.0)*x17409*x17411)));
evalcond[8]=((-0.001)+(((0.02626)*x17426))+(((-0.1158)*sj2))+(((-1.0)*x17416*x17422))+(((-1.0)*py*x17419))+(((0.0009)*cj2))+(((-1.0)*px*x17423))+(((-0.0718)*x17425))+((x17411*x17416))+((r11*sj6*x17409))+(((-1.0)*x17409*x17410)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17429=((1.0)*cj6);
CheckValue<IkReal> x17430=IKPowWithIntegerCheck(sj2,-1);
if(!x17430.valid){
continue;
}
if( IKabs((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6))+(((-1.0)*cj0*r10*x17429)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x17430.value)*(((((-1.0)*r20*x17429))+((r21*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6))+(((-1.0)*cj0*r10*x17429))))+IKsqr(((x17430.value)*(((((-1.0)*r20*x17429))+((r21*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2((((cj6*r00*sj0))+((cj0*r11*sj6))+(((-1.0)*r01*sj0*sj6))+(((-1.0)*cj0*r10*x17429))), ((x17430.value)*(((((-1.0)*r20*x17429))+((r21*sj6))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17431=IKcos(j4);
IkReal x17432=IKsin(j4);
IkReal x17433=((0.02626)*sj0);
IkReal x17434=(cj6*r10);
IkReal x17435=(r01*sj6);
IkReal x17436=(r11*sj0);
IkReal x17437=(cj0*cj5);
IkReal x17438=(cj6*sj5);
IkReal x17439=(cj0*sj6);
IkReal x17440=((0.02626)*cj0);
IkReal x17441=((1.0)*cj5);
IkReal x17442=(cj6*r20);
IkReal x17443=((1.0)*sj0);
IkReal x17444=(r21*sj6);
IkReal x17445=(r00*sj5);
IkReal x17446=(cj6*r00);
IkReal x17447=((1.0)*cj0);
IkReal x17448=(r10*sj5*sj6);
IkReal x17449=(cj2*x17432);
IkReal x17450=(cj2*x17431);
IkReal x17451=(sj2*x17432);
IkReal x17452=(sj2*x17431);
evalcond[0]=((((-1.0)*x17444))+x17452+x17442);
evalcond[1]=((((-1.0)*r21*x17438))+x17451+(((-1.0)*r20*sj5*sj6))+(((-1.0)*r22*x17441)));
evalcond[2]=((((-1.0)*x17434*x17443))+x17450+((sj6*x17436))+((cj0*x17435))+(((-1.0)*x17446*x17447)));
evalcond[3]=((((-1.0)*x17434*x17447))+(((-1.0)*x17432))+((sj0*x17446))+(((-1.0)*x17435*x17443))+((r11*x17439)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((0.02626)*x17442))+pz+(((-0.02626)*x17444))+(((0.0009)*sj2))+(((-0.0718)*x17451))+(((0.02626)*x17452)));
evalcond[5]=(((cj5*r12*sj0))+((x17439*x17445))+((sj0*x17448))+((cj0*r01*x17438))+((r02*x17437))+x17449+((x17436*x17438)));
evalcond[6]=((((-1.0)*r01*x17438*x17443))+(((-1.0)*r02*sj0*x17441))+x17431+((r12*x17437))+(((-1.0)*sj6*x17443*x17445))+((r10*sj5*x17439))+((cj0*r11*x17438)));
evalcond[7]=((-0.09756)+(((-1.0)*x17434*x17440))+(((-1.0)*py*x17447))+(((-0.0718)*x17431))+(((0.02626)*r11*x17439))+(((-0.02626)*x17432))+((px*sj0))+(((-1.0)*x17433*x17435))+((x17433*x17446)));
evalcond[8]=((-0.001)+(((-1.0)*py*x17443))+(((-0.1158)*sj2))+(((-1.0)*x17440*x17446))+(((-1.0)*px*x17447))+(((-0.0718)*x17449))+(((0.0009)*cj2))+((x17435*x17440))+((r11*sj6*x17433))+(((-1.0)*x17433*x17434))+(((0.02626)*x17450)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
CheckValue<IkReal> x17453=IKPowWithIntegerCheck(IKsign(sj2),-1);
if(!x17453.valid){
continue;
}
CheckValue<IkReal> x17454 = IKatan2WithCheck(IkReal((((cj5*r22))+((r20*sj5*sj6))+((cj6*r21*sj5)))),((((-1.0)*cj6*r20))+((r21*sj6))),IKFAST_ATAN2_MAGTHRESH);
if(!x17454.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x17453.value)))+(x17454.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17455=IKcos(j4);
IkReal x17456=IKsin(j4);
IkReal x17457=((0.02626)*sj0);
IkReal x17458=(cj6*r10);
IkReal x17459=(r01*sj6);
IkReal x17460=(r11*sj0);
IkReal x17461=(cj0*cj5);
IkReal x17462=(cj6*sj5);
IkReal x17463=(cj0*sj6);
IkReal x17464=((0.02626)*cj0);
IkReal x17465=((1.0)*cj5);
IkReal x17466=(cj6*r20);
IkReal x17467=((1.0)*sj0);
IkReal x17468=(r21*sj6);
IkReal x17469=(r00*sj5);
IkReal x17470=(cj6*r00);
IkReal x17471=((1.0)*cj0);
IkReal x17472=(r10*sj5*sj6);
IkReal x17473=(cj2*x17456);
IkReal x17474=(cj2*x17455);
IkReal x17475=(sj2*x17456);
IkReal x17476=(sj2*x17455);
evalcond[0]=(x17466+x17476+(((-1.0)*x17468)));
evalcond[1]=((((-1.0)*r22*x17465))+x17475+(((-1.0)*r21*x17462))+(((-1.0)*r20*sj5*sj6)));
evalcond[2]=(((sj6*x17460))+((cj0*x17459))+x17474+(((-1.0)*x17458*x17467))+(((-1.0)*x17470*x17471)));
evalcond[3]=(((r11*x17463))+(((-1.0)*x17456))+(((-1.0)*x17458*x17471))+(((-1.0)*x17459*x17467))+((sj0*x17470)));
evalcond[4]=((0.1255)+(((0.1158)*cj2))+(((-0.02626)*x17468))+pz+(((0.02626)*x17476))+(((-0.0718)*x17475))+(((0.0009)*sj2))+(((0.02626)*x17466)));
evalcond[5]=(((cj5*r12*sj0))+x17473+((cj0*r01*x17462))+((x17460*x17462))+((r02*x17461))+((x17463*x17469))+((sj0*x17472)));
evalcond[6]=(((r10*sj5*x17463))+(((-1.0)*r01*x17462*x17467))+((cj0*r11*x17462))+((r12*x17461))+x17455+(((-1.0)*sj6*x17467*x17469))+(((-1.0)*r02*sj0*x17465)));
evalcond[7]=((-0.09756)+(((-0.02626)*x17456))+(((-1.0)*py*x17471))+((x17457*x17470))+(((-1.0)*x17458*x17464))+(((-1.0)*x17457*x17459))+(((0.02626)*r11*x17463))+((px*sj0))+(((-0.0718)*x17455)));
evalcond[8]=((-0.001)+(((-0.1158)*sj2))+((r11*sj6*x17457))+(((-1.0)*x17464*x17470))+(((-1.0)*py*x17467))+(((0.0009)*cj2))+((x17459*x17464))+(((-1.0)*x17457*x17458))+(((-1.0)*px*x17471))+(((0.02626)*x17474))+(((-0.0718)*x17473)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j4]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17477=cj3*cj3;
IkReal x17478=(cj2*cj6);
IkReal x17479=((1.0)*sj5);
IkReal x17480=(cj1*sj0);
IkReal x17481=(cj2*sj6);
IkReal x17482=(r11*sj6);
IkReal x17483=(sj1*sj3);
IkReal x17484=((1.0)*cj6);
IkReal x17485=(cj0*r00);
IkReal x17486=((1.0)*cj3);
IkReal x17487=(cj5*r22);
IkReal x17488=(cj1*cj2);
IkReal x17489=(sj2*x17488);
IkReal x17490=((1.0)*x17477);
IkReal x17491=(cj0*cj1*r01);
CheckValue<IkReal> x17492=IKPowWithIntegerCheck((x17489+(((-1.0)*x17489*x17490))+((cj3*sj2*x17483))),-1);
if(!x17492.valid){
continue;
}
CheckValue<IkReal> x17493=IKPowWithIntegerCheck(((((-1.0)*x17488*x17490))+x17488+((cj3*x17483))),-1);
if(!x17493.valid){
continue;
}
if( IKabs(((x17492.value)*((((cj0*r01*sj6*x17483))+(((-1.0)*r21*x17478*x17479))+((cj3*r10*x17478*x17480))+((sj0*x17482*x17483))+(((-1.0)*x17483*x17484*x17485))+(((-1.0)*r10*sj0*x17483*x17484))+(((-1.0)*r20*x17479*x17481))+(((-1.0)*x17481*x17486*x17491))+((cj1*cj3*x17478*x17485))+(((-1.0)*cj2*x17487))+(((-1.0)*r11*x17480*x17481*x17486)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x17493.value)*(((((-1.0)*cj3*cj6*r21*x17479))+(((-1.0)*sj6*x17491))+(((-1.0)*x17480*x17482))+(((-1.0)*x17486*x17487))+((cj6*r10*x17480))+(((-1.0)*cj3*r20*sj6*x17479))+((cj1*cj6*x17485)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x17492.value)*((((cj0*r01*sj6*x17483))+(((-1.0)*r21*x17478*x17479))+((cj3*r10*x17478*x17480))+((sj0*x17482*x17483))+(((-1.0)*x17483*x17484*x17485))+(((-1.0)*r10*sj0*x17483*x17484))+(((-1.0)*r20*x17479*x17481))+(((-1.0)*x17481*x17486*x17491))+((cj1*cj3*x17478*x17485))+(((-1.0)*cj2*x17487))+(((-1.0)*r11*x17480*x17481*x17486))))))+IKsqr(((x17493.value)*(((((-1.0)*cj3*cj6*r21*x17479))+(((-1.0)*sj6*x17491))+(((-1.0)*x17480*x17482))+(((-1.0)*x17486*x17487))+((cj6*r10*x17480))+(((-1.0)*cj3*r20*sj6*x17479))+((cj1*cj6*x17485))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x17492.value)*((((cj0*r01*sj6*x17483))+(((-1.0)*r21*x17478*x17479))+((cj3*r10*x17478*x17480))+((sj0*x17482*x17483))+(((-1.0)*x17483*x17484*x17485))+(((-1.0)*r10*sj0*x17483*x17484))+(((-1.0)*r20*x17479*x17481))+(((-1.0)*x17481*x17486*x17491))+((cj1*cj3*x17478*x17485))+(((-1.0)*cj2*x17487))+(((-1.0)*r11*x17480*x17481*x17486))))), ((x17493.value)*(((((-1.0)*cj3*cj6*r21*x17479))+(((-1.0)*sj6*x17491))+(((-1.0)*x17480*x17482))+(((-1.0)*x17486*x17487))+((cj6*r10*x17480))+(((-1.0)*cj3*r20*sj6*x17479))+((cj1*cj6*x17485))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17494=IKsin(j4);
IkReal x17495=IKcos(j4);
IkReal x17496=(cj0*sj6);
IkReal x17497=((1.0)*cj5);
IkReal x17498=(cj2*sj1);
IkReal x17499=((1.0)*cj3);
IkReal x17500=((0.0718)*cj1);
IkReal x17501=(cj6*sj0);
IkReal x17502=(cj5*r12);
IkReal x17503=((0.02626)*r10);
IkReal x17504=((1.0)*r21);
IkReal x17505=((1.0)*sj5);
IkReal x17506=((0.02626)*cj3);
IkReal x17507=(sj0*sj6);
IkReal x17508=(r10*sj5);
IkReal x17509=((0.02626)*r01);
IkReal x17510=(cj0*cj6);
IkReal x17511=((0.0009)*sj2);
IkReal x17512=((0.02626)*r11);
IkReal x17513=((1.0)*sj1);
IkReal x17514=((1.0)*py);
IkReal x17515=(cj1*cj2);
IkReal x17516=((0.02626)*r00);
IkReal x17517=(cj6*r20);
IkReal x17518=((0.09746)*cj3);
IkReal x17519=(r11*sj5);
IkReal x17520=((0.09746)*sj3);
IkReal x17521=((1.0)*cj1);
IkReal x17522=((0.02626)*cj1);
IkReal x17523=((0.0718)*sj1);
IkReal x17524=((1.0)*r10);
IkReal x17525=(cj2*x17494);
IkReal x17526=(cj3*x17495);
IkReal x17527=(sj2*x17494);
IkReal x17528=(cj2*x17495);
IkReal x17529=(sj2*x17495);
IkReal x17530=(sj3*x17494);
IkReal x17531=(sj3*x17495);
IkReal x17532=(sj1*x17530);
evalcond[0]=((((-1.0)*x17494*x17499*x17515))+(((-1.0)*x17521*x17529))+x17532+x17517+(((-1.0)*sj6*x17504)));
evalcond[1]=((((-1.0)*x17501*x17524))+x17528+(((-1.0)*x17499*x17527))+(((-1.0)*r00*x17510))+((r01*x17496))+((r11*x17507)));
evalcond[2]=((((-1.0)*x17513*x17531))+(((-1.0)*x17521*x17527))+((x17515*x17526))+(((-1.0)*r22*x17497))+(((-1.0)*cj6*sj5*x17504))+(((-1.0)*r20*sj6*x17505)));
evalcond[3]=(((sj0*x17502))+((cj0*cj5*r02))+((x17507*x17508))+((x17501*x17519))+((r01*sj5*x17510))+x17525+((sj2*x17526))+((r00*sj5*x17496)));
evalcond[4]=((((-1.0)*x17494*x17498*x17499))+(((-1.0)*x17510*x17524))+((r11*x17496))+(((-1.0)*r01*x17507))+((r00*x17501))+(((-1.0)*x17521*x17530))+(((-1.0)*x17513*x17529)));
evalcond[5]=(((x17510*x17519))+(((-1.0)*r01*x17501*x17505))+((cj0*x17502))+(((-1.0)*r00*x17505*x17507))+((x17496*x17508))+((x17498*x17526))+(((-1.0)*r02*sj0*x17497))+((cj1*x17531))+(((-1.0)*x17513*x17527)));
evalcond[6]=((-0.001)+(((-0.1158)*sj2))+(((-1.0)*x17501*x17503))+(((-1.0)*sj2*x17518))+(((-1.0)*x17510*x17516))+(((-1.0)*sj0*x17514))+(((0.02626)*x17528))+((x17507*x17512))+(((0.0009)*cj2))+(((-0.0718)*sj2*x17526))+((x17496*x17509))+(((-1.0)*x17506*x17527))+(((-1.0)*cj0*px))+(((-0.0718)*x17525)));
evalcond[7]=((((-0.02626)*r21*sj6))+(((-1.0)*x17515*x17518))+((x17523*x17531))+(((-0.1255)*cj1))+(((0.02626)*x17517))+(((-0.0001)*sj1))+((x17500*x17527))+(((-1.0)*x17494*x17506*x17515))+(((-1.0)*cj2*x17500*x17526))+(((-1.0)*x17522*x17529))+pz+(((-1.0)*cj1*x17511))+((sj1*x17520))+(((0.02626)*x17532))+(((-0.1158)*x17515)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*sj1*x17511))+(((-1.0)*x17507*x17509))+((x17501*x17516))+(((-1.0)*x17500*x17531))+(((-1.0)*cj0*x17514))+((x17496*x17512))+(((-1.0)*x17498*x17518))+(((-0.02626)*sj1*x17529))+(((0.0001)*cj1))+(((-1.0)*x17522*x17530))+((px*sj0))+(((-1.0)*cj1*x17520))+((x17523*x17527))+(((-0.1158)*x17498))+(((-1.0)*x17503*x17510))+(((-0.0718)*x17498*x17526))+(((-1.0)*x17494*x17498*x17506)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17533=cj1*cj1;
IkReal x17534=cj3*cj3;
IkReal x17535=cj2*cj2;
IkReal x17536=((1.0)*sj5);
IkReal x17537=(cj1*sj2);
IkReal x17538=(r20*sj6);
IkReal x17539=(sj1*sj3);
IkReal x17540=(cj6*r20);
IkReal x17541=(cj6*r21);
IkReal x17542=(r21*x17539);
IkReal x17543=(cj1*cj2*cj3);
IkReal x17544=((1.0)*r21*sj6);
IkReal x17545=((1.0)*cj5*r22);
IkReal x17546=(x17533*x17534);
CheckValue<IkReal> x17547 = IKatan2WithCheck(IkReal(((((-1.0)*x17536*x17537*x17541))+((x17540*x17543))+((sj6*x17542))+(((-1.0)*x17536*x17537*x17538))+(((-1.0)*x17543*x17544))+(((-1.0)*x17537*x17545))+(((-1.0)*x17539*x17540)))),(((x17537*x17540))+(((-1.0)*x17536*x17539*x17541))+(((-1.0)*x17536*x17538*x17539))+(((-1.0)*x17539*x17545))+((cj5*r22*x17543))+((sj5*x17541*x17543))+((sj5*x17538*x17543))+(((-1.0)*x17537*x17544))),IKFAST_ATAN2_MAGTHRESH);
if(!x17547.valid){
continue;
}
CheckValue<IkReal> x17548=IKPowWithIntegerCheck(IKsign(((1.0)+(((-1.0)*x17534))+x17546+(((-2.0)*x17539*x17543))+(((-1.0)*x17533*x17535))+((x17535*x17546)))),-1);
if(!x17548.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(x17547.value)+(((1.5707963267949)*(x17548.value))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17549=IKsin(j4);
IkReal x17550=IKcos(j4);
IkReal x17551=(cj0*sj6);
IkReal x17552=((1.0)*cj5);
IkReal x17553=(cj2*sj1);
IkReal x17554=((1.0)*cj3);
IkReal x17555=((0.0718)*cj1);
IkReal x17556=(cj6*sj0);
IkReal x17557=(cj5*r12);
IkReal x17558=((0.02626)*r10);
IkReal x17559=((1.0)*r21);
IkReal x17560=((1.0)*sj5);
IkReal x17561=((0.02626)*cj3);
IkReal x17562=(sj0*sj6);
IkReal x17563=(r10*sj5);
IkReal x17564=((0.02626)*r01);
IkReal x17565=(cj0*cj6);
IkReal x17566=((0.0009)*sj2);
IkReal x17567=((0.02626)*r11);
IkReal x17568=((1.0)*sj1);
IkReal x17569=((1.0)*py);
IkReal x17570=(cj1*cj2);
IkReal x17571=((0.02626)*r00);
IkReal x17572=(cj6*r20);
IkReal x17573=((0.09746)*cj3);
IkReal x17574=(r11*sj5);
IkReal x17575=((0.09746)*sj3);
IkReal x17576=((1.0)*cj1);
IkReal x17577=((0.02626)*cj1);
IkReal x17578=((0.0718)*sj1);
IkReal x17579=((1.0)*r10);
IkReal x17580=(cj2*x17549);
IkReal x17581=(cj3*x17550);
IkReal x17582=(sj2*x17549);
IkReal x17583=(cj2*x17550);
IkReal x17584=(sj2*x17550);
IkReal x17585=(sj3*x17549);
IkReal x17586=(sj3*x17550);
IkReal x17587=(sj1*x17585);
evalcond[0]=((((-1.0)*sj6*x17559))+(((-1.0)*x17549*x17554*x17570))+(((-1.0)*x17576*x17584))+x17587+x17572);
evalcond[1]=(((r11*x17562))+(((-1.0)*x17556*x17579))+((r01*x17551))+x17583+(((-1.0)*r00*x17565))+(((-1.0)*x17554*x17582)));
evalcond[2]=((((-1.0)*r22*x17552))+(((-1.0)*x17576*x17582))+(((-1.0)*cj6*sj5*x17559))+(((-1.0)*x17568*x17586))+(((-1.0)*r20*sj6*x17560))+((x17570*x17581)));
evalcond[3]=(((x17562*x17563))+((sj2*x17581))+((cj0*cj5*r02))+((x17556*x17574))+((r01*sj5*x17565))+x17580+((r00*sj5*x17551))+((sj0*x17557)));
evalcond[4]=(((r11*x17551))+(((-1.0)*x17576*x17585))+(((-1.0)*x17549*x17553*x17554))+((r00*x17556))+(((-1.0)*x17568*x17584))+(((-1.0)*x17565*x17579))+(((-1.0)*r01*x17562)));
evalcond[5]=((((-1.0)*r00*x17560*x17562))+((x17565*x17574))+((cj0*x17557))+((x17553*x17581))+((cj1*x17586))+(((-1.0)*x17568*x17582))+(((-1.0)*r02*sj0*x17552))+((x17551*x17563))+(((-1.0)*r01*x17556*x17560)));
evalcond[6]=((-0.001)+((x17562*x17567))+(((-0.1158)*sj2))+(((-1.0)*x17556*x17558))+(((0.0009)*cj2))+(((-0.0718)*x17580))+(((-1.0)*x17561*x17582))+(((-1.0)*sj2*x17573))+(((-1.0)*sj0*x17569))+(((-1.0)*x17565*x17571))+(((0.02626)*x17583))+(((-0.0718)*sj2*x17581))+(((-1.0)*cj0*px))+((x17551*x17564)));
evalcond[7]=((((-0.02626)*r21*sj6))+(((-0.1255)*cj1))+(((-0.0001)*sj1))+(((-1.0)*x17549*x17561*x17570))+(((-1.0)*x17570*x17573))+(((-0.1158)*x17570))+(((-1.0)*x17577*x17584))+(((-1.0)*cj2*x17555*x17581))+((sj1*x17575))+((x17578*x17586))+pz+(((0.02626)*x17572))+(((-1.0)*cj1*x17566))+(((0.02626)*x17587))+((x17555*x17582)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*sj1*x17566))+(((-0.02626)*sj1*x17584))+(((-1.0)*cj0*x17569))+((x17556*x17571))+(((-1.0)*x17553*x17573))+(((-0.1158)*x17553))+(((-1.0)*x17549*x17553*x17561))+(((-1.0)*x17577*x17585))+(((-1.0)*x17558*x17565))+(((-1.0)*cj1*x17575))+(((-1.0)*x17562*x17564))+((x17578*x17582))+(((-1.0)*x17555*x17586))+(((0.0001)*cj1))+((px*sj0))+((x17551*x17567))+(((-0.0718)*x17553*x17581)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x17588=(cj0*r00);
IkReal x17589=(r10*sj0);
IkReal x17590=(sj1*sj3);
IkReal x17591=((1.0)*cj2);
IkReal x17592=((1.0)*cj6);
IkReal x17593=(cj1*sj2);
IkReal x17594=(r21*sj6);
IkReal x17595=(cj3*sj2);
IkReal x17596=(cj1*cj3);
IkReal x17597=(cj6*r20);
IkReal x17598=(r11*sj0*sj6);
IkReal x17599=(cj0*r01*sj6);
IkReal x17600=(x17592*x17593);
IkReal x17601=(cj2*cj6*x17596);
CheckValue<IkReal> x17602=IKPowWithIntegerCheck(IKsign((x17596+(((-1.0)*x17590*x17591)))),-1);
if(!x17602.valid){
continue;
}
CheckValue<IkReal> x17603 = IKatan2WithCheck(IkReal(((((-1.0)*x17589*x17600))+((x17593*x17598))+((x17593*x17599))+((cj2*x17597))+(((-1.0)*x17591*x17594))+(((-1.0)*x17588*x17600)))),((((-1.0)*x17591*x17596*x17598))+(((-1.0)*x17591*x17596*x17599))+((x17590*x17599))+((x17590*x17598))+(((-1.0)*x17588*x17590*x17592))+(((-1.0)*x17594*x17595))+((x17595*x17597))+(((-1.0)*x17589*x17590*x17592))+((x17589*x17601))+((x17588*x17601))),IKFAST_ATAN2_MAGTHRESH);
if(!x17603.valid){
continue;
}
j4array[0]=((-1.5707963267949)+(((1.5707963267949)*(x17602.value)))+(x17603.value));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[9];
IkReal x17604=IKsin(j4);
IkReal x17605=IKcos(j4);
IkReal x17606=(cj0*sj6);
IkReal x17607=((1.0)*cj5);
IkReal x17608=(cj2*sj1);
IkReal x17609=((1.0)*cj3);
IkReal x17610=((0.0718)*cj1);
IkReal x17611=(cj6*sj0);
IkReal x17612=(cj5*r12);
IkReal x17613=((0.02626)*r10);
IkReal x17614=((1.0)*r21);
IkReal x17615=((1.0)*sj5);
IkReal x17616=((0.02626)*cj3);
IkReal x17617=(sj0*sj6);
IkReal x17618=(r10*sj5);
IkReal x17619=((0.02626)*r01);
IkReal x17620=(cj0*cj6);
IkReal x17621=((0.0009)*sj2);
IkReal x17622=((0.02626)*r11);
IkReal x17623=((1.0)*sj1);
IkReal x17624=((1.0)*py);
IkReal x17625=(cj1*cj2);
IkReal x17626=((0.02626)*r00);
IkReal x17627=(cj6*r20);
IkReal x17628=((0.09746)*cj3);
IkReal x17629=(r11*sj5);
IkReal x17630=((0.09746)*sj3);
IkReal x17631=((1.0)*cj1);
IkReal x17632=((0.02626)*cj1);
IkReal x17633=((0.0718)*sj1);
IkReal x17634=((1.0)*r10);
IkReal x17635=(cj2*x17604);
IkReal x17636=(cj3*x17605);
IkReal x17637=(sj2*x17604);
IkReal x17638=(cj2*x17605);
IkReal x17639=(sj2*x17605);
IkReal x17640=(sj3*x17604);
IkReal x17641=(sj3*x17605);
IkReal x17642=(sj1*x17640);
evalcond[0]=((((-1.0)*x17631*x17639))+(((-1.0)*sj6*x17614))+(((-1.0)*x17604*x17609*x17625))+x17642+x17627);
evalcond[1]=((((-1.0)*r00*x17620))+(((-1.0)*x17609*x17637))+(((-1.0)*x17611*x17634))+x17638+((r01*x17606))+((r11*x17617)));
evalcond[2]=((((-1.0)*x17631*x17637))+(((-1.0)*x17623*x17641))+((x17625*x17636))+(((-1.0)*cj6*sj5*x17614))+(((-1.0)*r20*sj6*x17615))+(((-1.0)*r22*x17607)));
evalcond[3]=(((cj0*cj5*r02))+((r01*sj5*x17620))+((x17611*x17629))+((r00*sj5*x17606))+x17635+((x17617*x17618))+((sj2*x17636))+((sj0*x17612)));
evalcond[4]=((((-1.0)*x17623*x17639))+(((-1.0)*x17604*x17608*x17609))+((r00*x17611))+(((-1.0)*r01*x17617))+(((-1.0)*x17631*x17640))+(((-1.0)*x17620*x17634))+((r11*x17606)));
evalcond[5]=((((-1.0)*x17623*x17637))+((cj1*x17641))+(((-1.0)*r01*x17611*x17615))+((x17606*x17618))+(((-1.0)*r00*x17615*x17617))+((x17608*x17636))+((cj0*x17612))+((x17620*x17629))+(((-1.0)*r02*sj0*x17607)));
evalcond[6]=((-0.001)+(((-1.0)*sj2*x17628))+(((-0.0718)*sj2*x17636))+(((-0.1158)*sj2))+((x17606*x17619))+(((-0.0718)*x17635))+((x17617*x17622))+(((-1.0)*x17616*x17637))+(((0.0009)*cj2))+(((-1.0)*x17620*x17626))+(((-1.0)*sj0*x17624))+(((-1.0)*cj0*px))+(((0.02626)*x17638))+(((-1.0)*x17611*x17613)));
evalcond[7]=((((0.02626)*x17627))+(((-0.02626)*r21*sj6))+(((-0.1255)*cj1))+(((-1.0)*x17632*x17639))+(((-0.0001)*sj1))+((x17610*x17637))+((sj1*x17630))+(((0.02626)*x17642))+pz+(((-1.0)*x17604*x17616*x17625))+(((-0.1158)*x17625))+(((-1.0)*cj2*x17610*x17636))+(((-1.0)*x17625*x17628))+(((-1.0)*cj1*x17621))+((x17633*x17641)));
evalcond[8]=((((-0.1255)*sj1))+(((-1.0)*x17617*x17619))+(((-1.0)*x17610*x17641))+(((-1.0)*sj1*x17621))+(((-1.0)*x17613*x17620))+(((-1.0)*cj0*x17624))+(((-1.0)*x17632*x17640))+(((-1.0)*x17608*x17628))+((x17611*x17626))+(((-0.1158)*x17608))+((x17633*x17637))+(((-0.0718)*x17608*x17636))+(((0.0001)*cj1))+((px*sj0))+((x17606*x17622))+(((-1.0)*cj1*x17630))+(((-1.0)*x17604*x17608*x17616))+(((-0.02626)*sj1*x17639)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
    }

}

}
}
}
// [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1)] (original are [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)])
static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    // HACK should be 1e-5*norm
    IkReal tol = 1e-2*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
template<int D>
static inline bool matrixinverse(IkReal* A)
{
    int n = D;
    int info;
    IkReal IKFAST_ALIGNED16(work[D*D*(D-1)]);
    int ipiv[D];
    dgetrf_(&n, &n, A, &n, &ipiv[0], &info);
    if( info != 0 ) {
        return false;
    }
    int worksize=D*D*(D-1);
    dgetri_(&n, A, &n, &ipiv[0], &work[0], &worksize, &info);
    return info==0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        // HACK should be tol*100
        if( IKabs(wi[i]) < 5e-5 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - cyton_gamma_1500 (368e4f7c66e10768da9bc06eed619639)>"; }

IKFAST_API const char* GetIkFastVersion() { return "0x10000048"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
